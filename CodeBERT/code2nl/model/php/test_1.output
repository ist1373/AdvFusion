0	Get administrator role .
1	Get a user .
2	Handle the menu item .
3	Translate categories .
4	Get the highest priority of the menu item .
5	Creates a table name .
6	Handle the menu item .
7	Update table .
8	Update table .
9	Get the table diff differences .
10	Returns the difference between two tables .
11	Get renamed columns .
12	Returns a list of renamed indexes .
13	Get thumbnail image
14	Get thumbnail image
15	Determine if the user has the given roles .
16	Returns a list of dimers .
17	Prepare menu translations .
18	Save model attributes .
19	Check if the given model is read .
20	Creates a new table .
21	Store a new breadcrumb type .
22	Edit a table .
23	Update a breadcrumb type .
24	Remove a breadcrumb .
25	Add a relationship .
26	Get relationship field .
27	Handle the input
28	Store the database .
29	Edit a database table .
30	Update database table .
31	Show a database table .
32	Delete a table .
33	Returns the URL for the given field .
34	Display a menu item .
35	Returns the translatable attribute .
36	Get translations .
37	Get translated attribute .
38	Scope a query for a translation .
39	Save translations .
40	Describes a table .
41	Handle the permission .
42	Add storage link to storage .
43	Register console commands .
44	Clean the data from the database .
45	Delete all thumbnails .
46	Order data .
47	Renders a relation .
48	Resolve relation relations .
49	Add soft deletes .
50	Validates the given data .
51	Get validation rules .
52	Verify the given ID .
53	Retrieve the certificates from a URL .
54	Get the list of certificates from the cache .
55	Set PHP constants
56	Fetch an access token from the API
57	Fetch the access token .
58	Fetch the access token from the API .
59	Authenticate the user .
60	Check if the token is expired .
61	Verify an access token
62	Add a scope .
63	Execute the request .
64	Set auth config
65	Creates an OAuth2 OAuth2 service
66	Returns the number of allowed errors .
67	Get the next chunk .
68	Parses the response body and returns the response body .
69	Get data type
70	Combines a list of values .
71	Get the value of the given value .
72	Execute a request .
73	Decode the HTTP response .
74	Map types to array
75	Convert the model to an object .
76	Convert a value to an array .
77	Returns the mapped name for the given key .
78	Check if an associative array is associative
79	Creates a new AuthHandler instance .
80	Find the config file .
81	Define core constants
82	Sets the prepared statement state .
83	Throw an exception .
84	Get the list of queries .
85	Register global globals .
86	Get all available options
87	Add a new option
88	Delete an option
89	Add a placeholder .
90	Set default namespace
91	Set default controller
92	Set the default route .
93	Discover routes .
94	Set the default placeholder .
95	Get all routes .
96	Get route options .
97	Add a route to the collection .
98	Add a redirect
99	Check if a route is a redirect
100	Get redirect code
101	Match a route .
102	Create route collection
103	Add a route to the collection .
104	Reverses a route .
105	Determine the current subdomain .
106	Reset all routes .
107	Throw an error handler .
108	Shutdown handler
109	Determines the view .
110	Render an exception .
111	Collect variables from exception .
112	Determines the codes of the exception .
113	Short description of method description
114	Highlight a file .
115	Checks if the given string is alpha .
116	Checks if a string matches a regular expression .
117	Validate email address
118	Validates a string
119	Check if a string is valid .
120	Validate a date string
121	Creates an exception for the given position .
122	Validates a card number
123	Checks if the given number is valid .
124	Moves a file .
125	Move Escapes Escapes .
126	Moves the kkint
127	Starts the session
128	Configure the session length
129	Initialize session variables
130	Set session data
131	Get session data
132	Push data to the collection .
133	Removes a session
134	Set flash data
135	Get flash data
136	Mark a flash message
137	Get flash keys .
138	Set temporary data
139	Get temporary data
140	Mark a variable as a temporary session
141	Removes temporary data from the session
142	Get temporary keys
143	Sets the session cookie .
144	Check if token is valid
145	Guess the type from an extension .
146	Guess the extension from a given type .
147	Redirect to a URL
148	Redirect to a route
149	Redirect to the session .
150	Set flash message .
151	Run a route .
152	Initialize the request
153	Enable a filter .
154	Returns an array of arguments .
155	Format an object .
156	Sends the log messages .
157	Detect the locale .
158	Sets the locale .
159	Check if the request is secure
160	Retrieve a JSON string .
161	Fetches a GET request .
162	Get a post .
163	Get post data
164	Get post post
165	Get a cookie
166	Get all files .
167	Get file by id
168	Detect the base URI .
169	Detect the path of the request .
170	Returns the negotiation type .
171	Parse request URI
172	Build DSN string
173	Returns a formatter instance .
174	Checks if the request is valid .
175	Attaches the given response .
176	Resize image .
177	Crop the image
178	Get image version
179	Get the resource path .
180	Add foreign key
181	Drops a foreign key .
182	Ensure that the attribute is unsigned .
183	Sets the default value for the field .
184	Process primary key
185	Process foreign keys .
186	Sets the locale .
187	Get a line from a file .
188	Format the message .
189	Require a file .
190	Add a base URI .
191	Add image src
192	Add a media source
193	Add a manifest to the manifest .
194	Add an object to the source
195	Add plugin type
196	Add a sandbox option .
197	Add script src
198	Add style to CSS
199	Adds an option to the list .
200	Generate the nonce s nonce
201	Build the headers .
202	Get title .
203	Collect log data .
204	Prepare params
205	Determines the class for the given library
206	Get the result of the object
207	Get custom result object
208	Get result array
209	Returns the result of the result set
210	Gets a row from the table
211	Get custom row object
212	Returns the current row as an array
213	Returns the current row object
214	Set row data
215	Get first row
216	Get last row
217	Get next row .
218	Fetches the next row from the database .
219	Determine if the given header matches the given parameters .
220	Matches the parameters of the accepted parameters .
221	Run the application .
222	Display the header
223	Display the links .
224	Generates links for a page .
225	Store a group .
226	Sets the path to the group .
227	Get page count
228	Get current page .
229	Returns true if the page has a number of items .
230	Get last page .
231	Get page URI .
232	Get the next page URI .
233	Get previous page URI
234	Get the per page number .
235	Get the details of a group .
236	Ensure that a group has been set .
237	Returns the number of years .
238	Get the number of months .
239	Get weeks of weeks
240	Get the days of the current date .
241	Get hour hours
242	Get the minutes of the current date .
243	Returns the seconds of the current date .
244	Returns the human readable human readable text .
245	Load a database connection
246	Loads the database .
247	Check if a property has changed .
248	Map a property name .
249	Mutates a DateTime object .
250	Cast value to json
251	Determine if the given alias exists .
252	Fetch all records
253	Get first row .
254	Save data to database
255	Convert data to array
256	Insert data into database
257	Insert a batch into the database
258	Get the builder .
259	Extracts the fields from the data array .
260	Clean validation rules .
261	Get validation rules .
262	Count the number of rows .
263	Set authentication credentials .
264	Set form parameters
265	Parse the request options .
266	Get the method name .
267	Send an HTTP request
268	Applies the request headers to the request .
269	Set response headers
270	Send a request to the server
271	Updates the migration version .
272	Find migrations .
273	Check migrations .
274	Get history history
275	Get migration name .
276	Get the current version .
277	Adds a migration to the database .
278	Remove migration history .
279	Ensure that the table exists .
280	Check if the given value is valid .
281	Set request data .
282	Set a validation rule .
283	Get rule group
284	Set rule group
285	Load rule sets .
286	Set a validation error .
287	Get error message .
288	Split rules .
289	Reset validation rules .
290	Convert an array to XML
291	Clean the file names .
292	Set the URI s URI .
293	Get user info
294	Get query string
295	Returns the segment of the URI .
296	Sets a new segment .
297	Creates a URI string .
298	Set the authority .
299	Sets the scheme .
300	Sets the port .
301	Set path .
302	Refresh path .
303	Set the query string
304	Decodes a string .
305	Add a query to the query .
306	Set query parameters
307	Filter the path
308	Applies the request parts .
309	Resolve relative URI .
310	Merges two base paths .
311	Remove dot segments .
312	Append a value to the list .
313	Append a value to the list .
314	Get previous page .
315	Get the next page .
316	Get the first page .
317	Get last page
318	Get current page
319	Start timer .
320	Stop timer .
321	Get elapsed time .
322	Get timer timers .
323	Adds a table alias .
324	Execute a query
325	Execute a SQL query
326	Create a new database table instance .
327	Prepare a prepared statement .
328	Escape identifiers .
329	Call a function
330	List all tables
331	Check if a table exists .
332	Checks if a given table name exists .
333	Get field data
334	Returns the index data for the given table .
335	Get foreign keys for a table .
336	Get env value
337	Registers registry properties .
338	Get item from cache
339	Write data to file
340	Get directory info
341	Get file info
342	Initialize the kernel .
343	Execute the request .
344	Handle the request .
345	Start benchmark .
346	Get the response object .
347	Force SSL requests .
348	Display cache .
349	Cache page .
350	Generate cache name .
351	Display performance metrics .
352	Tries to execute a route .
353	Start the controller
354	Create a controller instance .
355	Run the controller .
356	Gets the output of the response .
357	Stores the previous URL .
358	Redirect request method
359	Get a cache handler
360	Create alias from table .
361	Adds a where condition to the query .
362	Adds a where clause to the query .
363	Returns a LIKE statement .
364	Add a WHERE clause
365	End where clause
366	Set the offset
367	Set the value of a key
368	Compile the SELECT query .
369	Compile the final query .
370	Count all rows in the database
371	Count all rows in the result set
372	Inserts multiple rows into a batch .
373	Compile the insert query
374	Compile the update query .
375	Compile delete query .
376	Decrement a column
377	Compile SELECT query
378	Compile where clause
379	Compile the GROUP BY clause .
380	Compile the ORDER BY clause .
381	Get operator operator .
382	Render the timeline data .
383	Collect data from collectors .
384	Collect variable data
385	Round the given number .
386	Copy image to file
387	Get image properties
388	Release the lock
389	Attaches the body to the form .
390	Prepare the template .
391	Fetch an object from the database
392	Make column columns
393	Clears the table .
394	Sets the result from the database .
395	Set data from array
396	Set path to file
397	Get the error string
398	Store uploaded file .
399	Determine if the file size is maximum size
400	Check if a file is a valid image
401	Determine if the request is mime type .
402	Determine if the file dimensions are max dimensions
403	Fetch a global global variable .
404	Populate global globals .
405	Run migrations .
406	Create a new instance from a table
407	Run the migration
408	Modify column .
409	Create table .
410	Copy data from the database
411	Format fields .
412	Format keys .
413	Drop indexes .
414	Set CSRF cookie
415	Set CSRF hash
416	Creates a new Time instance .
417	Creates a DateTime object from a string .
418	Returns a new DateTime instance .
419	Creates a new instance of yesterday .
420	Creates a new DateTime instance .
421	Create a new instance from the given date .
422	Create a new instance from the given time .
423	Creates a new DateTime object .
424	Creates a DateTime object from a given format .
425	Create a new instance from a timestamp .
426	Creates a new instance from a DateTime object .
427	Convert to DateTime object
428	Get the age of the current date .
429	Determine if the current date is daylight .
430	Sets the month .
431	Sets the number of days .
432	Sets the minutes .
433	Sets the second value .
434	Set the value of a value .
435	Sets the timestamp .
436	Returns true if the given time is equal to the given time .
437	Checks if the given string is a valid time .
438	Converts a DateTime object to a DateTime object .
439	Returns a string representation of a string .
440	Convert css to CSS
441	Convert string to UTF - 8 .
442	Convert string to UTF - 8 .
443	Get a file by name .
444	Create an uploaded file object .
445	Returns the dot notation notation for the given value .
446	Set binary binary .
447	Sets the file path .
448	Returns the length of the file .
449	Sets the content type of the file .
450	Get download file name
451	Get content disposition
452	Build headers .
453	Sends the request body
454	Send the body of the file .
455	Removes a method .
456	Run a command .
457	Create command list
458	Connect to the database .
459	Create a seeder instance .
460	Determine if the given params is a namespace .
461	Add a new closure
462	Run the test .
463	Render the report
464	Set the query string
465	Get the final query string .
466	Get the start time
467	Get duration .
468	Set error message
469	Swaps the prefix to the query .
470	Compile the bindings .
471	Load helpers .
472	Register the class .
473	Add a namespace
474	Get namespace prefix
475	Require a file .
476	Sanitize a filename
477	Determine the composer namespace .
478	Modify a date .
479	Returns text excerpt .
480	Sanitize a value .
481	Resolves nested variables .
482	Set database connection
483	Execute a SQL query
484	Prepare a SQL query
485	Returns an array of error messages .
486	Executes a SQL query
487	Get field names
488	Returns a cache instance .
489	Get the CLI request instance .
490	Create a cURL request .
491	Creates a Bootstrap object .
492	Get a language instance .
493	Get the logger instance .
494	Returns a negotiator instance .
495	Create a parser instance .
496	Get incoming request .
497	Returns the response object .
498	Returns a Redirect response .
499	Get router instance .
500	Get the security instance .
501	Get a URI instance .
502	Create a validation instance .
503	Describes a list of commands .
504	Pad title .
505	Get the CSV from a result set .
506	Get the XML from the given query .
507	Call a command .
508	Run a seed .
509	Checks if a value is in a list .
510	Returns true if the given string is less than the given string .
511	Checks if the given string is required .
512	Checks if a field is missing .
513	Validate request path
514	Sets the directory .
515	Set request parameters
516	Set default controller
517	Get the size of the file .
518	Moves a file to another .
519	Get the destination directory .
520	Collects a query .
521	Format timeline data .
522	Locates a file .
523	Get class name
524	Search for a given path .
525	Ensure extension exists
526	Returns the qualified name of the given path .
527	Get the path to a file .
528	Render the view .
529	Get excerpt from string
530	Sets the rendered data
531	Sets a variable
532	Render a section .
533	Include view .
534	Logs performance statistics .
535	Set the image .
536	Ensure that the image is created .
537	Resize image .
538	Rotate the image .
539	Flip the image
540	Add text to text
541	Reverse orientation .
542	Get an exif data
543	Fit the image .
544	Run PHP code .
545	Render a template .
546	Parses the given variable and returns the result .
547	Extracts the contents of a template .
548	Inserts the contents of the given template .
549	Parse the conditions .
550	Set the delimiter .
551	Replaces the content with the given pattern .
552	Determines if the given key should be escaped .
553	Add a plugin .
554	Create image resource
555	Get header by name
556	Check if a header exists
557	Set a header
558	Remove a header .
559	Set the HTTP protocol version .
560	Get header name .
561	Configure the session id
562	Get the reason reason .
563	Set the link to the page .
564	Set content type
565	Get the response body .
566	Get the content of the response .
567	Format the body .
568	Set cache options
569	Sends the request
570	Send HTTP headers
571	Set a cookie
572	Check if a cookie exists .
573	Get cookie by name
574	Delete a cookie
575	Send cookies .
576	Download a file .
577	Get an instance of a class
578	Create a new class
579	Get a shared mock instance .
580	Returns the autoloader instance .
581	Returns the locator instance .
582	Reset the autoloader .
583	Inject a mock
584	Dynamically discover services .
585	Returns the input string .
586	Prompts a user input
587	Validates a field
588	Prints a string
589	Print an error message
590	Wait for seconds .
591	Generate a color string
592	Wraps a string into a string .
593	Get option value
594	Generate table row
595	Respond to the response .
596	Send an error .
597	Respond with given data .
598	Respond with deleted data .
599	Fail an exception .
600	Throw an exception .
601	Validates the request .
602	Initialize the plugins .
603	Get all listeners .
604	Remove a listener .
605	Check if the referrer is referrer
606	Set platform platform .
607	Set browser browser .
608	Sets the robot .
609	Set Mobile Mobile .
610	Set the attribute type .
611	Initialize the config
612	Display a QR code
613	Initializes the QR code .
614	Format the content .
615	Generate a heartbeat heartbeat .
616	Handle the status of the server .
617	Logs a message
618	Get uuid of current user
619	Show qcode code
620	Wait for login .
621	Get login .
622	Save session .
623	Runs the initialisation .
624	After login callback .
625	Notify websocket status .
626	Download a message .
627	Get the content of a message .
628	Autoload a message .
629	Check if the user is sync .
630	Sync web server
631	Generate sync key
632	Logs a message .
633	Log a message
634	Send a message .
635	Fetch all contacts
636	Store a list of members
637	Fetches the members of a group .
638	Store members in a list
639	Report an exception .
640	Throw a fatal exception .
641	Validates a key .
642	Splits a JWT into a JWT .
643	Parse header data
644	Parse a JSON string into an array .
645	Parse a signed signature .
646	Resolve the language .
647	Get the list of supported languages .
648	Cache routes .
649	Build the cache file .
650	Register bindings .
651	Register routes .
652	Sets the locale .
653	Returns the URL for the given route name .
654	Returns the list of supported languages .
655	Returns a list of available locales .
656	Get current locale .
657	Returns the current locale .
658	Get the current locale .
659	Check if the given locale is supported .
660	Get the route name from the given path .
661	Returns the translated route for the given path .
662	Returns the translated route for the given url .
663	Create a URL from the given URI .
664	Normalize attributes .
665	Load cache routes .
666	Make the route path .
667	Encodes a set of messages .
668	Encodes the given data .
669	Encodes the given values .
670	Converts a string to a partition .
671	Convert a string to an array .
672	Decodes a message .
673	Decode a message .
674	Create a socket socket .
675	Selects a socket .
676	Unpack a byte from a string .
677	Checks the length of a string .
678	Determines if the system is a little bit .
679	Get API version
680	Get Api API text
681	Adds a route to the route .
682	Add a route to the route .
683	Mount a route .
684	Get request method
685	Get server base path
686	Add a route .
687	Get route from request .
688	Get current route
689	Checks if the url matches the given pattern .
690	Run a filter
691	Get event by name
692	Clears all events .
693	Execute a filter
694	Execute a callback
695	Call function .
696	Invoke a method
697	Initialize the request
698	Get request body
699	Get request method
700	Get proxy IP address
701	Parse query string
702	Set status code
703	Set a header
704	Set cache headers
705	Sends the response .
706	Initialize the router
707	Handle an error
708	Handle exception .
709	Register a new route .
710	Register a custom class
711	Get the value of a variable
712	Clear a variable
713	Starts the application .
714	Stop the response .
715	Register a route .
716	Handle the response .
717	Send an error
718	Redirect to a URL
719	Send json response
720	Sends a JSON request to the server .
721	Generate an HTML tag
722	Sets the last modified time .
723	Register a class
724	Loads a class
725	Get a singleton instance
726	Instantiate a new instance .
727	Load class file
728	Add a directory
729	Fetch a file
730	Get template file name
731	Determine if the given graph is a cycle .
732	Returns the average height of the graph .
733	Recursively collapse an array
734	Fetch files from a directory
735	Traverses the tree into a tree .
736	Get root nodes .
737	Returns a list of composer installed packages .
738	Advances the progress bar .
739	Determine if the current operating system is an ASCII .
740	Processes the given parameters .
741	Processes the token .
742	Initializes the collection .
743	Add a fix error message .
744	Merge custom array with custom keys
745	Returns the last pointer of the stack .
746	Check if the current token is an assignment .
747	Check if a token is a namespace .
748	Checks if the current token is a sanitizer .
749	Check if the token is safe .
750	Gets an array of keys in an array .
751	Returns the access key of the stack
752	Check if the current token is a comparison .
753	Checks if the stack is in the stack .
754	Get the use type of a class .
755	Get interpolation variables .
756	Determine if the function has a function .
757	Returns the number of parameters in the stack .
758	Get the value of a function call
759	Finds the open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open__open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_open_
760	Determines the namespace of the given token .
761	Returns the name of the declared namespace .
762	Check if a class is a constant .
763	Check if the current class is a class property .
764	Checks if the given scope is valid .
765	Prepare regexp .
766	Transform string to string
767	Transform a string into a complex string
768	Get the deprecated groups .
769	Checks if a variable is a constant .
770	Processes the parameters .
771	Retrieves the names of the words in the given array .
772	Callback for pagination .
773	Set config data
774	Get the tab width .
775	Process global global scope .
776	Adds an error to the stack .
777	Setup groups .
778	Determine if the token is target .
779	Check if the token matches the given token .
780	Process a variable .
781	Checks if a given variable is a whitelisted .
782	Validates the prefixes .
783	Record the prefix of a prefix .
784	Setup groups .
785	Validates the alignment of multiple items .
786	Check if a stream is localized .
787	Processes a variable in a string
788	Merge the whitelist whitelist whitelist .
789	Checks if the token is ignored .
790	Returns the indentation of the indentation .
791	Get indentation string .
792	Add an error to an array .
793	Fix an error .
794	Returns true if the token is false .
795	Compare two arguments .
796	Checks the text for the given context .
797	Checks if the token is target .
798	Check if the token matches the given token .
799	Get the namespace of a class .
800	Registers the condition tokens .
801	Execute the queue .
802	Reserves the queue .
803	Closes the context .
804	Validates the namespace .
805	Push a job into the queue .
806	Listen to the queue .
807	Execute an action
808	Handle a message .
809	Run the queue .
810	Reserve the queue .
811	Move expired expired .
812	Saves the job .
813	Delete a channel
814	Run the worker .
815	Handle a message .
816	Initializes the process .
817	Determine if the current process continues .
818	Reserve the queue .
819	Delete a job .
820	Parses the current element
821	Parses an array of elements
822	Parses the inner inner element .
823	Reads text from the current node .
824	Parse the current element
825	Parse attributes .
826	Get the serializer for the given element .
827	Push the context to the stack .
828	Pop the current context .
829	Get the writer .
830	Parses the input and returns the result .
831	Parses an XML element .
832	Write a value to the XML document .
833	Map a value to an object .
834	Write a value to the cache
835	Parses a single line notation .
836	Deserializes the given reader .
837	Deserializes the XML document .
838	Start an element
839	Write a single element
840	Write attributes .
841	Write an attribute .
842	Get the relations for a model .
843	Validates a job name .
844	Validate a command .
845	Create a shell job
846	Returns the scope for the current scope .
847	Finish the timer .
848	Returns the current span .
849	Convert a trace to a span .
850	Start the trace .
851	Sets the name of the trace .
852	Add a value to the trace .
853	Sets the remote endpoint .
854	Generates a new token .
855	Get the value from storage .
856	Get last key
857	Ensure that the storage is in the storage .
858	Create a sanitizer instance .
859	Set attribute attributes
860	Get attribute value
861	Process default backend config
862	Process the default menu item .
863	Get the type name of a given type .
864	Gets the form options for the given property .
865	Initializes the entity .
866	Autocomplete autocomplete .
867	List all records .
868	Edit an entity .
869	Show a single entity .
870	Creates a new entity .
871	Deletes the entity .
872	Search for the given entity .
873	Handle the batch action .
874	Updates an entity .
875	Get all entities .
876	Creates a query builder .
877	Finds entities by entity .
878	Creates a search query builder .
879	Create entity form builder .
880	Get form options .
881	Create entity form .
882	Creates a form to delete an entity .
883	Redirect to home page
884	Sets the controller controller .
885	Normalize menu config
886	Get entity configuration .
887	Check if action is enabled .
888	Get action configuration .
889	Translate a message to a string .
890	Creates a paginator .
891	Process the backend configuration .
892	Initializes the request .
893	Find the current item in the database .
894	Normalize the attributes .
895	Process the entity metadata .
896	Get default actions .
897	Handles validation errors .
898	Find entities by entity .
899	Process config files .
900	Normalize entity config .
901	Get unique entity name .
902	Normalize view config .
903	Merge the form fields into a form .
904	Creates a query builder .
905	Determine if the given field is Doctrine .
906	Process the field config
907	Get excluded field names .
908	Filter the fields list
909	Run a command .
910	Deletes an SQL statement .
911	Determine if the given string is a check .
912	Checks if a string is a valid UUID
913	Reads the length of a message .
914	Builds the progress bar .
915	Log an exception .
916	Get types from config
917	Get the index configuration .
918	Get all available providers .
919	Returns a list of registered providers .
920	Get provider by index
921	Set sorting .
922	Builds the index mapping .
923	Builds the index mapping .
924	Build the type mapping .
925	Fixes property properties
926	Logs a query .
927	Transform an object into an Elasticsearch object .
928	Get total number of results .
929	Get Elasticsearch results
930	Delete template index
931	Get an index by name .
932	Get persister .
933	Populate the index .
934	Refresh index .
935	Transform an object into an object .
936	Transforms nested objects into a nested array .
937	Normalizes a value .
938	Transform an object into a document .
939	Get the query builder .
940	Returns the index for the given name .
941	Reset all indexes .
942	Reset index .
943	Reset index type .
944	Switches an alias to the index .
945	Loads the indexer .
946	Loads the type of the given type .
947	Loads the entity transformer .
948	Loads the object persister .
949	Loads the type provider .
950	Loads the type listener .
951	Get the doctrine events for the given type .
952	Loads the type finder .
953	Load index manager .
954	Load index template manager .
955	Loads the driver .
956	Load the serializer .
957	Create default manager alias .
958	Create dynamic template node .
959	Get the type node node .
960	Creates a node node .
961	Get the source node .
962	Get routing node .
963	Get parent node node .
964	Get all configuration nodes .
965	Add index configuration .
966	Add index templates .
967	Transform an Elasticsearch object into an Elasticsearch object .
968	Determine if the given object is indexable .
969	Build a callback .
970	Builds the callback for the given type .
971	Get the callback for the given object type .
972	Returns the name of the expression .
973	Set root name .
974	Switches an alias to the index .
975	Builds an alias for an alias .
976	Recursively deletes an alias .
977	Close an index
978	Get an alias for a given alias .
979	Logs a query .
980	Adds an entity to the database .
981	Adds an entity to the database .
982	Triggers the delete event .
983	Persists scheduled scheduled tasks .
984	Schedule the deletion of the object .
985	Check if an object is indexed .
986	Get the repository .
987	Transform an object into a document .
988	Get repository repository .
989	Make a HttpClient instance .
990	Register the hash factory .
991	Verify hash of parameters
992	Create Guzzle Guzzle Client
993	Add a cookie
994	Add cookies headers to the request .
995	Clear expired cookies .
996	Returns the hash of the cookie .
997	Add header .
998	Parse HTTP headers
999	Handle the request .
1000	Set the authentication options .
1001	Get the client s nonce .
1002	Get the SHA1 hash .
1003	Get the hash of the request
1004	Get HTTP header
1005	Get the response from the request .
1006	Gets the QTI option
1007	Returns the hash of the given value .
1008	Parse authentication header information .
1009	Parses the given value pairs .
1010	Parses the request header
1011	Sets the authentication algorithm .
1012	Set the HTTP authentication method
1013	Unquote a string
1014	Add parameters to the request .
1015	Convert the headers into an array .
1016	Convert a PSR - 7 header into an array .
1017	Send async request .
1018	Send a request to the queue .
1019	Execute the request .
1020	Initializes the curl handle
1021	Clean up the queue .
1022	Returns true if the request matches the given request .
1023	Checks if the item is expired .
1024	Check if the cookie matches the given domain .
1025	Check if the path matches the given path .
1026	Set Cookie header value
1027	Release a curl handle
1028	Prepare the response builder .
1029	Set CURL options
1030	Sends a request .
1031	Add a new entry
1032	Create image .
1033	Add a cover .
1034	Add an option to the collection .
1035	Creates a PDF file .
1036	Ensure that the input is a file or not
1037	Create Guzzle Client
1038	Create middleware stack .
1039	Creates a request .
1040	Sends a HTTP request .
1041	Generate request options
1042	Sends the context to the given context .
1043	Throws an exception .
1044	Add a post parameter .
1045	Add metadata headers .
1046	Add location header
1047	Validate properties .
1048	Get property value
1049	Set a property value
1050	Sets a property .
1051	Add a property
1052	Validates the table s properties
1053	Creates a new table .
1054	Computes the signature .
1055	Get authorization header .
1056	Compute the canonical headers .
1057	Returns the canonical resource for the given table .
1058	Computes the canonical URL for the given resource .
1059	Serializes the resource .
1060	Extracts the signed XML from an XML string .
1061	Add a signed identifier .
1062	Removes a signed signature .
1063	Set operations .
1064	Add a new operation .
1065	Add a new entity .
1066	Add a delete entity .
1067	Create a copy of a file
1068	Creates a new response from a list of messages .
1069	Create a new message from the queue .
1070	Creates a queue message from a queue .
1071	Initializes the application .
1072	Get the development storage account .
1073	Get development storage account
1074	Returns the service endpoint .
1075	Create storage service settings .
1076	Create a new instance from a connection string .
1077	Create a new StorageService instance from a string
1078	Encodes a multipart multipart message .
1079	Decode MIME part of MIME part .
1080	Create a list of shares .
1081	Sets the shared shares .
1082	Tries to retry the request .
1083	Append a filter to the query .
1084	Applies a filter to the operator .
1085	Applies a filter to the query .
1086	Applies a filter to the query .
1087	Apply a filter to the query .
1088	Apply a filter to the query .
1089	Applies a filter to the query .
1090	Applies a filter to a leaf .
1091	Set location .
1092	Unserialize a serialized string .
1093	Create a new queue message from the response .
1094	Create a new Entity
1095	Creates an array of operations .
1096	Returns the operation context for the given entity .
1097	Creates a batch request body .
1098	Creates a delete entity context .
1099	Creates a new entity context for the given entity .
1100	Creates a new entity context .
1101	Get entity path
1102	Merges two entities into a table .
1103	Add optional query parameters
1104	Encodes an array of values into an associative array .
1105	Query all tables .
1106	Create a new table .
1107	Create a new table .
1108	Get a table .
1109	Get a single table .
1110	Deletes a table .
1111	Deletes a table .
1112	Query entities for a table .
1113	Merge an entity into a table .
1114	Insert an entity into a table .
1115	Insert an entity into a table .
1116	Updates an existing Entity .
1117	Update an entity .
1118	Update an existing Entity .
1119	Merges a single entity .
1120	Merges a single entity into a table .
1121	Delete entity .
1122	Deletes an entity .
1123	Get a single entity .
1124	Get an entity from a table .
1125	Batch batch operations .
1126	Async batch operation .
1127	Creates a list of directories .
1128	Sets the list of directories .
1129	Sets the list of files .
1130	Create a new Directory
1131	Creates an update entity .
1132	Set query parameters
1133	Set status codes
1134	Remove a header .
1135	Adds a new history entry .
1136	Append a new entry to the file .
1137	Creates a new query .
1138	Creates a list of queued messages .
1139	Sets the queue messages .
1140	Initializes the connection provider .
1141	Check if the hostname is valid .
1142	Check if the URI is valid .
1143	Checks if an object exists .
1144	Checks if a string is a valid date .
1145	Check if a key exists .
1146	Get the range string .
1147	List all queues .
1148	Clear messages .
1149	Create a new message .
1150	Creates a new message .
1151	Create queue queue .
1152	Creates a new queue .
1153	Delete a message from the queue .
1154	Delete a message from the queue .
1155	Delete a queue .
1156	Delete a queue .
1157	Get queue metadata .
1158	Get queue metadata .
1159	List all messages .
1160	List messages .
1161	Get messages from queue .
1162	Perform a peek request .
1163	Generates an access token .
1164	Sanitize signed service .
1165	Validates a signed resource type .
1166	Sanitize signed permissions .
1167	Validate the signed protocol .
1168	Sanitize the given string .
1169	Generate canonical resource .
1170	Parse the error message .
1171	Get request ID
1172	Get the date of the response .
1173	Sets the middleware .
1174	Validate the middleware
1175	Parse the connection string
1176	Creates an exception .
1177	Extract the key from the connection
1178	Extract a string from a string
1179	Skip operator .
1180	Creates a new ShareAccess object .
1181	Handles the request .
1182	Creates a set of parameters for a given resource .
1183	Get a setting value
1184	Determine if the given settings are set .
1185	Set the next row key .
1186	Set the next partition key .
1187	Processes the given type .
1188	Validates a value .
1189	Serialize value .
1190	Serialize query value
1191	Unserialize a query value .
1192	Creates a ServiceProperties object from the response .
1193	Get CORS array
1194	Initializes the environment .
1195	Parses an array of table entries
1196	Returns a JSON encoded entity .
1197	Parses a JSON string into an array
1198	Sets the start date .
1199	Validates a permission
1200	Creates a path to a file .
1201	Retrieves a shared file .
1202	Sets the shared properties of a file .
1203	List shares .
1204	Create a share .
1205	Create a share .
1206	Delete a share .
1207	Get the share properties .
1208	Set share properties .
1209	Sets the share properties .
1210	Get file metadata .
1211	Set shared metadata metadata .
1212	Set metadata metadata .
1213	Sets the share ACL .
1214	Sets the share ACL .
1215	List of directories in a directory .
1216	List all files in a directory .
1217	Create a directory .
1218	Creates a directory .
1219	Deletes a directory .
1220	Get directory properties .
1221	Get directory properties .
1222	Get directory metadata .
1223	Set directory metadata .
1224	Create a file .
1225	Creates a file .
1226	Deletes a file .
1227	Deletes a file .
1228	Get a file .
1229	Retrieves a file for a given path .
1230	Get file properties .
1231	Get file properties .
1232	Set file properties .
1233	Sets file properties .
1234	Get file metadata .
1235	Set file metadata .
1236	Sets a file metadata .
1237	Stores a file range .
1238	Sends a file to the specified range .
1239	Creates a file from a file .
1240	Creates a file from a stream .
1241	Clear a file range .
1242	Clear a file range .
1243	List file range .
1244	List file range .
1245	Abort a file .
1246	Abort a file .
1247	Sets the type .
1248	Add a parameter .
1249	Creates responses from a multipart response .
1250	Compares the content between two headers .
1251	Creates a new batch .
1252	Get the instance of the class attribute .
1253	Serializes an array
1254	Creates a Response object from parsed response .
1255	Get service properties .
1256	Set service properties .
1257	Sets the service properties .
1258	Get service statistics
1259	Creates a list of queues .
1260	Sets the queue queues .
1261	Try to find the secondary end of the primary key
1262	Serializes an array into an array .
1263	Convert a boolean value to boolean
1264	Converts a DateTime to a DateTime object .
1265	Convert a DateTime object to an ISO date .
1266	Convert a value to a DateTime object .
1267	Convert a decimal number to decimal .
1268	Returns true if the given content is empty .
1269	Append a delimiter .
1270	Determine if the request should be sent
1271	Get location from response headers
1272	Calculates the content of the given content .
1273	Validate resource type
1274	Create a new UpdateResult .
1275	Create a new resource .
1276	Creates a retry retry callback .
1277	Determine if the given status code is valid .
1278	Adds optional parameters to query parameters .
1279	Add optional headers to the request .
1280	Creates a new File object from an HTTP response .
1281	Serialize headers .
1282	Serializes the request exception .
1283	Creates a new queue message .
1284	Creates a new insert entity .
1285	Creates a QueryResult from an array of entities .
1286	Format headers .
1287	Create a new File instance .
1288	Apply middleware .
1289	Returns an array of available includes .
1290	Call the resource method .
1291	Resolve scope .
1292	Set error code
1293	Add data to the collection .
1294	Set the serializer .
1295	Get error message
1296	Set the resource .
1297	Set the collection .
1298	Set the paginator .
1299	Add a relation to the query .
1300	Add a relation to the query .
1301	Filter the query .
1302	Set the serializer .
1303	Transforms the resource into a transformer .
1304	Prepare relations .
1305	Load eager load relations .
1306	Get paginator .
1307	Get the cursor data .
1308	Merges the included data into an array .
1309	Bind a resource to a resource .
1310	Resolve the given data .
1311	Resolves an item .
1312	Resolve transformer .
1313	Render the exception .
1314	Make an error message .
1315	Make a resource .
1316	Parse options .
1317	Parse a list of fields .
1318	Parse the fields of a field .
1319	Resolve the include includes .
1320	Register a new error message .
1321	Resolve error code
1322	Clean up an array
1323	Bind a transformer to the container .
1324	Resolve the given data .
1325	Resolve transformer .
1326	Register the Laravel bindings .
1327	Register bindings .
1328	Decorate the response factory .
1329	Register serializer bindings .
1330	Register the error bindings .
1331	Register the bundle bindings .
1332	Register transformer bindings .
1333	Register transform bindings .
1334	Boot the Laravel application .
1335	Set the collection of items .
1336	Format an error .
1337	Get all relations .
1338	Get default relations .
1339	Extract the relations from an array .
1340	Extract the child relations from the given identifier .
1341	Wrapper for nested relationships .
1342	Apply query constraints .
1343	Resolve query constraint .
1344	Resolve relation .
1345	Get the mapped transformers .
1346	Get resource instance .
1347	Include a resource .
1348	Include a resource from a model .
1349	Checks if a resource is cached .
1350	Make a resource instance .
1351	Create a resource from a resource .
1352	Instantiate a new resource .
1353	Determine if the given data can be created .
1354	Resolve resource key .
1355	Set the response factory .
1356	Outputs the response .
1357	Normalize data .
1358	Normalizes the given relation .
1359	Transform data into a resource .
1360	Convert an exception to an array
1361	Convert an exception to an exception .
1362	Render the response .
1363	Make a transformer instance .
1364	Configures the terminal .
1365	Add multiple items
1366	Sets the selected items .
1367	Select first item
1368	Registers a custom custom control mapping .
1369	Remove custom control mapping .
1370	Displays the screen .
1371	Get the selected item .
1372	Execute the current selected item .
1373	Renders the terminal .
1374	Draws the menu item .
1375	Draws a menu item .
1376	Closes the menu .
1377	Set default selected item
1378	Checks if the given index is selected .
1379	Sets the selected item .
1380	Returns the selected item .
1381	Converts a string into a string .
1382	Generate the font code for the current color
1383	Calculates the width .
1384	Gets the right padding of the content .
1385	Set border width
1386	Displays the menu .
1387	Calculates the coordinates of the text .
1388	Renders the row .
1389	Write text to the terminal .
1390	Sets the text .
1391	Calculate art length
1392	Displays the prompt .
1393	Get a connection instance .
1394	Make a new connection instance .
1395	Returns the configuration for the given name .
1396	Compress request body
1397	Check if a rule is set .
1398	Add arguments to the command
1399	Sets the arguments .
1400	Set options .
1401	Add rules to the parser
1402	Convert options to string
1403	Convert options to array
1404	Convert options to JSON .
1405	Convert options to XML .
1406	Get option by flag
1407	Get the usage message .
1408	Sets the rules for the given rule .
1409	Set help map
1410	Parses the command line
1411	Parses a short list of options .
1412	Parse a single option
1413	Adds the rules to the rules array .
1414	Adds the rules for the given rules .
1415	Get OAuth header
1416	Get base uri string
1417	Prepare HTTP method .
1418	Set nonce .
1419	Append the OAuth query parameters to the API .
1420	Get the query string
1421	Creates a new client instance .
1422	Returns the log file destination
1423	Logs the API request to the application .
1424	Check if an operation is allowed
1425	Prepare reflection .
1426	Convert the WSDL to XML .
1427	Copy a file to the destination directory .
1428	Cast value to string
1429	Read configuration from a file
1430	Initialize the api rules
1431	Populate the JsonEntity entities
1432	Initialize OAuth settings
1433	Initializes the serialization .
1434	Initialize the service base URL
1435	Get entity by key
1436	Check if a string is valid .
1437	Verify the export directory
1438	Load the webhook class names .
1439	Check if a webhook is valid .
1440	Get the options array .
1441	Validate URIs
1442	Add a function to the server
1443	Sets the class name
1444	Sets the object
1445	Returns an array of functions
1446	Set persistence mode
1447	Get server instance
1448	Handle the request
1449	Unregister an exception .
1450	Creates a fault instance .
1451	Handles PHP errors .
1452	Get Access Token
1453	Get authorization URL
1454	Refresh the access token .
1455	Migrate OAuth2 OAuth2 .
1456	Parses the OAuth2 access token .
1457	Check if the given token is empty .
1458	Generate Authorization header
1459	Build the refresh token header .
1460	Check if the result is valid
1461	Get the error message from an error code .
1462	Convert an object to an object
1463	Serialize an entity .
1464	Remove null properties .
1465	Add complex type
1466	Get the WSDL .
1467	Add binding bindings .
1468	Add port type
1469	Adds the types to the list
1470	Add the binding operations
1471	Add port operations to the service
1472	Check if a local type is local .
1473	Add services .
1474	Get target namespace
1475	Returns an array of namespaces .
1476	Saves the class files
1477	Loads the inclusion of an XML document .
1478	Returns the XML representation of the XML document .
1479	Saves PHP code to file .
1480	Converts an XML string to a PHP string .
1481	Sets the base URL .
1482	Gets the refresh time period .
1483	Get the access period .
1484	Get the refresh token
1485	Get Access Token
1486	Update access token .
1487	Gets the request body from the request .
1488	Creates a php object from XML string
1489	Parses a response object into an associative array
1490	Setup an option
1491	Get the version of the TLS version .
1492	Handle an exception .
1493	Verify a variable type .
1494	Generates an array of object names .
1495	Complete a property .
1496	Unmarshall a DOMElement object
1497	Get serializer .
1498	Get the compressor .
1499	Returns the LoggerLogger for the given service context .
1500	Connects to the given type .
1501	Get default strategy
1502	Returns the strategy for the given type .
1503	Add a complex type
1504	Make reflection .
1505	Populate comment comments .
1506	Create a new instance of the given class .
1507	Process the given property values .
1508	Create a new instance .
1509	Checks if the given value is a valid object .
1510	Process a property value
1511	Get entity from model
1512	Updates the service settings .
1513	Setup REST handler .
1514	Set log location
1515	Sets the minor version .
1516	Disable the request .
1517	Enable request logging .
1518	Set the client name .
1519	Configure Data Provider
1520	Configure the OAuth2 login
1521	Updates an OAuth2222 token .
1522	Setup the serializer .
1523	Updates an entity .
1524	Adds an entity to the collection .
1525	Delete an entity
1526	Uploads an image
1527	Send an email
1528	Perform a query
1529	Append pagination information
1530	Find all entities for a specific entity
1531	Calls a collection of entities
1532	Execute the serializer .
1533	Initialize post request
1534	Get request parameters
1535	Fix tax service service
1536	Returns the export file name for the given entity .
1537	Check if the given entity is allowed .
1538	Create a new batch .
1539	Convert a string to a timestamp .
1540	Check if a timestamp is valid
1541	Verifies that the given date has been changed .
1542	Get company information
1543	Returns a list of all the websites that should be used for this API .
1544	Get access token from array
1545	Get refresh token from array
1546	Get redirect URL
1547	Save file .
1548	Generate a file name .
1549	Generate an error from an OAuth response .
1550	Parse an error message
1551	Checks if the error body is an error
1552	Sets the response object
1553	Parses the response to the client .
1554	Set the response handler
1555	Set response headers
1556	Set content type
1557	Sets the ID of the ticket .
1558	Get application menu
1559	Method to reconnect to the server
1560	Sets the current URI
1561	Set complex type strategy
1562	Add a binding operation to the operation .
1563	Adds a document to the document .
1564	Adds a list of types
1565	Add a type to the list
1566	Dump the contents of this object .
1567	Adds the schema section .
1568	Configure the OAuth configuration
1569	Checks if OAuth authentication is valid .
1570	Get base URL
1571	Use this method to use in the request .
1572	Sets the JSON header .
1573	Disable log .
1574	Set log location
1575	Updates the OAuth2Auth22 token .
1576	Get class properties
1577	Get result .
1578	Sets the request URI .
1579	Get request URI .
1580	Get request uri
1581	Set complex type strategy
1582	Set the SOAP service
1583	Adds a function to the SOAP server .
1584	Dump the WSDL .
1585	Update the service context .
1586	Send an HTTP request
1587	Performs an OAuth API request .
1588	Get authorization header
1589	Perform OAuth2 API call
1590	Get Authorization header
1591	Logs a request to the API .
1592	Logs API request to API .
1593	Parse a string into a DOMDocument .
1594	Reset serializer .
1595	Get the destination URL .
1596	Append the minor version to the request .
1597	Check if the HTTP method is a HTTP method .
1598	Parses a URL into an array of parameters .
1599	Returns the content type for the given value .
1600	Convert query to array
1601	Verify the payload
1602	Encrypt the payload
1603	Get a single batch response from the response .
1604	Removes a batch item
1605	Convert array to array
1606	Generate an exception for a given fault .
1607	Get the options array .
1608	Set request style
1609	Sets the encoding method .
1610	Set proxy port
1611	Set the HTTPS certificate .
1612	Sets the stream context
1613	Set user agent
1614	Perform a request
1615	Initializes the SOAP client object .
1616	Add a soap header to the request
1617	Get all functions
1618	Returns a list of all types
1619	Returns the type name for the given type .
1620	Add an element to the xml element
1621	Prepare the XML document
1622	Adds a soap operation to the binding .
1623	Adds a port to the list of operations
1624	Creates a reference element
1625	Creates a complex element
1626	Create simple simple element
1627	Resolve a short name .
1628	Parse a doc comment
1629	Check if array is associative array
1630	Get Webhook Event Event
1631	Verifies that the given token is valid .
1632	Checks if a given key exists in the array
1633	Get helper method .
1634	Get the IP type of an array .
1635	Get IP ID .
1636	Merge two objects
1637	Convert cURL headers to array
1638	Set SSL options
1639	Convert header array to headers
1640	Add a warning .
1641	Resolves the input .
1642	Sets the name of the tag .
1643	Scope by name .
1644	Boot trait .
1645	Add tags to model .
1646	Remove tags .
1647	Add a tag .
1648	Remove tag from cache
1649	Check if the given tag is a valid tag .
1650	Scope all tags with the given tags .
1651	Scope the query to scope .
1652	Scope a query without tags .
1653	Returns the scope of the query .
1654	Renames a tag .
1655	Get popular tags .
1656	Get the name of the related model .
1657	Get the name of the foreign key .
1658	Create a new alias for the given scope .
1659	Build the tags array .
1660	Get tag models .
1661	Make a list of tags .
1662	Make tag array .
1663	Get all tags .
1664	Get all tagged tags .
1665	Rename tags .
1666	Returns the fully qualified table name .
1667	Get the fully qualified table name .
1668	Saves a single parameter data .
1669	Builds the URL for the given parameters .
1670	Get request parameters .
1671	Get the request parameters .
1672	Adds a parameter to the index .
1673	Get debug response
1674	Get the endpoint .
1675	Sends a request to the API .
1676	Get HTTP client options
1677	Get the URL for the request .
1678	Check if required parameters are required
1679	Sets the action for the given action .
1680	Sets a single parameter .
1681	Adds a parameter to the collection .
1682	Returns the value of a parameter .
1683	Get the index from method arguments .
1684	Returns the full description of the given method name .
1685	Perform an API request .
1686	Parse request options .
1687	Get the readable items .
1688	Add a supported country
1689	Sets the year parameter .
1690	Validates the credit card .
1691	Returns the number of digits with the given mask .
1692	Get the brand s brand
1693	Get track by pattern
1694	Returns the last name of the last name .
1695	Set billing name .
1696	Set shipping name .
1697	Get the birthday day .
1698	Sets the birthday .
1699	Initializes the request .
1700	Set the request parameter
1701	Set the credit card
1702	Returns the amount of the currency .
1703	Set the monetary value .
1704	Sets the currency .
1705	Returns the currency for the current currency .
1706	Returns the number of places in the currency .
1707	Formats the currency .
1708	Replace items .
1709	Validates the response .
1710	Converts a string to camelCase
1711	Validates a number
1712	Get the name of the gateway .
1713	Get gateway class name
1714	Get fixed query builder .
1715	Get parent metadata for a given property .
1716	Get pager .
1717	Get parent alias .
1718	Add a resource to the collection .
1719	Finds a record by ID .
1720	Authenticate a user
1721	Set parent ID .
1722	Set credit card info
1723	Get credit card information
1724	Add a resource to the collection
1725	Find an item by its ID .
1726	Set signature .
1727	Handle an error
1728	Callback for user login
1729	Check if a path is a repeatable
1730	Check if path exists
1731	Reorder paths in the application .
1732	Call callback function
1733	Call static method
1734	Finds a customer by name .
1735	Set the class ID .
1736	Get Bill Address
1737	Set Shipping Method
1738	Set payment method ID
1739	Generate field schema .
1740	Returns the child of the given path .
1741	Add child node
1742	Returns the children of this node .
1743	Remove an attribute
1744	Convert XML to XML
1745	Returns an array representation of the resource
1746	Parse an array of paths
1747	Saves the XML file .
1748	Saves the contents of a file .
1749	Cast a string to a string
1750	Decode UTF - 8 encoded string
1751	Parse a DSN string
1752	Extract request ID from XML .
1753	Parse request ID
1754	Determine if the given IP address is valid .
1755	Create a new user .
1756	Disable a user .
1757	Generate unique hash
1758	Determine if the given user has a favourite .
1759	Initializes the database .
1760	Determine if the driver is initialized .
1761	Returns a list of all available objects
1762	Returns a list of all available actions
1763	Escape a string
1764	Generate the XML .
1765	Creates a quick checkout book .
1766	Add a customer request
1767	Add customer response
1768	Catch all errors
1769	Queue processing processing .
1770	Enqueue a user .
1771	Recursively deletes a user .
1772	Removes a user from the queue .
1773	Queue a report .
1774	Queue a ticket .
1775	Log an error message .
1776	Retrieves the error for the given ticket .
1777	Resolve auth driver .
1778	Check if a ticket is authenticated .
1779	Logs a user .
1780	Create a new Auth .
1781	Initialize driver .
1782	Determine if the driver is initialized .
1783	Log a message .
1784	Call a hook .
1785	Connect to OAuth
1786	Configure default settings
1787	Handle recurring events .
1788	Extracts the identifiers from an XML string .
1789	Extract the status code from the XML response .
1790	Extract the status message from the XML string .
1791	Call a function on the mapper
1792	Call a hook .
1793	Handle an error .
1794	Enqueue an action .
1795	Find item by name
1796	Checks if a string starts with a given string .
1797	Execute a SQL query
1798	Extracts the contents of the given tag .
1799	Extract the tag attributes from a string
1800	Encode a string
1801	Decode a string
1802	Determine if the application is valid .
1803	Load a user from the application
1804	Handle an authorization request
1805	Get menu menu
1806	Maps the SQL to a database schema .
1807	Transforms the given node into the database
1808	Set a value
1809	Returns the value of a given key .
1810	Set the full name of the field type .
1811	Set boolean type
1812	Set date type
1813	Get date type
1814	Remove a key from the collection
1815	Get the schema for a request
1816	Returns the XML representation of this object .
1817	Initializes the database .
1818	Add a new element to the collection
1819	Get the name of the field .
1820	Sets the name of the first name .
1821	Returns the default values for the given config .
1822	Get the status of the current user .
1823	Delete a record
1824	Reads data from a string
1825	Load the data from a file
1826	Parse the XML document
1827	Convert a request to XML .
1828	Throw an exception if not found
1829	Resolves a ticket id .
1830	Write a config to the database
1831	Reads the configuration from the database
1832	Create a new user .
1833	Returns the default user s default username .
1834	Attempt to authenticate a user
1835	Check if a ticket is valid
1836	Logs the error log .
1837	Enqueue a requester .
1838	Recursively deletes a queue
1839	Enqueue a queue .
1840	Enqueue a pending queue .
1841	Returns the number of rows in the queue .
1842	Get the queue for a ticket .
1843	Logs a message .
1844	Execute a SQL query
1845	Get all fields of a table
1846	Execute a SELECT query
1847	Update an existing object
1848	Enqueue interactive mode .
1849	Enqueue a recurring interval .
1850	Get the size of the queue .
1851	Get the address of the address
1852	Authenticate a user
1853	Finds a record by its ID .
1854	Delete a card
1855	Perform an HTTP request
1856	Signs a QTI request
1857	Generate transaction ID
1858	Refunds a credit card
1859	Initialize a Queue instance .
1860	Creates a new adapter instance .
1861	Set default values
1862	Set HTTP headers
1863	Lists all books .
1864	Factory method to create a request object .
1865	Handles HTTP request
1866	Walk through all the data
1867	Make a new transaction .
1868	Get a charge
1869	Retrieves a transaction
1870	Refunds a refund
1871	Store a credit card
1872	Store a credit card from the given ID .
1873	Get a credit card
1874	Get card cards
1875	Delete a card
1876	Handle error handling
1877	Perform HTTP request
1878	Map a list of items to a specific type .
1879	Map the application name to the application .
1880	Add a new request to a shipping method .
1881	Filter actions by priority
1882	Check if a version is required .
1883	Creates a list of delete queries for a specific user .
1884	List all deleted queries
1885	Send a transaction to a transaction
1886	Creates a transaction response .
1887	Modify order receipt .
1888	Adds a new job type to the queue .
1889	Builds a filter
1890	Flushes all caches .
1891	Flush cache by tags .
1892	Find a command by name .
1893	Run the install command .
1894	Determine if the extension can be loaded .
1895	Checks if the extension file exists .
1896	Load the extension for the given extension .
1897	Load the extension for the given extension .
1898	Check if the installation is installed .
1899	Execute scheduled tasks .
1900	Execute a single task
1901	Migrate the given tables .
1902	Locks the editor .
1903	Unlocks the editor .
1904	Create admin command .
1905	Get the list of available upgrades .
1906	Generate the package states .
1907	Fix the folder structure .
1908	Checks if the extension is setup .
1909	Executes an action .
1910	Creates a new Composer instance .
1911	Create a new instance from a command line .
1912	Create a new instance of Symfony installation .
1913	Execute a command
1914	Handle the exception .
1915	Create a new upgrade .
1916	Wrap a word into a string .
1917	Execute a request .
1918	Make absolute URL .
1919	Check extension constraints .
1920	List all available wizards .
1921	Run wizard wizard .
1922	Run the upgrade command .
1923	Executes an upgrade command .
1924	Check if an extension is compatible .
1925	Setup extensions .
1926	Get the structure definition .
1927	Get extension structure .
1928	Creates the structure structure of the extension .
1929	Generates XML for a given class name .
1930	Add attributes to the element
1931	Adds the documentation to the document .
1932	Resolve the command name .
1933	Maps the request arguments to the controller .
1934	Call the command .
1935	Create default logger .
1936	Get short description
1937	Parse the definition definitions .
1938	Get synopsis .
1939	Remove a step .
1940	Invokes the start step .
1941	Invokes a step .
1942	Setup extensions .
1943	Setup the active extension .
1944	Remove inactive packages .
1945	List all extensions .
1946	Flush cache tables .
1947	Handle an error .
1948	Register the install script .
1949	Choose a choice .
1950	Ask a question .
1951	Ask user confirmation .
1952	Ask the response for the given question .
1953	Validates a question .
1954	Ask the response for the given question .
1955	Executes the console command .
1956	Write a log record
1957	Returns the number of supported types .
1958	Add multiple updates to the collection .
1959	Add errors .
1960	Removes a configuration file .
1961	Show a command .
1962	Show active configuration .
1963	Show local configuration .
1964	Set a configuration value .
1965	Copy a script to the installed installation
1966	Add flash message .
1967	Copies the contents of a file
1968	Generate the XML document .
1969	Initializes the package manager .
1970	Overrides the override method to override this class .
1971	Registers an extension .
1972	Set a local configuration value .
1973	Convert value to target type .
1974	Returns the type of the given path .
1975	Check if the given type is a valid type .
1976	Check if a command is available .
1977	Configures the command definition .
1978	Execute command .
1979	Ensure that the environment is required .
1980	Initializes the compatibility class .
1981	Process the command .
1982	Renders an exception .
1983	Output the exception .
1984	Outputs the trace .
1985	Short description of method getShortName
1986	Displays a command .
1987	Import a MySQL command .
1988	Execute a subprocess command .
1989	Render the schema result .
1990	Render static data .
1991	Updates the schema .
1992	Build the sequence for the given run level .
1993	Builds the suite for the given identifier .
1994	Build the basic runtime sequence .
1995	Flush groups .
1996	Flush all tags .
1997	List cache groups .
1998	Hydrate a collection of values .
1999	Triggers the trace .
2000	Get number of files in a directory .
2001	Convert data to JSON .
2002	Get the description of the transaction .
2003	Get the token .
2004	Check if token is valid .
2005	Set start time
2006	Set end time
2007	Get all issues for a given type .
2008	Run the process .
2009	Normalize a path .
2010	Logs an error message .
2011	Splits an array into a comma separated list .
2012	Trims whitespaces .
2013	Call a function checker .
2014	Add a new record
2015	Checks if the current color is enabled .
2016	Get Windows terminal size
2017	Attempts to find the autoloader for the given identifier .
2018	Locates a file by its name .
2019	Find a function by name
2020	Opens a file .
2021	Executes a URL to a file
2022	Compiles a constant for a constant .
2023	Compiles a class constant .
2024	Compute reflections .
2025	Returns true if the given line is in the given line .
2026	Returns all the classes of this class .
2027	Create a new instance from a class name .
2028	Create a new instance from an instance .
2029	Get the list of docblock types .
2030	Find all references in a given type .
2031	Finds a reflection by its identifier .
2032	Create a ReflectionClass from a class name .
2033	Create a ReflectionClass instance from a class name .
2034	Create a new reflection from a closure .
2035	Checks if the node is null .
2036	Returns the type of the node .
2037	Sets the parameter type .
2038	Returns all registered functions .
2039	Create a ReflectionClass from a class name .
2040	Create a new instance from the given instance .
2041	Get the type of the method .
2042	Check if the constructor is a constructor .
2043	Export class name .
2044	Creates a new instance from the given node .
2045	Get all methods .
2046	Returns all registered methods .
2047	Check if a method exists
2048	Get a constant
2049	Get the constructor .
2050	Get all the properties of this class .
2051	Get the parent class .
2052	Get parent class names .
2053	Get traits .
2054	Returns the class for the given node .
2055	Returns true if the object is an instance of the given object .
2056	Returns true if the given class is a sub class .
2057	Determine if the given interface implements the given interface .
2058	Determine if the object is instantiated .
2059	Check if this object is cloned .
2060	Get the interfaces hierarchy .
2061	Sets a static property value .
2062	Set the state of the class .
2063	Removes a method .
2064	Adds a new method .
2065	Adds a property .
2066	Removes a property .
2067	Checks if the given reflection is a valid reflection .
2068	Export class instance .
2069	Creates a new instance of the given object .
2070	Returns the runtime properties .
2071	Creates a property node .
2072	Populates the function prototype .
2073	Sets the optional node flag .
2074	Returns the number of required parameters .
2075	Returns an array of parameters .
2076	Get a parameter by name .
2077	Check if the parameter is a variable .
2078	Set the return type .
2079	Get body code
2080	Gets the return statements as an array .
2081	Returns the identifiers for the given type .
2082	Creates a new instance from a node .
2083	Get the value of the node .
2084	Returns the number of modifiers .
2085	Generate a doc comment
2086	Format a doc comment .
2087	Extract the properties from the graph .
2088	Extracts the value of a property .
2089	Checks if a type is an enum .
2090	Creates the properties map for the given types .
2091	Convert a namespace to a directory .
2092	Fix css files .
2093	Check if a property exists
2094	Extracts the cardinality of the relation .
2095	Get the property URL for a property .
2096	Converts a PHP array to a PHP type .
2097	Get relation name .
2098	Finish the file
2099	Flushes data to the buffer .
2100	Add a new item
2101	Add a language item
2102	Add multiple language items
2103	Get the list of urls .
2104	Set the sitemap .
2105	Add sitemap .
2106	Write data to file
2107	Finish the file
2108	Finish the compressed file
2109	Set the expiration date .
2110	Sets the primary key
2111	Sets the subkey parameters for a given key .
2112	Returns the usage of the usage .
2113	Get the user id .
2114	Parses a string from a string
2115	Check if the process is running
2116	Terminate the process .
2117	Set the operation name
2118	Handle error message
2119	Set the error code
2120	Set the value of the data
2121	Throws an exception if not found .
2122	Get the password for the given key
2123	Get hash algorithm name .
2124	Sets the sign of the request .
2125	Sets whether or not to use .
2126	Parses a string
2127	Parse a date string
2128	Delete a public key
2129	Get fingerprint of a key
2130	Encrypt data
2131	Encrypt a file
2132	Encrypts data
2133	Encrypt a file
2134	Decrypt the given data
2135	Decrypt a file
2136	Sign a file
2137	Add a decrypt key
2138	Add encrypt key
2139	Add a new key to the session .
2140	Adds a key to the array .
2141	Import a key
2142	Export a key
2143	Decrypts the given data
2144	Prepares input data
2145	Prepares the output .
2146	Get the keys of the given key .
2147	Send a command
2148	Reset the process .
2149	Runs the process
2150	Set the operation .
2151	Sets the pins for the user .
2152	Get the current version .
2153	Get process data
2154	Set process data
2155	Closes a subprocess .
2156	Closes the agent process .
2157	Close a pipe
2158	Close all agents .
2159	Finds a binary binary file .
2160	Get pin entry
2161	Print debug message
2162	Get primary key .
2163	Check if the key is valid .
2164	Returns true if the key is encrypted .
2165	Set log file
2166	Logs a message
2167	Connect to the server
2168	Parses command line
2169	Initialize pins from user
2170	Disconnect from log file
2171	Sends the text to the server .
2172	Send the current pin
2173	Send GET info
2174	Convert data to string
2175	Wrapper for word wrapped in a string
2176	Send data to the server
2177	Build the messages array .
2178	Set the headers for a comment .
2179	Adds a line to the list of lines .
2180	Get the main theme data .
2181	Extract translations from file
2182	Get the file comment .
2183	Set default headers
2184	Get file data from file
2185	Extract headers from string
2186	Resolves a callable expression .
2187	Checks if a comment is before a comment .
2188	Calculate the score of a file
2189	Returns true if the given directory matches the given path .
2190	Returns a list of files matching the given directory .
2191	Make a json file .
2192	Build the json file .
2193	Remove JS strings from source file
2194	Mark all updates .
2195	Mark all updates .
2196	Set success by hook
2197	Checks if the list of items are valid .
2198	Checks if the list of changes are updated
2199	Save the progress bar
2200	Renders the report .
2201	Generates a hash from the database .
2202	Compares the database with the given name .
2203	Imports a config file .
2204	Import a list of configs .
2205	Install modules .
2206	Check a link to a file
2207	Check if a link is active .
2208	Home page .
2209	Get a file .
2210	Get items from data
2211	Returns the total number of rows in the result set .
2212	Prepare string for comparison
2213	Sets the data
2214	Resolve the grid type .
2215	Resolve options .
2216	Render a grid
2217	Render a grid cell
2218	Gets the grid filter .
2219	Render column operator .
2220	Checks if a template exists .
2221	Walks down a select statement .
2222	Sets the source .
2223	Determines if the request is ready to be redirected to
2224	Process request data
2225	Processes a bulk action
2226	Processes export data
2227	Process filters .
2228	Process session data
2229	Prepares and executes the query
2230	Set session data
2231	Get column by id
2232	Check if a column exists
2233	Sets the columns for this table .
2234	Add a mass action
2235	Add a tweak .
2236	Get the tweak of the request .
2237	Get a single tweak .
2238	Gets the tweak group for a given group .
2239	Adds a row to the table .
2240	Set request template
2241	Add a export .
2242	Get route url
2243	Set filters .
2244	Set limits .
2245	Get page count
2246	Set max results
2247	Determines if the section is visible .
2248	Determines if the filter is visible .
2249	Determine if the page is visible .
2250	Show list of columns .
2251	Hide columns .
2252	Get grid response
2253	Get raw data
2254	Get the list of filters .
2255	Get session filter
2256	Returns true if the request has a filter
2257	Initializes the query builder .
2258	Render a cell
2259	Check if the current user is visible .
2260	Sets the order .
2261	Sets the column size .
2262	Set the query data
2263	Get the data from the request
2264	Set the alignment .
2265	Returns an array of operators .
2266	Add a column
2267	Sets the columns for this table .
2268	Add route parameters
2269	Get route parameters .
2270	Render a row
2271	Add a grid type
2272	Add a column
2273	Sets the container .
2274	Returns the response body .
2275	Get grid data
2276	Get flat data
2277	Set the template .
2278	Get parameter by name
2279	Get all actions for a row
2280	Clear all items
2281	Adds a cart item
2282	Remove item from collection
2283	Get all items
2284	Logs a user .
2285	Get user profile
2286	Sets the remember user .
2287	Callback for login .
2288	Returns the length of a string .
2289	Returns a substring from a string .
2290	Lowercase string .
2291	Convert a string to upper case .
2292	Get a mock object .
2293	Register the event listener .
2294	Defines a function for a function .
2295	Display language flag .
2296	Get country code
2297	Returns the code for the given name .
2298	Get long language code
2299	Get the name of the locale
2300	Sets the locale .
2301	Home page .
2302	Redirect to the session .
2303	Sets the locale .
2304	Finds all elements in the collection .
2305	Remove an element from the list .
2306	Iterates over each element in the collection .
2307	Sets the authentication user .
2308	Sets the OAuth authentication token .
2309	Sends a message
2310	Connect to the SMTP server
2311	Start the SSL protocol
2312	Attempts to authenticate the user
2313	Generate OAuth OAuth OAuth .
2314	Creates an OAuth2 OAuth2 OAuth2 authentication
2315	Push the recipients to the message .
2316	Get the data of the message
2317	Execute the quit code .
2318	Get the response code
2319	Set the email address
2320	Set fake email address
2321	Find a file in the cache
2322	Find a file by its name
2323	Loads a collection of classes .
2324	Fixes namespace declarations .
2325	Write cache file
2326	Get sorted classes .
2327	Add prefixes .
2328	Add a prefix
2329	Returns the file for the given class .
2330	Parses a text .
2331	Detects the block type .
2332	Parses a block .
2333	Get inline markers .
2334	Prepare inline markers .
2335	Parse inline text .
2336	Parse strong text .
2337	Determines the HTML for a given line .
2338	Parses the content of the given tag .
2339	Determine if the given line is detected .
2340	Determine if the given line is a header .
2341	Parses the head line .
2342	Replace escaped characters in a string .
2343	Parse a link .
2344	Parse an image
2345	Parse inline code .
2346	Consume the content of the given line .
2347	Determine if the line contains a label .
2348	Renders the block list .
2349	Parses a quote block .
2350	Consume a reference .
2351	Render the header .
2352	Parse markdown .
2353	Determine if the given line is a table .
2354	Parses the given lines .
2355	Render table .
2356	Parses the URL and returns the link .
2357	Checks if the subject is equal to the subject .
2358	Create a new element
2359	Create a new element with the given name .
2360	Validates an array of images
2361	Check if value is empty
2362	Checks to see if the given property is invalid .
2363	Creates a new exportporter .
2364	Adds a value to the group .
2365	Validate a DOMDocument .
2366	Add a new name
2367	Add a summary .
2368	Add a description .
2369	Add a price
2370	Add bonus .
2371	Add sales frequency
2372	Add a date to the collection .
2373	Add sort .
2374	Validates a value
2375	Get a hook .
2376	Set a symlinks .
2377	Set a hook .
2378	Remove a hook .
2379	Count commits .
2380	Get the reference bag .
2381	Gets a commit .
2382	Get tree by hash
2383	Get a blob by hash
2384	Get log .
2385	Get the size of the repository .
2386	Execute a shell command .
2387	Get the description of the repository .
2388	Run a command .
2389	Clone a path to another directory .
2390	Get all parents .
2391	Get the short message .
2392	Get the list of all branches in the repository .
2393	Initializes a repository .
2394	Checks if a repository is valid .
2395	Clone repository .
2396	Clone a branch .
2397	Clone repository .
2398	Get grouped lines .
2399	Get the list of lines .
2400	Gets a reference .
2401	Get all branches .
2402	Get local branches .
2403	Get remote branches .
2404	Get the contents of the file .
2405	Get the mime type .
2406	Returns an array representation of the file .
2407	Parses the given text .
2408	Write a query to the database
2409	Write column name .
2410	Creates an array of columns .
2411	Creates a new column .
2412	Creates a new table .
2413	Get the sql string
2414	Bootable cacheable .
2415	Store cache key .
2416	Get cache keys
2417	Flushes cache keys .
2418	Clears the cache .
2419	Reset cache configuration
2420	Generate cache key
2421	Cache query builder .
2422	Validate an HTTP request
2423	Validate the response .
2424	Add auto - delay flag
2425	Adds the option to the list .
2426	Add a validation rule to the list .
2427	Add a DECD to the list .
2428	Set the card storage .
2429	Add an option to the queue
2430	Add a payer to the payment .
2431	Sets the HAP version .
2432	Generate default values .
2433	Encode this payment
2434	Decode the card data
2435	Encodes the data
2436	Decode the data
2437	Get field config rules
2438	Unpack deferred result .
2439	Resolve a deferred value .
2440	Convert a cursor to a string .
2441	Convert a cursor to an offset
2442	Parses a node .
2443	Create request data
2444	Get all sentences .
2445	Splits text into a single text .
2446	Detect language from text
2447	Get language codes
2448	Get the default values for the field .
2449	Cache a row
2450	Get a row from cache .
2451	Check if an offset exists .
2452	Get a row by offset
2453	Set the value of a row .
2454	Unset an offset
2455	Get join field .
2456	Delete all records
2457	Returns the class name of the given type .
2458	Set config value
2459	Get field factory
2460	Executes a prepared statement .
2461	Executes a transaction .
2462	Begin transaction .
2463	Check if data is valid
2464	Checks if a value is set .
2465	Set an array of values
2466	Delete a record
2467	Relational relations .
2468	Renames a row .
2469	Reload all tables .
2470	Get a select query .
2471	Get the value of the field name .
2472	List limits .
2473	The metric rules .
2474	The producer destinations .
2475	The consumer destinations .
2476	Optional . The advice .
2477	List Endpoints .
2478	List of logs .
2479	Sets the metrics .
2480	List of field violations .
2481	List operations .
2482	The role view .
2483	The included permissions .
2484	The role stage .
2485	The consumer destinations .
2486	List extensions .
2487	List providers .
2488	The list of requests .
2489	Optional .
2490	List of bounds .
2491	The role .
2492	Sets the subpages .
2493	Optional . The keys of the service type .
2494	List recipients .
2495	List of stack entries .
2496	The producer destinations .
2497	The consumer destinations .
2498	Required .
2499	List of binding bindings .
2500	The metric costs .
2501	List pages .
2502	The action action .
2503	The source files .
2504	The keys of the service .
2505	The list of accounts .
2506	Required for custom roles .
2507	The policy delta .
2508	Optional .
2509	List of features .
2510	The properties of a property .
2511	List of violations .
2512	The private key type .
2513	The key algorithm .
2514	The details of the message .
2515	The bindings of the binding .
2516	The public key type .
2517	List of roles .
2518	The parameters of the system .
2519	Get cache file
2520	Checks if the cache is valid .
2521	Check if a file exists
2522	Set the contents of a file
2523	Get cache file
2524	Create a new cache file
2525	Check if WordPress is installed .
2526	Install WordPress WordPress .
2527	Convenience method to create a new network .
2528	Install the main site .
2529	Display the version of a WordPress version .
2530	Get core checksum
2531	Updates the database .
2532	Get the download url .
2533	Get update updates .
2534	Download a package .
2535	Upgrade the current configuration
2536	Builds an HTML table
2537	Output the header .
2538	Move meta box .
2539	Get post type
2540	Get title .
2541	Render meta box .
2542	Setup meta box .
2543	Get meta data
2544	Setup the file .
2545	Setup meta data
2546	Determine if the post type is disabled .
2547	Creates a new property .
2548	Get child property .
2549	Get an option value
2550	Get post ID
2551	Generate HTML ID .
2552	Returns the HTML for the given property .
2553	Returns true if the given slug matches the given slug .
2554	Prepare the value of a value .
2555	Render conditional rules .
2556	Set option value
2557	Set a setting
2558	Setup default properties
2559	Setup options .
2560	Setup the slug for the given options .
2561	Setup settings settings .
2562	Edit the media .
2563	Save an attachment .
2564	Get single post type
2565	Get meta value
2566	Formats a value .
2567	Get a property
2568	Load a value from the database
2569	Factory method to create a new page .
2570	Get a property value
2571	Determine if the user can be rendered .
2572	Render the row
2573	Render hidden field .
2574	Render the label .
2575	Renders the table row
2576	Render the rules .
2577	Get the value of the post .
2578	Decodes a property value .
2579	Get post data
2580	Get the keys of an array .
2581	Prepare post data
2582	Prepare properties data
2583	Sanitize data .
2584	Delete a cache entry
2585	Get the function name .
2586	Get a value by slug
2587	Update an existing record
2588	Clear cache data
2589	Get the diff between two revisions .
2590	Add meta box box .
2591	Load post type
2592	Redirect to a post .
2593	Check if the post type exists .
2594	Rename a post
2595	Get field slug
2596	Get the source .
2597	Setup source source .
2598	Setup the rules .
2599	Initialize admin entry
2600	Generate the body of the post type
2601	Render the edit page
2602	Get entry type
2603	Get the meta data for a plugin .
2604	Update the frontend page .
2605	Generate links for a page
2606	Get the list of templates for a given ID .
2607	Prepares the value of a property .
2608	Save properties .
2609	Generate metabox .
2610	Save a post
2611	Updates the post data .
2612	Save meta data
2613	Save meta data
2614	Save a revision
2615	Save properties .
2616	Restore a post .
2617	Validates a post ID
2618	Displays the given rules .
2619	Determine if the given conditions are allowed .
2620	Get the slug of a rule .
2621	Prepare the rules for a given property .
2622	Check if the current user is allowed
2623	Answers an array of body classes .
2624	Returns a list of child types .
2625	Get the list of labels .
2626	Get the list of supported post types .
2627	Removes the post type .
2628	Remove meta boxes .
2629	Setup post types
2630	Setup post types .
2631	Setup page templates .
2632	Add mime buttons
2633	Removes the mousel buttons .
2634	Retrieves the results from the database
2635	Loads the value of a property .
2636	Prepare the properties .
2637	Prepare the json for the given property .
2638	Remove repeater rows .
2639	Render a template .
2640	Renders the footer .
2641	Renders the row rows .
2642	Register option types
2643	Get setting value
2644	Prepare the response .
2645	Get user value
2646	Get the list of users .
2647	Initialize the plugin
2648	Load text domain .
2649	Load the files .
2650	Deactivate plugin .
2651	Returns true if the item is a string .
2652	Prepare properties .
2653	Get the file for a given value .
2654	Get the value of a file .
2655	Update file value
2656	Bind a value to a binding .
2657	Call a closure
2658	Get class prefix
2659	Check if the given id is a singleton .
2660	Create a new instance .
2661	Removes an object from the cache .
2662	Overridden to override the taxonomy .
2663	Add menu items
2664	Generate post types .
2665	Render page view
2666	Autoload a class
2667	Returns a list of all registered widgets .
2668	Get the list of labels .
2669	Parse the given arguments .
2670	Parse post arguments .
2671	Parse term arguments .
2672	Get query parameters
2673	Returns the result of the query .
2674	Add help tabs
2675	Add box box .
2676	Registers the parent box .
2677	Convert properties to array
2678	Get body classes
2679	Get all boxes .
2680	Get a property .
2681	Get the properties of the box .
2682	Merges two boxes .
2683	Setup the meta box
2684	Create a tab .
2685	Load a value from a post .
2686	Prepares an array of links for a given slug .
2687	Update the value of a post .
2688	Check if the taxonomy is allowed .
2689	Display the edit form
2690	Get post type
2691	Prepare meta data
2692	Setup the postfields .
2693	Get format arguments .
2694	Render a file
2695	Get an option
2696	Convert a value to a property
2697	Returns the converted value for the given rule .
2698	Get the value of a field .
2699	Get the value of a rule .
2700	Checks if the given condition is equal to the given value .
2701	Checks if a condition is not equal to the given value .
2702	Checks if the given condition is greater than the given value .
2703	Returns true if the given condition is not in the given rule .
2704	Checks if the given rule is a valid condition .
2705	Get the value between two values .
2706	Checks if the given condition is between two values .
2707	Checks if the given condition is not between two values .
2708	Get sort option
2709	Get sort options .
2710	Get a list of items .
2711	Sort a post .
2712	Update an existing post .
2713	Get meta value .
2714	List all entries
2715	Gets the HTML for the tab .
2716	Get the ID for the given key .
2717	Returns the layout for a given slug .
2718	Loads a value from the database .
2719	Prepare the layout properties .
2720	Render the layout .
2721	Render a row row .
2722	Adds the form fields to the form .
2723	Prepare taxonomy types .
2724	Setup taxonomy fields
2725	Generate AJAX url
2726	Handle AJAX request
2727	Get entry type
2728	Get posts .
2729	Get a property
2730	Get properties .
2731	Returns the rules for the given rule .
2732	Get shortcode .
2733	Get terms .
2734	Display taxonomy .
2735	Rename a term .
2736	Retrieve the post type columns .
2737	Manage custom column types
2738	Manage column sortable columns .
2739	Prepare post posts
2740	Restrict page types
2741	Formats a value .
2742	Returns the labels of the taxonomy .
2743	Get the terms of a taxonomy .
2744	Get the value of a term .
2745	Prepare value .
2746	Search for a given search .
2747	Get historical data
2748	Get quote by symbol
2749	Returns the rate for the given currency .
2750	Returns an array of currencies .
2751	Fetches a list of currencies .
2752	Get the attributes for the header
2753	Renders a cell .
2754	Renders the given content .
2755	Get all images
2756	Set request parameters
2757	Set default values
2758	Returns the value of the given parameter .
2759	Make a group .
2760	Renders the error message .
2761	Renders a group .
2762	Add class to options
2763	Register routes .
2764	Register assets .
2765	Register auth routes .
2766	Add a new process .
2767	Get a list of all processes .
2768	Builds the tree tree .
2769	Optimizes the process .
2770	Count the status of the process .
2771	Count the number of results
2772	Fetches the dependencies of a class .
2773	Returns the dependencies of the given class .
2774	Output the output .
2775	Output error output .
2776	Initializes the browser .
2777	Get the current version .
2778	Get file url
2779	Download file .
2780	Selects a single element .
2781	Save a legacy data
2782	Save data to database
2783	Loads the given type .
2784	Loads the legacy data from the legacy file .
2785	Check if the connection is accessible .
2786	Determine if the server is running .
2787	Get the cloud service
2788	Guess the port .
2789	Detects the cloud service based on the status code .
2790	Build the process .
2791	Get excluded groups .
2792	Take a test and return the screenshot .
2793	Get the path to a snapshot .
2794	Instantiate an event dispatcher .
2795	Get file path .
2796	Quotes an attribute .
2797	Calculate the maximum distance between two nodes .
2798	Cast a string to a string
2799	Check the process timeout .
2800	Resolve the result
2801	Get the list of executors .
2802	Setup the capabilities .
2803	Set custom configuration options .
2804	Retrieve configuration values .
2805	Deletes all processes .
2806	Flush the process output .
2807	Get favorite .
2808	Counts the summary of the report
2809	Update summary table
2810	Move summary table .
2811	Update buttons .
2812	Add a favorite .
2813	Remove Favorite .
2814	toggle favorite .
2815	Determine if the user is favorites .
2816	Get favorites by user .
2817	Returns an array of permissions .
2818	Insert language files .
2819	Create the view files .
2820	Create migration .
2821	Create event listeners .
2822	Generate a file .
2823	Get the stub path .
2824	Check namespace .
2825	Check if a table exists .
2826	Handles a random server .
2827	Set all redis servers .
2828	Add a single server to the server
2829	Add a redis server
2830	Call a redis command .
2831	Sets the current database .
2832	Deletes an array of keys
2833	Set a value in the cache .
2834	Check if a key exists
2835	Get type by key
2836	Expire a given key
2837	Flush all redis
2838	Execute the executor
2839	Returns the size of the database .
2840	Add a command to the list
2841	Dispatch event .
2842	Add a timing event
2843	Replace placeholders in the event .
2844	Merges the given configuration .
2845	Dispatch memory usage
2846	Dispatch request time .
2847	Creates an instance from a console event .
2848	Parse SRID .
2849	Parse the geometry .
2850	Gets the point of this point .
2851	Parse the coordinate .
2852	Returns a list of points .
2853	Parse a list of points
2854	Parse multi polygon
2855	Get the geometry collection .
2856	Match a token .
2857	Creates a syntax error message .
2858	Create response parts .
2859	Get request time
2860	Create the API client .
2861	Send a command
2862	Get redirect url
2863	Check for render options
2864	Render the given path .
2865	Renders an image .
2866	Find page by selector
2867	Finds a page within a given element .
2868	Set attribute value
2869	Send a key event
2870	Select option .
2871	Set debug mode
2872	Set proxy .
2873	Get network traffic .
2874	Get cookies .
2875	Set a cookie
2876	Returns an array of javascript errors
2877	Get the error message .
2878	Compile a node .
2879	Compile route variable .
2880	Creates a new traversable node .
2881	Flush text buffer
2882	Parses a number .
2883	Parses punctuation .
2884	Parses a quoted quoted string .
2885	Lexes a text character .
2886	Parses a variable name .
2887	Add a route .
2888	Get a named route .
2889	Creates a new traversable tree .
2890	Normalizes the given name .
2891	Assert that the token is expected .
2892	Returns the current token .
2893	Get next token .
2894	Checks if the current token is a next token .
2895	Get the next token .
2896	Adds a child node .
2897	Add a child node .
2898	Returns all children of this node .
2899	Adds a child node .
2900	Adds a variable to the collection .
2901	Build all routes .
2902	Add a new route group .
2903	Creates a route builder .
2904	Apply group attributes .
2905	Apply group constraints .
2906	Apply group middleware .
2907	Applies the group templates to the route .
2908	Registers the rules .
2909	Get match candidates .
2910	Build route .
2911	Adds a route to the route .
2912	Set attribute value
2913	Add multiple attributes .
2914	Add multiple constraints .
2915	Add middleware to the middleware .
2916	Add middleware to the middleware .
2917	Parse the punctuation .
2918	Parse text .
2919	Parse tokens .
2920	Parse a variable .
2921	Parse a variable rule .
2922	Checks if the route matches the given segment .
2923	Group routes .
2924	Add a route .
2925	Dispatch route .
2926	Compare request method
2927	Checks if the request is a valid route .
2928	Compare request uri
2929	Run a route .
2930	Orders the method parameters .
2931	Replace regular expression .
2932	Parse a regular expression .
2933	Map a route to a route .
2934	Define a route .
2935	Get the URL of a route .
2936	Prepare the request .
2937	Get the request URI .
2938	Validate API response
2939	Validate API response
2940	Validate API response
2941	Get a provider by name .
2942	Handle the request .
2943	Returns the details of the request .
2944	Format a details object .
2945	Get information about an IP address
2946	Add a value to the cache
2947	Removes the elements from the queue .
2948	Make a POST request
2949	Render an HTML error .
2950	Group routes .
2951	Parse a path .
2952	Check if a variable is a valid route .
2953	Removes a variable from the route cache
2954	Sets the map for a route .
2955	Get redirect url
2956	Check the middleware for the request .
2957	Runs the given request .
2958	Initialize database connection
2959	Validate headers
2960	Get a header value
2961	Insert last row
2962	Gets the DI container parameters .
2963	Sets a singleton instance .
2964	Get a singleton instance
2965	Register an abstract class
2966	Get an instance of a class
2967	Get a singleton instance .
2968	Runs a method
2969	Run the request .
2970	Initialize the database .
2971	Add a pipe
2972	Initialize the redis server .
2973	Subscribe messages .
2974	Subscribe to a channel .
2975	Reset the query
2976	Wrapper for preparing SQL query
2977	Execute the query
2978	Bind parameters to PDO
2979	Wrapper for a table
2980	Wraps a row into a string
2981	Creates a condition .
2982	Store the build attribute .
2983	Replace the build attributes .
2984	Build a sub - query builder .
2985	Sets the select column
2986	Set where clause
2987	Add OR WHERE condition
2988	Adds a where clause to the query .
2989	Adds a WHERE clause to the query .
2990	Add a WHERE clause
2991	Add a where clause
2992	Add where condition
2993	Add a where clause
2994	Add a GROUP BY clause
2995	Set the condition .
2996	Creates OR condition .
2997	Sets the ORDER BY clause
2998	Add a join to the query
2999	Add a subquery to the query builder .
3000	Perform the pagination .
3001	Returns an array of all rows
3002	Returns the first row of the result set
3003	Returns a list of all columns
3004	Executes a SQL query .
3005	Prepares a SQL statement .
3006	Begin transaction transaction .
3007	Handle an exception
3008	Generate random identifier
3009	Generate a random ID .
3010	Generate random random string
3011	Normalize a DSN .
3012	Creates a SQL query
3013	Executes the given expression .
3014	Begin transaction .
3015	Commits the transaction .
3016	Rollback a transaction
3017	Get last insert ID
3018	Resets a tag .
3019	Consume the given SQL code .
3020	Escapes the given value .
3021	Render the template
3022	Get debug query string
3023	Returns an array of rows .
3024	Get one row from the result set
3025	Returns the first row of the result set .
3026	Set table name
3027	Add a where condition .
3028	Render a condition .
3029	Add a group
3030	Set the value of a field .
3031	Adds an option to the list .
3032	Set order .
3033	Set template mode
3034	Returns a LIMIT clause .
3035	Parse a string
3036	Fetches the value of a string .
3037	Create a message .
3038	Check if a string starts with a given line .
3039	Fetches the variables of a variable .
3040	Check if a variable is a parameter .
3041	Fetch a parameter from a variable name .
3042	Fetches the parameters for a parameter .
3043	Splits the default parameter .
3044	Parse a variable .
3045	Assign a default value to a variable .
3046	Check if a variable exists
3047	Returns the value of a variable .
3048	Parse a key .
3049	Parse raw content
3050	Parse raw content .
3051	Parses a raw line
3052	Parse the export line .
3053	Parse the key value .
3054	Returns the content of the file .
3055	Start a task
3056	Start a workflow
3057	Find a workflow
3058	Get the timestamp of the buffer .
3059	Get class properties .
3060	Configure the sitemap .
3061	Fix sitemap configuration .
3062	Adds a source to the collection .
3063	Adds a block .
3064	Returns the root menu .
3065	Get font fonts
3066	Get icons .
3067	Get font fonts
3068	Encrypts a password
3069	Upgrade the given password with the given key .
3070	Executes the given parameters .
3071	Write the SMTP credentials .
3072	Parse config array
3073	Determine if the given URI is filtered .
3074	Register commands .
3075	Find all templates .
3076	Find the templates in the bundle .
3077	Execute a command .
3078	Returns a substring with the given string .
3079	Sanitize a string .
3080	Replaces the first occurrence of the string .
3081	Replaces the string with the given string .
3082	Creates an instance of the given string .
3083	Get a segment from the string .
3084	Returns true if the string contains a given needle .
3085	Encrypts the parameters
3086	Decrypt the response
3087	Encrypt a plain text
3088	Decrypts a string
3089	Encrypts the payment .
3090	Decrypt a response
3091	Encrypts the message
3092	Generates a range .
3093	Add a modifier
3094	Adds a range to the page .
3095	Adds a raw source to the collection .
3096	Add a file source
3097	Add files to the collection .
3098	Unserialize an object from a JSON string .
3099	Set optional constructor arguments
3100	Assert that a value is invalid .
3101	Validate the given property .
3102	Unserialize a JSON string .
3103	Get config path .
3104	Get the application namespace .
3105	Load service providers .
3106	Create a master node
3107	Returns the balance of this asset .
3108	Gets the balance of this asset .
3109	Get custom balance value
3110	Get custom asset balance
3111	Get custom balance balance
3112	Calculate the entropy of the given entropy .
3113	Converts a bit string into a hex string .
3114	Returns the entropy of a given mime .
3115	Authorize a trust operation .
3116	Revoke a trust operation .
3117	Convert this object to XML .
3118	Convert a value to a string .
3119	Convert an optional value to a string .
3120	Get unique bucket hashes .
3121	Checks if a given account is enabled .
3122	Set the authentication flag
3123	Set whether or not the current state should be used .
3124	Get the public key .
3125	Convert a string to an opaque string .
3126	Parse raw data
3127	Signs the signature of the request .
3128	Submit a transaction .
3129	Create patches from a patch .
3130	Convert patches to text .
3131	Add text to the current context
3132	Creates a copy of patches .
3133	Gets the bit score of the given pattern .
3134	Converts a string to an array .
3135	Returns a string representation of the changes .
3136	Convert the changes to a string .
3137	Creates a diff from the given text .
3138	Returns the difference between two strings .
3139	Compute the diff between two lines .
3140	Changes line mode
3141	Returns the difference between two strings .
3142	Returns the common prefix between two strings .
3143	Calculates the difference between two strings .
3144	Checks if the given text matches the given text .
3145	Returns the first match of the given text .
3146	Determine if the given string matches the given length .
3147	Convert strings to strings .
3148	Get recipient recipients .
3149	Get the version of the application .
3150	Register a plugin .
3151	Get the config .
3152	Constructs the repository .
3153	Gets the Pug attribute .
3154	Get the cache path .
3155	Get a single option
3156	Check if a file is expired .
3157	Extract the path from the file .
3158	Get the client instance .
3159	Get Bb family family
3160	Prints a hash
3161	Resolve a file .
3162	Display a file .
3163	Extract extensions from an array
3164	Removes an option .
3165	Reset all options
3166	Get renderer instance .
3167	Add a new filter
3168	Add a keyword .
3169	Generate the cache directory .
3170	Runs the application .
3171	Get all available methods .
3172	List available methods
3173	Returns an array of errors .
3174	Returns a list of all items in the list .
3175	Mark a list of duplicates .
3176	Find duplicate duplicates .
3177	Remove empty attributes .
3178	Process a record
3179	Handle a request .
3180	Get elapsed time
3181	Read the response from the server
3182	Convert arguments to string
3183	Validate arguments .
3184	Throws an exception if necessary .
3185	Register a callbacks
3186	Unregister a callback
3187	Get the redis path
3188	Get a specific connection by name
3189	Get a connection by name .
3190	Get channels by connection
3191	Returns the value of the specified parameter .
3192	Set a config value
3193	Throw an exception if necessary .
3194	Create a queue
3195	Delete a queue
3196	Count the number of queues .
3197	Sends a message to the queue .
3198	Receive messages .
3199	Delete a message
3200	Get total elapsed time
3201	Sets a value in the cache .
3202	Sets a value at the given offset .
3203	Increment the value of a given field
3204	Remove a field from the cache
3205	Write data to the cache
3206	Subscribe to a channel .
3207	Publish a message
3208	Adds a message to the queue .
3209	Throws an exception if it is not available .
3210	Called when an error is handled .
3211	Add a new queue
3212	Remove a queue from the queue .
3213	Get queue cache .
3214	Watch watcher .
3215	Uninstalls watcher .
3216	Add a command
3217	Creates a new post .
3218	List posts .
3219	Factory method to create a new Key instance .
3220	Add a score
3221	Gets the length of a score
3222	Returns a list of results by score .
3223	Remove a score by score
3224	Increments the score of a score .
3225	Gets the sorted results by the ranking
3226	Removes a set by rank
3227	Returns the rank of the given value .
3228	Returns a union with the given values .
3229	Computes the intersection of a set of sets .
3230	Returns an array of results as an array .
3231	Creates a new record from an array
3232	Set the name of the worker
3233	Get a connection by name .
3234	Get all connections .
3235	Set the connection
3236	Subscribe to a channel
3237	Get a configuration instance .
3238	Set the key distributor
3239	Get the serializer .
3240	Get a single command
3241	Check if a command name exists .
3242	Execute all commands
3243	Add a command
3244	Write the command to the database .
3245	Set response callback
3246	Transforms a multi - command into a multi - dimensional array .
3247	Append a value
3248	Append a value to the list
3249	Truncate a list
3250	Set a value in the cache
3251	Inserts a record in the list
3252	Inserts a record in the list
3253	Insert a record at the given position
3254	Removes a value from the list
3255	Removes a redis from the list
3256	Removes a value from the pool .
3257	Remove a key from the stack
3258	Removes a value from the pool .
3259	Create a new instance from an array
3260	Loads a transaction
3261	Save data to the database
3262	Removes a record from the database
3263	Removes all items from the cache .
3264	Sets the list of directives .
3265	Returns a list of ids that match the given tags .
3266	Get meta data
3267	Collect all tags in the collection .
3268	Add a value to the set
3269	Removes a value from the cache
3270	Moves a value to the specified key .
3271	Combines a set of RedisSet objects .
3272	Returns a union with the given values .
3273	Returns the difference between two sets .
3274	Get the redis instance
3275	Sets the value of a value
3276	Set the value of a redis .
3277	Set a bit value
3278	Retrieves a value from an object
3279	List followers .
3280	Displays the following user .
3281	Displays a follow page .
3282	Moves a record to the database .
3283	Set the expiration time .
3284	Get the redis on the server
3285	Set the stream mode
3286	Add a redis instance
3287	Get all available instances .
3288	Create a Redis instance from an array
3289	Increment the value of an object .
3290	Reset a key
3291	Returns the bucket name .
3292	Sets the multi - part of the transaction .
3293	Sets the number of parts of the transaction .
3294	Create a socket connection
3295	Get read buffer buffer
3296	Read data from the server
3297	Read a line from the socket .
3298	Set the read timeout .
3299	Get stream context context
3300	Read data from socket
3301	Validate the request .
3302	Bind a queue to the queue .
3303	Add a message to the queue .
3304	Notify a message .
3305	Get message properties
3306	Starts the daemon .
3307	Stop the daemon .
3308	Creates a new exception .
3309	Build a queue handler .
3310	Handle sync message .
3311	Get the driver instance .
3312	Notify a message .
3313	Closes the connection .
3314	Consume a message .
3315	Replace model .
3316	Returns the fully qualified class name .
3317	Processes the given data
3318	Create a new model .
3319	Convert data to json
3320	Edit a model .
3321	Removes a model from the database .
3322	Determine if the given attribute is vote .
3323	Render a document .
3324	Returns the string representation of the string .
3325	Gets the total percentage of a game .
3326	Close the socket .
3327	Read a packet from the socket .
3328	Sends a steam packet .
3329	Get the reply from the server .
3330	Executes a command
3331	Gets the challenge challenge
3332	Send a CRON request
3333	Connect to the socket
3334	Get server servers
3335	Fetch all items from the data
3336	Converts a community ID to a community ID .
3337	Convert a steam ID to a community ID .
3338	Resolve vanity url .
3339	Fetch friends .
3340	Fetches all available games .
3341	Fetches the user groups .
3342	Gets the steam ID for the current user .
3343	Get the last play time .
3344	Get the total time of the application .
3345	Fetches the user s profile data .
3346	Rotate IP address
3347	Initializes the socket
3348	Authenticate the user authentication
3349	Connect to the socket .
3350	Create a new instance of the object
3351	Get cached instance .
3352	Checks if the given cache id exists .
3353	Create cache instance .
3354	Get cache IDs .
3355	Initializes the socket .
3356	Checks if the user is authenticated .
3357	Close the socket .
3358	Read data from socket
3359	Selects the connection
3360	Send data to socket
3361	Get all news for a given app .
3362	Returns an array of all classes that are equipped with this class .
3363	Get member count
3364	Returns the members of this collection .
3365	Fetches the members of a page
3366	Fetch all members from the collection .
3367	Get the item schema .
3368	Fetch all items from the game
3369	Returns a list of all available bots .
3370	Gets a list of all available tickets
3371	Set API key
3372	Perform a GET request .
3373	Sends a steam packet .
3374	Get the players hash
3375	Handle the response for the request .
3376	Update the ping .
3377	Update the players .
3378	Add player information
3379	Get the leader of a game .
3380	Get the leaderboards
3381	Load leaderboards .
3382	Get the game entry for a given steam ID .
3383	Get a list of entries for a given range .
3384	Loads the data from the request .
3385	Loads data from a steam id
3386	Parses the GamesEntry object into an array .
3387	Creates a new game object .
3388	Determine if the current user is a valid version of the current app .
3389	Get player count
3390	Get the game statistics .
3391	Show the workorder .
3392	Store an event .
3393	Show an event .
3394	Update an event .
3395	Delete an event .
3396	Show a workorder .
3397	Edit a workorder
3398	Update a workorder .
3399	Get the item from the order
3400	Adds a new part to the order .
3401	Gets a PUT request
3402	Stores a new part in the storage .
3403	Show a work request .
3404	Edit a WorkRequest
3405	Update a WorkRequest
3406	Deletes a task .
3407	Scope query scope .
3408	Store event .
3409	Create a new workorder .
3410	Store an attachment .
3411	Show an attachment .
3412	Edit an attachment .
3413	Update an attachment .
3414	Destroy an attachment .
3415	Creates a form to edit a report .
3416	Get icon attribute .
3417	Show stock movement .
3418	Show the movement .
3419	Rollback a migration
3420	Get the revision attribute .
3421	Get the priority attribute .
3422	Close all sessions .
3423	Check if user is logged in .
3424	Returns the label for the start date .
3425	Get the label for the report .
3426	Updates the status of the given status .
3427	Generate a table .
3428	Displays a form to create a form .
3429	Show the list of priorities .
3430	Store a new priority .
3431	Edit a priority .
3432	Update a priority .
3433	Scope query scope .
3434	Scope the query to scope .
3435	Get stock attribute
3436	Get the revision attribute .
3437	Get operator operator .
3438	Applies the query to the query .
3439	Returns the full path to the file .
3440	Show the status .
3441	Store status .
3442	Edit a status .
3443	Update status .
3444	Create a new variant .
3445	Store a variant .
3446	Create a new workorder .
3447	Store a report .
3448	Generate a table .
3449	Get the table for the assignment .
3450	Get the list of sessions .
3451	Displays a form to create a form .
3452	Formats a comment .
3453	Handle uploaded file .
3454	Generate table .
3455	Creates a form .
3456	Generate a table .
3457	Display the inventory table .
3458	Creates a form .
3459	Renders the inventory bar .
3460	Store an attachment .
3461	Update an attachment .
3462	Generate a table column .
3463	Show table history .
3464	Store an image .
3465	Show an image .
3466	Update an asset .
3467	Display the metrics .
3468	Store a metric .
3469	Edit a metric .
3470	Show assets .
3471	Store asset .
3472	Edit asset .
3473	Update asset .
3474	Scope a query .
3475	Return the response .
3476	Get input from input
3477	Get select hierarchy
3478	Get rendered node .
3479	Boot the composers .
3480	Delete attachment .
3481	Show the inventory .
3482	Create a new stock .
3483	Store an item .
3484	Show stock movements .
3485	Edit an existing stock .
3486	Update a stock .
3487	Destroy an item .
3488	Show an asset .
3489	Create an asset .
3490	Store a new meter .
3491	Show the meter .
3492	Edit a meter .
3493	Update a meter .
3494	Delete a meter .
3495	Store a workorder .
3496	Update a workorder
3497	Format the start date .
3498	Format the completed date .
3499	Display the workorder .
3500	Formats a comment .
3501	Get hour hours .
3502	Formats the start date .
3503	Formats the end date .
3504	Format the end time .
3505	Returns the frequency for the given event .
3506	Retrieves the frequency of the event .
3507	Retrieves the number of days for a given event .
3508	Show tags .
3509	Store a warehouse .
3510	Update the stock stock .
3511	Destroy an item .
3512	Generate a table .
3513	Add a form to the form .
3514	Authenticate the user .
3515	Handle the logged in user .
3516	Handle the LDAP user .
3517	Deletes the given stock .
3518	Restore the stock .
3519	Create a new order table .
3520	Creates a form for the given priority .
3521	Generate the table .
3522	Displays a form to create a form .
3523	Creates a form for creating a new stock order .
3524	Destroy an item .
3525	Create a flash message .
3526	Create a new Workorder .
3527	Store a workorder .
3528	Show event .
3529	Store an event .
3530	Show event .
3531	Update an event .
3532	Destroy an event .
3533	Scope the query to scope .
3534	Formats the form .
3535	Store an asset .
3536	Show the specified manual .
3537	Update an asset .
3538	Store an asset .
3539	Remove a task from the asset .
3540	Store a Workflow request .
3541	Delete a task .
3542	Show a list of stock orders .
3543	Displays a form to show a form .
3544	Creates a new order .
3545	Displays a form to edit a product .
3546	Adds a part to the request .
3547	Display all work requests .
3548	Edit a Workflow
3549	Update a work request .
3550	Create a new category .
3551	Store a new category .
3552	Display a category .
3553	Update the category .
3554	Deletes a record .
3555	Generate the table .
3556	Generate a table for a workbook .
3557	Deletes all stocks .
3558	Restore all stocks .
3559	Display the inventory .
3560	Store a new Inventory .
3561	Show inventory .
3562	Edit an item .
3563	Generate the table .
3564	Generate the table movement .
3565	Creates a form for the given inventory .
3566	Renders the nav bar .
3567	Generate a table .
3568	Generate the inventory table .
3569	Renders the sidebar .
3570	Display a workorder .
3571	Start a workorder
3572	End a work order
3573	Get change attribute
3574	Store a note .
3575	Show a note .
3576	Update a note .
3577	Delete a note .
3578	Get last movement attribute
3579	Retrieves the last item by its name .
3580	Get the quantity attribute .
3581	Displays a form to edit a stock item .
3582	Displays a form to be placed in the order .
3583	End a workorder
3584	Create a new Workflow .
3585	Create a new Workflow .
3586	Store a workorder
3587	Destroy a task .
3588	Render a datatable list
3589	Generates a placeholder .
3590	Get the appended method .
3591	Render a component .
3592	Get component data
3593	Register blade directives .
3594	Open a model .
3595	Format a label .
3596	Renders a reset field .
3597	Creates a submit button .
3598	Get request input
3599	Generates a link .
3600	Link a route .
3601	Render a list element
3602	Convert attributes to HTML
3603	Register the HTML builder .
3604	Register form builder .
3605	Generates a search input .
3606	Generates a datetime input .
3607	Generates a file .
3608	Remove XML from XML .
3609	Loads the dictionary
3610	Parse a locale file
3611	Get all patterns for a given word .
3612	Normalizes a locale .
3613	Tokenize a string
3614	Run the given input .
3615	Set options .
3616	Add a dictionary
3617	Returns the pattern patterns for a given word .
3618	Set filters .
3619	Add a filter .
3620	Set the tokenizer .
3621	Add a tokenizer .
3622	Creates an option from a file .
3623	Get the text .
3624	Get the pattern .
3625	Set options .
3626	Get options .
3627	Add a dictionary
3628	Add a filter .
3629	Add a tokenizer .
3630	Get the list of tokens .
3631	Get dictionaries .
3632	Get filters .
3633	Returns a hyphenated string .
3634	Returns the hyphenation pattern for the given token .
3635	Returns the pattern for the given token .
3636	Set default home path
3637	Get default home path
3638	Set home path
3639	Create a hyphenator instance .
3640	Autoload autoloader .
3641	Replaces the tokens with the given token .
3642	Get token by key
3643	Get merged pattern
3644	Get a filter by key
3645	Filter the tokens .
3646	Fetch an access token
3647	Migrate orders .
3648	Migrate order .
3649	Migrate shipping values
3650	Migrate order .
3651	Gets the pagination of the product .
3652	Creates default page records .
3653	Make a payment .
3654	Get gateway data
3655	Creates a new payment .
3656	Complete payment .
3657	Check if the order is allowed .
3658	Get the name of the country .
3659	Set payment method
3660	Get selected payment method
3661	Send confirmation email
3662	Send admin notification .
3663	Send cancel notification .
3664	Builds the URL for the given action .
3665	Redirect to cart
3666	Display cart .
3667	Displays debug page
3668	Get the filter .
3669	Saves a form to the user
3670	Process the checkout form
3671	Gets a specific modifier .
3672	Get the unit price
3673	Calculates the total amount of the product .
3674	Get unique data .
3675	Calculate the value of the order
3676	Get Product Variant
3677	Returns the string representation of the address .
3678	Get address .
3679	Get cart form
3680	Returns the amount of weight .
3681	Returns the weight of the product .
3682	Get sum of items
3683	Subtracts the total number of items
3684	Saves the product attributes
3685	Get viewer .
3686	Get the current product .
3687	Updates the settings fields .
3688	Get variation by attribute
3689	Generate variations from attributes .
3690	Deletes the draft .
3691	Get component by type
3692	Get form fields .
3693	Validates order data
3694	Get the order data
3695	Sets the order data .
3696	Get dependency data .
3697	Get current cart
3698	Set current cart
3699	Get the current order
3700	Adds an item to the cart .
3701	Remove item from basket
3702	Removes an order item .
3703	Set the quantity of the item .
3704	Update a quantity item
3705	Find a Buyable item .
3706	Returns the item matching the given criteria .
3707	Archive order id
3708	Returns the value of the incoming request .
3709	Display a price field
3710	Get image by filename
3711	Set the content of a record
3712	Returns an array of country codes
3713	Get single country
3714	Convert a country code to a country name .
3715	Get shop cart
3716	Convert values to array
3717	Get the dropdown field
3718	Returns a list of available products .
3719	Returns all children of this category .
3720	Returns the children of this product .
3721	Get group menu
3722	Get nested title
3723	Displays the edit form
3724	Displays the order page
3725	Get next step .
3726	Get order list
3727	Get the edit form
3728	Returns a subset of the given fields .
3729	Modify the amount .
3730	Setup steps .
3731	Called when the action is loaded .
3732	Determine if the current step is current .
3733	Returns the position of the action .
3734	Finds the link to the page
3735	Get all products .
3736	Trim the value of the currency .
3737	Gets the list of CMS fields .
3738	Get category options
3739	Get category options
3740	Get category IDs
3741	Returns the price of the order .
3742	Get the current image .
3743	Submit a payment
3744	Handles a payment
3745	Cancel an order
3746	Returns the card fields for the given gateway .
3747	Add session id to session
3748	Returns an array of session IDs .
3749	Get order by id
3750	Get the actions form .
3751	Creates a new member .
3752	Get member by identifier
3753	After the customer is logged in .
3754	Get the previous order of the current order .
3755	Returns the link for the item_id field .
3756	Get the list of existing address fields .
3757	Returns a list of field fields .
3758	Get default search context .
3759	Returns the components of the given component .
3760	Calculate order total
3761	Returns the modifier for the given class .
3762	Calculate the total amount of payments .
3763	Get the link to the order
3764	Checks if the payment is valid
3765	Checks if a member can delete a member .
3766	Determine if the member can view the given member .
3767	Get the name of the person .
3768	Get billing address
3769	Generates the reference for this object .
3770	Called when the cart is saved .
3771	Deletes the items from the cart .
3772	Returns an array of entity entities .
3773	Render the field .
3774	Displays the editable items
3775	Returns the link to the page .
3776	Returns the URL for the given order ID .
3777	List all packages .
3778	List packages .
3779	Display the package path .
3780	Update packages .
3781	Uninstall a package .
3782	Get Composer instance .
3783	Get the list of community packages .
3784	Get the package index .
3785	Show the list of packages .
3786	Get a package by name .
3787	Get installed packages .
3788	Get package by name .
3789	Get the package name .
3790	Get composer json file path .
3791	Create composer json file .
3792	Get git version .
3793	Guess the version constraint .
3794	Get the path of the composer file .
3795	Sets the object .
3796	Load custom config
3797	Delete all jobs
3798	Process queued jobs
3799	Queue a job
3800	Copy the job to the queue .
3801	Get next job .
3802	Check job status
3803	Check default jobs
3804	Restart a stalled job .
3805	Initializes the job .
3806	Determine if the current time limit is allowed .
3807	Determine if the current memory size exceeds the memory limit .
3808	Parses a memory string
3809	Returns a query filter for a job .
3810	Run a job .
3811	Process a job queue
3812	Queue task .
3813	Logs the job status .
3814	List jobs .
3815	Refresh the job descriptor .
3816	Run the job .
3817	Pause the job .
3818	Resume the job .
3819	Activate the job .
3820	Get the job directory .
3821	Deletes a job
3822	Get the message s messages .
3823	Get last job message
3824	Get job type
3825	Get the type values for the queue .
3826	Setup the sitemap .
3827	Prepares the sitemap .
3828	Creates a new sitemap .
3829	Run a job queue .
3830	Handle an action .
3831	Get title .
3832	Initializes the tree .
3833	Process the page children .
3834	Get queue queue
3835	Cast model to model .
3836	Lists all templates .
3837	Save source map
3838	Write data to memory
3839	Read data from memory
3840	Displays a list of widgets .
3841	Displays a list of widgets .
3842	Add a widget .
3843	Updates a widget .
3844	Move a widget .
3845	Deactivates a widget .
3846	Deletes a widget .
3847	Reset the theme .
3848	Validates a sidebar .
3849	Validates a widget .
3850	Get widget data
3851	Move the sidebar to the widget .
3852	Get widget object
3853	Sanitize widget options .
3854	Get random integer .
3855	Generate a random string
3856	Encodes a string .
3857	Decode a string
3858	Add a generator path to the generator .
3859	Remove generator path .
3860	Get generator .
3861	Load generators .
3862	Show form row .
3863	Returns the content of this element .
3864	Open a form
3865	Adds a prefix to the element .
3866	Returns a new element with the given suffix .
3867	Builds the addon list .
3868	Set the size of the image .
3869	Removes a message from the stack .
3870	Calls the client to the client .
3871	Get all nodes of a given path .
3872	Returns the properties of the given path .
3873	Evaluate a template
3874	Writes a key to the cache .
3875	Get the webdriver .
3876	Get the aperture
3877	Get author .
3878	Returns the header value .
3879	Get credit credit card
3880	Get the source data
3881	Get job title
3882	Returns the ISO 8601 representation .
3883	Get focus distance
3884	Returns the width of the image
3885	Returns the height of the image .
3886	Get title .
3887	Get the caption .
3888	Get copyright .
3889	Returns the keys of the user .
3890	Get the camera .
3891	Get the horizontal resolver .
3892	Get Vertical Resolution
3893	Get the current software
3894	Returns the value of the current frame .
3895	Get the creation date .
3896	Get color space
3897	Get the mime type
3898	Get file size
3899	Get orientation .
3900	Returns the GPS point value .
3901	Extracts the GPS coordinate from the given components .
3902	Set tool path
3903	Get tool path
3904	Get CLI output .
3905	Hydrate an object .
3906	Extracts the coordinates from the given coordinates .
3907	Get the mapper instance .
3908	Get the hydrator instance .
3909	Set options .
3910	Add required section
3911	Returns an array of image data
3912	Create a new adapter instance .
3913	Generate prefix .
3914	Normalizes the configuration .
3915	Translates a list of translations .
3916	Creates a new job .
3917	Processes the job .
3918	Collect changes .
3919	Flush the cache .
3920	Garbage collected extensions .
3921	Filter extensions by module name
3922	Returns all module blocks .
3923	Get module settings
3924	Determine if the module is supported .
3925	Check if PHP file exists
3926	Checks if module version is available
3927	Determine if the extension is extended .
3928	Check template blocks
3929	Check module settings
3930	Checks if module templates are valid .
3931	Check module controllers
3932	Check module files
3933	Checks if the module events are enabled .
3934	Parse module IDs .
3935	Parse shop config
3936	Returns an array of available module IDs .
3937	Returns true if the current user is enabled
3938	Returns module object
3939	Get module cache
3940	Returns module installer instance .
3941	Fix the module
3942	Clean up extensions .
3943	Adds the template files to the template .
3944	Add module files
3945	Add module events
3946	Add module extensions
3947	Adds a module version .
3948	Computes difference between two arrays .
3949	Add module settings
3950	Update module controllers .
3951	Adds extensions to the module
3952	Returns the list of installed modules
3953	Render template .
3954	Block content block
3955	Creates a HttpHttp instance .
3956	Get the available transport driver
3957	Get all HTTP transports
3958	Set cURL options
3959	Get the response object from the response .
3960	Determine if the current request is allowed .
3961	Make OPTIONS request
3962	Get HEAD request .
3963	Triggers a request .
3964	Make a PATCH request .
3965	Check if the given path matches the given glob expression .
3966	Get extra parameter value by key .
3967	Get combined filters .
3968	Activate the package .
3969	Returns true if the given path matches the given glob expression .
3970	Check if the given path matches the given glob .
3971	Get shop source path
3972	Create a new installer instance .
3973	Install package .
3974	Update the package .
3975	Copies the source source to the target directory .
3976	Copies the configuration file to the target directory .
3977	Copies the configuration files to the given package .
3978	Determine if the config file is not configured .
3979	Copies the files from the given source to the source directory .
3980	Get filtered files .
3981	Returns the absolute path to an absolute path .
3982	Update a package .
3983	Copies the given package .
3984	Formats the source path .
3985	Parses a structure structure into a nested array .
3986	Creates a flat list of files .
3987	Copy directory recursively
3988	Copies a file to another directory .
3989	Generate models .
3990	Traverses the given array of classes .
3991	Convert JSON to LDAP .
3992	Add breadcrumb list
3993	Renders the model .
3994	Sets the HTML of the template .
3995	Generates the stylesheet
3996	Resolve path .
3997	Checks if the given array is expected .
3998	Determine if the given array exists .
3999	Asserts that the status code matches the given status code .
4000	Assert that the given content type is valid .
4001	Asserts that the given status code is valid .
4002	Assert that a JSON API response is valid .
4003	Asserts that the given document has a given status .
4004	Asserts that the given response is a valid JSON .
4005	Asserts that the given array contains multiple documents .
4006	Asserts that the given document has been fetched .
4007	Asserts that the given document has been fetched .
4008	Asserts that the client is created .
4009	Assert that the given content is not empty .
4010	Asserts that the given content is not empty .
4011	Asserts that the given status code is an error .
4012	Asserts that the given status code is valid .
4013	Asserts that an error is valid .
4014	Get the document .
4015	Assert that the given type is present .
4016	Assert that the response matches the given value .
4017	Assert that the content is updated .
4018	Assert that the content is deleted .
4019	Asserts that the resource is included .
4020	Asserts that the document contains the given hash .
4021	Asserts that the document is met .
4022	Asserts that the document is met .
4023	Asserts that the given array matches the given values .
4024	Assert that the response is an error .
4025	Asserts that a resource is valid .
4026	Asserts that the given identifier is valid .
4027	Asserts that the given document contains a given document .
4028	Asserts that the given document is not empty .
4029	Asserts that an array contains the given values .
4030	Asserts that an array contains the given values .
4031	Asserts that an array contains the given values .
4032	Asserts that an array contains the given values .
4033	Asserts that the given list contains identifiers .
4034	Asserts that an array of identifiers are valid .
4035	Asserts that a resource contains a resource .
4036	Asserts that the given document contains the given hash .
4037	Asserts that an array contains the given values .
4038	Asserts that the document contains the given hash .
4039	Asserts that the given array contains an error .
4040	Asserts that an error has an error .
4041	Asserts that an error occurred .
4042	Create a new instance from a string .
4043	Convert a document to an array .
4044	Creates a new instance from a JSON string .
4045	Decode JSON string .
4046	Get a value from the document .
4047	Check if the document has a given pointer .
4048	Asserts that the given pointer exists .
4049	Assert that the given pointer exists in the collection .
4050	Checks if the given value is equal .
4051	Returns a subset of the given array .
4052	Checks if the value is a resource identifier .
4053	Sort an array .
4054	Determines whether the given value is identifiable .
4055	Execute the request .
4056	Send a message to the user .
4057	Respond to a user .
4058	Set allowed types
4059	Write messages to the buffer .
4060	Write debug message
4061	Add a message
4062	Get message count
4063	Get an array of variables from a single line .
4064	Get a list of variables from the file .
4065	Validates a docblock .
4066	Get all the values of the collection .
4067	Aggregate the iterator .
4068	Merges two arrays .
4069	Convert the iterator to an array .
4070	Get the keys of the collection .
4071	Returns a ZipIterator instance .
4072	Get the values of the iterator .
4073	Reduce the iterator
4074	Convert an array of keys to an array .
4075	Group by strategy .
4076	Reduce the given iterable .
4077	Reduce a reduction .
4078	Dumps the composer .
4079	Get the value of an extra key
4080	Escapes a predicate prefix .
4081	Parses a URI string into an array .
4082	Get the term context for a field .
4083	Persists the cache .
4084	Get the content of a entity .
4085	Normalize field items .
4086	Deletes the given id .
4087	Creates a translation instance .
4088	Get the URL for the entity .
4089	Returns the types of the given type .
4090	Build backend backend
4091	Fetch data from cache
4092	Run a function callable .
4093	Print an error message
4094	Ask a question .
4095	Execute a row
4096	Create a new record
4097	Override a set of overrides .
4098	Insert a record into the database
4099	Extract primary key .
4100	Set the current user .
4101	Copies all stub files .
4102	Configure variables .
4103	Serializes additional data .
4104	Determine if the given data type is watchable .
4105	Loads the event type .
4106	Runs the seeds .
4107	Prepares a database seed .
4108	Find an attribute by its attribute id
4109	Find attribute by attribute id
4110	Find attribute by attribute id
4111	Find attribute by attribute id
4112	Creates the database seeds .
4113	Create a new seed file .
4114	Initialize attribute .
4115	Setup transaction transaction .
4116	Load a catalog attribute
4117	Set node path
4118	Add parameters to request
4119	Send the request .
4120	Execute the menu
4121	Inject parameters from request
4122	Find attribute by attribute code
4123	Deletes the serialization .
4124	Preload attribute id
4125	Publish a record .
4126	Assert that the response contains the given content .
4127	Get the JSON response .
4128	Asserts that the response is a JSON structure .
4129	Run Drupal bootstrap .
4130	Get Drupal root directory .
4131	Get the environment file path .
4132	Read environment file .
4133	Publish all bundles .
4134	Load database seeds .
4135	Get entity type
4136	Get entity type id
4137	Make a HTTP request
4138	Prepare the URI .
4139	Accepts the given payload and returns the response .
4140	End a transaction
4141	Set application name .
4142	Set user attributes
4143	Start a transaction
4144	Convert a URL to a URL .
4145	Prepare constructor arguments .
4146	Append exception to exception .
4147	Wrap a column exception .
4148	Parse a file
4149	Load an attribute group
4150	Returns an array of all available attribute groups .
4151	Find attribute by entity type
4152	Creates the lexer configuration .
4153	Find an attribute by its ID
4154	Create a file resolver .
4155	Find all core configs
4156	Get system logger
4157	Create a plugin instance .
4158	Merges the entity with the given attributes .
4159	Create a number converter .
4160	Cast value to backend type
4161	Get entity type .
4162	Get the attributes of the entity .
4163	Gets an array of user attributes .
4164	Returns an attribute by its attribute code .
4165	Returns a list of all available categories .
4166	Get all categories for a given store view .
4167	Get a header by name .
4168	Adds a header .
4169	Maps the attribute code to an attribute .
4170	Removes the subject from the registry .
4171	Register an observer .
4172	Register a callback .
4173	Get callbacks by type
4174	Imports a row from a row .
4175	Prepare store view code
4176	Returns the store id for the given view .
4177	Get root category
4178	Resolve the original column name .
4179	Get original data
4180	Checks if the current row contains the original data .
4181	Wrapper to wrap the exception .
4182	Append the exception to the exception .
4183	Returns a new file name .
4184	Upload a file
4185	Delete a file
4186	Find all entity types
4187	Find entity type by entity type
4188	Serializes the given array .
4189	Unserialize a string
4190	Returns the target directory .
4191	Create export config
4192	Initializes the configuration .
4193	Unserialize an attribute .
4194	Serializes an array of attributes .
4195	Get prepared statement .
4196	Initializes the prepared statement .
4197	Parse additional attributes .
4198	Generate the path .
4199	Resolve reference .
4200	Add a value to the cache .
4201	Get a value from the cache .
4202	Flush the cache .
4203	Loads an attribute
4204	Returns an array of all available attributes for an entity type .
4205	Find attribute by entity type
4206	Find attribute by entity type
4207	Create export adapter
4208	Quote a string .
4209	Find all URLs by entity id
4210	Find all URLs for an entity
4211	Notify a row .
4212	Checks if the row is consistent .
4213	Checks if a header exists
4214	Creates a subject .
4215	Create a serializer .
4216	Returns an array of all attributes for an entity .
4217	Returns an array of all attributes for the given option .
4218	Returns an array of all available attributes for the given user .
4219	Returns an array of all attributes for the given entity type .
4220	Returns an array of all attributes for the given entity type .
4221	Find an attribute by its value
4222	Prepare observers .
4223	Resolve a path .
4224	Creates a directory .
4225	Set attribute value
4226	Increment counter .
4227	Merge the given attributes .
4228	Creates a filesystem adapter .
4229	Get all categories for a given store
4230	Returns all root categories .
4231	Create an emitter instance .
4232	Prepare listeners .
4233	Remove directory .
4234	Get Swift Mailer instance .
4235	Initialize the source directory .
4236	Load files .
4237	Get the list of all the DELETE statements .
4238	Create import adapter
4239	Prepare callbacks .
4240	Get global data
4241	Loads a prepared SQL statement .
4242	Creates a date converter instance .
4243	Override an array of artefacts
4244	Append artefacts
4245	Get artefacts by type
4246	Creates an array of artefacts
4247	Export an asset
4248	Returns all available link types
4249	Find all image types .
4250	Convert date to date format
4251	Converts a number to a number .
4252	Execute the given subject .
4253	Get the pattern keys .
4254	Resolves pattern values .
4255	Resolve pattern value
4256	Prepare the pattern .
4257	Prepare the filename
4258	Checks if the file is equal to the given filename .
4259	Returns a list of all available filenames
4260	Check if a file is handled .
4261	Clean up a file
4262	Returns all available tax classes .
4263	Automatically warm up all available attributes .
4264	Find all available websites
4265	Find all stores
4266	Find all entities by entity ids
4267	Find entity by entity id
4268	Find all customer groups
4269	Get the primary key name .
4270	Removes empty rows from the table
4271	Render an event .
4272	Register REST routes .
4273	Get collection parameters
4274	Sanitize the end date .
4275	Get all events .
4276	Map event data to an event .
4277	Define translations .
4278	Before save method
4279	Save gallery image
4280	Save the location
4281	Save additional locations .
4282	Save event categories
4283	Save event groups
4284	Save event tags .
4285	Saves the occurrence of the event .
4286	Save the language
4287	Get event by id
4288	Check if tax filters are valid
4289	Remove expired occurrences .
4290	Remove deleted events .
4291	Remove expired events .
4292	Filter the taxonomy .
4293	Delete all taxonomies .
4294	Renders a list of locations .
4295	Save location .
4296	Get revision manifest .
4297	Remove meta boxes .
4298	Output meta data .
4299	Explode multi - dimensional array
4300	Register event type
4301	Add a table column
4302	Get table columns .
4303	Get the sortable columns .
4304	Callback for table content content .
4305	Save a term .
4306	Activates a new event group .
4307	Remove meta value .
4308	Get empty empty values .
4309	Remove empty meta .
4310	Save the post type
4311	Check if attachment exists
4312	Render submit form .
4313	Add an event to the post .
4314	Filter the query on the event
4315	Get a single event date
4316	Returns the next occurrence of the next occurrence .
4317	Returns the closest element in the array .
4318	Convert a date string into an array
4319	Save point points
4320	Enqueue event .
4321	Enqueue events .
4322	Formats a date string
4323	Import events .
4324	Import events .
4325	Check if the database table exists .
4326	Creates a database table .
4327	Checks if the given event manager exists .
4328	Perform an API request .
4329	Returns an array of event occurrences for a given post .
4330	Get event meta data
4331	Limits a string .
4332	Returns a list of locations for a given location .
4333	Update a new instance .
4334	Show pagination .
4335	Get all events for a given module
4336	Get module categories
4337	Returns a list of available categories .
4338	Get module groups
4339	Get module tags .
4340	Returns an array of years for a given date range .
4341	Callback for OAuth request
4342	Sanitize input array
4343	Render the event data
4344	Get user groups .
4345	Updates a group value .
4346	Get event content .
4347	Get the event content .
4348	Get custom content
4349	Register event categories
4350	Register event tags .
4351	Register event groups .
4352	Add action buttons .
4353	Import events .
4354	Accept a post .
4355	Create a new tunnel .
4356	Verify tunnel .
4357	Run a command .
4358	Set signal handler
4359	Handle the signal handler .
4360	Run the process .
4361	Displays the edit action .
4362	Create a DI container .
4363	Get widget widget .
4364	Render a widget .
4365	Process the input .
4366	Process a property value
4367	Implements the incoming request .
4368	Handle the event .
4369	Creates a new Imagine object .
4370	Configure image settings
4371	Injects the settings from the settings array .
4372	Handle the widget .
4373	Returns the widget class name .
4374	Get the options for a widget .
4375	Execute the widget .
4376	Enforces the model relationship .
4377	Process form input .
4378	Handle prePersist event .
4379	Handle postPersist event .
4380	Translate a label .
4381	Build fieldset setter .
4382	Handle submit buttons .
4383	Get the title of the model .
4384	Persist model .
4385	Configure CAS server
4386	Parses the configuration .
4387	Configure CAS validation .
4388	Get a specific attribute
4389	Check if an attribute exists
4390	Logout a user
4391	Sets the status code .
4392	Get the key of the row .
4393	Determine if the column is integer .
4394	Extracts the parts from the URL
4395	Add containers from array
4396	Builds the query .
4397	Wraps a row into the database .
4398	Get the fake query builder .
4399	Generates an activation link
4400	Assign a user to the given key .
4401	Check if a key is valid .
4402	Reads the data from the request .
4403	Register template files
4404	Register custom handlers .
4405	Handle an authorization error .
4406	Handle validation .
4407	Handle the exception .
4408	Removes the item from the list .
4409	Get components .
4410	Attach event handlers .
4411	Perform a request .
4412	Check if asset is available
4413	Sync a package .
4414	Update expired packages .
4415	Create a new client instance .
4416	Get the URL of the configuration .
4417	Get the port .
4418	Validate entity managers .
4419	Terminate a process
4420	Lock a theme .
4421	Unlocks a theme .
4422	Clones a file .
4423	Build param value from url
4424	Builds the filter widget .
4425	Sort tables .
4426	Checks if the database is configured .
4427	Configure the database .
4428	Get all migrations .
4429	Run the migration .
4430	Rollback migration .
4431	Resolve migration state .
4432	Get migration table .
4433	Render the given source .
4434	Mounts the contents of a serialized string .
4435	Set primary keys .
4436	Create table .
4437	Update table .
4438	Drop table .
4439	Rename table .
4440	Execute the blueprint .
4441	Get all migrations .
4442	Create a filename for a file .
4443	Bootstrap application .
4444	Load the Laravel application .
4445	Load the initializer .
4446	Loads the service definition .
4447	Applies the mailbox to the Mailbox .
4448	Fetches the inbox .
4449	Get the client .
4450	Rebuild the kernel .
4451	Resolve the given arguments .
4452	Opens a stream .
4453	Get the URL of a file .
4454	Get stream stats
4455	Check if a file exists
4456	Get the filename of a stream .
4457	Release a file
4458	Handle a command .
4459	Checks if the node is empty .
4460	Exports an object into an associative array .
4461	Handle the request
4462	Call a procedure
4463	Renders the input .
4464	Enable server .
4465	Extract types from docblock
4466	List all methods
4467	Returns the signature for the given method .
4468	Returns the help of a method .
4469	Execute multiple requests
4470	Loads a class
4471	Get the current version .
4472	Print usage information
4473	Parses a boolean value .
4474	Parse file .
4475	Parse the given arguments .
4476	Run the command .
4477	Check if the container is resolved .
4478	Get the writer .
4479	Finalizes the XML writer .
4480	Creates a Reader instance .
4481	Reads the current node .
4482	Parse a start tag .
4483	Parses a closing tag .
4484	Parse text .
4485	Check if the given value is a valid type .
4486	Create a checkbox field .
4487	Create an email field .
4488	Create a select field .
4489	Run the section .
4490	Register a section .
4491	Register the settings fields .
4492	Register settings .
4493	Displays the captcha .
4494	Get the javascript link for the client
4495	Renders multiple captcha attributes .
4496	Build the captcha code .
4497	Upload an asset
4498	Get a project .
4499	Get projects .
4500	Create a new project .
4501	Get a template by its ID .
4502	Get all templates .
4503	Creates a job .
4504	Get job by id
4505	Get jobs by template
4506	Get the current user .
4507	Get the personal library for the user .
4508	Merge the given job values into an array .
4509	Get the LDAP user for a given attribute .
4510	Sets the LDAP configuration definition .
4511	Check the error code for the given user .
4512	Set allowed types .
4513	Set the LDAP credentials .
4514	Switch the domain to the domain .
4515	Switch the domain to the domain .
4516	Throws an exception if not found .
4517	Gets the username token .
4518	Add the domain to the request .
4519	Transforms the value to the database .
4520	Get the LDAP object properties .
4521	Sets the LDAP object for the given property .
4522	Sets the LDAP value for a property .
4523	Builds the container .
4524	Get the values for the given choices .
4525	Returns an array of LDAP objects for the given query .
4526	Returns an array of operations
4527	Set the roles .
4528	Checks if a role has a group of roles .
4529	Check if a group has a given attribute .
4530	Log an operation .
4531	Save media .
4532	Update the media .
4533	Get all media .
4534	Remove a media .
4535	Parse options .
4536	Get the filename of the file
4537	Check if file exists
4538	Rename file
4539	Get the alt attribute
4540	Get title .
4541	Get the name of the option .
4542	Get the weight .
4543	Update the database .
4544	Remove media .
4545	Put the file in storage
4546	Clones the file .
4547	Make a directory .
4548	Clones a media .
4549	Boot the configuration .
4550	Register blade view .
4551	Add the view directives .
4552	Get config files .
4553	Create a svg image
4554	Transforms an item to an item .
4555	Transforms a value into an object .
4556	Adds a variable .
4557	Checks if a variable is a QTI file .
4558	Check if a variable is a QTI file .
4559	Convert a value to a QTI type .
4560	Create a new instance from an object .
4561	Returns the difference between two arrays .
4562	Set the IP address
4563	Sets the language .
4564	Set origin .
4565	Resolve the origin URI .
4566	Sets the timestamp .
4567	Before save method
4568	Process the schedule .
4569	Prepare the model s data
4570	Check if route is unique
4571	Generate unique slug
4572	Set slug .
4573	Sets the creation date .
4574	Set the last modification date .
4575	Set route options
4576	Set the master .
4577	Get children .
4578	Returns the siblings of this node .
4579	Load an object from the source
4580	Load object from cache
4581	Add object to cache
4582	Get category items
4583	Get the route pattern pattern .
4584	Get slug prefix
4585	Get slug suffix
4586	Determines if the slug is enabled .
4587	Set slug .
4588	Generate slug .
4589	Generate route pattern .
4590	Filter a route token .
4591	Generates a new route .
4592	Get the URL for the current object .
4593	Returns the slug for the given route .
4594	Finalizes the slug .
4595	Deletes all routes
4596	Create route collection
4597	Get all revisions .
4598	Set publish date .
4599	Set expiry date .
4600	Set publish status .
4601	Get the publish status .
4602	Show help page
4603	Rewrite routes .
4604	Reset the data
4605	Get next row
4606	Show the site .
4607	Show the logs page .
4608	Displays the page view .
4609	Displays the event .
4610	Returns an array of permissions .
4611	Displays the index page
4612	Deletes the model .
4613	Restore the current user .
4614	Sorts the order
4615	Determine if the item can be deleted .
4616	Get title .
4617	Displays the dropdown list .
4618	Get post data
4619	Get item by id
4620	Redirect to the index
4621	Adds an option to the list
4622	Add multiple options
4623	Get option by index
4624	Handle a method call
4625	Update batch status
4626	Sets the batch ID of the batch .
4627	Display admin page
4628	Find admin controllers .
4629	Load admin controllers .
4630	Load admin controller
4631	Load admin classes .
4632	Route request .
4633	Loads a view file
4634	Load CSV data
4635	Load inline view file
4636	Load search data
4637	Returns the value of the specified filter .
4638	Loads a pagination object
4639	Load cell cell
4640	Loads user cell data
4641	Load a date cell cell
4642	Loads a datetime cell
4643	Loads a boolean cell .
4644	Load settings table .
4645	Add a header button
4646	Load a dynamic dynamic table .
4647	Save admin settings .
4648	Execute the command
4649	Creates a source file
4650	Format row row
4651	Add action .
4652	Set admin data
4653	Unset admin data
4654	Sets the user s admin data .
4655	Clear admin data
4656	Get all log files
4657	Finds the config file
4658	Load the js assets
4659	Loads the CSS files .
4660	Load libraries .
4661	Autoload the module
4662	Checks if the binding is compatible .
4663	Sets the site settings .
4664	Prepare the whitelist .
4665	Extracts the fields for the given component .
4666	Get source by slug
4667	Get format by slug
4668	Export data from source
4669	Execute the failed batch .
4670	Add a new record
4671	Save changes to database
4672	Get all users
4673	Get count of count
4674	Format an object .
4675	Returns the map for the given method .
4676	Validates user input
4677	Get model class name
4678	Format an object .
4679	Sets the date string
4680	Add a daily html to the day
4681	Set the start of the week
4682	Prints debug message
4683	Submit a new bonus .
4684	Assign a team .
4685	Assign a contract to a given engagement .
4686	Get report by name
4687	Retrieves information about a single team .
4688	Retrieves information about a specific company .
4689	Gets the results for a specific player .
4690	Get report by buyer
4691	Get list of engagements
4692	Get a single engagement .
4693	Get full url
4694	Get list of contracts
4695	Create a list of transactions .
4696	Get details about a specific account
4697	Get all roles
4698	Get user by user
4699	Invite a job
4700	Get product by agency
4701	Get by company
4702	Get all users in a team .
4703	Get a list of jobs
4704	Get job by key
4705	Create a job
4706	Edit a job
4707	Delete a job
4708	Get user info
4709	Get details about a user
4710	Get task by type
4711	Get room details
4712	Get room by id
4713	Get room by application id
4714	Get room by contract
4715	Create a room
4716	Send a message to a room .
4717	Update room settings .
4718	Update room metadata
4719	Get a single transaction by its identifier
4720	Update a contract .
4721	Delete a contract .
4722	Get the active milestone .
4723	Get submissions for a milestone
4724	Create a new milestone .
4725	Edit a milestone .
4726	Delete a milestone .
4727	Perform HTTP request
4728	Boot the application .
4729	Get content body
4730	Get account data
4731	List contacts .
4732	Show contact .
4733	Create a contact .
4734	Edit contact .
4735	Update a contact .
4736	Deletes a contact .
4737	Render the contact .
4738	Get contact by field
4739	Show a contact .
4740	Update a contact .
4741	Destroy a contact .
4742	Show contact .
4743	Parses HTML tags .
4744	Get all preview previews .
4745	Returns the preview for the given parser .
4746	Add parser .
4747	Remove parser .
4748	Add default parser .
4749	Creates a color from a hex string .
4750	Encode a path .
4751	Converts a string to an interval .
4752	Boot the file .
4753	Get all time zones
4754	Returns an array of options .
4755	Get model relation .
4756	Join the given primary key .
4757	Get the client configuration .
4758	Convert a string to a number
4759	Searches for a given key .
4760	Set the available attribute .
4761	Get payload attribute .
4762	Convert bytes to string
4763	Returns the time offset .
4764	Convert seconds to seconds
4765	Truncate long text .
4766	Add a permission to the specified topic .
4767	Confirm a subscription .
4768	Create a topic .
4769	Get topic attributes .
4770	List subscriptions
4771	List subscriptions for a topic .
4772	List topics .
4773	Publishes a message .
4774	Remove a permission .
4775	Set topic attributes .
4776	Subscribe to a topic .
4777	Create a platform endpoint
4778	Publish a message .
4779	Make a request
4780	Convert XML to array
4781	Clear all tasks .
4782	Convert priority to priority
4783	Run the process .
4784	Configure settings .
4785	Get an invitation by code .
4786	Create default dashboard tabs .
4787	Creates a new stripe from a Stripe .
4788	Get a Coupon .
4789	Returns the coupon for the given customer .
4790	Get a team .
4791	Get team roles .
4792	Update user profile .
4793	Validates the user profile .
4794	Update Stripe Customer
4795	Install JavaScript scripts .
4796	Install environment variables
4797	Subscribe a subscription .
4798	Change subscription plan .
4799	Update a stripe
4800	Update extra info
4801	Cancel subscription .
4802	Resume subscription .
4803	Download an invoice .
4804	Set price .
4805	Set currency symbol
4806	Set trial days
4807	Set the tier .
4808	Set features .
4809	Get the current user .
4810	Create a new user .
4811	Create new user .
4812	Create default user .
4813	Create a subscription .
4814	Register a new User .
4815	Check if token is valid
4816	Delete a user .
4817	Show the dashboard .
4818	Create a new invitation .
4819	Remove user by id
4820	Send a team invitation .
4821	Accept a team invitation .
4822	Create a Tab instance .
4823	Returns a list of tabs .
4824	Define the resources .
4825	Defines the services .
4826	Notify invoice .
4827	Handles an invoice .
4828	Create a new team .
4829	Get all teams for a user .
4830	Get all invitations for a given user .
4831	Attach a user to the team .
4832	Find a plan by ID .
4833	Get a new plan instance .
4834	Get the current team .
4835	Check if the given team has a team .
4836	Get the role role .
4837	Store a new Team .
4838	Edit a team .
4839	Update a team .
4840	Switch the current team .
4841	Update a team .
4842	Remove a team .
4843	Delete a team .
4844	Destroy a team .
4845	Call custom validation .
4846	Call custom callback .
4847	Update password .
4848	Enable the user authentication .
4849	Validates the given input .
4850	Disable the user authentication .
4851	Authenticate user .
4852	Redirect to the user .
4853	Post a token .
4854	Display the registration page .
4855	Validates the registration .
4856	Validate the default registration .
4857	Validates a coupon .
4858	Get logout .
4859	Flash a message .
4860	Creates an event .
4861	Registers an exception .
4862	Export an exception .
4863	Import an exception .
4864	Normalize an event .
4865	Get a handler for the given handler .
4866	Create a new cached event .
4867	Check if an event has been cached .
4868	Get the cached event .
4869	Remove event from cache
4870	Creates a handler for the given callback .
4871	Export an exception .
4872	Import an exception .
4873	Remove a WordPress hook .
4874	Replace the wp_hook with the given hook .
4875	Returns the stack stack .
4876	Clears the reference stack .
4877	Send a message to the pool .
4878	Deletes a task .
4879	Bootstrap application .
4880	Filters the given array and returns the result .
4881	Flattens an array of objects into a map .
4882	Applies a callback to the pool .
4883	Performs a parallel job .
4884	Convert an array of errors into an array
4885	Sets the number of arguments .
4886	Run a WordPress hook .
4887	Apply filters .
4888	Add a WordPress hook .
4889	Wrapper to wrap function
4890	Resumes the streams .
4891	Stop the stream .
4892	Destroy all streams .
4893	Get the worker socket .
4894	Remove a worker socket
4895	Prepare a worker .
4896	Attach an event handler
4897	Hash a callable
4898	Write data to the stream .
4899	Write the stream to the stream .
4900	Read data from socket
4901	Handle write data
4902	Check socket errors
4903	Removes the read stream .
4904	Removes the write listener .
4905	Decode a message .
4906	Attach timer .
4907	Cancel the timer .
4908	Submit a worker .
4909	Submit a worker .
4910	Submit task .
4911	Submit a task .
4912	Stop the worker .
4913	Removes a worker .
4914	Send a message to the worker .
4915	Broadcast a message .
4916	Triggers the worker .
4917	Starts the timer .
4918	Spawn a worker .
4919	Check if a worker exists .
4920	Checks if the worker is shutdown .
4921	Handle a message .
4922	Close the worker socket .
4923	Reads bytes from the stream .
4924	Read a UUID
4925	Reads a value from an array
4926	Read a map from a definition .
4927	Read a variable from the buffer .
4928	Reads a decimal decimal value from the buffer .
4929	Register a bulk service .
4930	Boot the application .
4931	Send a message .
4932	Validate the response .
4933	Send multiple messages .
4934	Get the status of a batch .
4935	Send a batch
4936	Generate CSV string
4937	Send the message to the server
4938	Sets the message .
4939	Calculates the concatenation of the message .
4940	Parse a phone number
4941	Send a batch
4942	Returns a list of dynamic filters .
4943	Returns the number of rows in the database .
4944	Adds filters to the query builder .
4945	Add search filter .
4946	Add date range filter
4947	Get field value
4948	Returns an array of fields
4949	Builds the configuration for the given dynamic object .
4950	Builds the configuration for the given type .
4951	Builds the admin configuration for the given dynamic form .
4952	Builds the website configuration .
4953	Returns the file fields for the given form .
4954	Gets the collection id for a dynamic collection .
4955	Get the email from the dynamic fields .
4956	Get email address
4957	Builds a form .
4958	Creates a form .
4959	Load form entity .
4960	Get the default values for the form field .
4961	Get the webspace key .
4962	Check if password is valid .
4963	Returns the password for the given form .
4964	Returns a list of all the models .
4965	Returns a list of field descriptors .
4966	Delete a media .
4967	Get filters .
4968	Loads a form
4969	Convert a value to a string .
4970	Get media urls .
4971	Get the download url .
4972	Get the choices for a form field .
4973	Get choice options .
4974	Get form by id
4975	Handles the request .
4976	Returns the form for the given locale .
4977	Get field by key
4978	Returns a list of all fields in the list .
4979	Serializes the field for the given locale .
4980	Displays a form .
4981	Displays a form to edit a form .
4982	Handle form submission .
4983	Handle form submission .
4984	Generates a token .
4985	Get all errors
4986	Handle a form submission .
4987	Save form .
4988	Upload media .
4989	Map media IDs to an array .
4990	Get media data .
4991	Get mail list
4992	Get builder by alias .
4993	Returns the block prefix .
4994	Create a new collection .
4995	Load a collection by key .
4996	Get the width of the given width .
4997	Returns the last width of the given width .
4998	Reverses an exception
4999	Set hostname
5000	Set Unix socket socket
5001	Sets the memory .
5002	Set file path
5003	Set the database name .
5004	Set the charset .
5005	Ensure that the connection is connected .
5006	Configure the connection
5007	Execute a SELECT query .
5008	Get all queues
5009	Get a queue
5010	Create a new message
5011	Adds a message to the queue .
5012	Get message by id
5013	Touch a message .
5014	Release a message
5015	Add alerts to the queue .
5016	Delete an alert
5017	Delete a queue
5018	Update a queue .
5019	Create a queue .
5020	Replace the subscribers of a queue .
5021	Remove a subscriber .
5022	Output json data .
5023	Output the XML document .
5024	Generates the XML representation of the given data .
5025	Output a CSV file .
5026	Flattens an array to an array
5027	Executes the console command .
5028	Format server stats .
5029	Format the number of bytes .
5030	Format the uptime .
5031	Add server to server
5032	Add servers .
5033	Determine if the server is running .
5034	Get a value from the cache .
5035	Set a value in the cache .
5036	Delete a key
5037	Sets the cache client .
5038	Get a value from the cache .
5039	Delete a key
5040	Creates an invalid argument .
5041	Populate builder builder .
5042	Set options .
5043	Set the payload .
5044	Set payload data
5045	Encode a string
5046	Get the URL for the given action .
5047	Get authentication URL .
5048	Gets the authentication URL for the given action .
5049	Builds the URL for the given action .
5050	Generate HTTP authentication URL
5051	Ensure the parameters are set .
5052	Set product ID
5053	Get the related attributes .
5054	Returns a list of related records .
5055	Write a string to the file .
5056	Autoload a class
5057	Sets the target property .
5058	Trigger import action .
5059	Trigger import method .
5060	Applies the mapping rules to the given parameters .
5061	Ensure that parameters are set .
5062	Adds required parameters .
5063	Adds a logger to the pool .
5064	Get appender instance .
5065	Logs a message .
5066	Logs a debug message .
5067	Writes a log message .
5068	Logs a message .
5069	Log an event .
5070	Triggers a log entry .
5071	Removes a logger .
5072	Returns the effective level of this logger .
5073	Get logger hierarchy
5074	Returns the logger instance .
5075	Reset the configuration .
5076	Configure the configuration .
5077	Get logger instance
5078	Set record count
5079	Add product IDs
5080	Get recommendations .
5081	Track clicks .
5082	Track cart .
5083	Track checkout .
5084	Track a link to a specific promotion .
5085	Track login .
5086	Set product IDs
5087	Get the comparable attributes .
5088	Get the compared records .
5089	Formats a string
5090	Set a boolean value .
5091	Sets the log level .
5092	Set file size
5093	Sets the value of a property .
5094	Sets the value of a string .
5095	Returns the information about the current location .
5096	Get the start time
5097	Returns the timestamp of the event .
5098	Get request object
5099	Get tag cloud .
5100	Set word count
5101	Add feedback .
5102	Set product number
5103	Add product numbers
5104	Set page id
5105	Make the product campaign .
5106	Make shopping cart .
5107	Get campaigns .
5108	Get the raw products .
5109	Add a converter
5110	Returns the converter for the given pattern .
5111	Parses the given number of modifiers .
5112	Sets the log level .
5113	Adds a logger to the logger .
5114	Set the default renderer
5115	Get a class by its name
5116	Get the whitelist parameters .
5117	Load configuration file .
5118	Convert the given path to a file .
5119	Parse the logger .
5120	Parse the appender .
5121	Parse the renderer .
5122	Append a log entry to the logger .
5123	Parse the log option .
5124	Parse log facility
5125	Parse the log level .
5126	Appends a log entry to the database .
5127	Format an exception .
5128	Closes the collection .
5129	Configure the logger .
5130	Creates the logger .
5131	Sets the IDs of this request .
5132	Retrieves the follow search results .
5133	Add a new element to the list
5134	Sets the response .
5135	Set session id
5136	Checks if the given logger is equal to the given logger .
5137	Get log level
5138	Get the log level .
5139	Get the error level
5140	Returns the level of the log level .
5141	Get log level info
5142	Get the debug level of the logger
5143	Get the log level .
5144	Get all log levels .
5145	Returns the level of the given argument .
5146	Get system property
5147	Convert a value to a log level .
5148	Convert a value to a string
5149	Strip constants from string
5150	Get a logger instance .
5151	Get request target
5152	Activate the options .
5153	Format the log entry .
5154	Add a filter to the list
5155	Checks if the given level is greater than the given level .
5156	Logs a message .
5157	Get suggestions .
5158	Get the class name of a fact .
5159	Rollback log file .
5160	Activate log options .
5161	Appends a log entry to the database .
5162	Format a log entry .
5163	Generate the URL for the given parameters .
5164	Returns the feedback for a given label .
5165	Get pushed products .
5166	Get active questions .
5167	Gets the advisors tree .
5168	Activate the options .
5169	Append a log entry to the log file .
5170	Find a permission by id
5171	Find a permission by its value .
5172	Renders an item .
5173	Setup the layout .
5174	Returns a list of empty users .
5175	Create new user .
5176	Create a new user .
5177	Updates an existing user .
5178	Show a single user .
5179	Lists all groups .
5180	Update a group .
5181	Remove user from group
5182	Add user to group
5183	Validates a group .
5184	Load include files .
5185	Register breadcrumbs .
5186	Show the dashboard view .
5187	Post login .
5188	Show the list of permissions for the given user .
5189	Create a new permission
5190	Delete a permission .
5191	Paginate the current page
5192	Authenticate a user
5193	Generate a nonce .
5194	Check if a flag is set .
5195	Get rule by flag
5196	Checks if a flag is required .
5197	Check if a flag is required .
5198	Check if the given flag is required .
5199	Parses the program .
5200	Determine if the given string is a parameter .
5201	Order parameters .
5202	Authenticate the user
5203	Get report API
5204	Get permissions .
5205	Get company .
5206	Get OAuth API
5207	Perform a request .
5208	Get all elements of a report
5209	Get report metrics
5210	Tries to retry a report
5211	Get the sleep seconds .
5212	Parse options .
5213	Get all images .
5214	Get all images .
5215	Get videos .
5216	Convert a string to stdout
5217	Get table definition .
5218	Returns the dropdown table .
5219	Returns the dropdown data .
5220	Get the key of a table .
5221	Returns the dropdown key .
5222	Get the foreign key for a table
5223	Returns a dropdown definition .
5224	Get the column definitions .
5225	Returns the primary key .
5226	Get table comment .
5227	Get column type .
5228	Builds the schema definition .
5229	List all tables
5230	Generate migration file .
5231	Create a new table
5232	Drop the table .
5233	Generate a file .
5234	Prints a table
5235	Get the params for a table
5236	Starts a string
5237	Prints out a string
5238	Describes the result .
5239	Fetch the webservice
5240	Populate the response
5241	Set webservice URL
5242	Get all groups .
5243	Get group by DN
5244	Get all users .
5245	Get user by GUID
5246	Get user by DN
5247	Get user by email address
5248	Get user by username
5249	Get username by email
5250	Returns a list of member members for a given DN .
5251	Update LDAP data from LDAP
5252	Create LDAP LDAP user
5253	Create a LDAP group
5254	Updates the LDAP user from LDAP .
5255	Update the LDAP group for a member .
5256	Sets the password of a member .
5257	Deletes a member from LDAP .
5258	Update one or more entries
5259	Connect to the socket
5260	Disconnect from socket
5261	Read from socket
5262	Sends a string to the socket .
5263	Encode a string
5264	Decodes a string .
5265	Read the response from the server
5266	Authenticate an auth key
5267	Checks if the response time is consistent .
5268	Creates a new LDAP user
5269	Write the LDAP member
5270	Get message from session
5271	Displays the password form .
5272	Render the password page .
5273	Search a list of LDAP objects
5274	Get group by id
5275	Changes an LDAP password .
5276	Reset password .
5277	Moves a file to another .
5278	Authenticate a user
5279	Determine if the given data is valid .
5280	Displays the authentication form
5281	Output SAML metadata
5282	Converts a hexadecimal string to a string .
5283	Select the callback
5284	Selects one or more rows from the index .
5285	Splits a hash
5286	Create a new database driver .
5287	Get table definition
5288	Get all tables
5289	Fixes the table indexes
5290	Compare two columns
5291	Get a single row from a table
5292	Build index name .
5293	Encodes the given data
5294	Generate random key
5295	Returns an array of supported information
5296	Generates a HMAC hash
5297	Verifies that the given string is valid .
5298	Verifies that the given timestamp is valid .
5299	Remove a string from a string
5300	Push a string into a string
5301	Transforms a string into a string .
5302	Get error message .
5303	Add error message
5304	Set the main message .
5305	Get the status of the response .
5306	Get the error message .
5307	Get all errors
5308	Check if a field is valid
5309	Parses a schema array
5310	Add a validation rule to the field .
5311	Validates the given data .
5312	Validates a field .
5313	Validates an array
5314	Validate base64 .
5315	Validates a boolean value .
5316	Validates a datetime value
5317	Validate float value
5318	Validate integer value
5319	Validates an object .
5320	Validates required fields
5321	Validates a string
5322	Validates a timestamp .
5323	Get all available addon .
5324	Boot the plugins .
5325	Get cache data
5326	Get class map
5327	Check if an addon is enabled .
5328	Get information about addon .
5329	Recursively scans a directory recursively .
5330	Scan addon .
5331	Scan an array of addons .
5332	Start addon .
5333	Get HTTP headers .
5334	Call a callback function
5335	Bind an event to an event .
5336	Bind a class to an event .
5337	Dump all handlers .
5338	Fire an event .
5339	Fire an event .
5340	Fire a filter .
5341	Check if a function exists
5342	Get event name
5343	Get handlers by name
5344	Check if a given event exists
5345	Check if an object exists
5346	Get driver value
5347	Set the value of the driver .
5348	Splits a salt string
5349	Get default path
5350	Get a value by key
5351	Load a configuration file
5352	Save config data
5353	Match the given request .
5354	Add a route .
5355	Finalizes the response .
5356	Check if an action exists
5357	Get allowed methods
5358	Check if the request matches the given route .
5359	Checks if the given value matches the given condition .
5360	Get current response
5361	Create a Response object
5362	Get content type
5363	Set the content asset asset .
5364	Set content type
5365	Get the HTTP status message .
5366	Set cookies .
5367	Get global cookies .
5368	Set meta data
5369	Add data to the collection
5370	Add headers to the request .
5371	Get global headers .
5372	Normalize header name
5373	Flushes all headers
5374	Migrate a table
5375	Renames a table .
5376	Drop an index
5377	Create a new index
5378	Converts a value to a type .
5379	Returns the column value for the given row .
5380	Get table names .
5381	Create a route .
5382	Set conditions .
5383	Set request methods .
5384	Set mappings .
5385	Get global mapping .
5386	Check if the given name is mapped .
5387	Get mapped data from request .
5388	Check if the request matches the given request .
5389	Set the route pattern .
5390	Dispatch a request .
5391	Generate a regular expression .
5392	Execute a query
5393	Build a select statement
5394	Parses a row .
5395	Build an INSERT statement .
5396	Builds an INSERT statement .
5397	Format a column definition .
5398	Returns a string representation of the index .
5399	Get column orders .
5400	Get formats from database
5401	Translate a row .
5402	Verifies whether a password is valid .
5403	Encodes a 64 - bit integer .
5404	Get the current request
5405	Set default environment variables
5406	Get global environment variables
5407	Parse server variables
5408	Overridden to override the request
5409	Get env value
5410	Sets an environment variable .
5411	Get all headers
5412	Get the host and port .
5413	Set extension .
5414	Set path extension
5415	Set full path
5416	Sets the server port .
5417	Get query parameter
5418	Set query parameter
5419	Get input value
5420	Get data from request
5421	Sets data to the query
5422	Get the URL for this request .
5423	Set the url
5424	Make the URL for the given path .
5425	Splits the path into an array .
5426	Reset the table .
5427	Add a column
5428	Define column definition .
5429	Add a primary key .
5430	Execute the query
5431	Set table name
5432	Indexes a column
5433	List robots .
5434	Get all resources
5435	Get a resource .
5436	Validates a resource
5437	Get attribute value
5438	Set attribute values
5439	Check if the API method is supported
5440	Checks the required attributes .
5441	Checks if the request id is valid .
5442	Get the summary of the response .
5443	Get a model instance .
5444	Returns the error message .
5445	Get a resource .
5446	Create a new resource .
5447	Converts the attribute values into an array .
5448	Validates the required fields
5449	Check if a key exists
5450	Renders the notification .
5451	Add a notification .
5452	Add a new delivery
5453	Convert a job to an array
5454	Creates a job from a JSON string .
5455	Free the server .
5456	Receive a message .
5457	Create a dashboard chart
5458	Handles a new item .
5459	Sorts the collection
5460	Returns the link to the editor .
5461	Creates a detail form .
5462	Save a detail
5463	Get RSS feed items
5464	Gets the list of recent edits .
5465	Called when the dashboard is updated .
5466	Returns the template for the current page .
5467	Returns the link to the page
5468	Create a new model link
5469	Get grid fields for a given page .
5470	Get the grid field
5471	Returns the tab for the current page .
5472	Returns a list of all fields in the grid
5473	Get grid grids for a given page .
5474	Get account data .
5475	Clean error response
5476	Process filter .
5477	Maps a JSON object to the account .
5478	Convert a json string to an array
5479	Check if key exists in array
5480	Fetch a token from the client
5481	Get the current url
5482	Create a POST request
5483	Get a GET request
5484	Execute a request
5485	CURL request
5486	Open a GET request
5487	Get the list of recent files .
5488	Duplicate the dashboard .
5489	Get template name
5490	Get the link to the view .
5491	Get the list of admin items
5492	Get the models for the given panel .
5493	Provides access to the admin menu .
5494	Sorts the dashboard .
5495	Sets the default settings .
5496	Apply admin panels to the dashboard .
5497	Display the panel .
5498	Deletes a panel .
5499	Creates a configuration form .
5500	Save configuration .
5501	Get icon .
5502	Convert seconds to seconds
5503	Get Api API
5504	Get the dashboard configuration .
5505	Check if the user is configured .
5506	Get the path to the page .
5507	Get chart title
5508	Reads data from a binary stream .
5509	Read data from binary stream .
5510	Convert a value to an integer .
5511	Read data from binary stream
5512	Reads the signed signature .
5513	Read data from binary stream
5514	Reads the signed signature .
5515	Read binary data from binary stream .
5516	Reads signed signed signature .
5517	Export a span .
5518	Get callbacks
5519	Parse robots .
5520	Gets the list of lines in the given text .
5521	Builds a list of regular expression expressions .
5522	Get robots content .
5523	Get the URL of the robots URL .
5524	Initializes the crawler process .
5525	Go through the process .
5526	Start child process
5527	Check if the request is abort .
5528	Create working directory
5529	Get the process report
5530	Add a priority to the list
5531	Set the follow mode .
5532	Set the limit limit
5533	Set the working directory
5534	Set proxy .
5535	Set connection timeout
5536	Set connection timeout
5537	Resumes a crawler .
5538	Set the base URL .
5539	Removes all redirect URLs .
5540	Checks if the URL matches the given URL .
5541	Add a URL filter rule
5542	Add a filter rule to the list
5543	Mark the URL for the given URL .
5544	Checks if the cache contains all URLs .
5545	Returns an array of all URLs
5546	Add multiple URLs
5547	Starts a benchmark
5548	Stop a benchmark
5549	Reset all benchmarks .
5550	Get all benchmarks
5551	Get microseconds from microseconds
5552	Open database connection
5553	Calculates the URL hash of the URL .
5554	Get the priority of the given URL .
5555	Adds a link to the URL .
5556	Add a link to the list of priority priorities .
5557	Add document info
5558	Get next document info
5559	Creates a new instance from a URL .
5560	Sets the source url .
5561	Find the redirect link for the given header .
5562	Add post data
5563	Updates the crawler status .
5564	Register child process
5565	Returns a list of child processes .
5566	Kill all child processes .
5567	Returns the IP address of the given host .
5568	Determine if the url is in the cache .
5569	Removes a visitor .
5570	Traverses an expression .
5571	Filter the collection using the given expression .
5572	Create a new method
5573	Format value .
5574	Format an array of values .
5575	Writes a value to the config file .
5576	Consume a variable .
5577	Returns a list of enabled engines .
5578	Expands the given data into an array .
5579	Splits a token into an array .
5580	Checks if a token is a valid token .
5581	Get a cache key
5582	Set the message instances .
5583	Triggers the trace .
5584	Export a variable .
5585	Listen for Discord .
5586	Parse a message .
5587	Get the file path .
5588	Load a plugin .
5589	Load plugins .
5590	Load all plugins .
5591	Bootstrap plugin .
5592	Read config file
5593	Set config value
5594	Read config from config
5595	Load modules .
5596	Check if a module is installed .
5597	Unload a module
5598	Load a module
5599	Returns the time for the given module .
5600	Check if module is modified
5601	Get a module by its name
5602	Checks if a module exists .
5603	Sets the specified module .
5604	Get a value from the cache .
5605	Set a value for a key
5606	Get multiple values for a given key .
5607	Set multiple values .
5608	Call the given method .
5609	Logs before a join .
5610	Retrieves the last result of the query .
5611	Get profile key .
5612	Removes all arguments from the given command .
5613	Evaluate the passed arguments .
5614	Evaluate the given keys .
5615	Set the expiration time .
5616	Sets the length .
5617	Read data from socket
5618	Sends data to the socket
5619	Checks if the given command is available .
5620	Sets the protocol version .
5621	Process a data array
5622	Get the last key of the stack .
5623	Prepares the transaction
5624	Execute the request
5625	Read data from socket
5626	Read a long bit integer .
5627	Reads a string .
5628	Reads bytes from the stream .
5629	Read a record .
5630	Add a string to the request .
5631	Unpack an unsigned integer .
5632	Reset the data
5633	Get the properties .
5634	Render a component
5635	Returns the class names of the given arguments .
5636	Returns an array of Ids
5637	Get all available products
5638	Process the products .
5639	Create a new order with the given amount .
5640	Create a new Order
5641	Create a new Order
5642	Creates a new payment .
5643	Create a credit card
5644	Create a new Order
5645	Create a new order for a payment .
5646	Create a new Merchant .
5647	Create a new payment .
5648	Create a new home page .
5649	Create a new order after a payment .
5650	Create a new order
5651	Get order by id
5652	Create a new order
5653	Update the captured transaction status .
5654	Create a new payment .
5655	Create a credit card .
5656	Create a new Payment .
5657	Create a new instance with the specified amount .
5658	Creates a new transaction .
5659	Create a new payment .
5660	Create a new payment .
5661	Creates a new payment method .
5662	Create a new transaction .
5663	Remove null values .
5664	Create a new client instance .
5665	Get the endpoint
5666	Checks if the given value is valid .
5667	Build the request .
5668	Execute a payment
5669	Capture a payment .
5670	Authorize a payment .
5671	Create a new payment .
5672	Get access token
5673	Build a link .
5674	Build a capture .
5675	Builds an amount .
5676	Builds an array of URL objects
5677	Build an access token .
5678	Builds a list of transactions .
5679	Build an array of transaction data .
5680	Send a request .
5681	Build a payment .
5682	Builds an authorization object .
5683	Build a payment object .
5684	Build an array of PayPayPayment data .
5685	Build authorization object .
5686	Make sure a string is safe
5687	Make a safe string
5688	Get form value
5689	Determine if the form has a mutator .
5690	Get reflection .
5691	Generate a favicon .
5692	Generate a link .
5693	Renders an OL element .
5694	Render a UL element .
5695	Get model attribute value
5696	Generates a text field .
5697	Generates an email address .
5698	Generates a form field .
5699	Create a new number .
5700	Generates a url input .
5701	Generates a color input .
5702	Determine if the given value is checked .
5703	Returns the URL for the given attribute .
5704	Get route action .
5705	Get controller action action .
5706	Insert a string at the given position .
5707	Search for a string .
5708	Sets the value at the given offset .
5709	Unset an offset
5710	Fetch data from buffer .
5711	Parse a file .
5712	Get line count
5713	Unzip a file
5714	Get file size
5715	Get all files .
5716	Free the stream .
5717	Removes the buffer from the buffer .
5718	Sets the current position .
5719	Insert data into the buffer .
5720	Replaces a string with the given string .
5721	Removes the iterator from the iterator .
5722	Publish directory .
5723	Close the stream .
5724	Scope a query on the admin_id column
5725	Add country info
5726	Scope a search query .
5727	Scope a country query .
5728	Scope search by name
5729	Create the pending redirects .
5730	Determine if the given node is changed .
5731	Build the redirects for the given node .
5732	Create a redirect from a node .
5733	Removes a node from the cache .
5734	Determine if the given node type is restricted .
5735	Determines if the node is restricted by the given path .
5736	Get domain names .
5737	Get the URI builder .
5738	Load the name of a variable
5739	Validates a page name
5740	Renders a page .
5741	Render label callback
5742	Initialize the plugin .
5743	Generate plugin links .
5744	Get the version of the plugin .
5745	Get remote version .
5746	Check if a file type is valid .
5747	Check if a file type is valid
5748	Parse the author contributors .
5749	Get plugin slug by path
5750	Get remote repositories
5751	Validates the file .
5752	Returns the loader for the given data
5753	Load content from file
5754	Create an array of options
5755	Returns an array of allowed tags
5756	Get the list of allowed protocols .
5757	Get allowed domains .
5758	Sanitize domain .
5759	Sanitize attribute value
5760	Sanitize a string
5761	Sanitize CSS attribute .
5762	Loads a svg image
5763	Strip comments .
5764	Replicate flags for a resource .
5765	Make the namespaces .
5766	Prepare the loaders .
5767	Parse the namespaces .
5768	Parse options .
5769	Create cache provider .
5770	Make the path to the cache .
5771	Create a loader instance .
5772	Create variables provider .
5773	Load cache from cache
5774	Merge global variables .
5775	Get a resource
5776	Create a new prefix
5777	Creates a new resource .
5778	Add content to the parent .
5779	Get the list of supported files .
5780	Merge parent content .
5781	Get a value from an array
5782	Check if a key exists
5783	Parse the given value .
5784	Parse a variable type .
5785	Fetches the variable matches .
5786	Fetch a variable
5787	Check if a variable exists
5788	Replace the replacement variables in a string .
5789	Export a DOM document .
5790	Remove nodes from the list
5791	Remove a node .
5792	Sets the path to the file .
5793	Make path to file
5794	Search for resources .
5795	Parse the content of a resource .
5796	Processes a list of imports .
5797	Imports the given import resource .
5798	Creates a new resource .
5799	Creates an import name from a resource .
5800	Import resources from provider .
5801	Check if a value is a boolean value .
5802	Get boolean value .
5803	Get a list of aliases for a given file .
5804	Update filename extension
5805	Checks if a file is an alias .
5806	Checks if the given alias is allowed .
5807	Load configuration variables .
5808	Get the list of supported files .
5809	Make a list of resources .
5810	Check if the cache is valid .
5811	Make the cache .
5812	Sets the asset version .
5813	Reads the configuration file .
5814	Sends a request
5815	Set curl options
5816	Get a GET request
5817	Make a PUT request
5818	Delete a request
5819	Perform a POST request
5820	Execute a HEAD request
5821	Execute a REST request
5822	Install an extension
5823	Add multiple buckets .
5824	Read data from the URI
5825	Writes the content to the XML .
5826	Checks if a string is valid .
5827	Set up a range
5828	Returns the values of this element as an array .
5829	Adds the values of the values to the element .
5830	Add aggregate .
5831	Get request parameters
5832	Retrieve a search results .
5833	Retrieve a value from a key .
5834	Retrieve a key value from an element .
5835	Highlight the given content .
5836	Get REST Client
5837	Get the REST client .
5838	Get the REST API client .
5839	Get REST API API
5840	Get database instance .
5841	Get options .
5842	Autoload a class
5843	Returns the XML representation of this element .
5844	Add an option
5845	Adds an option to the list
5846	Read a configuration file
5847	Write a query
5848	Delete a query .
5849	Set search options .
5850	Reads the contents of the document .
5851	Write a document
5852	Delete a document
5853	Read metadata .
5854	Write metadata .
5855	Delete metadata .
5856	Set the content of the file .
5857	Get file mime type
5858	Logs a SOAP call
5859	Decode the SOAP reply
5860	Convert an associative array to an associative array
5861	Sync LDAP server .
5862	Get the list of phone numbers .
5863	Get all phone numbers
5864	Search a phone by name
5865	Search a phone number
5866	Get phone by name
5867	Returns the number of lines in a directory .
5868	Get the list of device pools .
5869	Get the list of site names .
5870	Returns a list of lines for a specific site .
5871	Get details about a phone .
5872	Returns an array of all object types for the given site .
5873	Get object type by name
5874	Delete an object by its type
5875	Add capabilities .
5876	Gets the latitude of the grid
5877	Get longitude value
5878	Get the body type
5879	Get error message
5880	Get url string
5881	Create REST API
5882	Delete a resource
5883	Wait for a request .
5884	Check if the API exists
5885	Get the term element
5886	Add term options
5887	Add facet options
5888	Add a fragment to the fragment
5889	Set file content
5890	Get result by URI
5891	Get result by index
5892	Get facet by name
5893	Add the constraints to the query .
5894	Returns an array of extractExtractExtracts from the metadata .
5895	Add preferred elements
5896	Get transform results
5897	Add multiple collections
5898	Delete multiple collections
5899	Add permissions to the collection .
5900	Deletes the given roles .
5901	Delete properties from the collection
5902	Returns the XML representation of this object .
5903	Loads the data from XML .
5904	Check if the namespace is enabled .
5905	Sets the container .
5906	Compares the database constraints .
5907	Compares two fixtures .
5908	Compare two fields .
5909	Get fixture files .
5910	Compare fixture fields .
5911	Set the form field .
5912	Defines the form field .
5913	Render a label .
5914	Get error message .
5915	Render a group
5916	Generates an action .
5917	Generates a hyperlink .
5918	Generates an alert .
5919	Creates a password field .
5920	Create a file input field .
5921	Generates a link .
5922	Generates a secure link .
5923	Create a link .
5924	Generates a link .
5925	Generates a link .
5926	Display a alert .
5927	Execute regular expression .
5928	Get the short message .
5929	Get value by key
5930	Set a value in the cache .
5931	Remove basket .
5932	Clears all shop orders .
5933	Update basket basket .
5934	Get literal value .
5935	Get literal type
5936	Returns the literal of a literal string .
5937	Creates a URI from a string .
5938	Creates a literal string .
5939	Check if the request is valid
5940	Builds the XML response .
5941	Initializes the tokenizer .
5942	Tokenize input .
5943	Decode a string .
5944	Encodes an ID .
5945	Create default instance .
5946	Get a statement for a specific group .
5947	Returns a new Statement with the given id .
5948	Returns a statement with the given id .
5949	Creates a new Statement with the given id .
5950	Create an option .
5951	Get the statement result
5952	Attaches the ViewTransformer .
5953	Initialize view helper .
5954	Get file attachment .
5955	Collect all files .
5956	Clean the layout .
5957	Attach the view resolver .
5958	Attach the pdf to the view
5959	Resolve view path .
5960	Registers an option .
5961	Get option by name
5962	Get activity profile .
5963	Get agent profile .
5964	Get state document .
5965	Add a behavior .
5966	Add a value to the bag .
5967	Set default behavior .
5968	Set default value
5969	Execute the current behavior .
5970	Create a new behavior .
5971	Set default behavior .
5972	Set the behavior .
5973	Start metrics .
5974	Stop metrics .
5975	Execute the behavior .
5976	Get all items in the collection .
5977	Get the first item .
5978	Get the last item .
5979	Get maximum value
5980	Filter the collection by callback .
5981	Returns an array of items .
5982	Get an array of items
5983	Check if a slug is enabled
5984	Parse feature map .
5985	Creates a hash map .
5986	Get the bucket .
5987	Set map .
5988	Creates a new feature .
5989	Set the bucket .
5990	Describes a list of tables .
5991	Describes a table .
5992	Create tables .
5993	Create table .
5994	Create a new field .
5995	Create a new field .
5996	Create a new relationship .
5997	Create a relationship .
5998	Update tables .
5999	Update table data
6000	Update the fields of a table .
6001	Update a field .
6002	Update multiple relationships .
6003	Update a relationship .
6004	Delete all tables
6005	Delete a table .
6006	Set the length of the field length
6007	Truncate a table .
6008	Parses a page response .
6009	Rewinds the iterator .
6010	Escapes a string
6011	Add a new LDAP entry
6012	Compares an LDAP attribute .
6013	Connect to LDAP server
6014	Parses the LDAP resource .
6015	Binds the LDAP resource to the LDAP server .
6016	Get a value from the LDAP server
6017	Add a new entry to the server
6018	Deletes a given LDAP entry
6019	Modify an LDAP entry
6020	Modify an LDAP entry
6021	Modifies a list of LDAP records .
6022	Renames a DN .
6023	Binds the LDAP to the LDAP server .
6024	Searches for LDAP search results .
6025	Set a new option
6026	Verify the operation
6027	Adds a set of sets .
6028	Compute the reference set .
6029	Compute the product set
6030	Returns the names of the resource .
6031	Get a specific resource
6032	Compare two tables .
6033	Adds a primary key .
6034	Creates a new view .
6035	Bind value to statement
6036	Extracts the PDO type from the database .
6037	Extracts the type from the database .
6038	Extracts the default value of a field .
6039	Add data to collection
6040	Generate a query string
6041	Create a new request
6042	Execute the query and return the result .
6043	Set HTTP method
6044	Sets the protocol .
6045	Generate a query string .
6046	Set aggregators .
6047	Set filters .
6048	Set post aggregators .
6049	Registers client scripts .
6050	Validates required parameters
6051	Returns the JSON string representation of the request .
6052	Displays the index page .
6053	Prepares the database .
6054	Checks if a given table exists .
6055	Get column type .
6056	Build a table .
6057	Drop table .
6058	Drops all tables .
6059	Rename a table .
6060	Execute a SQL query .
6061	Add a media file to the upload .
6062	Add an attachment to the media file .
6063	Add raw data from a file
6064	Add a file from a URL
6065	Delete all thumbnails
6066	Get last modified file
6067	Get unique name .
6068	Delete all thumbnails .
6069	Delete file .
6070	Delete empty directory .
6071	Checks if a directory is empty .
6072	Check if file exists
6073	Get thumbnail .
6074	Get thumbnail filename .
6075	Get default thumbnail options
6076	Make thumb .
6077	Get the public path to the file .
6078	Get temporary file path
6079	Encode a column type .
6080	Returns the time column type .
6081	Returns the timestamp for a column .
6082	Writes data to the socket .
6083	Compiles the JS code .
6084	Bootstrap application .
6085	Normalizes a URL .
6086	Add a route
6087	Add a GET route
6088	Add a POST route .
6089	Add a route .
6090	Add a patch route .
6091	Add delete route
6092	Add an option to the application .
6093	Add HEAD route
6094	Render the view .
6095	Get source by name
6096	Create migration file .
6097	Ensure a migration exists .
6098	Get stub content .
6099	Get the path to the file .
6100	Scope the query by clause .
6101	Scope for the given subject .
6102	Builds a path expression .
6103	Get migrations paths .
6104	Clear the view directory .
6105	Set request parameters
6106	Set headers .
6107	Set proxy .
6108	Set cookies .
6109	Set cookie value
6110	Set options .
6111	Send the request
6112	Set the request .
6113	Build the blueprint .
6114	Build the table definition .
6115	Build the commands .
6116	Add a new index
6117	Add float column
6118	Add a double column
6119	Add a decimal column
6120	Sets the column s timestamp .
6121	Sets the table timestamp .
6122	Add morph morphs .
6123	Add a field to the collection .
6124	Add a column definition .
6125	Creates a reference name for a foreign key .
6126	Adds a value to the array .
6127	Recursively collapse all values .
6128	Get value from array
6129	Get value from array
6130	Get value from array
6131	Map a callback to an array .
6132	Splits the parameters into an array .
6133	Reverse a string
6134	Convert a value to a string
6135	Convert a string to upper case
6136	Formats a location .
6137	Registers the URL .
6138	Get composer command .
6139	Build request parameters
6140	Build headers .
6141	Build the proxy .
6142	Build cookies .
6143	Register an event .
6144	Register a model event .
6145	Boot the event listeners .
6146	Flush event listeners .
6147	Creates a location query .
6148	Get location by ID
6149	Get location by slug
6150	Flash a message .
6151	Display an overlay message .
6152	Clear all messages .
6153	Add a task
6154	Register the database .
6155	Register the prefix .
6156	Register the storage service .
6157	Boot the application .
6158	Add a LIKE condition .
6159	Get a list of dates .
6160	Find a model by id
6161	Get the current user
6162	Logout user .
6163	Login a user
6164	Get user by token
6165	Get user by credentials
6166	Register database profiling .
6167	Register view profiles .
6168	Write a migration .
6169	Returns the list of event events .
6170	Dump an associative array
6171	Get a variable id
6172	Generates a hash for an array
6173	Checks if a variable is an array
6174	Check if an object is recursively
6175	Dumps the given variables .
6176	Main route action .
6177	Describes a route .
6178	Add directories .
6179	Normalizes a class .
6180	Loads a mapped class .
6181	Requires a class .
6182	Load manifest file .
6183	Writes the manifest file .
6184	Loads all drivers .
6185	Loads a translation file .
6186	Sets the query constraint .
6187	Parses data from data
6188	Creates a new query .
6189	Determine if the color is a color supported .
6190	Apply a color to the given color .
6191	Get all migrations
6192	Get migrations .
6193	Run migrations .
6194	Run migration .
6195	Get migrations for a migration .
6196	Rollback migrations .
6197	Reset migrations .
6198	Reset migrations .
6199	Run the migration .
6200	Run the migration .
6201	Get migration files .
6202	Clear the loader
6203	Add primary column
6204	Add a column
6205	Generates a timestamp for a column .
6206	Deletes a soft delete column .
6207	Add a column .
6208	Describe column type .
6209	Check if an option exists
6210	Determine if the current item is a parent .
6211	Scope the published query .
6212	Get path attribute
6213	Register a Crypt .
6214	Generate the PHP code .
6215	Rename a table
6216	Boot the model .
6217	Gets the slug key .
6218	Searches for a specific slug .
6219	Executes a SQL statement .
6220	Executes a SQL statement .
6221	Describes columns .
6222	Fetch a single record from the database .
6223	Fetch all records .
6224	Insert data into database
6225	Update a table .
6226	Deletes a table .
6227	Add a limit to the query .
6228	Check if a table exists .
6229	Check if a view exists .
6230	Create table .
6231	Create a view .
6232	Drop a view .
6233	Add a column .
6234	Modify a column
6235	Drops a column .
6236	Add a new index
6237	Drops a table .
6238	Add a primary key .
6239	Drop primary key .
6240	Adds a foreign key .
6241	Drops a foreign key .
6242	Describes the indexes .
6243	Describes references .
6244	Get table options .
6245	Render the panel panel .
6246	Adds a column to the database .
6247	Modifies a column .
6248	Drops a column
6249	Drops a table .
6250	Add primary key
6251	Drops a foreign key .
6252	Creates a table .
6253	Creates a view .
6254	Drops a table .
6255	Drops a view .
6256	Bind path to container
6257	Check if the database exists .
6258	Register the logger .
6259	Boot the application .
6260	Get fillable attributes from array
6261	Determine if the field is valid .
6262	Convert the given amount to a currency .
6263	Check if currency is active
6264	Get all currencies .
6265	Register modules .
6266	Attach a listener .
6267	Generate reset code
6268	Complete password reset
6269	Check if the password code is valid .
6270	Complete activation code .
6271	Prompts the user .
6272	Register currency .
6273	Add middleware to route .
6274	Add middleware
6275	Get reflection class
6276	Set a property value
6277	Get property value
6278	Invokes the given method .
6279	Save data to the cache .
6280	Check if a key exists .
6281	Get user currency .
6282	Checks whether two coordinates are equal .
6283	Render a block .
6284	Bind an event .
6285	Sorts an emitter event .
6286	Unbind an event .
6287	Fire an event .
6288	Get the current instance
6289	Check if headers exists
6290	Set headers .
6291	Build the headers .
6292	Checks to see if the given coordinates are equal .
6293	Get detail message .
6294	Main action .
6295	Register session adapters .
6296	Convert a DateTime to a DateTime object .
6297	Prepare output file
6298	Get the code of a file .
6299	Parse a file .
6300	Register database connection .
6301	Get node data
6302	Add a node to the query .
6303	Filter the query on the node
6304	Filter the query on a node
6305	Get descendants by id
6306	Set the depth of the query .
6307	Returns the wrapped column names .
6308	Returns true if the node has children .
6309	Sets the default order .
6310	Move a node to the tree .
6311	Creates a new Gap .
6312	Patch the query .
6313	Patch a column
6314	Count the number of errors .
6315	Fix the tree tree
6316	Rebuild the tree tree .
6317	Boot the purgeable model .
6318	Add a purgeable attribute .
6319	Purge the attributes of the model .
6320	Get the original value of the given attribute .
6321	Get an item by key
6322	Sets an item
6323	Remove an item from the collection .
6324	Save items .
6325	Load items .
6326	Compile a function .
6327	Run the application .
6328	Add the request header
6329	Add a request header
6330	Get the rate limit .
6331	Update attributes .
6332	Log a migration file .
6333	Create repository .
6334	Get the database table .
6335	Get database name .
6336	Set attribute value
6337	Append an attribute
6338	Sets the content of this element .
6339	Add content element
6340	Register commands .
6341	Generate http routes
6342	Get all queries .
6343	Check if the given key exists .
6344	Hit a key
6345	Retrieve the number of attempts .
6346	Clear a key
6347	Returns if the cache has expired .
6348	Generate the cache .
6349	Register native files .
6350	Switches an instance to another instance .
6351	Checks if a mock has been received .
6352	Create mock instance .
6353	Determine if the mock instance is mocked .
6354	Resolve a facade instance .
6355	Processes a select .
6356	Parses a list of files and returns them .
6357	Parse template content
6358	Process update file .
6359	Attach event listeners .
6360	Detach all events .
6361	Execute a query .
6362	Reverse a query .
6363	Get the status of the migration .
6364	Main action .
6365	Get the list of HTTP routes .
6366	Set curl options
6367	Retrieves information about the connection information
6368	Compile a compile file .
6369	Starts the process
6370	Wait until the worker is running .
6371	Stop the process .
6372	Close the process .
6373	Execute the process .
6374	Optimizes the output .
6375	Generate output file .
6376	Fill a value with a given key .
6377	Read a property from an object
6378	Returns the value of a property .
6379	Returns the value of a given key .
6380	Set a value in an array
6381	Register the error handler .
6382	Handle error .
6383	Handle an error .
6384	Resolve a migration file .
6385	Checks if the given level is allowed .
6386	Use the log file
6387	Use daily files
6388	Register the logger .
6389	Setup the database configuration .
6390	Logs the SQL query .
6391	Add a new item
6392	Get property value
6393	Set a property
6394	Set property properties
6395	Get the original value .
6396	Check if a property has a cast type .
6397	Get dirty properties
6398	Generate navbar header
6399	Add a dropdown menu item
6400	Add a button
6401	Flushes the log messages .
6402	Add a new item
6403	Add a CSS stylesheet
6404	Get Gravatar URL
6405	Sets a value at the given key .
6406	Get the database connection
6407	Get the current locale
6408	Add additional parameters to the url
6409	Generates a link
6410	Add column footer
6411	Include CSS file .
6412	Get the current request
6413	Build post data
6414	Returns a list of available languages .
6415	Converts a language to a locale .
6416	Set the current locale .
6417	Setup property .
6418	Get status messages
6419	List countries .
6420	Add a new item
6421	Sets the object name .
6422	Set the color of a color
6423	Get color color
6424	Get a GET request
6425	Performs a POST request .
6426	Deletes a given URL .
6427	Get the key of the model .
6428	Unset column value
6429	Reindex data by index
6430	Draw the page .
6431	Set up the context
6432	Returns the total number of items .
6433	Returns true if the element is empty .
6434	Add slashes to a string
6435	Connect to the database
6436	Convert an array to an array
6437	Prepare a select query
6438	Use this method to set the current object to use .
6439	Add a slide
6440	Finalizes the widget .
6441	Add a logger to the logger .
6442	Add status message
6443	Get the tag name .
6444	Returns the tag property .
6445	Finalizes the dialog .
6446	Returns a copy of this instance .
6447	Add an AJAX tab .
6448	Triggers the trace
6449	Attach an event .
6450	Attach an observer .
6451	Detach an observer .
6452	Detach observers for an observer .
6453	Validates a pod .
6454	Get the connection
6455	Get the driver
6456	Generates a binding parameter .
6457	Normalize driver exceptions .
6458	Creates a database driver .
6459	Deletes a database .
6460	Get database information
6461	List all databases .
6462	Get the connection instance .
6463	Sets the connection to use .
6464	Get the toolbox .
6465	Set the model formatter .
6466	Load a pod .
6467	Create a graph
6468	Renames a collection .
6469	Get index information about a collection .
6470	Load a pod .
6471	Process the save result .
6472	Convert the given type to a pod .
6473	Convert an array to a pod
6474	Convert a driver to a DDL document .
6475	Create a new vertex .
6476	Create Edge Edge
6477	Creates a new document .
6478	Setup the model .
6479	Determine if the model was stored .
6480	Adds a transaction
6481	Validates a type
6482	Map data to array
6483	Creates a crawler .
6484	Parses the URL and returns the URL .
6485	Parse an image
6486	Parse the content of a node
6487	Parse a DateTime object into a DateTime object .
6488	Loads a class
6489	Start the coverage
6490	Initialize configuration .
6491	Associate a model to another model .
6492	Get all edges of this graph
6493	Get the driver document .
6494	Encode a string .
6495	Creates a new collection .
6496	Deletes a collection .
6497	Rename a collection .
6498	Delete a collection
6499	Get collection information
6500	Get statistics about a collection .
6501	Counts a collection of objects .
6502	Loads a collection .
6503	Unloads a collection .
6504	Get index information about a collection
6505	Returns the geocql fields for the given collection .
6506	Search for a specific type .
6507	Get the collection name .
6508	Deletes a user .
6509	Get user info
6510	Deletes all SQL functions from the database .
6511	Lists all available SQL functions .
6512	Get server version
6513	Get server version information
6514	Get server time
6515	Sets a property
6516	Remove a property .
6517	Get a property value
6518	Set the document ID .
6519	Set distance information
6520	Reset meta data
6521	Convert this object to an array
6522	Convert this object to JSON .
6523	Convert the transaction to JSON .
6524	Get driver document .
6525	Load data from driver
6526	Load data from array
6527	Event handler for event
6528	Sets the Pod .
6529	Get the id of this object .
6530	Sets the pod .
6531	Get the sender from the pod .
6532	Convert this object to a DTO document .
6533	Begin transaction .
6534	Commit the transaction .
6535	Clear transaction info .
6536	Add a read collection
6537	Adds a write to the collection .
6538	Pause the transaction .
6539	Resume the current transaction .
6540	Add a new command
6541	Search for a given object
6542	Generate random string
6543	Creates a graph .
6544	Delete a graph .
6545	Returns information about a graph .
6546	Returns an array of edges for a given model .
6547	Get filters .
6548	Renders the filter box .
6549	Renders all widgets
6550	Open the container .
6551	Close the container .
6552	Opens the form
6553	Closes the form
6554	Check if current view is active
6555	Generates a filter button .
6556	Renders a reset button .
6557	Renders a back - back button
6558	Get the cache key for the given key .
6559	Filter the query parameter
6560	Get full search conditions .
6561	Flatten an array of values into an array .
6562	Get list of filters
6563	Get redirect url
6564	Add filter params
6565	Default filters .
6566	Builds a SQL statement .
6567	Reduce each element in the collection .
6568	Check if the given type is valid .
6569	Cast a value to a type .
6570	Register bugs .
6571	Make the client .
6572	Setup user detection .
6573	Setup the project paths .
6574	Add a stub .
6575	Stubs a stub .
6576	Creates a new pipeline .
6577	Set a set of keys .
6578	Returns a subset of the given offset .
6579	Sorts the collection .
6580	Set variables .
6581	Set variable value
6582	Get the path to the page .
6583	Get script tag .
6584	Check if the script is allowed
6585	Convert a string to an array
6586	Execute the database .
6587	Get the paths of the layouts .
6588	Add global variables .
6589	Process generator .
6590	Sets the parameter .
6591	Extracts the parameters from an element
6592	Run a git commit command .
6593	Sort by two dates .
6594	Remove an item from the feed .
6595	Replace an item in the collection .
6596	Merges the feed .
6597	Sets the array of items
6598	Returns a list of all users that have been queried .
6599	Bulk batch records .
6600	Write items to the feed
6601	Set current buffer
6602	Fetch all schedules
6603	Sorts the collection .
6604	Import configuration data
6605	Set data from data
6606	Sets the source directory .
6607	Sets the destination directory .
6608	Finds the layout for the given page .
6609	Returns the default layout for the given page .
6610	Parse the file .
6611	Get section .
6612	Get the permalink .
6613	Sets the configuration .
6614	Run the build process .
6615	Get the current version .
6616	Filter page by variable .
6617	Sorts the given array .
6618	Creates a URL .
6619	Minify a file
6620	Convert the given path to a CSS file .
6621	Read time from text
6622	Returns hash of file
6623	Collect pages .
6624	Render feed .
6625	Load a feed .
6626	Execute the given input .
6627	Checks if the given input is a valid type .
6628	Parses the given inputs .
6629	Run the given input .
6630	Save a schedule .
6631	Render feed .
6632	Create a new item .
6633	Get author author .
6634	Get comment route .
6635	Checks if a string contains XML syntax .
6636	Collect taxonomies .
6637	Creates a page node .
6638	Compile view files .
6639	Compile view files .
6640	Compile view file .
6641	Generate diff .
6642	Parses a diff .
6643	Bootstrap extension .
6644	Finish all extensions .
6645	Register extensions .
6646	Register the extension .
6647	Register the service providers .
6648	Write manifest file .
6649	Register a deferred service provider .
6650	Load queue provider .
6651	Activate an extension .
6652	Map an extension .
6653	Register domain handler .
6654	Detect extensions .
6655	Get option value
6656	Publish an extension .
6657	Register extension .
6658	Get the URL for the given route .
6659	Activate an extension .
6660	Refresh an extension .
6661	Reset extension .
6662	Check if the field is excluded .
6663	Create a new theme driver .
6664	Bootstrap the application .
6665	Bootstrap configuration .
6666	Bootstrap form .
6667	Bootstrap menu handler .
6668	Bootstrap sidebar .
6669	Boot validation rules .
6670	Attach an event listener .
6671	Initialize the theme .
6672	Sets the theme .
6673	Bootstrap the application .
6674	Resolve the theme .
6675	Get available theme paths .
6676	Get the autoload files .
6677	Validates the given theme .
6678	Get all available themes .
6679	Render a macro .
6680	Filter the date .
6681	Verify the status of the user .
6682	Add a path to the collection .
6683	Detect extensions .
6684	Get manifest contents .
6685	Generate manifest config .
6686	Get composer lock data .
6687	Guess the extension name .
6688	Guess the extension path .
6689	Resolve extension namespace .
6690	Validates the extension name .
6691	Register viewfinder .
6692	Register theme .
6693	Detects the themes .
6694	Sets the current theme .
6695	Set the theme resolver .
6696	Register extension .
6697	Register the extension manager .
6698	Register the extension .
6699	Register the status checker .
6700	Execute the given extension .
6701	Get the scheme scheme .
6702	Set the handle of the URI .
6703	Get the domain s domain .
6704	Get the domain group .
6705	Checks if the given path matches the given pattern .
6706	Returns the prefix of the domain .
6707	Get the root path .
6708	Get base URL .
6709	Resolves base url .
6710	Parse a YAML string .
6711	Validates a duplicate key
6712	Activate the manifest .
6713	Deactivates an activity .
6714	Register extensions .
6715	Register extension plugin .
6716	Boot the extension .
6717	Start the application .
6718	Fire event .
6719	Get autoload files .
6720	Load autoloader .
6721	Processes deprecated doc comment
6722	Starts the application .
6723	Generate log .
6724	Generate a callable .
6725	Log an alert message .
6726	Make a daemon .
6727	Runs a process .
6728	Get slug .
6729	Sets the slug for this record .
6730	Sends HTTP headers
6731	Sets a cookie .
6732	Clear all cookies .
6733	Set request arguments
6734	Store uploaded files .
6735	Remove an entry from the collection .
6736	Returns a regular expression .
6737	Returns the HTML for the given array .
6738	Returns an array of integer values .
6739	Flush cache directory
6740	Combines two files .
6741	Connect to the server .
6742	Execute a command
6743	Determine if the client is a client .
6744	Get IP address
6745	Create a new file name .
6746	Register a deployer .
6747	Get a deployer .
6748	Register a server .
6749	Set server servers .
6750	Get server by name
6751	Deploy a server .
6752	Get server options
6753	Processes the opening token .
6754	Generate ajax url
6755	Perform AJAX request .
6756	Trigger an action callback .
6757	Handle AJAX request
6758	Get POST request data
6759	Generate a random hex .
6760	Starts a session
6761	Clear session variables
6762	Checks if the value is a serialized string .
6763	Handle the slug .
6764	Adds a method .
6765	Update session data
6766	Clear session data
6767	Verifies if the session is valid
6768	Open a session
6769	Delete sessions .
6770	Match the given route .
6771	Get page data
6772	Check if the current page is a page .
6773	Load class metadata .
6774	Creates a condition .
6775	Initializes all installed plugins .
6776	Returns an array of plugin instances .
6777	Load twig template .
6778	Set default language .
6779	Check if the user is expired .
6780	Get view content
6781	Adds javascript variables to javascript
6782	Add javascript file
6783	Add stylesheet
6784	Get file content
6785	Get the content of the template
6786	Get all scripts
6787	Get all CSS styles
6788	Get asset path
6789	Check if the current route is allowed .
6790	Returns the access control for the current role .
6791	Returns the roles chain .
6792	Get user language .
6793	Translates a choice .
6794	Returns the translation for the given locale .
6795	Get translation files
6796	Returns the translation for the given id .
6797	Get the base translation for the given id .
6798	Generates a toggle command .
6799	Build the buttons for the given attribute .
6800	Builds the metadata for the model .
6801	Main function to execute the controller
6802	Create controller action .
6803	Execute the ACL .
6804	Execute Auth .
6805	Executes the route .
6806	Set the app libraries .
6807	Get a library instance .
6808	Create core controller instance
6809	Call a method on a controller
6810	Get function arguments .
6811	Get the role from a token .
6812	Get the role from a user
6813	Returns the options for the current item .
6814	Sets the bulk of the given parameters .
6815	Gets the value of a variable .
6816	Filter a variable
6817	Open a database connection
6818	Close a connection
6819	Execute a SELECT query
6820	Executes a SELECT query
6821	Inserts a SQL statement
6822	Delete a SQL statement
6823	Execute a SQL statement
6824	Log out the user .
6825	Sets the user ID .
6826	Sets the username .
6827	Sets the role id .
6828	Sets the role name .
6829	Validates the given value .
6830	Get installed plugins .
6831	Search plugin directories .
6832	Search the plugin class for a given directory .
6833	Checks if a file implements a plugin interface .
6834	Returns a string representation of a closure .
6835	Execute a closure
6836	Execute a file
6837	Runs a command on the console .
6838	Set autoload file
6839	Check if the process is running
6840	Kill the process .
6841	Reset logs .
6842	Create a new instance from a string .
6843	Get image driver
6844	Builds the image .
6845	Get the width of the image .
6846	Get the height of the image .
6847	Format a binary string .
6848	Formats the given bytes .
6849	Create a new session instance .
6850	Initializes the driver .
6851	Parse request body
6852	Generate URL .
6853	Get server parameter
6854	Get the default input definition .
6855	Registers commands .
6856	Get model path .
6857	Adds the force option .
6858	Adds a model argument .
6859	Validates the model argument .
6860	Adds the table argument .
6861	Validates the table argument .
6862	Get the table instance .
6863	Generate a file .
6864	Handle the response .
6865	Check if the stream is seekable .
6866	Creates a parser with the given content type .
6867	Add a parser to the body .
6868	Adds a module argument .
6869	Adds a controller argument .
6870	Creates a new request .
6871	Creates a server request .
6872	Creates a stream .
6873	Create a stream from a file .
6874	Creates a new uploaded file .
6875	Creates a URI instance from a string .
6876	Formats the number of bytes .
6877	Formats a number .
6878	Normalizes the given bytes .
6879	Normalizes a precision number .
6880	Set the request method .
6881	Set Uri Uri .
6882	Get the target from the URI .
6883	Adds a middleware to the stack .
6884	Get reason phrase .
6885	Get messages .
6886	Get the user from the message .
6887	Get extension extension
6888	Normalize a filename
6889	Returns the contents of the stream .
6890	Fixes the site url filter .
6891	Fixes the WordPress folder .
6892	Fix the network url to the network .
6893	Fixes the slashes of the given url .
6894	Initializes the plugin .
6895	Sets the folder name .
6896	Convert a URL to a full path
6897	Encode a path .
6898	Decode a path .
6899	Returns the contents of a directory .
6900	Logs the database .
6901	Write a log entry
6902	Write memory usage
6903	Writes the time to the log file .
6904	Write a log section
6905	Flips multiple files .
6906	Set the uploaded file .
6907	Returns the hash of the uploaded file .
6908	Get the media type .
6909	Get query params
6910	Check if the request is an AJAX request .
6911	Convert a JSON string to a document .
6912	Get entities from array
6913	Creates an array of actions from an array
6914	Get fields from data array
6915	Get links from data array
6916	Send a request .
6917	Execute the request .
6918	Prepares the request .
6919	Set the URL of the request .
6920	Set HTTP headers
6921	Creates a response from the response .
6922	Splits the body from the response body
6923	Parses the headers into an array
6924	Count the total number of logs
6925	Displays the view
6926	Collect all files in the log file .
6927	Collects data from the GET request
6928	Collects the input data from the post .
6929	Collects the session data
6930	Returns the microtime time
6931	Returns the summary of the given section .
6932	Creates a new file .
6933	Create uploaded file .
6934	Flips multiple files .
6935	Merge two arrays .
6936	Process the request .
6937	Add new menu
6938	Edit a model .
6939	Attempt to edit a model .
6940	Redirect to the edit page .
6941	Order the order .
6942	Delete a model .
6943	Get uploaded files .
6944	Get uploaded files .
6945	Check uploaded files .
6946	Load headers .
6947	Add a new attribute to the request .
6948	Remove an attribute from the request .
6949	Checks if the given time has been modified .
6950	Get header by name
6951	Set status code
6952	Process the middleware .
6953	Get MySQL version
6954	Authenticates a user .
6955	Find all active users .
6956	Find all deleted users .
6957	Add a new user
6958	Get the option value .
6959	Set current language
6960	Determine if the given value is a container .
6961	Checks if the given string is encrypted .
6962	Dumps the class .
6963	Export an array to an array
6964	Preprocess the global container .
6965	Processes the global container .
6966	Creates an exception for a token type .
6967	Make a container .
6968	Recursively recover a record .
6969	Process class extensions
6970	Process all config classes .
6971	Process configuration class
6972	Process a class
6973	Sets the definitions .
6974	Get definition by name
6975	Remove a definition .
6976	Set config classes .
6977	Generate the container .
6978	Dump all containers .
6979	Checks if the value is an inner value .
6980	Set the address .
6981	Send a notice .
6982	Call the given method .
6983	Creates a response from a JSON response .
6984	Parses HTTP response .
6985	Send the request to the request .
6986	Wait for the subscriber .
6987	Sends an action to the server .
6988	Format the layout templates .
6989	Write file to file
6990	Determine the given value .
6991	Gets the slice of the given slice .
6992	Returns an array of indices
6993	Get option value .
6994	Validates an array of values .
6995	Create a new option
6996	Sets the reply stack .
6997	Returns the value of a property .
6998	Get the list of matchers .
6999	Compares images .
7000	Create the diff between two images .
7001	Create the comparison image .
7002	Compares two images .
7003	Add a route .
7004	Add a route
7005	Match the given url
7006	Run the route .
7007	Redirect to the given URL .
7008	Parse request parameters
7009	Get date from file .
7010	Handle save image
7011	Get a GET request
7012	Perform a POST request .
7013	Set authentication headers
7014	Get config value
7015	Validate configuration .
7016	Get excerpt .
7017	Handles errors .
7018	Determines dot extensions .
7019	Validate widget ID .
7020	Sets the user id
7021	Get all documents .
7022	Appends a string to the current string .
7023	Append a string to the current string .
7024	Checks if the string matches the given pattern .
7025	Limit the string .
7026	Generate a UUID
7027	Joins a string into a string .
7028	Returns a string representation of the string .
7029	Subtracts a string from a string
7030	Creates a limit .
7031	Returns a string with limit .
7032	Convert string to array
7033	Encrypt a key
7034	Creates a new JWT with the given key .
7035	Convert the value to an array .
7036	Generates a parser from a grammar file .
7037	Set the organization settings .
7038	Get all documents .
7039	Sets the number of pages .
7040	Set the page number
7041	Returns the value of the given value .
7042	Returns the searchable value .
7043	Returns true if the value is a boolean .
7044	Get the grammar .
7045	Creates an image command .
7046	Creates a new image command .
7047	Returns a list of tokens in the list .
7048	Formats the number .
7049	Check if a property exists
7050	Get property by name
7051	Remove a property by name .
7052	Checks if the given method exists .
7053	Get method by name
7054	Remove a method by name
7055	Parse meta tags
7056	Run a hook .
7057	Load plugins .
7058	Setup the route .
7059	Get item by key
7060	Set a value in the collection .
7061	Push a value to the array .
7062	Search for a value
7063	Get keys by field
7064	Returns a unique key .
7065	Returns an array with numeric keys .
7066	Returns a string representation of this object .
7067	Join a key by key .
7068	Get a list of items .
7069	Returns a chunk of the container .
7070	Filter the collection .
7071	Walk through an array of items
7072	Merge multiple items .
7073	Merge items with given key .
7074	Increment the items .
7075	Get random key .
7076	Get random item
7077	Returns a subset of the collection .
7078	Filter the collection by callback .
7079	Remove item from cache
7080	Sorts the collection .
7081	Group items by key .
7082	Unset an offset
7083	Get the rest of the given index .
7084	Get the rest of a given key .
7085	Returns the difference between two arrays .
7086	Get an item from the collection .
7087	Get an item from the collection .
7088	Creates a new array with the given values .
7089	Add a where condition .
7090	Creates a new instance from a JSON string .
7091	Create a container from a file .
7092	Create a new instance from a serialized string .
7093	Create a new instance from the container .
7094	Creates a new instance from a string .
7095	Add a where condition .
7096	Returns an array of keys in a given array .
7097	Convert an iterator to an array .
7098	Get group by key
7099	Filters a collection of items .
7100	Removes an item from the collection .
7101	Duplicate an array
7102	Get the value of a key .
7103	Edit an object
7104	Get option value .
7105	Get excerpt .
7106	Fetches an array by key
7107	Remove key from array
7108	Get value from array
7109	Check if a key exists
7110	Set a value in an array
7111	Search a value in an array .
7112	Render a library
7113	Checks if the user has access to the given directory .
7114	Get a new access token .
7115	Sets the input id .
7116	Sets the bound boundary .
7117	Add a type
7118	Remove a type .
7119	Get a component restriction .
7120	Set component restrictions .
7121	Add a component restriction .
7122	Remove a component restriction .
7123	Set input attributes .
7124	Set the input attribute .
7125	Parses an image .
7126	Convert an image to an image
7127	Compress an image
7128	Compress a svg file
7129	Compress a PNG file .
7130	Decode data from URL
7131	Converts the given format to a PNG format .
7132	Convert an extension to a format
7133	Convert a string to a format
7134	Convert file extension to mime type
7135	Converts the given format to a compressed format .
7136	Returns the quality of the given format .
7137	Set file extension
7138	Change file extension
7139	Parse format arguments .
7140	Send a request to the server .
7141	Clean input data
7142	Get the limit of the request
7143	Render a circle .
7144	Checks if the given version is valid .
7145	Checks if a version is valid .
7146	Checks if the given version is valid .
7147	Create a new CSRF handler
7148	Generates a form input .
7149	Verify if the user is valid .
7150	Creates a new Request object from the global globals .
7151	Get form data
7152	Get form data
7153	Get the json body .
7154	Normalizes the URL to a URL .
7155	Render map type
7156	Returns the first name of the given email .
7157	Get last name .
7158	Converts an acronym to acronym .
7159	Convert a variable name to a string
7160	Checks if the given string is valid .
7161	Validates a UUID
7162	Returns the shard ID of the given UUID .
7163	Validates a Shard ID
7164	Validate the type id
7165	Validates a type id
7166	Get the local ID of a UUID .
7167	Validates a local ID .
7168	Parses a UUID .
7169	Build the hash of the given type .
7170	Render a Polygon .
7171	Set the center
7172	Set latitude .
7173	Sets the coordinate value .
7174	Set the coordinate .
7175	Sets the control position .
7176	Sets the scale control .
7177	Get the response status code
7178	Get a value from the cache .
7179	Returns a sub - path for the given primary key .
7180	Get the SHA1 key .
7181	Get a single class
7182	Match a string against a string
7183	Get a template
7184	Returns the strength of the given password .
7185	Check if the process is valid .
7186	Check if a memcache exists
7187	Check if the given URL is valid
7188	Check if the cache is valid
7189	Check the content of a file .
7190	Cache the given URL .
7191	Cache the contents of a URL
7192	Get the map
7193	Get map cache
7194	Check if the given URL is local .
7195	Check if a variable is valid
7196	Converts a variable name to an acronym .
7197	Convert a string to a slug
7198	Convert a string to camelCase
7199	Render a size .
7200	Determine if the user is a valid role .
7201	Parse an array of addresses .
7202	Parses an array of headers .
7203	Parse the given string .
7204	Parse the content type .
7205	Parses a string representation of a string representation .
7206	Returns the difference between two numbers .
7207	Encodes the given string .
7208	Decodes a base64 encoded string .
7209	Create a new nonce
7210	Generates a hidden input .
7211	Verify the given token .
7212	Set origin origins .
7213	Returns a human readable human readable format .
7214	Get items by key
7215	Render a marker .
7216	Build the JSON string .
7217	Render a marker .
7218	Render the scale control .
7219	Check if slug is valid
7220	Check if a slug is reserved
7221	Convert slug to string
7222	Convert slug to string
7223	Set coordinates .
7224	Store the cache .
7225	Get all the repositories .
7226	Parse the file
7227	Set default variables
7228	Determine if the given file exists .
7229	Get parent variables
7230	Generate a new template
7231	Get the options for the database .
7232	Renders a control .
7233	Encode a string .
7234	Decode a string .
7235	Call the given method .
7236	Render a map
7237	Get value from cache
7238	Set a value in the cache .
7239	Clear a primary key
7240	Generate a unique key .
7241	Returns the name of the primary key .
7242	Determine if the server is different .
7243	Add server connections .
7244	Renders an HTML element .
7245	Renders the javascript code .
7246	Renders an autocomplete .
7247	Register the seed .
7248	Closes the request .
7249	Closes the compression .
7250	Sets the location
7251	Set stoppoint .
7252	Get error reason .
7253	Set file extension
7254	Changes file extension .
7255	Check if an asset exists
7256	Get an asset .
7257	Set an option
7258	Remove an asset .
7259	Modify the request attributes .
7260	Sets the zoom control control .
7261	Decodes a hash ID
7262	Set the results .
7263	Set the response status
7264	Check if a string is valid
7265	Determine if the user is enabled .
7266	Normalize a string
7267	Returns the URL of the page .
7268	Sets whether the distance should be used .
7269	Sets whether the distance should be ignored .
7270	Set the destinations .
7271	Add a destination to the matrix .
7272	Add a vector to the matrix
7273	Sets the region .
7274	Sets the language to use .
7275	Set travel mode
7276	Sets the unit system .
7277	Get the control positions
7278	Sets the response status .
7279	Render the map .
7280	Render the bounds .
7281	Renders a bound box .
7282	Print statistics
7283	Set markers .
7284	Set helpers .
7285	Returns a helper instance .
7286	Set extension helpers
7287	Get an extension helper
7288	Remove an extension
7289	Renders the container .
7290	Renders the stylesheet .
7291	Renders javascript scripts .
7292	Render JS libraries
7293	Renders the javascript code
7294	Render the javascript code
7295	Renders a JS container .
7296	Renders the container coordinates .
7297	Renders the container .
7298	Renders the JavaScript container .
7299	Renders the JS container .
7300	Renders a JS container .
7301	Renders the JavaScript container .
7302	Renders the javascript code .
7303	Renders the square overlay .
7304	Renders the JavaScript container .
7305	Renders the JavaScript container .
7306	Renders the JavaScript container .
7307	Renders the JS container .
7308	Renders the JS container .
7309	Renders the JS container .
7310	Renders the JS marker .
7311	Renders the JS container .
7312	Renders JavaScript events .
7313	Renders the container .
7314	Render map
7315	Renders the map .
7316	Renders the map .
7317	Compute the coordinates of the map .
7318	Computes the bounds of the map .
7319	Computes the points for the map .
7320	Computes the sizes of the map .
7321	Compute MarkerImages .
7322	Compute marker shapes .
7323	Compute the list of windows for the given map .
7324	Render map control controls
7325	Render a map
7326	Generate a UUID
7327	Generate a UUID
7328	Generate a UUID .
7329	Generate a v4 version .
7330	Get package by name .
7331	Run all items in the collection .
7332	Filter the collection .
7333	Add package to collection
7334	Sets the address .
7335	Set the coordinate .
7336	Sets the bound boundary .
7337	Sets the region .
7338	Sets the language .
7339	Loads the application .
7340	Get route .
7341	Parses the given value .
7342	Sets the WordPress flag .
7343	Sort array by key
7344	Get request method .
7345	Get the scheme .
7346	Get the host name .
7347	Get root host
7348	Check if the current request is secure
7349	Check if local host is local .
7350	Sets the location type .
7351	Converts a string to a string .
7352	Returns the list of directions for the request .
7353	Load data from array
7354	Load property data .
7355	Returns an array of properties that are writable .
7356	Executes an array of properties .
7357	Opens a URL .
7358	Set the anchor .
7359	Set the origin .
7360	Set scaled size
7361	Sets the size of the image .
7362	Renders an image .
7363	Renders the open page .
7364	Renders the widget .
7365	Register module services .
7366	Get asset path .
7367	Load routes .
7368	Determine if the function can be executed .
7369	Render the Geometry .
7370	Output the response .
7371	Set a value in the cache .
7372	Get a value from a primary key
7373	Unset the given primary key .
7374	Unset a pattern from the cache .
7375	Adds a reference to the cache .
7376	Unset a record by primary key
7377	Removes a record from the cache .
7378	Render the map
7379	Convert a value to a string
7380	Quote a string
7381	Convert value to string
7382	Render the map type .
7383	Sign a URL
7384	Get the highlight .
7385	Get a shard id
7386	Assigns a Shard ID to the database .
7387	Set travel mode
7388	Set the prefix .
7389	Generate select options
7390	Displays a dropdown menu item .
7391	Renders the form control .
7392	Normalize a value .
7393	Check if a value matches a regular expression .
7394	Normalize a string
7395	Replace special characters in a string .
7396	Convert a URL to a uri string .
7397	Sets the width .
7398	Set height .
7399	Generate a random key
7400	Checks if the given value is a valid string .
7401	Strip the uri from a URL .
7402	Parse a URL into an array .
7403	Build query string
7404	Adds a SHA1 signature to the URL .
7405	Removes a SHA256 hash from a URL .
7406	Checks if the given URL is valid .
7407	Set the coordinates of the shape .
7408	Add a polygon .
7409	Create a customer .
7410	Update a customer .
7411	Calculates the unit amount .
7412	Get scope entity by identifier
7413	Renders a Scale .
7414	Generate the URL for a geocode request .
7415	Build the geocoder response .
7416	Builds the geocoder result .
7417	Builds the geocode components .
7418	Builds the geocodeComponent component .
7419	Builds the geocoder from a geocoder .
7420	Process a distance
7421	Generates the URL for the given distance .
7422	Parse the response .
7423	Build the distance matrix .
7424	Build matrix matrix rows
7425	Builds the distance matrix .
7426	Builds the distance response object
7427	Renders a point .
7428	Get the list of parameter strings .
7429	Parses a list of parameters .
7430	Get the current HTTP headers
7431	Ensure that the cache has been sent .
7432	Send cache headers
7433	Returns the slug for the given status .
7434	Get status message .
7435	Sends the HTTP status .
7436	Parse a header string into an array
7437	Remove tags from string
7438	Register migrations .
7439	Register translations .
7440	Set pixel offset
7441	Sets the open event .
7442	Render the panics .
7443	Returns an array of mouse events .
7444	Set map type id
7445	Add a map type id
7446	Set map type
7447	Set a cookie .
7448	Get cookie value
7449	Render the event handler .
7450	Render event events .
7451	Render event .
7452	Renders an event .
7453	Render the animation .
7454	Render a ZoomControl .
7455	Get max time
7456	Check if slug is valid
7457	Returns an array of address components .
7458	Sets the address components .
7459	Sets the partial match .
7460	Generate a URL .
7461	Set the center
7462	Check if map option exists
7463	Set map options
7464	Get map option
7465	Set map option
7466	Remove map option
7467	Check if a style option exists .
7468	Sets the stylesheet options .
7469	Get a style option
7470	Sets the stylesheet .
7471	Removes a stylesheet .
7472	Set map control
7473	Sets the overview map
7474	Set the map control
7475	Set rotation control
7476	Set the scale control
7477	Set the street view control
7478	Set Zoom Control
7479	Add a marker .
7480	Add a new InfoWindow
7481	Add a polygon .
7482	Add a new polygon .
7483	Add a polygon .
7484	Add a rectangle .
7485	Add a circle .
7486	Adds the groundlay overlay .
7487	Saves a value to the cache .
7488	Delete file .
7489	Sets whether the request should be ignored .
7490	Sets the list of tracks .
7491	Set the destination .
7492	Sets optimizers .
7493	Sets the origin .
7494	Sets the route options .
7495	Sets the region .
7496	Sets the language .
7497	Set travel mode
7498	Sets the unit system .
7499	Sets the way of the graph .
7500	Add a new Direction
7501	Determine if the route is valid .
7502	Make a POST request .
7503	Log an issue .
7504	Log a review .
7505	Write log lines to file
7506	Clean the log entry .
7507	Rotate log files .
7508	Execute a curl request .
7509	Parses a source string .
7510	Build a document .
7511	Parse a section .
7512	Parse YAML metadata .
7513	Get query variable
7514	Parse a template file
7515	Get a remote user .
7516	Generate a remote hash .
7517	Convert a string to ASCII .
7518	Get the distance status of the matrix
7519	Trims leading whitespace .
7520	Sets the steps .
7521	Execute a route
7522	Builds directions response .
7523	Builds a list of routes .
7524	Builds directions for a route
7525	Builds a list of directions .
7526	Builds directions .
7527	Builds directions steps .
7528	Builds directions step .
7529	Set the brightness of the image .
7530	Sets the brightness of the image .
7531	Sets the saturated rate .
7532	Sets the saturation of the image .
7533	Mix the given color .
7534	Starts a session
7535	Check if a version is valid .
7536	Checks if a version is valid .
7537	Checks if the given version is valid .
7538	Generate a date string .
7539	Calculates the time .
7540	Returns a new instance with the specified headers .
7541	Creates a new success response .
7542	Create an error response
7543	Output the response .
7544	Sets the list of legs .
7545	Set the warnings .
7546	Sets the way to be used in order to be used .
7547	Renders a ZoomControl object .
7548	Returns the metadata for the given key .
7549	Issue an access token .
7550	Handles the request .
7551	Get access token .
7552	Adds a value to the array .
7553	Remove a value from a string
7554	Renders the google API .
7555	Sets the list of elements .
7556	Render a control position
7557	Get the current IP address
7558	Returns the region of a given IP address .
7559	Get country from IP
7560	Check if the request is an AJAX request .
7561	Determine if the request is api .
7562	Sets the rest of the request
7563	Determine if the given action is active .
7564	Subscribe a user to a list .
7565	Get Member Member
7566	Update an existing user .
7567	Delete a user .
7568	Convert a string to hexadecimal .
7569	Adjust the brightness of a color .
7570	Clean hexadecimal string
7571	Empty numeric config array .
7572	Create a new Request
7573	Create request body
7574	Empty array with numeric keys
7575	Render a rectangle .
7576	Render an element .
7577	Convert an array to an array
7578	Renders a marker .
7579	Get license name .
7580	Get the list of libraries .
7581	Escapes the order .
7582	Serializes a closure .
7583	Unserialize a closure
7584	Serialize a value
7585	Unserialize a value
7586	Generates HTML markup for a embed .
7587	Get embed data .
7588	Embed WordPress .
7589	Render a Polygon .
7590	Sets the region to use .
7591	Sets the Northpoints .
7592	Returns the center of the center .
7593	Returns the number of bytes in bytes .
7594	Gets the remote file .
7595	Unserialize parts
7596	Renders a coordinate .
7597	Render a marker .
7598	Parse a XML string .
7599	Normalizes the given XML string .
7600	Validates the distance matrix .
7601	Parse a host name into an array .
7602	Unserialize the parsed parts .
7603	Sets the marker position .
7604	Set the animation .
7605	Sets the icon .
7606	Sets the shadow image .
7607	Set shape .
7608	Callback for header ID
7609	Get first image url
7610	Get the attributes of a string
7611	Sets the bound bounds .
7612	Get the message .
7613	Get the error messages .
7614	Get error data
7615	Add a new error
7616	Add a coordinate .
7617	Load the DOM document .
7618	Minify the given options .
7619	Adds the indentation of the given node .
7620	Loads the organization .
7621	Creates a view model .
7622	Get organization entity .
7623	Create an error model .
7624	Add an entry to the file
7625	Reverse the scripts .
7626	Add a single asset
7627	Add a new extension to the file
7628	Add meta data
7629	Output meta tags .
7630	Creates a controller file
7631	Loads a file .
7632	Creates a query builder .
7633	Process invitation .
7634	Validates an email
7635	Loads a user .
7636	Load the organization .
7637	Proxy method to proxy .
7638	Gets the organization cursor for the given organization .
7639	Find organizations by name
7640	Finds a user by its ID .
7641	Find an entity by id
7642	Create a new organization .
7643	Find a draft .
7644	Initialize contact
7645	Checks if the given user belongs to .
7646	Updates the permissions .
7647	Sets the organization name .
7648	Set the permissions .
7649	Get image .
7650	Set the contact object .
7651	Get employees .
7652	Get employee by id
7653	Get employees by role
7654	Set the creation options .
7655	Initializes the form .
7656	Get formular form .
7657	Get the image URI .
7658	Store an image .
7659	Extract all properties from an object
7660	Hydrate a value into an entity .
7661	Checks to see if the given entity is created .
7662	Configure the form .
7663	Ensure that the order is correct .
7664	Encrypt and encrypts a string
7665	Creates a signature for the given key .
7666	Validates a notification signature
7667	Sign an array of parameters
7668	Perform a request .
7669	Returns an array of tickets
7670	Make a HTTP request
7671	Create a POST request .
7672	Perform a POST request .
7673	Get all tickets for a given ticket .
7674	Returns the value of the specified key .
7675	Get a remote object
7676	Get all objects
7677	Create a new object
7678	Update the object
7679	Delete the object
7680	Get the URL of the resource .
7681	Get a remote object
7682	Adds an object to this object .
7683	Search for a specific object
7684	Remove an object from the storage .
7685	Deletes a file .
7686	Reads the proxy type .
7687	Get connection info
7688	Loop through the server .
7689	Execute the request
7690	Execute a callback .
7691	Get item by id
7692	Get the source from the source
7693	Fetch API data
7694	Validates the given permissions .
7695	Set param value
7696	Add parameters to request
7697	Create a new request
7698	Save photos .
7699	Start a token
7700	Get access token
7701	Converts an array of hits into an array .
7702	Searches for a query .
7703	Replace all dots in a given string .
7704	Replace all dots in a given string .
7705	Replace dot notation with dot notation .
7706	Converts the given format into a valid format .
7707	Converts the given string into a format .
7708	Adds the parser configuration .
7709	Binds Alexa request to Alexa .
7710	Register the middleware .
7711	Pause the audio .
7712	Get Alexa request .
7713	Adds the middleware to the request .
7714	Check if the request matches the given route .
7715	Create a new route instance .
7716	Get session value
7717	Updates a slot .
7718	Get all validators .
7719	Compile route .
7720	Get the certificate .
7721	Prepare the response data
7722	Sends a request to the application .
7723	Gather the application middleware .
7724	Persists a certificate .
7725	Retrieve the certificate from the cache .
7726	Calculates the file path .
7727	Set custom protection words .
7728	Capitalize a string
7729	Normalize input string
7730	Process string parts
7731	Process the first part of the first sentence .
7732	Process last word
7733	Process a word
7734	Replaces a string with the given pattern .
7735	Returns the name of the profiler
7736	Splits a word into words .
7737	Determine if the given word is a letter .
7738	Check if a line is a line .
7739	Generate an array of PHP symbols .
7740	Decode a string
7741	Converts a string to HTML .
7742	Get first word .
7743	Checks if a string is a string
7744	Get last word
7745	Converts a string to lowercase .
7746	Generate Markdown markup
7747	Reads a time from a string
7748	Converts text to smarty .
7749	Returns the substring of the given string .
7750	Returns the substring of the given string .
7751	Returns the substring before the given string .
7752	Returns the substring before the given string .
7753	Returns the title of a string .
7754	Trims a string .
7755	Trims a string .
7756	Trims a string
7757	Returns a string representation of text .
7758	Converts a string to upper case .
7759	Converts a word to text .
7760	Get setting by setting name
7761	Get image icon
7762	Convert composer to array
7763	Show blog header .
7764	Show a post .
7765	Store a new tag .
7766	Edit a tag .
7767	Update a tag .
7768	Destroy a tag .
7769	Display the screen .
7770	Clear cache .
7771	Handle download files
7772	Enable maintenance mode .
7773	Disable maintenance mode .
7774	Handle config files .
7775	Handle translations .
7776	Register views .
7777	Show profile .
7778	Update a profile .
7779	Authenticate user .
7780	Get the current version .
7781	Fill post data
7782	Enable an extension .
7783	Disable an extension
7784	Uninstall an extension
7785	Migrate an extension
7786	Get enabled bootstraps .
7787	Sanitize input .
7788	Show page .
7789	Get fields from model .
7790	Get post data .
7791	Normalize post data .
7792	Store a new post .
7793	Update a post .
7794	Publish a theme .
7795	Publish theme views .
7796	Uninstall theme .
7797	Get default theme .
7798	Get active active state
7799	Get global middleware .
7800	Get the route middleware
7801	Get admin admin middleware
7802	Get the main blog main page .
7803	Get blog prefix
7804	Get admin prefix
7805	Get auth prefix
7806	Get password prefix
7807	Show the index page .
7808	Returns the data for this payment .
7809	Scan file .
7810	Multipies a file
7811	Scan a file .
7812	Read the response from the server .
7813	Process a single file
7814	Validates a file .
7815	Sanitize a file name .
7816	Delete a file
7817	Moves uploaded file .
7818	Get the list of themes .
7819	Get asset path
7820	Get the version of the asset .
7821	Get the path to the theme .
7822	Make a directory .
7823	Make a file .
7824	Get asset path .
7825	Get template file
7826	Create assets .
7827	Fetch the translation of a message .
7828	Update a translation .
7829	Flag a message .
7830	Create a new asset .
7831	Download all translations .
7832	Upload all translations .
7833	Syncs all translations .
7834	Processes the messages .
7835	Copies the values from the parent config .
7836	Add a hash to the script
7837	Get the value of the directive .
7838	Search for classes .
7839	Searches for PSR - 7 .
7840	After updating the model .
7841	Before the query .
7842	After the model has been created .
7843	Synchronize new items .
7844	Sync the given items .
7845	Find product item .
7846	Checks if the item is valid .
7847	Build the item data .
7848	Fill entity attributes .
7849	Setup default criteria .
7850	Performs an action .
7851	Executes the given action .
7852	Validate the given action .
7853	Execute a query and return the results .
7854	Set pagination .
7855	Disable exceptions .
7856	Apply criteria to the query .
7857	Update an entity .
7858	Fetches a list of records .
7859	Find by key
7860	Find by criteria
7861	Get all records by criteria .
7862	Get all records by key .
7863	Get list of records
7864	Creates a new query .
7865	Replace the environment variables .
7866	Set view path
7867	Sends a file
7868	Get content type
7869	Maps an action to an exception .
7870	Sets the aspect definition .
7871	Sets the Pointcut .
7872	Get a pointcut for a given point .
7873	Returns the list of candidates for a given class .
7874	Check if file is scoped
7875	Convert a type to a string
7876	Dispatches the given action .
7877	Invokes an action
7878	Checks if the connection is active .
7879	Get a bean definition
7880	Replaces the property with the given value .
7881	Get the constructor values for the constructor .
7882	Instantiate an instance of the constructor .
7883	Instantiate a Factory instance .
7884	Instantiate a Factory instance .
7885	Instantiate a BeanDefinition instance .
7886	Create dependency dependencies .
7887	Applies an aspect definition to the target class .
7888	Applies aspects to the given definition .
7889	Apply global aspects to the given definition .
7890	Applies aspects to the bean definition .
7891	Create a Bean Definition
7892	Setup shutdown method .
7893	Injects the value of the given bean .
7894	Injects a property into an object
7895	Get a bean by name
7896	Get the container instance .
7897	Fill the bean definition
7898	Dispatches a signal handler .
7899	Loads a class
7900	Make a child bean .
7901	Populate class annotations .
7902	Loads XML from a file
7903	Loads the raw XML file .
7904	Closes the socket .
7905	Open socket .
7906	Free socket .
7907	Create a new class
7908	Creates a parameter .
7909	Creates a method .
7910	Create a proxy class
7911	Load YAML file .
7912	Loads the configuration file .
7913	Loads the client
7914	Opens the image
7915	Get the cache from the given options .
7916	Executes the given bean definition .
7917	Before creation of a bean
7918	After the given bean is created .
7919	Called before an event .
7920	After the given bean is completed .
7921	Open log .
7922	Returns all registered interceptors
7923	Returns an array of all exceptions that have been registered .
7924	Call interceptors .
7925	Invokes an exception .
7926	Invokes the given method .
7927	Closes the socket .
7928	Read data from buffer
7929	Open socket .
7930	Add objects to collection
7931	Builds the URI for the given file path .
7932	Overwrites the editor configuration .
7933	Resolves a file path .
7934	Returns the list of published items .
7935	Find page by alias .
7936	Create a new link .
7937	Update a page .
7938	Registers translations .
7939	Registers the JS code .
7940	Vote for an object
7941	Get email address
7942	Load user by username
7943	Hydrate a user .
7944	Create a new user .
7945	Set user password .
7946	Checks if the user is valid .
7947	Check if the user is logged in .
7948	Find user by criteria
7949	Find records by criteria
7950	Creates a common SQL query .
7951	Returns the number of records in the database .
7952	Insert a new user
7953	Update a user .
7954	Deletes a user .
7955	Validates a user .
7956	Clear identity map
7957	Logs a user .
7958	Initializes the system .
7959	Releases a worker .
7960	Wait for the worker .
7961	Get the result of the process .
7962	Get all processes .
7963	Applies a process to the pool .
7964	Returns the number of pending workers .
7965	Send data to socket
7966	Fetch data from socket
7967	Migrate the users table
7968	Register a new user .
7969	Confirm user confirmation .
7970	Display login action .
7971	Resolve confirmation confirmation .
7972	View a user .
7973	Edit custom fields
7974	Validates the email address
7975	Connect to the application .
7976	Get the priorities .
7977	Get the formatter .
7978	Format the response .
7979	Detects the env file .
7980	Get the preferred type .
7981	Build a new instance .
7982	Run the application .
7983	Handle an action .
7984	Get the payload .
7985	Execute the response .
7986	Set status code .
7987	Get command from resource .
7988	Run before the command .
7989	Get the per page for a given model class .
7990	Adds a where clause to the query .
7991	Boot the application .
7992	Set allowed methods
7993	Set the pattern .
7994	Get the token .
7995	Get the regexp
7996	Get the variables .
7997	Check if the request matches the given request .
7998	Build a list of variables .
7999	Dispatch the response .
8000	Generate a link .
8001	Compile the rules .
8002	Check if the request matches the given request .
8003	Generate a link .
8004	Tokenize a pattern .
8005	Tokenize a pattern .
8006	Tokenize a segment .
8007	Splits a string into segments .
8008	Compile a token .
8009	Generate scopes .
8010	Bind a route .
8011	Group routes .
8012	Route to route .
8013	Normalize the request .
8014	Run a route .
8015	Link a route .
8016	Clears all routes .
8017	Generate JS code
8018	Get the file .
8019	Get access token
8020	List address books
8021	Get addresses from book
8022	Adds an address to the book .
8023	Get campaign cost
8024	Create a campaign .
8025	Add a new sender .
8026	Activate a sender
8027	Get a list of subscription subscriptions .
8028	Push a subscription to a subscription .
8029	Create a push task .
8030	Generate a unique hash .
8031	Send a request to the website .
8032	Send a request to the API
8033	Check if the api is valid
8034	Decodes a new line in the response .
8035	Decode the response string
8036	Fetch all messages from a given search .
8037	Mark a message as processed .
8038	Get the type of mail .
8039	Refunds a refund
8040	Performs an SSL request
8041	Replaces an SSL certificate
8042	Revoke a revocation request
8043	Collects SSL certificates .
8044	Returns a list of DN addresses for a given address .
8045	Performs SSL checker
8046	Performs a webhost .
8047	Ensures a valid VAT code code .
8048	Creates an exception .
8049	Generate the meta tag
8050	Set the description .
8051	Resets the metadata .
8052	Register the bindings .
8053	Generates the graph .
8054	Add raw data
8055	Prepare data .
8056	Determine if the given url exists .
8057	Validates the data .
8058	Fill the index with the given index .
8059	Fill the given type .
8060	Add a new index
8061	Add a type
8062	Set the index settings .
8063	Delete a batch
8064	Create a new index
8065	Update settings .
8066	Execute the request
8067	Returns the json encoded string .
8068	Sets the sort order .
8069	Set facet facets .
8070	Compose the final query .
8071	Convert parameters to array
8072	Add a node
8073	Add a filter to the query .
8074	Delete a document
8075	Set multiple documents .
8076	Execute the command
8077	Add a new request
8078	Perform a POST request .
8079	Make a PUT request
8080	Delete a URL .
8081	Execute the request .
8082	Add multiple options .
8083	Execute the request .
8084	Parse the list of nodes .
8085	Add a new document
8086	Execute the command
8087	Finalizes the current command .
8088	Check if the current command is active .
8089	Get Album Album
8090	Initializes the album .
8091	Create a new album .
8092	Generate album name .
8093	Upload an album .
8094	Delete picture .
8095	Get resize size
8096	Add image styles
8097	Delete pictures .
8098	Save picture .
8099	Create extra images
8100	Initialize the image
8101	Prepare the image .
8102	Configure the database .
8103	Configure the database .
8104	Create config file .
8105	Checks the summary of the service .
8106	Generate the code .
8107	Generates a link to a file .
8108	Show room .
8109	Shows the photos of the album .
8110	Load scripts .
8111	Deletes a picture
8112	Sort photos .
8113	List channels .
8114	Start the worker .
8115	Stop the process .
8116	Kill the process .
8117	Sends a payload .
8118	Handles the worker start
8119	Fork a thread
8120	Creates an auth request
8121	Parse SAML response .
8122	Get the list of all available binaries .
8123	Get all pending binaries .
8124	Update the installed binaries .
8125	Update a single binary .
8126	Start the process .
8127	Clean up all files
8128	Assert that the Symfony installation is started .
8129	Register binary binaries .
8130	Create a binary binary .
8131	Check if an external URL is valid .
8132	Get the linux file name .
8133	Save the file to disk .
8134	Listen to the stream .
8135	Watch the progress bar .
8136	Get the pre - update message .
8137	Get post message .
8138	Add a new pipeline
8139	Convert an item to a given value
8140	Convert a value to an item .
8141	Write an item
8142	Get the transport from the request .
8143	Validates the password against the given password .
8144	Get taxonomy .
8145	Check if the entity is valid .
8146	Get the schema definition .
8147	Get environment variable
8148	Get client IP address
8149	Get current url
8150	Unparse a query string
8151	Checks if a property exists .
8152	Lookup an address for a given address
8153	Executes the inclusion of an array
8154	Do the action .
8155	Removes an item from the array .
8156	Removes an item from an array .
8157	Updates a form
8158	Get field value
8159	Returns the matching item matching the given item .
8160	Called when an item is matched .
8161	Returns the item matching the given form .
8162	Replace variables in variable
8163	Load configuration .
8164	Load the configuration file .
8165	Sets the location of the tile
8166	Returns the LatLng object
8167	Return error response .
8168	Redirects to a form
8169	Create a new aggregate .
8170	Remove a form item from the form .
8171	Check if the composer is autoload .
8172	Get plugin classes .
8173	Get install name .
8174	Guess the package name .
8175	Map root package to root .
8176	Writes the plugin configuration .
8177	Get the root package .
8178	Get install path
8179	Initializes the install directory .
8180	Generate palette .
8181	Get meta palette for a table .
8182	Creates a new context .
8183	Enter the theme context .
8184	Build the context configuration .
8185	Returns the color for the given identifier .
8186	Rotate the color .
8187	Convert hue to RGB value
8188	Emit the current context .
8189	Removes the current context .
8190	Switch the context .
8191	Loads the bundle configuration .
8192	Sets the config type argument .
8193	Get template templates
8194	Renders a page .
8195	Get all articles
8196	Get all modules
8197	Prepare a template
8198	Parse the given string into a template .
8199	Registers service services .
8200	Initializes the environment .
8201	Initializes the layout .
8202	Add a child element
8203	Compiles the given input .
8204	Compile a node .
8205	Throws an exception .
8206	Get PHP type .
8207	Get the file reflection .
8208	Get the doc block .
8209	Returns the docblock for a given property .
8210	Get the docblock for a given class .
8211	Get the class name of a class .
8212	Login a user
8213	Initializes the client .
8214	Get the login token
8215	Searches for a given search .
8216	Extract the extractor from the given method .
8217	Get all tags
8218	Download an image .
8219	Get all wallpapers
8220	Downloads all images .
8221	Extracts the mutator from an object .
8222	Extracts the property from the given property .
8223	Extracts the type from reflection .
8224	Check if a property is public
8225	Get accessor for a property
8226	Get mutator method .
8227	Get property name
8228	Load the Laravel application .
8229	Create a new application instance .
8230	Sets the value of a variable .
8231	Sets an array of values
8232	Removes a section .
8233	Merge a section into the database .
8234	Renames a value
8235	Renames a section .
8236	Reads the contents of a file
8237	Merge the contents of an object into an array .
8238	Merges the contents of an object into an array .
8239	Convert a value into an array
8240	Sets the value of a section
8241	Sets the contents of the section .
8242	Gets the values of the modifier .
8243	Removes a value
8244	Remove a section .
8245	Set the value of a value
8246	Sets a value to the master .
8247	Set the values of the master .
8248	Get a value from the master .
8249	Returns the values of the given section .
8250	Removes a value .
8251	Removes a value from the master .
8252	Check if the given name is a section .
8253	Get the values of a section .
8254	Create a file loader instance .
8255	Get the class name for a short type .
8256	Create a cookie .
8257	Execute the command .
8258	Determines the file path .
8259	Choose the bundle .
8260	Writes the configuration file .
8261	Create a Dumper instance .
8262	Convert a string to a string
8263	Read session data
8264	Get all routes .
8265	Sort an array by key .
8266	Set the offset
8267	Gather data from the container .
8268	Write content to file .
8269	Get the config reader .
8270	Run a route .
8271	Gather the middleware .
8272	Flatten a multi - dimensional array .
8273	Load configuration files .
8274	Returns the slice of the stack .
8275	Parse stage string
8276	Run a command .
8277	Set the default values for a command .
8278	Get the PHP binary string .
8279	Get binary binary string .
8280	Run a command .
8281	Get default input definition .
8282	Builds an array of routes for a given route .
8283	Add route to route .
8284	Get the matcher for the given segment .
8285	Create filesystem manager .
8286	Create a cache factory .
8287	Returns the total number of executed statements .
8288	Get memory usage
8289	Profile the given method .
8290	Resolve the given alias .
8291	Returns true if the given pattern matches the given pattern .
8292	Create a TwigEngine instance .
8293	Extend the view factory .
8294	Extend the engine resolver .
8295	Create twig environment .
8296	Create twig loader .
8297	Parse data into array
8298	Creates a rule .
8299	Creates a validator validator .
8300	Create a chain of validators .
8301	Parse a string rule .
8302	Parse parameters .
8303	Starts the server .
8304	Stop the server .
8305	Get IP address
8306	Check if a pid is running
8307	Create the server process .
8308	Get all listeners .
8309	Removes a listener from the list .
8310	Checks if a string contains a wildcard .
8311	Adds a listener to the list .
8312	Reads the required options .
8313	Build multidimensional array
8314	Prepares the response .
8315	Get the response .
8316	Get the displayer .
8317	Returns a list of all registered filters .
8318	Sort the given response .
8319	Adds a route to the list .
8320	Add multiple addresses
8321	Create the assets renderer .
8322	Register the base collector .
8323	Register the collector .
8324	Extend the event manager .
8325	Create a session manager
8326	Create route dispatcher .
8327	Create a router instance .
8328	Create URL generator .
8329	Detect the console environment .
8330	Get the environment argument .
8331	Renders the assets .
8332	Creates an array from the given data .
8333	Process array of array values
8334	Returns a human readable representation of the entity .
8335	Get loader paths .
8336	Build table rows .
8337	Get the Whoops .
8338	Adds where clauses to the route .
8339	Merge group attributes .
8340	Converts a controller action into an array .
8341	Append the namespace to the group .
8342	Prefix the given URI .
8343	Update group stack .
8344	Creates a sanitizer instance .
8345	Adds a bootstrap bootstrap callback .
8346	Add a bootstrap callback .
8347	Bootstrap the application .
8348	Call the bootstrap callback .
8349	Generate session id
8350	Merge flash messages .
8351	Load session data
8352	Read data from handler
8353	Write data to the handler .
8354	Resolve current page .
8355	Encodes the query string .
8356	Extend the event manager .
8357	Get all files in a directory .
8358	Find all twig files .
8359	Validate template .
8360	Display details about the given details .
8361	Display the text .
8362	Parse middleware group .
8363	Checks if required options are required .
8364	Get configuration dimensions .
8365	Validates the given options .
8366	Check deprecated options .
8367	Register a resource .
8368	Get resource URI .
8369	Get the name of a resource .
8370	Get the path prefix for a resource .
8371	Adds a route to the controller .
8372	Get the path to the resource .
8373	Get action action .
8374	Get route name .
8375	Splits the container into the container .
8376	Get the middleware middleware .
8377	Finds the arguments for the given arguments .
8378	Get IP address
8379	Check if given IP address is valid
8380	Get the first IP address from the request header .
8381	Set message domain
8382	Validate input .
8383	Validate the middleware .
8384	Create a new translation manager instance .
8385	Create a schedule .
8386	Get computed data .
8387	Create Swift Mailer .
8388	Creates a Mailer instance .
8389	Set global address
8390	Create a tooltip group .
8391	Create tabs tab .
8392	Creates a table
8393	Create a dropdown menu .
8394	Create metrics .
8395	Clones a variable .
8396	Get the Closure instance .
8397	Get the HTML Dumper .
8398	Append the given code to the output .
8399	Appends a line to the file .
8400	Add extensions .
8401	Sort middleware by priority
8402	Move middleware to middleware
8403	Create an aggregate driver .
8404	Create a new log driver .
8405	Create a log driver .
8406	Create a log driver .
8407	Creates the syslog driver .
8408	Creates an error handler .
8409	Creates a Slack logger .
8410	Create a custom logger instance .
8411	Create a logger instance .
8412	Push the logger to the logger .
8413	Create a new ServerRequest instance from an array .
8414	Returns a singular value .
8415	Tries to match the given value .
8416	Connect to the local storage .
8417	Create a console instance .
8418	Merge the given array into an array .
8419	Format group suffix .
8420	Check if the environment file exists .
8421	Set the environment file path .
8422	Get a transport instance .
8423	Create a new transport
8424	Determine if the given transport is available .
8425	Create a SMTP transport instance .
8426	Creates a MailTransport instance .
8427	Create a new SparkTransport instance .
8428	Creates a new SSS transport instance .
8429	Create repository instance .
8430	Update the route tree .
8431	Register the console events .
8432	Extend TwigEnvironmentEnvironment .
8433	Register Twig extension .
8434	Returns an array of allowed HTTP methods .
8435	Add a route .
8436	Check if the stream is a pipe
8437	Add mime type
8438	Adds a parser .
8439	Parse the payload .
8440	Get parser for given type .
8441	Get the format of a file .
8442	Sets up the class .
8443	Returns the duration of the request .
8444	Stop a measurement .
8445	Add a measure .
8446	Identify the exception .
8447	Generate a UUID
8448	Set headers .
8449	Validates the HTTP protocol version .
8450	Returns true if the given array contains all strings .
8451	Filter header values .
8452	Get the retry time .
8453	Get the invoker .
8454	Creates an invalid type .
8455	Extend the cache container .
8456	Extend the traceable cache .
8457	Get a value from the environment variable .
8458	Parse a parameter .
8459	Replace the value with the given parameter .
8460	Create table .
8461	Get the PDO connection .
8462	Connects to PDO .
8463	Returns a list of files .
8464	Renders the HTML code of the template .
8465	Returns the timestamp of the given type .
8466	Run the callback .
8467	Returns a copy of this job .
8468	Extend log manager .
8469	Extend the profiler .
8470	Imports a DOMDocument .
8471	Load a DOMDocument .
8472	Load a DOMDocument .
8473	Converts a value to a PHP string .
8474	Validate a DOMDocument
8475	Convert string to string
8476	Checks if the header is a header .
8477	Add references to an array
8478	Process obsolete entries
8479	Process the previous entry
8480	Extract multi - line entries from a string .
8481	Extract headers from an array
8482	Check if file exists
8483	Set the error status
8484	Sets the uploaded file .
8485	Validates the stream .
8486	Create a mock instance .
8487	Parse a command expression .
8488	Parse an input argument .
8489	Parse a single option .
8490	Extract description from string
8491	Validates a cookie name .
8492	Validate cookie value
8493	Set the value of a key .
8494	Get the list of recipients .
8495	Create MongoDB cache driver .
8496	Create Redis cache driver .
8497	Create a RedisPool driver instance .
8498	Create the filesystem cache driver .
8499	Creates a memcache driver .
8500	Create memcache driver
8501	Get data collector .
8502	Compiles routes .
8503	Create route class .
8504	Compiles the route tree .
8505	Compiles the matched route data .
8506	Compiles a list of allowed HTTP methods .
8507	Compiles a route .
8508	Get debug logger
8509	Returns the total number of errors .
8510	Group log levels .
8511	Get the listener .
8512	Bind an event to the dispatcher .
8513	Unbind the event manager .
8514	Creates a regex pattern .
8515	Returns the value of the specified key .
8516	Sets a value at the given key .
8517	Process parameters .
8518	Process a parameter
8519	Renders an exception .
8520	Renders an exception .
8521	Render exception trace .
8522	Get the stack trace .
8523	Gets the frames of the exception .
8524	Formats arguments .
8525	Get the lines of a file .
8526	Get file contents
8527	Normalizes the given name .
8528	Resolve a binding .
8529	Resolves a class .
8530	Resolve a method .
8531	Resolves a parameter .
8532	Resolve parameters .
8533	Get method ReflectionMethod
8534	Check if the value is a function .
8535	Merges the given parameters .
8536	Write the contents of a file .
8537	Put the contents of a file .
8538	Update a resource .
8539	Decrypt a resource
8540	Encrypt a resource
8541	Decrypt a string .
8542	Encrypt string
8543	Get a stream from a string .
8544	Creates a new transport factory .
8545	Create mail manager
8546	Get the version number .
8547	Returns the schema for the given XML file .
8548	Fixes the file location
8549	Parse the visibility .
8550	Sanitize rules .
8551	Run all global filters .
8552	Sanitize a field .
8553	Execute a sanitizer .
8554	Resolve callback .
8555	Resolves a command .
8556	Creates a new command .
8557	Returns the default values for the given command .
8558	Assert that the given callable is valid .
8559	Determine if the given callable is a static method .
8560	Create a cookie jar .
8561	Convert a value to an array
8562	Adds a node to the DOMDocument .
8563	Adds a collection node to the collection .
8564	Create root element
8565	Cast object class to object
8566	Get all registered listeners .
8567	Get all registered listeners .
8568	Validates if the same site is different .
8569	Normalizes the expiration time .
8570	Normalizes the domain name .
8571	Normalizes a path .
8572	Get the timestamp of the cookie .
8573	Create a new trace collector .
8574	Apply translation helpers .
8575	Filter a string from a string
8576	Apply translation filters .
8577	Log a translation .
8578	Collects messages .
8579	Display a list of files .
8580	Display a json file .
8581	Get all files in a directory .
8582	Get the current input stream .
8583	Get directory iterator .
8584	Validates an event name .
8585	Convert a number to bytes .
8586	Converts a number to a decimal number .
8587	Get config from config
8588	Create a new instance .
8589	Adds an extension to the collector .
8590	Create alias loader .
8591	Get cache path .
8592	Push a command to the queue .
8593	Check if a command is queued .
8594	Create the session driver .
8595	Create a new session driver .
8596	Create a new session store instance .
8597	Build the session store .
8598	Builds encrypted session store .
8599	Parse the given action .
8600	Get first element from array
8601	Parses a note .
8602	Convert UTF - 8 charset to UTF - 8 .
8603	Add tag data to array
8604	Create log manager .
8605	Confirm the command to be executed .
8606	Returns default confirmation callback .
8607	Inject the profiler .
8608	Collect data from the given token .
8609	Creates a template .
8610	Create a profile .
8611	Parse a log level .
8612	Starts the session .
8613	Stores the current session .
8614	Garbage collection .
8615	Add a cookie to the session .
8616	Creates a Response instance .
8617	Find a template by name .
8618	Normalizes the file name .
8619	Parse a view .
8620	Add content to body
8621	Sends a Swift Message .
8622	Determine if the given message is sent .
8623	Create a new Message object .
8624	Call a message .
8625	Creates a view .
8626	Handle a route .
8627	Prepare the URI path .
8628	Generate route file .
8629	Generate cache directory .
8630	Get path to file
8631	Check if the given options are valid .
8632	Get parser parser
8633	Get a file path
8634	Require a file .
8635	Create a new link
8636	Set the list of directories .
8637	Add a directory
8638	Import a language file .
8639	Add a message to the translator .
8640	Sets the language for the given language .
8641	Get the fallback for a given language .
8642	Add presenter .
8643	Check if there are more pages .
8644	Returns the host name .
8645	Find frontend controller
8646	Find the hostname and port .
8647	Find the best available port .
8648	Escapes a raw string .
8649	Get the sort data .
8650	Create a new stream stream .
8651	Parse tokens .
8652	Searches for the next token .
8653	Gets the value of the given token .
8654	Creates and returns a new PDO instance .
8655	Decrypt the request header .
8656	Encrypt the response .
8657	Duplicate a cookie .
8658	Register the console command .
8659	Get the console instance .
8660	Initialize project directories .
8661	Find a named path by name .
8662	Gets the namespaces for a hint .
8663	Find a view in the given path .
8664	Get the list of possible view files .
8665	Get information about the event .
8666	Render the cookie header
8667	Extend the twig environment .
8668	Get all messages .
8669	Add a message
8670	Alias for a middleware .
8671	Returns a list of streams .
8672	Handle the exception .
8673	Get error exception .
8674	Get the cache path .
8675	Checks if the given alias exists .
8676	Format the stub stub .
8677	Register the Markdown engine .
8678	Clean export string
8679	Adds the comment to the output .
8680	Add references to the output .
8681	Add flags to the output .
8682	Adds the previous entry to the output .
8683	Adds a message to the output .
8684	Adds a message to the output .
8685	Adds a message to the output .
8686	Add header to header
8687	Get pagination links .
8688	Create a cache driver instance .
8689	Ensure that the user is required .
8690	Checks if the expression is due to the current date .
8691	Run the foreground command .
8692	Run the command .
8693	Call before callbacks
8694	Call after callback
8695	Intervaluate a time interval .
8696	Determine if the given time is within the start time .
8697	Merges two children of the given parent .
8698	Optimizes the given matchers .
8699	Optimizes a regular expression .
8700	Optimizes matchers .
8701	Creates a HtmlDispatcher instance .
8702	Creates a ViewDispatcher instance .
8703	Creates a pretty human readable format .
8704	Returns the number of recipients .
8705	Bootstrap bootstrap .
8706	Handle the request .
8707	Render the exception .
8708	Apply the middleware to the request .
8709	Compile parameters .
8710	Sets a value at the given offset .
8711	Get the invoker instance .
8712	Binds a concrete binding to a concrete type .
8713	Bind a service to the container .
8714	Bind a singleton instance to the binding .
8715	Resolve a plain value .
8716	Resolves a service .
8717	Resolve a binding instance .
8718	Extend the resolved resolver .
8719	Format a binding binding .
8720	Get message ID .
8721	Convert emails to array
8722	Get the MIME part of a message .
8723	Get message payload .
8724	Process recipients .
8725	Process message parts
8726	Process headers .
8727	Check required requirements
8728	Get extension by path .
8729	Get a view instance .
8730	Determine if a string ends with a given string .
8731	Render cookie header
8732	Returns an array of cookies from a cookie string .
8733	Sets the error .
8734	Set the error code
8735	Convert a route to a route .
8736	Prepare route path .
8737	Check if the route is required .
8738	Add a port to the route .
8739	Replace route parameters .
8740	Replace named parameters .
8741	Add query string
8742	Get route string
8743	Parse where clause
8744	Get controller middleware
8745	Gets the disabled middleware .
8746	Add a new cookie
8747	Splits a cookie pair into an array .
8748	Inject content type .
8749	Convert string to string
8750	Generate a random string
8751	Replaces the first occurrence of a string .
8752	Replace the last occurrence of a string .
8753	Replace placeholders in a string .
8754	Get the verbosity level .
8755	Run the command .
8756	Call the given command .
8757	Execute a command .
8758	Returns the argument s argument .
8759	Get option value
8760	Ask a question .
8761	Prompts a question .
8762	Ask a choice .
8763	Render a table
8764	Write a string to the output .
8765	Print information about a given string .
8766	Write a comment .
8767	Print a question .
8768	Print an error message
8769	Print a warning .
8770	Configure the fluent definition .
8771	Sets the parameters .
8772	Get the ID of the response .
8773	Get the recipients .
8774	Renders the template .
8775	Add a new exception to the handler .
8776	Report an exception .
8777	Add a transformer .
8778	Handle an error .
8779	Handle shutdown .
8780	Register exception handler .
8781	Register shutdown handler .
8782	Prepares an exception .
8783	Returns the transformed exception .
8784	Get the log level .
8785	Checks if the given exception is not allowed .
8786	Add a Dumper .
8787	Dumps the given data .
8788	Get a Dumper instance .
8789	Get the MIME entity string .
8790	Get the parameters for the given reflection .
8791	Convert a UTF - 8 string to UTF - 8 .
8792	Register Queue dispatcher .
8793	Optimize the route tree
8794	Extracts the parent node from the given segments .
8795	Returns the sql string with the given parameters .
8796	Open a file
8797	Creates a stream for a resource .
8798	Convert stream to string
8799	Copy a stream to the stream .
8800	Read line from stream .
8801	Set default path
8802	Get the path to the domain .
8803	Get the handler .
8804	Update host from URI
8805	Filter HTTP method .
8806	Creates a URI instance from a string .
8807	Remove file extension .
8808	Changes the path to a file .
8809	Create a CacheManager instance .
8810	Determine if the mock is expected .
8811	Resolve proxy instance .
8812	Determine if the mock instance is a mock .
8813	Returns the name of the given command .
8814	Set file content
8815	Set content disposition .
8816	Set the last modified date .
8817	Returns a new instance with the given value .
8818	Describes the command .
8819	Describes the commands .
8820	Returns an array of commands sorted by command name .
8821	Create the tab tab .
8822	Prepare request attributes .
8823	Prepare request headers .
8824	Prepare server parameters .
8825	Get parsed request body .
8826	Export value to string
8827	Creates a crypted connection .
8828	Get cache configuration .
8829	Adapts a filesystem adapter .
8830	Parse a route pattern .
8831	Generate regex pattern .
8832	Get the invoker .
8833	Check if an object exists
8834	Get the target language from a file .
8835	Creates a DI container .
8836	Create a Dump server instance .
8837	Check if a path exists .
8838	Transforms a path to a path .
8839	Get the contents of a directory .
8840	Filter content by type .
8841	Checks if the session token is valid .
8842	Add a cookie to the response .
8843	Sanitize messages .
8844	Compute the count of messages .
8845	Get sorted messages .
8846	Add a stream to the stream .
8847	Close the stream .
8848	Decode a GIF .
8849	Decode extension .
8850	Decode image descriptor .
8851	Decode image data
8852	Sets the order direction
8853	Returns the list of all items
8854	Loads the collection
8855	Sets the collection of cities .
8856	Sets the list of Nnsworks .
8857	Loads the netnetworks for a country .
8858	Loads country regions
8859	Get all countries
8860	Get country by id
8861	Pad a string to a block .
8862	Get all countries
8863	Updates all available countries .
8864	Update networkworks .
8865	Create a new mapping
8866	Decodes the ID of the message .
8867	Checks if the current color is transparent .
8868	Decodes the display method .
8869	Returns the size of the image .
8870	Returns the offset .
8871	Set offset .
8872	Returns the country object .
8873	Convert the number to an array .
8874	Convert an array to a flat array
8875	Creates a new instance from an array .
8876	Creates a new ID .
8877	Generate unique hash .
8878	Generate auth string
8879	Loads the invoice history .
8880	Call a method
8881	Get a frame by index
8882	Add offset .
8883	Add a new size
8884	Get the list of loops .
8885	Checks if the current color is enabled .
8886	Count the global colors .
8887	Returns the background color of the screen .
8888	Adds a new frame to the frame .
8889	Creates a new frame .
8890	Convert object to array
8891	Get all balances
8892	Get all balances .
8893	Get balance list
8894	Change balance balance
8895	Sync the credit balance .
8896	Sets the canvas .
8897	Sets the canvas .
8898	Creates a frame from a GD resource .
8899	Encode this frame .
8900	Build the log descriptor .
8901	Builds the network extension .
8902	Builds the frame .
8903	Builds the GD extension for the given frame .
8904	Builds the image descriptor .
8905	Create a new Order .
8906	Change the auto - created status of the order .
8907	Refresh the order .
8908	Reload service data
8909	Updates the mapping .
8910	Generate unique hash .
8911	Checks if the given IP is in a range .
8912	Get parameter value
8913	Link meta service
8914	Set meta data
8915	Add meta data
8916	Removes a service from the container .
8917	Release a service
8918	Get a service instance .
8919	Creates a new service instance .
8920	Resolve service provider .
8921	Register a service provider .
8922	Bind a class to a class
8923	Bind a service
8924	Bind a service to the container .
8925	Bind a service to the container .
8926	Returns the service resolver .
8927	Add an argument to the service .
8928	Add arguments from array
8929	Resolves the arguments .
8930	Create a new instance .
8931	Sets the tokens .
8932	Returns the current token .
8933	Get next token .
8934	Skip the given token type .
8935	Get the remaining tokens .
8936	Returns the tokens of the given type .
8937	Get the tokens of the current scope .
8938	Throw an exception .
8939	Parse a child node
8940	Parses the next node .
8941	Sets the container name .
8942	Add service definition
8943	Add services to the container .
8944	Adds a service definition .
8945	Import a container .
8946	Validates a service string .
8947	Generate normalized name for a given service name .
8948	Generate PHP code .
8949	Get resolver method name .
8950	Generates the arguments for the service .
8951	Generate meta data
8952	Generate the resolver types .
8953	Generate resolver mappings .
8954	Generate resolver methods .
8955	Creates a new value from the given token .
8956	Sets the type of the node .
8957	Generate the map for the package .
8958	Get the value of the token .
8959	Check if the token is a token .
8960	Check if a key exists
8961	Push an element to the stack .
8962	Convert the value to an array .
8963	Returns the next token .
8964	Returns an array of tokens .
8965	Displays the application .
8966	Execute a command
8967	Make backup backup .
8968	Pull the repository .
8969	Copy environment variables
8970	Install composer .
8971	Install npm command .
8972	Install the database .
8973	Deploy the package .
8974	Resolve service provider .
8975	Set cache directory
8976	Create a container .
8977	Handle the request .
8978	Import the container .
8979	Check if a path exists
8980	Get the code from the container .
8981	Returns the code for the given namespace .
8982	Parse the container .
8983	Handle the scope .
8984	Handle a scope import statement .
8985	Handle the parameter definition .
8986	Creates service arguments from given arguments .
8987	Handle the service definition .
8988	Creates a new instance of the service definition .
8989	Add a new service definition .
8990	Adds a method call to the service definition .
8991	Add meta data
8992	Determine if the current user is origin .
8993	Check if the request is authenticated .
8994	Sets the value of the parameter .
8995	Returns the name of the given id .
8996	Returns the string representation of this object .
8997	Sends the request .
8998	Sets the type id .
8999	Returns the end point of this point .
9000	Returns the points as a string .
9001	Gets the GPX coordinate .
9002	Collect response data
9003	Get all models .
9004	Get payload payload
9005	Get a callback for a callback
9006	Run a callback .
9007	Sanitize a handle .
9008	Validate all validation rules
9009	Validate a single value
9010	Set the size of a device .
9011	Add a reset reset .
9012	Returns the size of the device .
9013	Builds CSS classes .
9014	Check if a user has a given role .
9015	Renders the row .
9016	Renders the column
9017	Walk through the current grid
9018	Render the row .
9019	Get the columns for the grid .
9020	Returns the index .
9021	Migrate legacy tables
9022	Registers a handle .
9023	Handle AJAX handler
9024	Set a callback
9025	Add validation rules .
9026	Handle the response .
9027	Get the response type
9028	Sends the response headers
9029	Send the response body
9030	Get the content of a given URL .
9031	Check if the model is supported
9032	Change the visibility of a record .
9033	Check if the user has access .
9034	Build the grid .
9035	Get column name
9036	Adds a column to the table .
9037	Add a column resets .
9038	Gets the columns for a given index .
9039	Determine if the given column size exists .
9040	Returns a string representation of a column .
9041	Register a handle
9042	Enqueue scripts .
9043	Returns a list of noncees .
9044	Get grid grids
9045	Parse a template
9046	Gets the content of a cell .
9047	Get grid elements
9048	Create grid row
9049	Create column column
9050	Build grid columns .
9051	Fetch a row from a grid
9052	Prepare custom classes .
9053	Builds column resets .
9054	Create a grid by id
9055	Parse the template .
9056	Check if a model is visible .
9057	Loads form fields .
9058	Get grid grids
9059	Prepare container container .
9060	Update sub columns definition
9061	Append column setter
9062	Append column sizes
9063	Returns a list of all columns in the database .
9064	Returns the IDs of the given data .
9065	Get the columns for a module
9066	Returns an array of column orders .
9067	Returns the number of columns .
9068	Get session data
9069	Check if a key exists
9070	Delete a session
9071	Load data from cache .
9072	Refresh the session .
9073	Parse insert tag
9074	Get the walker .
9075	Translate the parameters into an array .
9076	Get encryption params
9077	Get decoder params
9078	Save dynamic fields
9079	Check if the value is valid
9080	Save the field .
9081	Initializes the entity .
9082	Render fields .
9083	Get field value
9084	Get field values
9085	Check if entity is valid
9086	Save entity .
9087	Assigns the dynamic fields to the page .
9088	Get field by locale
9089	Get repeaters by locale .
9090	Get entities by field id
9091	Get a single entity .
9092	Creates a copy of this entity .
9093	Initialize the group .
9094	Check if the field is valid
9095	Render the group
9096	Save group fields
9097	Get group by rule
9098	Match the given rule .
9099	Initialize a group
9100	Get field data
9101	Sets the dot character of the given coordinates .
9102	Determine if the dot is a dot .
9103	Renders a row
9104	Returns an array of rows .
9105	Gets the coordinate from the map .
9106	Computes a random string with the given length .
9107	Initialize repeat fields
9108	Create a list of form controls for a post
9109	Creates a list of controls
9110	Create a field control
9111	Creates a list of repeater controls .
9112	Saves a new repeater .
9113	Returns the display field value .
9114	Get a single field value
9115	Get template name .
9116	Get the default template name .
9117	Initialize the default value
9118	Get the model instance .
9119	Get html id
9120	Returns the name of the field .
9121	Save field .
9122	Save field .
9123	Save repeater field
9124	Get option value
9125	Move the current position
9126	Move the current position to the current position
9127	Checks if the given task is an ancestor or not .
9128	Determines if the given task is a descendant of this task .
9129	Reset the current state
9130	Checks if the given input is valid .
9131	Configures the wrapped condition options .
9132	Configures the condition options .
9133	Check if a value is a valid value
9134	Check if the input is empty .
9135	Get duration .
9136	Normalizes the given options .
9137	Find the best priority of the task
9138	Get input code .
9139	Check if the input is resolved .
9140	Get file path .
9141	Calculates the order of the process .
9142	Handle the iterator .
9143	Flushes the process .
9144	Get line count
9145	Rewinds the file .
9146	Get transformed transformer code .
9147	Gets the dependency groups .
9148	Get main task group
9149	Checks the dependencies of the dependencies of the task .
9150	Build the dependencies of a task .
9151	Sort dependencies .
9152	Resolve the parent configuration .
9153	Initializes the task .
9154	Flush a task .
9155	Handle the process state .
9156	Check if the process is running .
9157	Validate model .
9158	Convert this object to an array
9159	Get model fields .
9160	Unset a relation
9161	Format the relation name .
9162	Add a relation to the model .
9163	Add a relation to the model .
9164	Add many relation to many relation
9165	Finds and executes a query
9166	Get a collection of models .
9167	Finds a model by its primary key
9168	Count the number of records in the database .
9169	Build select query
9170	Execute select query
9171	Hydrate data from object
9172	Delete the model .
9173	Update the current model .
9174	Insert record into database
9175	Keep memory memory
9176	Removes a callback .
9177	Returns the model instance .
9178	Remove model from database
9179	Returns the model index for the given model .
9180	Save element .
9181	Prefix the given table with the given data .
9182	Prefixes the order with the given data .
9183	Get column definition .
9184	Register a new table
9185	Make simple query object
9186	Creates a query object .
9187	Get model model by slug
9188	Try to install a table .
9189	Uninstall a table .
9190	Check if a table is installed .
9191	Fire plugin event .
9192	Save a post
9193	Get the column name .
9194	Parse default columns
9195	Create a new instance from a model .
9196	Select all columns .
9197	Select a single column
9198	Select all records
9199	Adds an expression to the query .
9200	Add a where clause
9201	Generates a where clause .
9202	Add nested where clause .
9203	Add a where clause to the query .
9204	Add OR WHERE clause
9205	Add a WHERE clause to the query .
9206	Add a where clause
9207	Order by column
9208	Order by expression
9209	Group by column
9210	Add a group by expression .
9211	Join a table with another join .
9212	Adds a JOIN clause to the query .
9213	Sets pagination results .
9214	Execute the query and return the results .
9215	Sets the relationships .
9216	Parses a nested array into a nested array .
9217	Assign a value to an array .
9218	Make the limit .
9219	Build the SQL query
9220	Update meta cache
9221	Find a record by primary key .
9222	Find all primary keys .
9223	Find model by primary key
9224	Find a model by primary key
9225	Get a new model instance .
9226	Create a new model .
9227	Create a new model .
9228	Handle eager loading .
9229	Execute eager loaded eager loading .
9230	Asserts that the operator is valid .
9231	Prepare column name .
9232	Escapes a column value .
9233	Configure the database .
9234	Get column value
9235	Creates a new record
9236	Add a ORDER BY clause
9237	Add an ORDER BY clause
9238	Set all columns
9239	Build the eager load map .
9240	Save a comment .
9241	Get the default argument .
9242	Execute the query
9243	Parse results .
9244	Parse a select query
9245	Parse the order .
9246	Parse pagination .
9247	Checks if two numbers are equal .
9248	Checks if the given array has changed .
9249	Fetch all models from the database
9250	Deletes the model .
9251	Update a set of values
9252	Get total number of pages
9253	Perform the pagination .
9254	Returns the number of models in the database .
9255	Counts the number of models .
9256	Checks if an item exists
9257	Sets a value at a given offset .
9258	Get an offset from the collection .
9259	Build the query string
9260	Boot the model .
9261	Boot traits .
9262	Fill data from array
9263	Set the attributes of the model .
9264	Add an attribute to the collection .
9265	Checks if a column is filled .
9266	Set attribute value
9267	Set attribute value
9268	Get attribute value
9269	Get raw attribute
9270	Get attribute value .
9271	Get attribute from array
9272	Get all relations .
9273	Gets a relation .
9274	Set attribute value
9275	Get the relation value .
9276	Refresh the model .
9277	Get dirty attributes
9278	Get an object by its primary key .
9279	Create a new instance from the query .
9280	Get data from cache
9281	Determine if the cache is cached .
9282	Updates the given value .
9283	Save model .
9284	Save foreign keys .
9285	Save loaded relations .
9286	Saves the record to the database .
9287	Saves the model to the database .
9288	Finalizes the model .
9289	Deletes the model .
9290	Create many models .
9291	Fire model event .
9292	Register a model event .
9293	Get the data to cache .
9294	Register a global scope .
9295	Filter the query by scope .
9296	Create a new query with the given relations .
9297	Returns an array of attributes .
9298	Returns the comparison string .
9299	Get the query string .
9300	Get row by primary key
9301	Get column by key
9302	Retrieves a single value using a helper .
9303	Count the number of records in the database .
9304	Insert data into database
9305	Update a row
9306	Delete a row
9307	Delete many records
9308	Generate an exception from the database .
9309	Save a term .
9310	Make a query object .
9311	Fetches the primary keys for the given primary key .
9312	Add values to the insert query
9313	Sets the value of the request
9314	Set select field
9315	Reset select field
9316	Update table .
9317	Delete a table
9318	Insert a table into the database
9319	Set the FROM table .
9320	Join a table
9321	Add a where condition .
9322	Add OR WHERE condition .
9323	Resets the order by clause .
9324	Set limit .
9325	Resets the limit .
9326	Boot the trash table .
9327	Get the results .
9328	Load model from cache
9329	Load collection from cache .
9330	Cache the results .
9331	Cache a collection .
9332	Cache a single model
9333	Register cache events .
9334	Save a user .
9335	Sets the last updated timestamp .
9336	Get container parameters
9337	Check if the container is cacheable
9338	Boot the container .
9339	Load the container configuration .
9340	Build column name .
9341	Persist the given values .
9342	Persists the removed model .
9343	Persists an existing model .
9344	Create a new model instance .
9345	Initializes the authenticator .
9346	Create a new model .
9347	Convert an asset to an asset
9348	Builds the result of an asset
9349	Parse a CSS file
9350	Send a request to the API .
9351	Get a list of messages .
9352	Count the number of items in the collection .
9353	Enqueue a message .
9354	Saves a message .
9355	Verifies that the order is valid .
9356	Add a message .
9357	Get messages by type .
9358	Import issues .
9359	Returns the value of the given identifier .
9360	Checks if an item exists .
9361	Extends an extension .
9362	Register the service provider .
9363	Add service tag
9364	Finds tagged service tags .
9365	Boot the application .
9366	Initializes the bundles .
9367	Get the kernel parameters .
9368	Validate content .
9369	Validate the given content .
9370	Validate the given content .
9371	Get an asset container .
9372	Output the js script .
9373	Output the stylesheet .
9374	Get assets .
9375	Reverse assets .
9376	Check if a dependency is valid .
9377	Creates a new PostValidator instance .
9378	Returns an instance of the XSDL file .
9379	Creates an instance of XSLTests .
9380	Creates a new validator instance .
9381	Creates a CdfReader instance .
9382	Handle a command .
9383	Set a cookie
9384	Get cookie value
9385	Get first element by closure
9386	Checks if the given string is valid .
9387	Get a node by its path .
9388	Get attribute value
9389	Append a child node .
9390	Populates the node with the given name .
9391	Retrieve a node from the tree .
9392	Check if a file is required
9393	Add queries to the database .
9394	Add timers .
9395	Get file size
9396	Append a validator .
9397	Remove a validator .
9398	Get a validator .
9399	Create a new command instance .
9400	Runs all the files in the directory .
9401	Run a file .
9402	Authenticate a user .
9403	Is logged in user?
9404	Log a user .
9405	Logout the user .
9406	Add a constraint .
9407	Validate input .
9408	Redirect to a URL
9409	Returns the path to the file .
9410	Get message by index
9411	Generate custom post type .
9412	Returns an array of functions
9413	Resolve a command .
9414	Setup the issues .
9415	Calculates the sum of all nodes .
9416	Get value from input
9417	Sets the meta box for a post .
9418	Generate the taxonomy name .
9419	Redirect to a route .
9420	Registers commands .
9421	Get the metadata for a bundle .
9422	Returns the metadata for a given namespace .
9423	Finds the namespace for the given metadata .
9424	Add asset .
9425	Render a view .
9426	Save a cache
9427	Loads the content from a string .
9428	Removes all non - empty schema locations .
9429	Removes all NNSNs from this node .
9430	Removes all non - empty namespace namespaces .
9431	Initializes the bindings .
9432	Binds the registry items to the registry .
9433	Get the fully qualified name of the class .
9434	Initializes the context .
9435	Render the template .
9436	Load config files
9437	Matches a path against a given path .
9438	Adds a section to the router .
9439	Group routes .
9440	Start a block
9441	Stop the block .
9442	Output block .
9443	Create a controller instance .
9444	Instantiate a controller
9445	Validates a URL .
9446	Find a template by its name .
9447	Set Entity Manager
9448	Set the database connection
9449	Render a view .
9450	Open form element
9451	Adds a data transformer to the collection .
9452	Get the content of a segment .
9453	Get market market
9454	Make an API request .
9455	Prepare attributes .
9456	Add extra extras
9457	Fetch an object from the database
9458	Add a dialog
9459	Get connection instance
9460	Start transaction .
9461	Loads the parent node .
9462	Render the DOMDocument
9463	Connect to the socket
9464	Watch the stream .
9465	Set the background color
9466	Sets the image .
9467	Set image id
9468	Set image focus
9469	Set Image Focus
9470	Add a link
9471	Get config value
9472	Set config value
9473	Get translated key
9474	Returns an array with the given key .
9475	Remove styles from a string
9476	Create a new redirect .
9477	Get number of numbers .
9478	Returns a new instance of the driver .
9479	Loads the ManiaScript .
9480	Begin a frame .
9481	End frame .
9482	Redirect to a page
9483	Append XML to XML .
9484	Build the driver .
9485	Sets the border .
9486	Register a font .
9487	Handles an image
9488	Handles an image .
9489	On image quality
9490	Get the redirect url .
9491	Returns a list of redirects .
9492	Get cached Redirects .
9493	Sets the icon .
9494	Sets the selected icon .
9495	Execute a command
9496	Sets the media file
9497	Returns the limit string .
9498	Returns a string representation of the update .
9499	Get parameter value
9500	Get a strict parameter
9501	Get a POST parameter .
9502	Restore a request
9503	Redirects to the given route .
9504	Create a link string
9505	Creates an absolute URL .
9506	Increments the position of the given position .
9507	Increments the position of the position .
9508	Increment position of position
9509	Sets the position of the current position .
9510	Sets the scale .
9511	Sets the alignment .
9512	Set the alignment alignment .
9513	Set the alignment .
9514	Sets the size of the image .
9515	Sets the size of the image .
9516	Sets the size of the image .
9517	Add a button
9518	Add a span .
9519	Get the keys of the response .
9520	Get all redirect codes .
9521	Throw an exception handler .
9522	Compute the error message .
9523	Compute the short message .
9524	Handle a request .
9525	Upload a file
9526	Get current request URI
9527	Calculate the position of the given position .
9528	Returns the position of the given position .
9529	Get the aligned position of an element .
9530	Builds the query from the database
9531	Quote a string
9532	Reset all balances
9533	Delete an asset from the database
9534	Configure the autoloader .
9535	Get service IDs .
9536	Returns the type of the given name .
9537	Executes the transaction and returns the result .
9538	Returns the Balance entry for the given account .
9539	Get hierarchy hierarchy
9540	Change content type
9541	Parses a header line into an array
9542	Convert a string to an array .
9543	Builds an array representation of an array .
9544	Get asset types
9545	Validate an asset .
9546	Calculates the last date for a given type .
9547	Check the given strategy .
9548	Mutate a property
9549	Fetches the given url .
9550	Get the URL of the builder .
9551	Generate the CSV file .
9552	Parse a CSV file
9553	Localize a csv file
9554	Backup the given strings .
9555	Get all asset types
9556	Get asset type
9557	Get customer by id
9558	Get system id
9559	Execute a transaction
9560	Builds the strategy key .
9561	Parses and returns the response .
9562	Displays the login form .
9563	Render the given path .
9564	Get asset types
9565	Send the response .
9566	Authenticate the response .
9567	Verify if the token is valid .
9568	Validate document url
9569	Register the client .
9570	Register the API token .
9571	Register console commands .
9572	Starts a new session
9573	Returns a copy of the given class .
9574	Set status code
9575	Parse a CSS string
9576	Finds the list of tokens in the list .
9577	Find the end of the given string .
9578	Find the end of the current url
9579	Check if a rule is valid
9580	Merge words .
9581	Checks if the given tokens are valid .
9582	Get selectors
9583	Parses a token .
9584	Set the request key for the request .
9585	Get current app key
9586	Registers the request type for the request .
9587	Builds the query builder .
9588	Unpublish a post
9589	Save a post .
9590	Init the scheduler .
9591	Generate a unique key
9592	Generate a unique key for a given key .
9593	Verify if a token is valid .
9594	Generate HTTP headers .
9595	Generate query data
9596	Get the id of the customer
9597	Fit the image .
9598	Returns a list of all the manipulations .
9599	Creates a new entity .
9600	Fill values in the object
9601	Get the URI of the URI .
9602	Set user info
9603	Sets the port .
9604	Set path to file
9605	Get segment by index
9606	Get query parameter value
9607	Builds the given tokens .
9608	Aggregate an aggregate .
9609	Get configuration by strategy
9610	Build the configuration .
9611	Compose an asset
9612	Execute a request
9613	Execute a request
9614	Prepare log IDs .
9615	Validates all transactions
9616	Set headers .
9617	Set a header
9618	Add a header
9619	Remove a header .
9620	Add a prefix
9621	Add a list of prefixes .
9622	Finds the file for a given class name .
9623	Finds the file with the specified suffix .
9624	Convert object to array
9625	Clean up an array
9626	Set the code
9627	Initialize the URI .
9628	Initialize query parameters
9629	Initializes uploaded files .
9630	Parse uploaded files .
9631	Parse uploaded files .
9632	Check if the given content type has a content type .
9633	Run the migrations .
9634	Dispatch the command .
9635	Output a data table
9636	Output an error .
9637	Show help command .
9638	Get all available commands .
9639	Make a directory .
9640	Append the stub to the file .
9641	Replace a file in the storage .
9642	Dispatch the request .
9643	Create a template response .
9644	Get the current page .
9645	Get the response .
9646	Build a response for a given URI .
9647	Get page by URI
9648	Returns the alias for the given URI .
9649	Renders the view .
9650	Creates a new message .
9651	Adds the header IDs to the header .
9652	Run the request .
9653	Run CLI command .
9654	Register the application .
9655	Returns the Markdown renderer instance .
9656	Get the views .
9657	Get migrations .
9658	Finds a page by its identifier .
9659	Returns the page name for the given identifier .
9660	Build meta data for the given identifier .
9661	Returns the page tree .
9662	Get pages for a given path .
9663	Run the command .
9664	Load messages from database
9665	Send activation email .
9666	Search for multiple rows .
9667	Render the template .
9668	Render an expression .
9669	Resolve expression path .
9670	Find all classes .
9671	Prepare configuration array .
9672	Get the host name .
9673	Get a value by key
9674	Renders a message .
9675	Update a message .
9676	Deletes a message .
9677	Finds the model for the given message .
9678	List all pages .
9679	Get the parsed content .
9680	Get sorting .
9681	Returns the URI for the current URI .
9682	Get the URL from the meta file .
9683	Get the title of the meta tag .
9684	Get a GET request
9685	Builds the URL for the API .
9686	Handle the response .
9687	Initializes the configuration .
9688	Generate a profile
9689	Get the template file .
9690	Get the value of a key from an object path .
9691	Sets the root directory .
9692	Find all classes in a directory
9693	Get class reflection .
9694	Upload a media file .
9695	Insert a media
9696	Calculates the hours of the minute .
9697	Get dirty data
9698	Registers a new entity .
9699	Get dirty fields .
9700	Adds the fields to the model .
9701	Get entity id
9702	Get tag tags
9703	Get real class name
9704	Configures the tab factory .
9705	Delete the media .
9706	Create title .
9707	Render the pdf .
9708	Renders the image
9709	Hydrate the given data into an object .
9710	Hydrate a collection .
9711	Deserializes a collection .
9712	Deserializes the given data .
9713	Guess the collection class name .
9714	Build the sitemap .
9715	Get navigation navigation .
9716	Get navigation iterator .
9717	Normalize model attributes .
9718	Get extra property
9719	Generate random string
9720	Limits words into a string .
9721	Get all files
9722	Generate short description
9723	Determine if the given timezone is overlapping .
9724	Returns an array of time slots for the given time .
9725	Merge two time slots .
9726	Get a resource .
9727	Merge default parameters .
9728	Execute a request .
9729	Renders the backend view .
9730	Get navigation iterator .
9731	Get grid iterator .
9732	Before save method .
9733	Processes the given content .
9734	Update media .
9735	Joins the given content
9736	Upload media .
9737	Update data .
9738	List media .
9739	Renders a row .
9740	Delete media .
9741	Set attribute list
9742	Get default model model .
9743	Creates directories .
9744	Export view files .
9745	Export controllers .
9746	Export routes .
9747	Checks if the package is installed .
9748	Copy plugins .
9749	Copy asset files .
9750	Copies all files in the directory .
9751	Get settings by category
9752	Creates a new navigation .
9753	Creates a new nav item .
9754	Loads a block .
9755	Get module module
9756	Serializes an entity .
9757	Get model name .
9758	Get class metadata .
9759	Get class metadata by id
9760	Renders the tree .
9761	Get branch tree .
9762	Remove a key from the cache .
9763	List all tags
9764	Returns the tags of the tags .
9765	Add tags .
9766	Remove tags from the given tags .
9767	Get the parent tab options .
9768	Generate column columns .
9769	Counts the required tab segments .
9770	Create tab separator .
9771	Create a tab element .
9772	Create a new tab element .
9773	Get the stop element .
9774	Add icon icon
9775	Get select options
9776	List the status of a class
9777	Returns a list of available types .
9778	Get type label
9779	Returns the list of sorting order .
9780	Finds the value of the attribute .
9781	Sets the next dropdown item .
9782	Returns the title of the current item .
9783	Generates active field .
9784	Create a new router instance .
9785	Get driver instance .
9786	Call a driver
9787	Call a route .
9788	Resolve dependency dependencies .
9789	Get nested parameters .
9790	Finds the route attributes .
9791	Finds the restable routes .
9792	Finds the routes for a resource .
9793	Get alternative action action .
9794	Dispatch route .
9795	List all deliveries
9796	Getter for shipping method .
9797	Get shipping method .
9798	Add a route .
9799	Build schema schema .
9800	Update shipping address .
9801	Call the controller method
9802	Handle the response .
9803	Handle response callback .
9804	Throw an exception .
9805	Determine if the given content is empty .
9806	Register error handler
9807	Returns an array of options .
9808	Delete item from cache
9809	Save a cache item .
9810	Block messages .
9811	Get a value from the cache .
9812	Set a value in the cache .
9813	Set multiple values .
9814	Delete multiple keys .
9815	Check if a key exists .
9816	Get label .
9817	Get full path .
9818	Make tree tree
9819	Write a command line
9820	Set the resource members
9821	Loads a PSR - 7 class .
9822	Set account ID .
9823	Translate an exception .
9824	Get the console instance .
9825	Executes the request
9826	Get the values of a class
9827	List containers .
9828	Update container properties .
9829	Check if a blob exists
9830	Encode a JWT .
9831	Decode a token .
9832	Get the payload for the given token .
9833	Parse a JWT token .
9834	Calculates the expiration time .
9835	Create a new index
9836	Extracts the default value from a field .
9837	Adds a previous button
9838	Adds a new button
9839	Returns the value of the current page
9840	Get the value of an object .
9841	Checks if value is an object .
9842	Check if value is empty
9843	Converts the given data into an object .
9844	Parses the response into an array
9845	Get a configurator instance .
9846	Check if a configurator is a validator .
9847	Returns the class name of the writer .
9848	Get the writer for the given content type .
9849	Transforms a DateTime object into a string .
9850	Initializes the view .
9851	Read data from a schema
9852	Parse the payload .
9853	Write a payload .
9854	Get a reader instance .
9855	Get the writer .
9856	Run the before test .
9857	Called after a test .
9858	After step is executed .
9859	Initializes the Laravel application .
9860	Bootstrap application .
9861	Add a route to the page .
9862	Displays an action .
9863	Returns the namespace for the given action .
9864	Checks if the current route matches the given route .
9865	Checks if the current action is visible .
9866	Assert that a value is in the session .
9867	Assert that the form has errors .
9868	Assert that an error message is present .
9869	Check if user is logged in .
9870	Adds a record to the database .
9871	Transforms a number into a string .
9872	Gets the number of digits .
9873	Splits an array into a nested array .
9874	Flattens a multi - dimensional array
9875	Convert array to array
9876	Create a new column .
9877	Builds the header view .
9878	Builds the cell view .
9879	Creates a new column .
9880	Determine if the column type is composite .
9881	Get base data
9882	Get shipping data
9883	Get invoice data
9884	Sends data to the request
9885	Trims a string
9886	Converts a namespace prefix to a string .
9887	Transforms a value into a string .
9888	Parses a value .
9889	Add a column .
9890	Check if uploaded file is valid
9891	Resolves a filename .
9892	Update the edit form
9893	Update the edit form
9894	Update the item form
9895	Lock a record .
9896	Applies configuration to the client .
9897	Publish an item .
9898	Load a locale file .
9899	Send a request to the client .
9900	Builds the request from parts .
9901	Store a new user .
9902	Edit a user .
9903	Update a user .
9904	Destroy a user .
9905	Creates a PDF instance .
9906	Add host header
9907	Build the Guzzle request .
9908	Execute callable chain
9909	Check if a class exists .
9910	Run the queue .
9911	Ensure that the thread is running .
9912	Add a request to the queue .
9913	Publish multiple requests
9914	Returns the key of a cursor .
9915	Returns the current collection .
9916	Export formats .
9917	Set an array of options
9918	Publish an item .
9919	Make an HTTP request .
9920	Publish an item .
9921	Import headers .
9922	Get protocol version
9923	Validate the given data
9924	Load the translator .
9925	Set validator .
9926	Get validation errors
9927	Update the number of calls
9928	Get the locked message .
9929	Determine if the current user can be edited .
9930	Check if an offset exists
9931	Sorts the collection .
9932	Parse the date .
9933	Format the birthday .
9934	Validate birthday .
9935	Parses a constant
9936	Translate a constellation .
9937	Update ACL .
9938	Sync ACLs .
9939	List roles .
9940	Register a new role .
9941	Register a new user .
9942	Register the area .
9943	Displays a form to edit a model .
9944	Handle the menu .
9945	Get a single object by criteria .
9946	Returns a new instance of the object .
9947	Get the object factory .
9948	Remove records by criteria
9949	Remove records by criteria
9950	Removes all objects .
9951	Refresh all objects .
9952	Detach objects from the manager .
9953	Get the supported method name .
9954	Call the given method .
9955	Runs a manager .
9956	Flushes all objects .
9957	Prepare the tag from the cache .
9958	Set pagination .
9959	Set current page
9960	Update a permission .
9961	Get paginator .
9962	Find a paginator by criteria .
9963	Boot extension .
9964	Boot the memory .
9965	Load the roles .
9966	Extends validation rules .
9967	Saves the model attributes .
9968	Validate the attributes
9969	Merges the rules into the collection .
9970	Purge invalid attributes .
9971	Generate password hash
9972	Disable filters .
9973	Disable a filter .
9974	Restore disabled filters .
9975	Restore a filter
9976	Get the actions column
9977	Assign user to the given user .
9978	Check if the response is success
9979	Get current template name
9980	Create a new role form .
9981	Display the edit form .
9982	Create a new user .
9983	Edit a user .
9984	Store a new user .
9985	Updates an existing user .
9986	Delete a user .
9987	Save user .
9988	Check if the given path is within the current site .
9989	Get registered type
9990	Returns the tag for the given identifier .
9991	Gets the timestamp field value .
9992	Get the timestamp of the collection .
9993	Execute the collection
9994	Execute the collection of IDs .
9995	Returns the number of rows in the collection .
9996	Get table name
9997	Get order by type
9998	Sets the order by clause .
9999	Get the conditions string
10000	Add a where condition .
10001	Set the join table field
10002	Edit an ACL .
10003	Update ACL .
10004	Set the logger
10005	Starts the process .
10006	Stop the lock
10007	Kill the lock .
10008	Add a where condition to the query .
10009	Get where clause
10010	Returns the number of rows in the table
10011	Returns the first result of the query .
10012	Returns an array of ids .
10013	Execute the query
10014	Load data by type
10015	Get select fields
10016	Get modules .
10017	Remove a resource .
10018	Define all permissions .
10019	Assign role to user .
10020	Remove a role .
10021	Create a new event .
10022	Edit an event .
10023	Store a role .
10024	Update a role .
10025	Destroy a role .
10026	Save a role .
10027	Import the given role .
10028	Get the ACL for a model .
10029	Clear analytics data .
10030	Clears the message data
10031	Displays the application .
10032	Edit a role .
10033	Scope the roles .
10034	Get the status of the user .
10035	Returns the column actions column .
10036	Render the roles .
10037	Modify an entity .
10038	Get the producer for the given type .
10039	Register a producer .
10040	Register a producer by type .
10041	Get an object by id
10042	Get object by id
10043	Adds an object to the registry .
10044	Store a new entity .
10045	Returns the number of rows in the database .
10046	Find a Finder instance .
10047	Get select by type
10048	Returns the escaped fields for the given type .
10049	Get the order by type .
10050	Get the traits for a given type .
10051	Recursively recursively recursively .
10052	Adapts a control widget .
10053	Check if the given control is checked .
10054	Prepare page entity
10055	Sets the login tracking .
10056	Set the email tracking .
10057	Get site path .
10058	Analyze the given url .
10059	Get basket category path
10060	Checks if two values are equal .
10061	Load a row from the database
10062	Copy the object to the database .
10063	Revert a field
10064	Get old value
10065	Set field value
10066	Inserts data into database
10067	Update the current object
10068	Refresh the generated fields .
10069	Compare two values .
10070	Generates a URI for a route .
10071	Store a newly created role .
10072	Get field errors
10073	Check if a field has an error
10074	Add an error
10075	Prepare product title
10076	Set contact status
10077	Modify newsletter page
10078	Modify user registration page
10079	Disable an event subscriber
10080	Restore event listeners .
10081	Disable an event listener .
10082	Disable an event listener
10083	Restore all event listeners .
10084	Restore an event listener .
10085	Get the subscriber class name .
10086	Checks if a subscriber is a subscriber .
10087	Get event listeners .
10088	Returns active user id
10089	Returns user email address .
10090	Generate cache key
10091	Generate cache keys .
10092	Send API request
10093	Check if item exists
10094	Get a value by key
10095	Get a value from an array
10096	Set a value for a key
10097	Put an item in the storage
10098	Sets the value of an item .
10099	Removes an item from the collection .
10100	Remove value from array
10101	Set the logger
10102	Boot the application .
10103	Set mail config
10104	Get field value
10105	Convert value to array
10106	Get page size
10107	Register the container .
10108	Validate the required fields
10109	Get the notice instance .
10110	Initialize admin notices .
10111	Loads the JS script .
10112	Displays a notice .
10113	Register a notice .
10114	Displays a notice .
10115	Displays a notice .
10116	Displays a notification .
10117	Determines if a notification is dismissed .
10118	Restore a notice .
10119	Restore a user .
10120	Restore a notification .
10121	Returns a list of dismissed notifications .
10122	Determine if the given id is dismissed .
10123	Get a notice by id
10124	Replace the item with the given data .
10125	Merges the collection into a collection .
10126	Include all the items in the given array .
10127	Get the items from the raw data .
10128	Set the message attachments .
10129	Parses an array of relations .
10130	Attach an attachment .
10131	Attaches a class to an attachment .
10132	Merge two arrays .
10133	Get response headers
10134	Get the card reference
10135	Get customer reference
10136	Get class name .
10137	Get the namespace of a class .
10138	Determine if the given key exists .
10139	Initializes the mapping .
10140	Set translation data
10141	Read a property
10142	Default action .
10143	Check if a record is before the given action .
10144	Execute the after action .
10145	Append a collection to this collection .
10146	Append data to collection
10147	Append an entity to the collection .
10148	Determine if a property exists .
10149	Get the last entity .
10150	Get element by offset
10151	Check if a field exists
10152	Search for a given value
10153	Get the first element from the collection .
10154	Removes an entity from the collection .
10155	Returns the collection with the given callback .
10156	Creates a new collection .
10157	Returns a subset of the collection .
10158	Splits the collection into chunks .
10159	Unset an index .
10160	Removes a property from the collection .
10161	Sorts the collection .
10162	Get all values for a property .
10163	Bind a collection to the collection .
10164	Group field by name
10165	Prepare scopes .
10166	Parse scope arguments .
10167	Set type .
10168	Registers annotation entities .
10169	Convert string to camelCase
10170	Prepare data for insert
10171	Update data .
10172	Parse filter fields .
10173	Parse filters .
10174	Convert data to array
10175	Get the label .
10176	Returns an array of additional styles by type .
10177	Get additional styles by type
10178	Returns the URL for the current request .
10179	Convert data to array
10180	Configure the model .
10181	Get the database connection .
10182	Import a field .
10183	Converts a string to a string
10184	Fire the job .
10185	Delete record .
10186	Get class metadata .
10187	Flush an entity .
10188	Find an entity by id
10189	Clear an entity .
10190	Removes an entity .
10191	Refresh an entity .
10192	Returns the repository .
10193	Returns true if the entity contains the given entity .
10194	Create a new Entity
10195	Process XML request
10196	Performs a merge between two arrays .
10197	Merges two lines .
10198	Checks if the given array has changed .
10199	Removes the lines from the given list .
10200	Notify a message record
10201	Registers the container .
10202	Applies configuration options to the container .
10203	Add environment variables .
10204	Pop a job from the queue .
10205	Insert a job record
10206	Sets the XDR attribute value .
10207	Converts a string to a string
10208	Create a new record .
10209	Read a record .
10210	Update a record .
10211	Destroy a record .
10212	Removes a record from the database .
10213	Returns the number of records .
10214	Get a proxy instance .
10215	Closes the logger .
10216	Load widgets .
10217	Load theme options .
10218	Event listener for XHTML .
10219	Add child element
10220	Store a new permission .
10221	Edit a role .
10222	Update a permission .
10223	Destroy a permission .
10224	Set the adapter .
10225	Get the adapter type .
10226	Wait until the connection is read .
10227	Get channel channels
10228	Get all games .
10229	Convert data to array
10230	Convert a string to an object
10231	Convert data to json .
10232	Convert string to string
10233	Convert a string to an integer .
10234	Convert data to float
10235	Returns a boolean value .
10236	Generates the hydrator for the given class .
10237	Find all instance properties .
10238	Creates the contents of the class .
10239	Create the hydrate method for the given object .
10240	Update application config
10241	Check local storage .
10242	Find a page by attribute .
10243	Finds an attribute by its value .
10244	Find a page by its value
10245	Finds an option by its value .
10246	Register Widget .
10247	Register view parser .
10248	Register the event handler .
10249	Get a database driver .
10250	Get an invalid result .
10251	Starts a timer .
10252	Subscribe a signal
10253	Unsubscribe a signal
10254	Get attribute value .
10255	Set the keys of the row .
10256	Execute a query on a table
10257	Prepare column properties .
10258	Remove table from table
10259	Select server from server
10260	Select server by port
10261	Get server port
10262	Get server by name
10263	Get server by UID
10264	Create a new server .
10265	Deletes a server .
10266	Start a server .
10267	Stop the server process .
10268	Get permission list
10269	Find a permission by id
10270	Get permission by name
10271	Get permission name by id
10272	Get permission by id
10273	Check if a user has a permission .
10274	Add a log entry to the server
10275	Logs a user .
10276	Logout the user .
10277	Set the user s name .
10278	Get validator .
10279	Set request content
10280	Parses the response and returns the result .
10281	Get application attributes .
10282	Get an option .
10283	Builds the options array .
10284	Get a user .
10285	Ping the server .
10286	Set attribute value
10287	Formats the currency .
10288	Formats the amount .
10289	Returns the rounded amount of rounding .
10290	Splits the amount of percentages .
10291	Injects all elements in the given array
10292	Get the current user
10293	Run the controller .
10294	Search for routes
10295	Get request method
10296	Get all logs .
10297	Converts a string to a string
10298	Convert bytes to bytes
10299	Returns the name of the given codec .
10300	Get group type
10301	Get permission type
10302	Get log level
10303	Convert an entry into a log entry
10304	Get a list of all the items
10305	Get traits .
10306	Call a trait method
10307	Call event method
10308	Get attribute labels .
10309	Get attribute hints .
10310	Returns an array representation of this object .
10311	Fetches the error .
10312	Fetches the reply from an array
10313	Get the identity of the user .
10314	Returns true if the user has the given identity .
10315	Restore the model attribute .
10316	Get user by id
10317	Get a list of games for a given user .
10318	Returns a list of all notices that have been logged in .
10319	Get a channel .
10320	Escape the string to be escaped .
10321	Unescape the string
10322	Get team .
10323	Add a container .
10324	Get stream stream .
10325	Get stream streams
10326	Get featured streams .
10327	Get list of streamed streams .
10328	Get summary of stream summary
10329	Get top top level
10330	Returns the value of the element .
10331	Resolve the host name .
10332	Get the configs .
10333	Send text message .
10334	Kick a player .
10335	Download the avatar .
10336	Bind events to the collection .
10337	Connect to an event .
10338	Get a query variable
10339	Get base uri
10340	Send a command
10341	Wait for event
10342	Prepare a command
10343	Get the host .
10344	List extensions
10345	Writes the application configuration .
10346	Sets the menu item .
10347	Returns the columns of a table .
10348	Create Transliterator instance .
10349	Get the first word by key .
10350	Sets the value of the given key .
10351	Get all notices .
10352	Lists all extensions .
10353	Execute a curl request
10354	Run task .
10355	Deactivates an extension .
10356	Activate an extension .
10357	Uninstall an extension .
10358	Run task .
10359	Get client by name
10360	Downloads a channel .
10361	Send text message .
10362	Delete channel .
10363	Encodes a JWT .
10364	Sign a message .
10365	Decode a JSON string
10366	Commit the configuration .
10367	Bootstrap extension .
10368	Copy a channel .
10369	Send text message .
10370	Get form class name .
10371	Get entity by id
10372	Returns a collection of entities .
10373	Creates a new entity .
10374	Creates a new entity .
10375	Deletes an entity .
10376	Read a file .
10377	Parse JSON string
10378	Parse a file
10379	Normalizes an ID .
10380	Clean input attributes .
10381	Sets the value of the element .
10382	Add an element to the list
10383	Get top level
10384	Remove an element
10385	Get element by id
10386	Loads the state of the model .
10387	Save state .
10388	Set data type
10389	Create a channel .
10390	Returns the localized version for a given version .
10391	Get localized field value
10392	Get an array of version data from a package .
10393	Get package data
10394	Human readable human readable .
10395	Prepare migration task .
10396	Build a task .
10397	Match the request to the route .
10398	Parse a regular expression .
10399	Checks if the object is strict .
10400	Get the profiler instance .
10401	Initializes the transport .
10402	Get the attributes of the model attribute .
10403	Get timestamp attributes .
10404	Evaluate the attributes
10405	Initializes the hook info .
10406	Prepend a request to the request
10407	Send the request to the response
10408	Read data from socket
10409	Send data to socket
10410	Restore the database .
10411	Dump database dump .
10412	Initializes the menu .
10413	Add a button
10414	Fire the console command .
10415	Populate the maximum value of the column
10416	Populate the maximum number of numeric columns .
10417	Transforms a JSON string into an array .
10418	Register the doctrine configuration .
10419	Set file path
10420	Set post field .
10421	Set raw content .
10422	Resolves a class .
10423	Bind a concrete class .
10424	Gets the abstract class .
10425	Dispatch event .
10426	Get the span type for a channel .
10427	Gets the span for a channel .
10428	Add a permission to a channel .
10429	Remove a channel .
10430	Assign a channel to a channel .
10431	Removes a channel .
10432	Get channel list
10433	Get client by ID
10434	Get client by UID
10435	Moves a client .
10436	Kick a client .
10437	Remove a client from a client
10438	Get server group by id
10439	Get server group by name
10440	Add a group to the server .
10441	Get the list of profiles for the server .
10442	Get a channel group .
10443	Get channel group by name
10444	Add a permission to a channel .
10445	Reset the password reset token .
10446	Upload an icon
10447	Create a new snapshot .
10448	Get log view .
10449	Add a new log entry
10450	Sort client list
10451	Sort group list
10452	Sort a list of files .
10453	Copy server group
10454	Get icon name
10455	Get the class name for this player .
10456	Get the view viewer .
10457	Filters a list of nodes .
10458	Writes a file to the cache .
10459	Gets the fully - qualified class name .
10460	Connect to the socket
10461	Disconnect this stream .
10462	Read a line from the stream .
10463	Checks if a given class name exists .
10464	Store a new role .
10465	Update a role .
10466	Destroy a role .
10467	Get a resource .
10468	Get the class name of the class .
10469	Get icon icon
10470	Get channel name
10471	Get suffix flag
10472	Initializes the file transfer .
10473	Upload a file
10474	Download a file
10475	Get session context
10476	Get type manager
10477	Get database connection
10478	Remove a database connection
10479	Process security filters .
10480	Dispatch request .
10481	Get request parameters
10482	Render a view .
10483	Validates a request
10484	Dispatch view .
10485	Redirects to the menu .
10486	Redirects to the default user .
10487	Initializes a user profile .
10488	Get user preference
10489	Returns the default permissions for the given user .
10490	Get current view name
10491	Sets the view name .
10492	Get current view set
10493	Set current view set
10494	Set the base path
10495	Get module path
10496	Generates a hash based on the given data .
10497	Checks if the given string is valid .
10498	Reads the metadata data from the XML file .
10499	Sets the user s account .
10500	Send an email
10501	Log an email .
10502	Get info about a tag
10503	Get autoload file
10504	Loads a metadata class .
10505	Get core library path
10506	Finds the class file in the cache .
10507	Fill a person .
10508	Sets a job .
10509	Process the job .
10510	Throws an exception if it s not found .
10511	Renders the label
10512	Flattens a path .
10513	Get the configuration .
10514	Create a new request
10515	Store the response .
10516	Get the plot data for a given field
10517	Renders the XY chart .
10518	Get the mark for a mark
10519	Get the font name .
10520	Returns the instance of the given token .
10521	Get attribute by key
10522	Set a group attribute
10523	Get attribute by group
10524	Find a model by id
10525	Get the model instance .
10526	Generate a unique identifier for a given hook .
10527	Call all registered filters
10528	Add a new hook .
10529	Check if a hook exists
10530	Call a hook .
10531	Replace a hook .
10532	Count the given hook name .
10533	Determine if the given hook name exists .
10534	Determine if a hook is called .
10535	Add a route
10536	Dispatches a route .
10537	Run the application .
10538	Synchronizes a node .
10539	Set a value in the container .
10540	Get a raw closure for a closure
10541	Encrypts a string
10542	Decrypt a string
10543	Get the default key
10544	Calculate the arguments array .
10545	Get character type
10546	Add a new app
10547	Returns a sub - route .
10548	Serializes this route .
10549	Unserializes the data .
10550	Returns the actual date for the given year .
10551	Returns the timestamp of the current time
10552	Get day name
10553	Short description of method getShortName
10554	Returns the month name .
10555	Returns the short month name .
10556	Format a date .
10557	Returns the date time for a given date .
10558	Register the base services .
10559	Creates a new section tree .
10560	Set owner .
10561	Remove comments .
10562	Minify CSS .
10563	Sets a global variable .
10564	Quote a string
10565	Splits a string into an array .
10566	Get role by role
10567	Add a role
10568	Check if user has a role
10569	Handle error handler
10570	Handler for exception handler
10571	Get error message
10572	Get the error backtrace
10573	Sets the name of the user .
10574	Add a setting
10575	Add a setting
10576	Unset an offset
10577	Set sync state .
10578	Collect sync data .
10579	Returns the expression context .
10580	Terminate this process .
10581	Registers a new child .
10582	Called when a child is executed .
10583	Sets the scope .
10584	Create a new execution .
10585	Creates a new execution .
10586	Find all child executions .
10587	Compute the variables .
10588	Get a variable by name .
10589	Get a variable by name .
10590	Sets a variable .
10591	Sets a variable
10592	Removes a variable .
10593	Removes a variable .
10594	Executes the given node .
10595	Wait for the execution .
10596	Send a signal .
10597	Set the transition .
10598	Creates a new child .
10599	Loads a message from a file
10600	Returns a string representation of a message .
10601	Template variable getter
10602	Reads a directory .
10603	Check if a directory is writable .
10604	Check if file is writable
10605	Reads a file .
10606	Validate email address
10607	Validates an IP address .
10608	Validates an IPv4 address .
10609	Validates an IPv4 address .
10610	Validates an IPv6 address .
10611	Initializes the view object .
10612	Checks if a given class name exists .
10613	Checks if a given class name exists .
10614	Get method parameters
10615	Get reflection method .
10616	Convert data to array
10617	Get a send message
10618	Get blank blank line
10619	Count term columns
10620	Get the error block .
10621	Returns the line of the text .
10622	Slice an array into an array .
10623	Set validation rules
10624	Performs a complete access token .
10625	Get object by name
10626	Creates a new object
10627	Registers an extension
10628	Authenticate an authorization code
10629	Get feed .
10630	Get liked Videos
10631	Set a relationship .
10632	Set properties .
10633	Fetch all records
10634	Count all rows
10635	Find record by id
10636	Creates a new record
10637	Execute the query
10638	Execute the query
10639	Returns true if the condition is true .
10640	Create a link
10641	Sets the parent to the parent page .
10642	Parse picker map
10643	Convert reflection to array
10644	Initialize the fields
10645	Get field by column name
10646	Returns the key for the search rule .
10647	Sets the value of the record .
10648	Saves the old field value
10649	Get the record s record array
10650	Convert the SQL to an array .
10651	Sets the SQL record in the database .
10652	Get the join field for a join
10653	Returns the search rule for the given table .
10654	Get HTTP method
10655	Get request URI .
10656	Gets the options for the given key .
10657	Make the builder instance .
10658	Issue an access token
10659	Format the report .
10660	Decodes a JSON file .
10661	Validates a float .
10662	Lists all comments .
10663	Updates an existing record
10664	Execute the route
10665	Splits an array into a string
10666	Render CSV file
10667	Render a CSV file
10668	Get data table
10669	Load state variables
10670	Get property property
10671	Get active record
10672	Set active record id
10673	Fetch data from the database
10674	Fetch data from the current record
10675	Fetch records from the current record
10676	Get number of records
10677	Execute search query
10678	Get number of number records
10679	Fetch the record from the database
10680	Generates script script script
10681	Get config value
10682	Bootstrap the application .
10683	Checks if a user is authenticated
10684	Set request path
10685	Sets the max age of the file .
10686	Fix mime type
10687	Validate mime type
10688	Check if the file is text .
10689	Check if the file is full .
10690	Set the file properties
10691	Checks if the request is valid .
10692	Read the file from the filesystem .
10693	Sends the request to the response .
10694	Clean source content
10695	Minify JS .
10696	Minify CSS .
10697	Wrapper for text wordwrap
10698	Get text content
10699	Sends the header to the response .
10700	Set origin origin .
10701	Sends the file
10702	Register a text provider .
10703	Normalizes an object .
10704	Determine if the given data type is supported .
10705	Validate data .
10706	Validate model .
10707	Get action attribute .
10708	Get url attribute .
10709	Go to next step
10710	Skip the current step .
10711	Renders the current step .
10712	Finish the current page
10713	Cancel the session .
10714	Render the view .
10715	Generate random string
10716	Checks if the given context is empty .
10717	Returns the subtrees of the given context .
10718	Returns true if the given value contains a given value .
10719	Merge this object into another one
10720	Create a new application instance .
10721	Dispatch event .
10722	Count a group by field group
10723	Aggregate a group .
10724	Find a document by id
10725	Get MongoDB IDs .
10726	Normalize a date .
10727	Checks if a form is in a form
10728	Render the page
10729	Get current page url
10730	Initializes all forms
10731	Compare two integer values
10732	Get integer value
10733	Find source files .
10734	Registers a namespace .
10735	Build the cache .
10736	Find composer autoloader .
10737	Find the vendor loader directory .
10738	Returns an array of class names for a given class .
10739	Get the middleware for the given name .
10740	Set a middleware
10741	Returns a new instance with the given string .
10742	Returns a new instance with the given limit .
10743	Returns a string representation of a string .
10744	Returns a string representation of an array .
10745	Returns a string representation of an array .
10746	Returns a string representation of an array .
10747	Generate a PHP object .
10748	Dispatches a response .
10749	Bootstrap application .
10750	Render a webpage
10751	Render a smarty template
10752	Renders the PHP code .
10753	Set HTTP headers
10754	Create a new comment .
10755	List all files in a directory
10756	Sort modules .
10757	Get all routes
10758	Render menu items
10759	Renders a single menu item .
10760	Writes a CSV file .
10761	Configure the configuration .
10762	Read configuration file .
10763	Run the runner .
10764	Run export .
10765	Write cache .
10766	Get the loaded cache instance .
10767	Initializes the config file .
10768	Reads a command line .
10769	Flush a command
10770	Check if the given value is a valid chainable .
10771	Validates form element
10772	Checks if the group is satisfied .
10773	Complete access token .
10774	Get the SQL value of the query .
10775	Get the value of the field .
10776	Save old value
10777	Get default value
10778	Get the value of the field .
10779	Gets the value of the update field .
10780	Check if the required data is required
10781	Check if the value is a valid value .
10782	Validates the data
10783	Finds a template file
10784	Prepare the name of the theme .
10785	Set the theme .
10786	Registers a theme .
10787	Add a theme .
10788	Convert a key to an array
10789	Get the offset of an array .
10790	Returns the deviation of the given array .
10791	Set the middleware .
10792	Get action name
10793	Get path params
10794	Check if the scheme matches the given scheme .
10795	Check if the hostname matches the given hostname .
10796	Check if the given URI matches the given URI .
10797	Fetch all nodes in the tree
10798	Fetch node path
10799	Get children nodes
10800	Get all settings
10801	Get the link .
10802	Get text .
10803	Get new record record
10804	Set the secret .
10805	Get binary value
10806	Returns a string representation of the given number .
10807	Add a table column
10808	Adds a SQL expression to the query .
10809	Resets the SQL statement .
10810	Add order by clause
10811	Adds an SQL statement to the query .
10812	Add an association
10813	Returns the SQL statement .
10814	Gets a data record
10815	Execute console command
10816	Get default template locations
10817	Renders the text
10818	Get font fonts
10819	Check if the group matches the given group .
10820	Validates input fields
10821	Validates the uniqueness of this record .
10822	Checks if the current record is a valid record
10823	Check if a record is deleted
10824	Updates an existing record
10825	Create record record .
10826	Generate the id of this object
10827	Insert a record into the database
10828	Deletes a record
10829	Returns an array of all audit fields .
10830	Runs the trigger .
10831	Get join fields
10832	Gets a join record
10833	Check if a record id is valid
10834	Runs the check .
10835	Initializes the report
10836	Resolve route .
10837	Resolve action parameters .
10838	Check if a setting exists .
10839	Get setting by name
10840	Get all settings .
10841	Loads the cache .
10842	Sets the cache location .
10843	Prefixes CSS rules .
10844	Prefix alignment .
10845	Prefix content .
10846	Prefix the alignment
10847	Prefixes a string .
10848	Prefixes content .
10849	Returns a list of prefixes .
10850	Create a comment
10851	Delete a URL
10852	Get filtered media .
10853	Get the preferred image .
10854	Get the placeholder for the media .
10855	Creates a rule from a string .
10856	Returns the output string .
10857	Returns the reflection method for the given object .
10858	List the sitemap .
10859	List sitemap .
10860	Retrieves the tree
10861	Check if the request is valid .
10862	Determine the access token .
10863	Call a middleware .
10864	Determine if the context is called .
10865	Stores a command .
10866	Execute a callback .
10867	Gets a phar instance
10868	Creates a Phar instance .
10869	Get a pattern by name .
10870	Merge group config .
10871	Remove a record from the database
10872	Removes a record from the database
10873	Remove record from database
10874	Return array of relations
10875	Read metadata from xml
10876	Read meta collection
10877	Prefix package name .
10878	Allow access to the current user
10879	Build a Redis instance .
10880	Get model instance .
10881	Add a resolver
10882	Get resolver .
10883	Sets the resolver .
10884	Resolve a reference .
10885	Set the author .
10886	Registers a module
10887	Sort modules .
10888	Sets the precedence of a module .
10889	Configure the composer
10890	Find all modules .
10891	Get element by field name
10892	Register custom helpers .
10893	Converts a formatted string to a formatted string .
10894	Converts a value to a formatted string .
10895	Convert a value to a number .
10896	Converts a number to a formatted number .
10897	Convert value to date format
10898	Convert a date to a date format
10899	Convert a value to a datetime
10900	Convert a date value to a datetime format .
10901	Convert a value to a currency .
10902	Converts a currency value to a currency .
10903	Converts a string to a phone number .
10904	Convert a date to a datetime format
10905	Parse a date string
10906	Renders the SQL for the database .
10907	Render the DSN string for the database .
10908	Render DSN parts .
10909	Insert data into database
10910	Insert multiple records into the database
10911	Get request path .
10912	Get container by id
10913	Format a query string
10914	Formats a query string .
10915	Sets the query parameters .
10916	Get database profile
10917	Format the report .
10918	Checks if the password is valid .
10919	Validate email address
10920	Validates a date .
10921	Get error message
10922	Create a new adapter .
10923	Generate a new collection
10924	Generate a new ID .
10925	Generate a new system id
10926	Generate a new GUID
10927	Gets the ID of the specified row .
10928	Get the value of an attribute .
10929	Set the logatter .
10930	Prepare file .
10931	Closes a file
10932	Get log file path
10933	Get the formatter for the given extension .
10934	Get the organization manager .
10935	Render a view
10936	Outputs a PDF .
10937	Set the base URL
10938	Make a curl request
10939	Get multiple requests
10940	Perform a POST request .
10941	Perform a POST request .
10942	Push a job to the queue .
10943	Create a new job .
10944	Get the content identifier for a given key .
10945	Returns the signature signature for the given extension .
10946	Returns the content signature for the given extension .
10947	Get the title of the form .
10948	Removes a record from the database
10949	Sorts a record
10950	Filter view children by view column
10951	Filter the view children .
10952	Sets the value of a field .
10953	Returns the data array for the given entity .
10954	Fill data from database
10955	Extract a zip archive
10956	Adds a file to the zip archive .
10957	Extracts a file from a zip archive .
10958	Read a line from a file .
10959	Get file size
10960	Get classes from a file .
10961	Add a new route
10962	Resolve route .
10963	Resolves a config key .
10964	Check if a key exists .
10965	Get a value from the cache .
10966	Load config file .
10967	Get background details
10968	Open the connection .
10969	Check response status code
10970	Handle the message .
10971	Checks if the given status is valid .
10972	Read the next chunk size .
10973	Read the stream .
10974	Get property value
10975	Get default value
10976	Returns the hidden field .
10977	Get text .
10978	Gets the key map for this event
10979	Get context menu
10980	Get the function name .
10981	Get redirect page .
10982	Get the function type of an event handler
10983	Set form name
10984	Adjust form name .
10985	Gets the form of the form .
10986	Parse a function string
10987	Call the middleware .
10988	Clear the middleware .
10989	Triggers the request .
10990	Reset the middleware .
10991	Create a new element .
10992	Convert counter to string
10993	Get a GET request
10994	Send POST request
10995	Get the response
10996	Check if the current redirects should be redirected .
10997	Check if the current time is effective
10998	Parse a string
10999	Parse a string
11000	Render a form
11001	Render a smarty template
11002	Renders the PPHP form .
11003	Display a single entity .
11004	Store a new resource .
11005	Call entity method
11006	Get middleware middleware .
11007	Get default commands .
11008	Updates the given user .
11009	Get the settings .
11010	Get group
11011	Gets the members of this group .
11012	Get the effective membership of this group
11013	Parses the members of a member .
11014	Parses the history .
11015	Parse the affiliate data
11016	Parses a search string
11017	Get web page object
11018	Get element by name
11019	Get error elements
11020	Renders all sub forms
11021	Set the bundle class name .
11022	Get translation key .
11023	Returns a list of all words .
11024	Load config from config
11025	Remove an item from cache
11026	Returns the IDs of the cache .
11027	Clean all caches
11028	Make a directory .
11029	Read a configuration file .
11030	Get config reader by file extension
11031	Add a new route
11032	Add a route .
11033	Find a route by name .
11034	Get a new route .
11035	Find an issue by issue .
11036	Get the content of a post .
11037	Get WordPress categories .
11038	Get WordPress menus .
11039	Get WordPress pages .
11040	Get WordPress posts .
11041	Get post types .
11042	Get WordPress tags .
11043	Get WPonomies .
11044	Get the list of WordPress terms .
11045	Add a search path to the search path .
11046	Sets the precedence of the given module .
11047	Returns the precedence of the given module .
11048	Clear cache .
11049	Get cached data
11050	Resolves the given file .
11051	Parse request uri
11052	Saves the state of the current state .
11053	Get current step
11054	Get form input fields
11055	Cancel the session .
11056	Registers a subtype .
11057	Get input from request
11058	Delete a file .
11059	Convert expiration time to seconds
11060	Get key words from text
11061	Find emails .
11062	Returns true if the given array contains the given values .
11063	Redirect to the request .
11064	Migrate migration .
11065	Migrate a directory .
11066	Sets the ID of the model .
11067	Run the worker .
11068	Check if a parameter exists
11069	Generate OAuth request
11070	Generate OAuth signature
11071	Get a node .
11072	Create a new item .
11073	Add a setting
11074	Add a set of settings .
11075	Get all settings .
11076	Get the cached settings .
11077	Get all settings .
11078	Get the cached settings for the current group .
11079	Get filtered settings .
11080	Returns an array of all settings .
11081	Renders the node
11082	Render node items
11083	Renders a single node .
11084	Run the application .
11085	Registers an environment .
11086	Install packages .
11087	Initializes the bootstrap configuration .
11088	Autoload a class
11089	Loads a file
11090	Forward route .
11091	Set glyphicon icon
11092	Set query parameters
11093	Set the limit
11094	Get database connection
11095	Get a property
11096	Returns the object associated with this object .
11097	Set association data
11098	Parse a docblock .
11099	Creates a new instance from the database .
11100	Creates a new instance from a file .
11101	Get a single field
11102	Check if a field exists
11103	Get field names .
11104	Get the default data model .
11105	Authorize index .
11106	Authorize a request .
11107	Retrieves a nested item from the given pattern .
11108	Initializes the browser .
11109	Get the export implementation .
11110	Get the report instance .
11111	Get runner instance .
11112	Get the cache instance .
11113	Builds the UPDATE SQL query
11114	Builds the SQL to delete a record .
11115	Returns the HTML for the edit box .
11116	Returns the children of this node .
11117	Get attribute value
11118	Get all attributes .
11119	Get child node
11120	Get the value of a literal value .
11121	Cache the given closure .
11122	Handle the callbacks
11123	Check if the method is valid
11124	Determine if the callable is a callable .
11125	Checks if the context is set .
11126	Prepare the curl request
11127	Get the response .
11128	Parse the response body .
11129	Save session variable
11130	Load a session variable
11131	Save session data
11132	Clear session objects
11133	Save json array
11134	Set view history .
11135	Starts the timer
11136	Converts the timestamp to seconds
11137	Increment the timer
11138	Reset the timer .
11139	Checks if the executable is valid .
11140	Get redirect page
11141	Processes a DataObject
11142	Process the URL
11143	Get base URI
11144	Validate an identity
11145	Setup the authentication result .
11146	Sets the value of a property .
11147	Get the first array of entities .
11148	Get data from list
11149	Format report .
11150	Call middleware .
11151	Call proxy methods
11152	Call proxy method
11153	Call a set of setter methods
11154	Catch the middleware .
11155	Clear middleware .
11156	Disable a middleware .
11157	Enable a middleware .
11158	Returns the middleware for the given key .
11159	Returns the middleware for the given group .
11160	Group middleware .
11161	Check if a middleware has a middleware
11162	Determine if the given key is disabled .
11163	Checks if the given key is enabled .
11164	Get the middleware .
11165	Get the middleware collection .
11166	Append middleware to middleware .
11167	Push a middleware
11168	Set the middleware .
11169	Call middleware .
11170	Save the cache .
11171	Get form fields
11172	Setup the bundle .
11173	Finds the transition .
11174	Generate a remote call
11175	Submit a submit request
11176	Create a link tag
11177	Generates a submit button
11178	Cast key to string
11179	Check if a middleware is a middleware .
11180	Check if a middleware is a collection of middleware .
11181	Resolve middleware .
11182	Resolve a middleware .
11183	Resolve middleware collection .
11184	Resolve middleware .
11185	Resolve middleware .
11186	Resolve a middleware
11187	Render a report
11188	Generate unique string
11189	Determine if the role is a valid role .
11190	Check if the user has a role .
11191	Get the hash of the hash
11192	Get info about curl
11193	Performs the request .
11194	Check if a view has access to a view .
11195	Returns the match for the given view name .
11196	Format the report .
11197	Loads the XML document .
11198	Validates a schema
11199	Validates a schema
11200	Resolves an array of xinclude objects .
11201	Get element value
11202	Get an element by name
11203	Set default namespace
11204	Register environment namespace
11205	Checks if the current environment is an environment .
11206	Refreshes the current node
11207	Parse XML error message
11208	Get resolver .
11209	Check if the authorization parameters are valid
11210	Create a new authorization code
11211	Complete access token .
11212	Prints the output .
11213	Get form inputs
11214	Redirects to the given form .
11215	Show client alert
11216	Show error message
11217	Close popup popup
11218	Runs a script .
11219	Redirects a view
11220	Append script scripts
11221	Returns an array of script scripts .
11222	Append custom stylesheet
11223	Returns an array of additional CSS styles
11224	Include client scripts
11225	Include rss scripts
11226	Include css scripts .
11227	Include property scripts .
11228	Include validators .
11229	Execute all actions
11230	Compose action message
11231	Convert string to array
11232	Process form errors
11233	Set sub forms
11234	Loads a picker .
11235	Set request parameters
11236	Fetches data from the data set
11237	Get element id
11238	Suggests a user input .
11239	Renders the context menu .
11240	Renders the HTML of the form .
11241	Get event log message
11242	Returns an array of event listeners .
11243	Run the event log .
11244	Get the current element of the event .
11245	Sets client scripts
11246	Remove a middleware
11247	Run the middleware .
11248	Creates a DateTime from a string .
11249	Generate a secret key
11250	Decode binary string
11251	Returns all files in the directory .
11252	Returns an array of all files
11253	List all directories
11254	List files .
11255	Make file .
11256	Make the directory .
11257	Moves a file to another .
11258	Rename file
11259	Remove directory recursively
11260	Sets the name of the field .
11261	Set type .
11262	Set input format
11263	Set field value
11264	Get the storage value .
11265	Saves the children .
11266	Add children to entity
11267	Get all models .
11268	Output a list of resources .
11269	Convert a resource to an array .
11270	Generate captcha code
11271	Verify if the site is valid .
11272	Get a service object
11273	Render the error .
11274	Renders an HTTP exception .
11275	Render an exception .
11276	Render the serializer .
11277	Render the serializer .
11278	Renders an HTTP response .
11279	Render JSON API response
11280	Render an exception .
11281	Render a JSON API response .
11282	Render the serializer .
11283	Render the serializer .
11284	Render JSON API response
11285	Render the serializer .
11286	Render the serializer .
11287	Render the serializer .
11288	Open a session by ID
11289	Create a new session
11290	Prepare text .
11291	Displays text .
11292	Display empty lines .
11293	Initializes the application .
11294	Sets the response header .
11295	Initializes the debug bar .
11296	Starts a session
11297	Checks if the current session is allowed .
11298	Regenerate the session .
11299	Validate session data
11300	Link layers .
11301	Get a model from the request .
11302	Register a page .
11303	Print CLI header
11304	Parses the raw body .
11305	Remove extra indentation
11306	Handle the request .
11307	Parse query string from url
11308	Binds the page to the template
11309	Returns the match of the given URI .
11310	Returns the justification of a given value .
11311	Returns a list of local files .
11312	Extract documents from a document .
11313	Checks if a link is excluded .
11314	Save a file .
11315	Checks if a file exists
11316	Returns the next order number .
11317	End the collection .
11318	Display text .
11319	Prints a line of lines .
11320	Fit the algorithm to the model .
11321	Performs the prediction .
11322	Initializes the database .
11323	Write a record to the database .
11324	Draw a list item
11325	Start a new line .
11326	Initialize driver .
11327	Get the size of a file .
11328	Build a form for a section .
11329	Get form factory .
11330	Load fixtures from an iterator .
11331	Resolve relative url
11332	Install plugin .
11333	Install plugin plugin .
11334	Install composer .
11335	Updates the plugin .
11336	Update composer .
11337	Uninstall plugin .
11338	Uninstall plugin .
11339	Removes all files matching the given directory .
11340	Removes a directory .
11341	Set the colors .
11342	Get text area
11343	Calculates the width of the given data .
11344	Applies a query to the given date .
11345	Get date value
11346	Cast value to attribute
11347	Convert attributes to array
11348	Sets a value at the given key .
11349	Get a menu instance .
11350	Triggers the response .
11351	Returns an array of service definitions .
11352	Parse the imports .
11353	Parse the service definition .
11354	Load a configuration file .
11355	Resolve service definition .
11356	Initializes the autoloader .
11357	Get the API key
11358	Convert a string to human readable format .
11359	Set the bullet .
11360	Sets the column definition .
11361	Calculates the total width of the column .
11362	Determine if the column has a column .
11363	Get the header text .
11364	Checks if the data is valid .
11365	Calculates the width of the given data .
11366	Draw a row
11367	Create a new session .
11368	Create new session file
11369	Save session data
11370	Acquire a lock
11371	Creates a form for a section .
11372	Factory method to create a new object
11373	Get contacts .
11374	Parse the facts .
11375	Find record by id
11376	Find one or more rows in the database .
11377	Get all classes
11378	Find all records in the database
11379	Creates a new record
11380	Update a where clause
11381	Parse notation notation .
11382	Applies conditions to the given expression .
11383	Calculate the calculation
11384	Create a new plugin instance .
11385	Sets the file .
11386	Add a template
11387	Checks if the cache file exists .
11388	Converts the given blocks to a placeholder .
11389	Get metadata .
11390	Build the definition provider providers .
11391	Returns the result of a formula .
11392	Save a formula .
11393	Add header .
11394	Set dropdown item
11395	Checks if the given attributes is granted .
11396	Download a file .
11397	Get the URL for the given key .
11398	Sets the cover cover .
11399	Get data by key
11400	Get data from a URL
11401	Install resources .
11402	Check if date is valid
11403	Renders a frame
11404	Run a command .
11405	Factory method to create a new class
11406	Create a new session .
11407	Send a new entity .
11408	Register providers .
11409	Register provider .
11410	Get the facts .
11411	Populates the facts .
11412	Record a domain event .
11413	Apply a domain event to a domain event .
11414	Call plugin functions
11415	Draws a row
11416	Calculates the formula .
11417	Check if the request has a layout .
11418	Initializes the terminal state .
11419	Set the style of the given style .
11420	Clear styles .
11421	Set text color
11422	Set fill color
11423	Set the colors
11424	Reverses the current color .
11425	Creates a new function .
11426	Load plugins .
11427	Show if the user is enabled .
11428	Check if the cache is loaded .
11429	Update plugin cache .
11430	Register plugin hooks .
11431	Get a channel .
11432	Initialize loggers .
11433	Create a logger instance .
11434	Get the list of locations for a channel .
11435	Factory method to create a class
11436	Get interfaces .
11437	Get parent class
11438	Get all methods .
11439	Get all properties
11440	Determine if the given type is currently active .
11441	Add a style resource
11442	Returns an array with the stylesheet .
11443	Rewrite the paths for a resource .
11444	Wrap media rules .
11445	Move the start of the given content .
11446	Get the contents of a file
11447	Remove a file from the archive .
11448	Get archive path
11449	Get archive file path .
11450	Remove merged values .
11451	Filters an array using a filter .
11452	Checks if the terminal size is set .
11453	Render the given content .
11454	Render a script .
11455	Generate a mail address .
11456	Creates a new control .
11457	Generates a static attribute .
11458	Add a CSS style
11459	Make directory .
11460	Publish files .
11461	Initializes the user .
11462	Logs a user .
11463	Regenerates the CSRF token .
11464	Login by cookie
11465	Returns the URL for the current request .
11466	Determine if the request is required .
11467	Refresh the identity cookie .
11468	Refresh the authentication status .
11469	Determine if the user can access the given permission .
11470	Get the day of the week .
11471	Save uploaded file
11472	Execute query
11473	Add a delete statement
11474	Add an insert statement
11475	Add a join to the query .
11476	Add where conditions .
11477	Add a having clause .
11478	Get SQL for delete query
11479	Creates a new parameter .
11480	Bind the logger .
11481	Bind the logger .
11482	Set status code
11483	Get the response body .
11484	Redirect to URL
11485	Creates an empty response .
11486	Prepare headers
11487	Prepare cookies .
11488	Returns default response formats .
11489	Extracts the user password from a string .
11490	Get all scenarios .
11491	Fill the scenario attributes .
11492	Get form name .
11493	Get the attributes of the class .
11494	Validates the attributes .
11495	Validates multiple models .
11496	Renders a message .
11497	Add an attachment
11498	Add a new plugin .
11499	Send request .
11500	Loads a class
11501	Get the list of listeners .
11502	Set property properties .
11503	Get an event listener from an annotation .
11504	Get option options
11505	Set options .
11506	Get key value by key
11507	Assigns an array of fields to an array .
11508	Load entities from directory .
11509	Extend the entity manager .
11510	Checks all predicted predictions .
11511	Processes the extended extension .
11512	Verify class method
11513	Verify class property
11514	Verify the given function .
11515	Verify the closure .
11516	Verify the given dispatch .
11517	Get dependency dependencies .
11518	Get the dependencies of the given dispatch .
11519	Dispatch class method .
11520	Dispatch the class property .
11521	Get the dispatch class .
11522	Get the response .
11523	Dispatch the response .
11524	Dispatch a callable .
11525	Get string arguments .
11526	Get request arguments .
11527	Parse request arguments .
11528	Link a route .
11529	Set the protocol version .
11530	Asserts that the header values are valid .
11531	Inject a header into an array .
11532	Get the current date
11533	Check if a cookie is valid
11534	Stores a cookie
11535	Add cookies from response
11536	Get all matching cookies
11537	Get all cookies
11538	Serializes the cookies .
11539	Unserializes session data
11540	Check if a cookie matches the given domain name .
11541	Factory method to create a command
11542	Gets the options for a command .
11543	Returns the help of a command .
11544	Get a singleton instance
11545	Convert the given expression to an expression .
11546	Parse the given expression .
11547	Process a key
11548	Trims a string
11549	Set the encoding .
11550	Creates an exception exception .
11551	Initializes the language .
11552	Initializes the language prefix .
11553	Get message formatter .
11554	Start transaction .
11555	Get the API request URL .
11556	Get API request parameters
11557	Get success messages .
11558	Get success message .
11559	Find all budgets by account id
11560	Get current language
11561	Parses the Accept header .
11562	Bind a binding .
11563	Make a class instance .
11564	Validates a URL .
11565	Check if a field is live
11566	Get an object from a field
11567	Wrapper to wrap an object
11568	Creates a date field .
11569	Make a session identifier .
11570	Encrypt session data
11571	Decrypt session data
11572	Get encryption key .
11573	Set encryption algorithm .
11574	Set the hash algorithm .
11575	Prepare UPDATE statements .
11576	Initializes the service
11577	Get parameter value
11578	Check if the given attribute exists .
11579	Check if the given attribute exists .
11580	Check if value exists
11581	Gets the SQL statement .
11582	Render the modal .
11583	Localize a file .
11584	Detach the current stream .
11585	Read data from stream .
11586	Creates a new Request object .
11587	Creates a new instance from the request .
11588	Set server server
11589	Set request headers .
11590	Get request path
11591	Get the request path .
11592	Get http host
11593	Set request method
11594	Get request method .
11595	Get mime type
11596	Get the format for a given mime type .
11597	Get request format
11598	Render a template .
11599	Initialize the http client
11600	Add a middleware
11601	Create request application .
11602	Sets the alias for the given path .
11603	Set aliases .
11604	Returns the error level for the given code .
11605	Generate a proxy
11606	Get method parameters
11607	Generate proxy class .
11608	Generate proxy properties .
11609	Get proxy methods .
11610	Generate proxy class name
11611	Get the argument declaration .
11612	Determine if the method is proxy .
11613	Checks if the given methods are allowed .
11614	Traverses the given iterator .
11615	Get method parameters
11616	Create a new repository .
11617	Load messages from database
11618	Setup the application .
11619	Bootstrap configuration .
11620	Bootstrap the application .
11621	Bootstrap container .
11622	Get environment variable
11623	Set environment variables
11624	Get config value
11625	Throw an exception .
11626	Redirect to the given URL .
11627	Create a Response
11628	Redirect to a route .
11629	Creates a view .
11630	Get item by key
11631	Validates a descriptor .
11632	Validate descriptor .
11633	Get the cache settings .
11634	Set cache settings .
11635	Initialize log
11636	Get log file path .
11637	Verify password .
11638	Set whether or not .
11639	Renders the progress bar .
11640	Renders a progress bar .
11641	Process the soap server
11642	Get the SOAP server
11643	Validates the given entity .
11644	Flush the cache .
11645	Invalidate the entity .
11646	Add a new tag to the container .
11647	Determine if the current script is set .
11648	Set the callback
11649	Filters the given value .
11650	Calculate the usage percentage .
11651	Get all Seo objects .
11652	Set the seo attributes
11653	Gets the seoable object .
11654	Convert value to boolean
11655	Calculate the ordinate of the given arc .
11656	Returns the arcissa of the given coordinate .
11657	Add an attachment
11658	Encodes the request body
11659	Encode a file .
11660	Encode part of the file
11661	Add a subpart
11662	Encode a quoted string
11663	Build a header parameter
11664	Builds a query parameter .
11665	Explode quoted string
11666	Encode header value
11667	Encodes a string .
11668	Get all messages .
11669	Returns the line of the file .
11670	Renders the given items .
11671	Prepares the controller .
11672	Sets an option
11673	Generates a slug .
11674	Create a new sentence .
11675	Extracts the gallery data from the given data .
11676	Check if the session is valid .
11677	Get error message .
11678	Sets the same site .
11679	Clean up the header
11680	Find all classes in a given namespace .
11681	Get namespace path
11682	Get namespace paths .
11683	Get namespace prefixes .
11684	Gets the path prefixes .
11685	Update session data
11686	Merge the current session .
11687	Get session data
11688	Get page from request
11689	Builds the query .
11690	Returns an array of filters .
11691	Create form instance .
11692	Store the result in the database
11693	Get pagination .
11694	Get previous previous record
11695	Convert the fields to an array .
11696	Add a new field
11697	Process connection options
11698	Get connection params
11699	Check if database is installed
11700	Returns the SQL to use for this query
11701	Execute the SELECT query
11702	Get the repository .
11703	Create a new entity .
11704	Save an entity .
11705	Removes an entity .
11706	Commit the collection .
11707	Get the database store .
11708	Get config config .
11709	Get the PDO object from the config .
11710	Validate password .
11711	Creates a media object from an array of media types .
11712	Parses a string
11713	Compare two strings .
11714	Calculate the distance of the given latitude .
11715	Convert a datetime to a datetime
11716	Convert days to decimal
11717	Renders the production error .
11718	Render debug error
11719	Logs the application .
11720	Generate config file .
11721	Creates a config file .
11722	Save messages to PHP file .
11723	Saves the given messages to the database .
11724	Creates a new instance from an array .
11725	Creates a new instance from a string .
11726	Creates a DateTime object from a DateTime object .
11727	Creates a new instance from seconds .
11728	Invalidate tags .
11729	Flush the response .
11730	Encode tags .
11731	Register the package .
11732	Get all cookies .
11733	Set cookie .
11734	Removes a cookie .
11735	Confirm a user dialog
11736	Get the labels .
11737	Returns a wrapped session instance .
11738	Get primary key .
11739	Get table foreign keys .
11740	Get table indexes .
11741	Get the table metadata for a table .
11742	Returns the table metadata for the given table .
11743	Get the default values for a table .
11744	Returns the parameter value .
11745	Checks if the given permission is allowed .
11746	Sets the distinct query .
11747	Set column columns .
11748	Join a table .
11749	Adds a join to the query .
11750	Add a left join
11751	Adds a left join to the query .
11752	Adds a right join to the query .
11753	Adds an outer join to the query .
11754	Adds a join to the query .
11755	Sets group by field .
11756	Add a condition to the query .
11757	Adds a condition to the query .
11758	Order by field .
11759	Set the limit
11760	Set offset .
11761	Build the SQL query .
11762	Render a button .
11763	Renders a button .
11764	Renders the switcher .
11765	Returns a string representation of this axis .
11766	Calculate the ordinate of the arc .
11767	Calculate the arcs of the given coordinate .
11768	Find record by id
11769	Find one record by predicate
11770	Check if a record exists
11771	Checks if the given predicate exists .
11772	Delete a record by its primary key
11773	Delete a record
11774	Update data in database
11775	Insert data into database
11776	Get the relation instance .
11777	Get the primary keys .
11778	Get primary key .
11779	Get column information .
11780	Executes a SQL statement .
11781	Returns the primary key for the given primary key .
11782	Checks to see if the data exists .
11783	Parse a JSON string into an array
11784	Parse a JSON string into an array
11785	Set the return type .
11786	Run the plugins .
11787	Enqueue a given type .
11788	Set type .
11789	Set name .
11790	Start start position
11791	Set the damage .
11792	Set hit level
11793	Sets the multiplier for this metric .
11794	Set input inputs
11795	Add a move to the move .
11796	Start start frame
11797	Set active frames .
11798	Recursively recovers the recovery frame .
11799	Set the advantage of the hit .
11800	Set guard on guard
11801	Builds the move .
11802	Send a Slack message .
11803	Parse a route string into a string .
11804	Parse data into array
11805	Validates a route parameter .
11806	Find a segment segment
11807	Generate repository .
11808	Validate class name
11809	Checks if the file exists
11810	Returns the number of files in the directory .
11811	Get console path .
11812	Get route params
11813	Returns a new instance with the specified scheme .
11814	Returns a new instance with the specified user .
11815	Set the host name .
11816	Returns a new instance with the specified port .
11817	Query an array by key
11818	Parses a query string into an array .
11819	Set query variables
11820	Set query variable
11821	Returns the URL of the request .
11822	Normalize the host .
11823	Resolves the given reference .
11824	Check if the fragment is a fragment
11825	Get the canonical URL .
11826	Get the request URL .
11827	Get option by name
11828	Build query string
11829	Parse the url
11830	Display a text message
11831	Translate the message .
11832	Suggests the requested language .
11833	Get the list of new state states .
11834	Filters a list of states .
11835	Switch the state of the given states .
11836	Find all categories by budget id
11837	Displays the login form .
11838	Logout user .
11839	Connects to the account .
11840	Get a parameter by name .
11841	Set HTML body
11842	Add HTML to HTML
11843	Add an attachment to a file .
11844	Converts a string to a string
11845	Adds a text part to the message .
11846	Adds the HTML part of the MailPart
11847	Add a HTML part of the image
11848	Add attachment part
11849	Encode headers .
11850	Check if the parameters are valid
11851	Check if value is valid
11852	Initialize the action .
11853	Loads the items .
11854	Saves all rules .
11855	Save data to file
11856	Create json response
11857	Set callback .
11858	Set the encoding options .
11859	Get the layout .
11860	Returns the string representation of the category .
11861	Update session data .
11862	Deletes a session entity .
11863	Configure the command options .
11864	Loads the configuration file .
11865	Get memory limit
11866	Creates a leaf for the given model .
11867	Render the view .
11868	Add a plugin
11869	Get config value
11870	Generate a URL .
11871	Add a route .
11872	Creates a HTML response .
11873	Redirect to a URL
11874	Set path segments
11875	Get the proxy class .
11876	Returns the instance of the given class .
11877	Get all records
11878	Returns an array of columns
11879	Paginate the results .
11880	Find an entity by id .
11881	Persist an entity .
11882	Delete entity .
11883	Get count of entities .
11884	Creates a select query .
11885	Apply scope to query builder .
11886	Applies the ORDER BY clause to the query builder .
11887	Make a query exception .
11888	Replace the query parameters .
11889	Add a new RPC method
11890	Get RPC method
11891	Shutdown the loop .
11892	Add headers .
11893	Set a link
11894	Create a new request instance .
11895	Create a new photo .
11896	Add a range to the query .
11897	Starts session
11898	Regenerate session id
11899	Close the session .
11900	Unset session data
11901	Destroy session .
11902	Decode session data
11903	Set the session expiration time
11904	Get an instance of the class
11905	Get module options
11906	Returns the size of the image .
11907	Set walk flag
11908	Set array flag
11909	Sets the data of the matrix .
11910	Returns the value of the given index
11911	Sets the value of an element
11912	Rewind the pointer to the current position
11913	Returns the previous element
11914	Get the current position of the current record .
11915	Sets the previous key .
11916	Get the previous position of the current key .
11917	Get next element
11918	Gets the next element at the next position .
11919	Determine the next YAMY element .
11920	Move the current position to the next position .
11921	Searches for a given position .
11922	Get current position
11923	Get the key of this node
11924	Returns true if the path is valid
11925	Returns true if the element is valid
11926	Determine if the data is valid .
11927	Count the number of elements in the tree
11928	Sets the offset .
11929	Sets the offset of an offset .
11930	Checks if the given offset exists .
11931	Returns the value of the specified offset .
11932	Sets the value at the specified offset .
11933	Check if value is valid
11934	Allow the view methods to be allowed .
11935	Allow an array of controller methods .
11936	Set table name
11937	Set the table from the query .
11938	Add where conditions .
11939	Add OR WHERE condition .
11940	Set static rule
11941	Set static rule .
11942	Returns the filter object for the given rule .
11943	Ends the body .
11944	Registers a JS file .
11945	Registers a JS variable .
11946	Get default config files
11947	Get a singleton instance .
11948	Setup channel channels .
11949	Merges the configuration file .
11950	Write configuration file
11951	Read configuration from file
11952	Get the default channel .
11953	Get channel value
11954	Set the channels .
11955	Get configuration type
11956	Returns the documentation for a given key .
11957	Get the prompt .
11958	Returns the group configuration .
11959	Get group groups
11960	Get group keys
11961	Get a set of values for a given key .
11962	Get the keys of the layer .
11963	Removes a configuration .
11964	Remove a layer .
11965	Determine if the given key exists .
11966	Determine if the given key is defined .
11967	Sets the registry
11968	Processes the extensions .
11969	Replace all constants in the given string .
11970	Get the callback .
11971	Check if value is valid
11972	Returns a list of valid values .
11973	Validate all valid values
11974	Sets the enum value .
11975	Initializes the post
11976	Start a new session
11977	Add a number of results
11978	Add the timer to the queue .
11979	Calculate the total amount of accounts .
11980	Get request methods .
11981	Disable autoloader .
11982	Block WordPress request .
11983	Hide admin notices .
11984	Checks if the given point is valid .
11985	Determine if the shape is a scalar
11986	Get a value from the container .
11987	Check if a key exists in the container .
11988	Find application by id
11989	Find all applications .
11990	Returns true if the number of symbols are equal .
11991	Get the digits from a number .
11992	Builds a number of digits .
11993	Validates a number .
11994	Execute a call
11995	Generate a key
11996	Connect to Redis server
11997	Get the command string .
11998	Get the MongoDB document .
11999	Get domain event message .
12000	Reset session data
12001	Normalize messages .
12002	Validate the entity .
12003	Attach data to form event
12004	Gets the form fields .
12005	Remove a string from the list
12006	Gets the entities .
12007	Swaps the entity .
12008	Configure a form element from the form .
12009	Sets the form data for the given tag .
12010	After an entity has been removed .
12011	Add a response
12012	Create a response from a string
12013	Creates a response from a file .
12014	Make the HEAD version of the given entity .
12015	Check if the current version is new .
12016	Persist an entity .
12017	Clear versions .
12018	Clean up directory
12019	Check if a source key exists .
12020	Moves a key to another .
12021	Connects to the filesystem .
12022	Determine if the given key exists .
12023	Creates a directory .
12024	Find entity by id
12025	Creates a new entity .
12026	Save an entity .
12027	Delete an entity .
12028	Validates the entity .
12029	Execute a select query
12030	Creates a query builder .
12031	Sets the criteria for the query .
12032	Adds an array of criterion to the query .
12033	Set the order by clause .
12034	Save an entity to the database
12035	Sets the properties for the delete query .
12036	Sets the properties for a save statement .
12037	Get entity relations .
12038	Ensure that the required properties are required .
12039	Broadcast the given body .
12040	Executes a command .
12041	Get script URL
12042	Render a HTML tag .
12043	Display image .
12044	Display audio .
12045	Verify the response .
12046	Verify the request .
12047	Generate script .
12048	Renders a script .
12049	Check if a key is empty .
12050	Checks if the value is a valid string .
12051	Send a verification request
12052	Initializes the theme .
12053	Find a view file .
12054	Render the PHP state .
12055	Register post types .
12056	Generates a token .
12057	Generates a new memory token .
12058	Execute the project .
12059	Callback for message filter
12060	Log a notice .
12061	Logs an info message .
12062	Log a debug message
12063	Logs a message .
12064	Triggers the end of the end time .
12065	Logs a message .
12066	Convert a message to a string
12067	Convert an exception to a string
12068	Colorize text .
12069	Gets the data from the trace
12070	Process placeholders .
12071	Format a value .
12072	Finds a seo model .
12073	Get table name .
12074	Delete all records .
12075	Saves the model .
12076	Initialize database connection
12077	Sets the PEAR command
12078	Get all commands .
12079	Returns an array of shortcuts
12080	Returns the help of a command .
12081	Get help arguments
12082	Called when the package is updated .
12083	Compile DSN .
12084	Escapes a value .
12085	Add template root
12086	Returns the number of records in the collection .
12087	Returns the number of items in the collection .
12088	Create count query .
12089	Get entity manager
12090	Get current route path
12091	Load a configuration file
12092	Clear an entry
12093	Get bundle by name
12094	Set a bundle .
12095	Clear bundle .
12096	Invalidate cache .
12097	Checks the dependencies of the dependency .
12098	Get the dependencies of a package .
12099	Get the dependencies of a package .
12100	Install a package
12101	Uninstall a package
12102	Rebuild the database .
12103	Create a lock file
12104	Unlock a lock
12105	Get the dependency database
12106	Write dependencies to the database
12107	Load module modules
12108	Register a theme .
12109	Get theme content
12110	Render an exception .
12111	Set the foreground .
12112	Set the background .
12113	Set the background color .
12114	Set the red color .
12115	Set green color .
12116	Set the foreground color .
12117	Set the background color .
12118	Set the magenta .
12119	Set the color .
12120	Set the foreground color .
12121	Reset the color .
12122	Sets the foreground color .
12123	Remove a format option .
12124	Formats the message .
12125	Log a command .
12126	Returns an array of uploaded files .
12127	Set the raw release state .
12128	List install scripts
12129	Initializes the post scripts .
12130	Initializes the package .
12131	Returns the list of file names .
12132	Get configuration options
12133	Check if a package is compatible .
12134	Check if a package is subpackage
12135	Get a dependency group by name .
12136	Splits an array by key .
12137	Builds the container .
12138	Returns the modulo .
12139	Returns the modulus of the given number .
12140	Update the event .
12141	Log a message
12142	Select from repository
12143	Get entity alias
12144	Delete entity .
12145	Update the entity .
12146	Sets the entity from the database .
12147	Set a value in the cache .
12148	Add a group by clause
12149	Add a group by clause
12150	Sets the order by clause .
12151	Add an ORDER BY clause
12152	Set limit results
12153	Paginate pagination .
12154	Fetch a single result
12155	Fetches a single result set .
12156	Fetch all records
12157	Generate a parameter .
12158	Finds the unused parameter name .
12159	Parse a method call
12160	Call function for function functions
12161	Checks if array is associative
12162	Describes the given subject .
12163	Add a timestamp to the timestamp
12164	Renders the log table
12165	Get the current page time
12166	Gets the most recent time domain .
12167	Renders the header .
12168	Render the header image
12169	Renders the body
12170	Renders the footer .
12171	Get the group name .
12172	Get option values
12173	Gets the help arguments for an action .
12174	Get options for an action
12175	Get request headers
12176	Determine if the browser is flash .
12177	Returns the raw response body .
12178	Get request parameters
12179	Get host information
12180	Get script URL
12181	Get server parameters
12182	Get the allowed content types .
12183	Get the list of allowed languages .
12184	Gets an array of eZTags .
12185	Get CSRF token
12186	Generate a CSRF token
12187	Get default server parameters
12188	Handle the login event .
12189	Crop an image
12190	Make the crop name .
12191	Crop a file .
12192	Get size of image
12193	Get the mutations of a file .
12194	Get annotations .
12195	Get annotation matches .
12196	Sets the annotation .
12197	Set annotation arguments .
12198	Get annotation properties .
12199	Process annotation properties .
12200	Get arguments from string
12201	Determine the value of the given value .
12202	Get an annotation from the map .
12203	Clean up a match
12204	Get subscribed events .
12205	Handle the command .
12206	Handle command help .
12207	Returns the provider for the given command .
12208	Add a left join to the query .
12209	Adds a left join to the query .
12210	Join a WHERE clause
12211	Compile the SQL statement .
12212	Fetch all columns
12213	Sets the table name .
12214	Set object structure .
12215	Sets the object name .
12216	Set the model name .
12217	Build the model object
12218	Build fields .
12219	Register the validation factory .
12220	Load service providers .
12221	Get the target site id .
12222	Get the parent relation .
12223	Renders a single item .
12224	Execute all queries .
12225	Execute a query .
12226	Get a single column from the database .
12227	Returns the number of rows in the query .
12228	Checks if the database exists .
12229	Make a callable .
12230	Finds all registered calls .
12231	Sets the PEAR package registry
12232	Asserts the state of the channel .
12233	Assert that a channel is a channel .
12234	Asserts the channel directory .
12235	Get the name of a channel .
12236	Returns the name of the given alias .
12237	Returns the alias for the given channel .
12238	Check if the file is locked
12239	Check if a channel exists .
12240	Check if a channel exists .
12241	Check if the given alias is an alias .
12242	Get channel info
12243	Update a channel .
12244	Check if the value matches the given data .
12245	Get the twig template file
12246	Creates a new instance of a string
12247	Get entity manager
12248	Resolve the given class name .
12249	Validates a hash against the given parameters .
12250	Check if route exists
12251	Copies a directory to another .
12252	Initializes the widget .
12253	Returns the next date for the given date .
12254	Returns the previous day of the given date .
12255	Create date range
12256	Get file path
12257	Get a directory path
12258	Opens a file .
12259	Create a new file .
12260	Put contents to file
12261	Get contents of a file .
12262	Change file mode
12263	Lock a file .
12264	Unlocks a file .
12265	Ensure that the given path is an object .
12266	Ensure that the path is a directory .
12267	Check if the lock is locked .
12268	Get global globals .
12269	Render the section
12270	Adds a where clause to the query .
12271	Adds a where clause to the query .
12272	Adds a where clause to the query .
12273	Convert array to array
12274	Checks if the value is a normalizer .
12275	Get data from database
12276	Update an existing row
12277	Removes migration history .
12278	Reset the migration .
12279	Show migration history .
12280	Create new migrations .
12281	Creates a new migration file .
12282	Migrate migration .
12283	Migrate a migration .
12284	Migrate the given version .
12285	Loads the database adapter .
12286	Connect to the database
12287	Add a cached query
12288	Get cached results .
12289	Execute an array query
12290	Add a table to the database
12291	Add fields to table
12292	Get table info
12293	Check if table exists
12294	Build fields array
12295	Escape a string
12296	Clears the query .
12297	Add a where clause
12298	Add a WHERE clause
12299	Add a where clause
12300	Add OR WHERE clause
12301	Add a where condition .
12302	Sets the order by clause .
12303	Get query string
12304	Get all results
12305	Get single single record
12306	Get all core extensions
12307	Get model instance .
12308	Set storage path
12309	Load the structure of the structure .
12310	Get model structure
12311	Save model structure .
12312	Dump data to the database
12313	Load data from database
12314	Find all transactions for a given account
12315	Sets the pool state .
12316	Returns the number of logs in the queue .
12317	Process the queue .
12318	Start a query .
12319	Set connection status
12320	Handle a message .
12321	Process the given data .
12322	Cancel the request .
12323	Sets the social provider .
12324	Callback for social provider .
12325	Unlink a social provider .
12326	Update settings .
12327	Check if the provider is valid .
12328	Configure service provider .
12329	Register social social provider .
12330	Clean timer callback
12331	Pack the record into the database .
12332	Unpack the given record .
12333	Create cleanup timer .
12334	Check if a menu item is submenu
12335	Sets the account ID .
12336	Sets the user ID .
12337	Gets the account s account .
12338	Gets a user by its primary key .
12339	Generate the next exception .
12340	Filter string .
12341	Initializes the configuration .
12342	Get valid roles .
12343	Get base roles .
12344	Shortcut to shorten the string
12345	Sets the block size .
12346	Get a value by key
12347	Generate config files .
12348	Merge data into the collection .
12349	Read config data
12350	Read configuration data from file
12351	Normalize config file path .
12352	Apply the event to the event .
12353	Record a domain event .
12354	Set related data
12355	Attaches a presenter .
12356	Redirects to the screen .
12357	Redirect to the page
12358	Initializes the plugins .
12359	Set list of variables
12360	Fetch the index from the template .
12361	Load plugins from a directory
12362	Creates a new instance from an associative array .
12363	Shift the business hours to the given date .
12364	Flattens an array of dates .
12365	Validates a warning .
12366	Get file contents
12367	Parse the import configuration .
12368	Parse YAML file
12369	Sets the parameters .
12370	Calculate the request length
12371	Executes a command .
12372	Serializes a value .
12373	UnPublish an entity .
12374	Sets the class name .
12375	Sets the ID column .
12376	Sets the name of the column .
12377	Sets the data column .
12378	Set the lifetime column
12379	Sets the modified column .
12380	Sets the created column .
12381	Get the providers .
12382	Get all available providers .
12383	Boot the application .
12384	Register the serializer .
12385	Set request format
12386	Validate request content type
12387	Execute a function .
12388	Discover a channel .
12389	Get dependency object
12390	Get the download directory
12391	Tries to detect the dependency cycle .
12392	Setup the graph .
12393	Get url argument
12394	Output a line .
12395	Get command arguments
12396	Register a nonce .
12397	Register validation rules .
12398	Register captcha macros .
12399	Creates an XML file from a XML file .
12400	Convert an XML file into an array
12401	Convert the channel to XML .
12402	Validate an error
12403	Returns the base URL for the given resource type .
12404	Reset all functions
12405	Set default protocol protocols .
12406	Get the mirror instance .
12407	Set validation package .
12408	Add a new function
12409	Add a mirror
12410	Get validation package .
12411	Get validation object
12412	Check if a property exists
12413	Check if a property exists
12414	Get the cache file .
12415	Load cache parameters .
12416	Add an entry to the container .
12417	Get a value from the cache
12418	Get a cache entry
12419	Check if a cache entry exists .
12420	Unset an offset
12421	Applies conditions to the query .
12422	Assign value to array
12423	Extract errors from an error
12424	Get config file config file
12425	Get the model definition .
12426	Save model configuration .
12427	Returns the metadata for this request .
12428	Sets the name of the field .
12429	Sets the color .
12430	Sets the parser .
12431	Aggregate a collection of styles .
12432	Make curl request
12433	Proxy to a file
12434	Create a validator .
12435	Validates an attribute .
12436	Validates a value
12437	Run the application .
12438	Shutdown shutdown
12439	Get the URL of a controller .
12440	Returns canonical URL .
12441	Normalize route path .
12442	Checks if the worker is running .
12443	Get view names .
12444	Get the value of a given key .
12445	Sets a value in the cache .
12446	Set multiple values
12447	Get a value from the cache .
12448	Add a value to the cache .
12449	Store a value in the cache .
12450	Delete a key
12451	Filter a string
12452	Configure default options .
12453	Get option value .
12454	Get the value of an option .
12455	Load config from file
12456	Load config file .
12457	Render config .
12458	Render a value
12459	Normalize config path .
12460	Set the package version .
12461	Clear the contents of the package .
12462	Clear dependencies .
12463	Sets the package type .
12464	Returns the current release version .
12465	Adds an asset to the repository .
12466	Add an ignore tag
12467	Add a binary package .
12468	Add a config option
12469	Sets the PHP code for the current installation .
12470	Set install condition
12471	Set the install condition .
12472	Generate change log entry
12473	Check if the file is a valid video .
12474	Get video info
12475	Set the date .
12476	Set the amount .
12477	Set type .
12478	Set the comment .
12479	Sets the category ID .
12480	Sets the account id .
12481	Creates a new instance from a string .
12482	Create a new instance from the config array .
12483	Create a new SQLite instance .
12484	Create a new MySQL instance .
12485	Execute a SQL query
12486	Get table names
12487	Get a single row from the database
12488	Get a cell from a SQL statement
12489	Check if table exists
12490	Check if a table exists
12491	Returns an array of primary keys .
12492	Returns an array of column names .
12493	Log a query
12494	On bootstrap event
12495	Run the application .
12496	Sets the keys of an array
12497	Set private key
12498	Set envelope key
12499	Set compression .
12500	Returns the formatted date as a string .
12501	Retrieves information about a user .
12502	Execute the given function .
12503	Create migration history table .
12504	Add a filter
12505	Filters a static class .
12506	Add inverse relations .
12507	Populate the relation relation .
12508	Populate a single relation .
12509	Populates multiple records .
12510	List invalid properties
12511	Process an array
12512	Create a new entity .
12513	Returns true if the text is equal .
12514	Checks if this string ends with another .
12515	Returns true if the string contains the given text .
12516	Returns a substring of the given string .
12517	Replace text with given text .
12518	Replace the text with the given regex .
12519	Before save event
12520	Before delete event
12521	Refresh the model .
12522	Update all attributes
12523	Delete all records
12524	Insert model into database
12525	Insert attributes into database
12526	Deletes the object from the database .
12527	Returns the methods of the class .
12528	Get method identifier
12529	Callback callback .
12530	Get all commands for a controller
12531	Get command help
12532	Create a controller
12533	Handle the exception .
12534	Handle the error .
12535	Log an exception .
12536	Get the exception trace .
12537	Reduce the stack trace .
12538	Proxy method .
12539	Proxy method .
12540	Injects a variable into an argument .
12541	Ensure that the given string is translated .
12542	Create a repository .
12543	Start a new notification .
12544	Generate a random identifier
12545	Returns an array representation of the data .
12546	Register a custom class
12547	Displays a form to edit a user .
12548	Request a list of countries
12549	Encode a string
12550	Get default reason phrase
12551	Get header by name
12552	Get the body of the response .
12553	Decode the data from a string .
12554	Check if table exists
12555	Clear the table .
12556	Checks if the pool is pending .
12557	Get all headers .
12558	Get header name .
12559	Write messages to the console .
12560	Write a message .
12561	Sets the type of the filter .
12562	Find a view by name .
12563	Get the list of possible files .
12564	Start session
12565	Get a value from the cache .
12566	Set a value
12567	Remove a value from the cache .
12568	Generate a CSRF token
12569	Validates a CSRF token
12570	Converts a human readable name into a human readable string .
12571	Delete a directory
12572	Move file to destination
12573	Clean up the filename
12574	Dispatch event .
12575	Handle an error message
12576	Handle fatal error
12577	Saves the item
12578	Returns a string representation of this exception .
12579	Convert an array to XML .
12580	Convert a header into an array
12581	Load config file .
12582	Set an array of config values
12583	Get a configuration value from the stack .
12584	Build the stack stack .
12585	Parse config array
12586	Parse a config value
12587	Compile join constraint .
12588	Returns a where clause .
12589	Compile insert query
12590	Compile update query .
12591	Compile a delete statement .
12592	Convert a value to a string .
12593	Set the argument arguments .
12594	Set the promise .
12595	Set the prediction .
12596	Checks if the given prediction is present .
12597	Create a new Gallery instance .
12598	Connects to the user .
12599	Create a new query
12600	Convert the table to SQL
12601	Scan a resource .
12602	Apply a flat map to the map .
12603	Filter the collection with the given predicate .
12604	Execute callback .
12605	Executes a callback function .
12606	Parse callback function .
12607	Get constraints .
12608	Calculate minimum value
12609	Get the controller instance .
12610	Get action data
12611	Resolve the response .
12612	Process the request data
12613	Process response .
12614	Get the exception exception .
12615	Get the terminal size .
12616	Get operating system operating system
12617	Translate a string into a human readable format .
12618	Locates a file .
12619	Returns the text as a string .
12620	Returns email address .
12621	Format a decimal value .
12622	Format a short size .
12623	Creates a new model .
12624	Update a model .
12625	Check if file exists
12626	Fetch an object from the database
12627	Fetches a column from the database .
12628	Scope the query to exclude .
12629	Scope the query to scope .
12630	Run console command .
12631	Get value from array
12632	Get header by name
12633	Removes a header .
12634	Returns a new instance with the given body .
12635	Get icon icon
12636	Get all types
12637	Bind a template .
12638	Render an exception .
12639	Format a message .
12640	Get data from header
12641	Convert an array to a header string
12642	Combines a section .
12643	Recursively walk the value of a key
12644	Splits a string into an array .
12645	Report an error
12646	Displays the error page
12647	Extract parameters from route
12648	Get controller instance .
12649	Returns an array of buttons
12650	Returns HTML code for the given options .
12651	Evaluate the expression
12652	Get a zone
12653	Add a new record
12654	Get a table by name .
12655	Returns the transaction instance .
12656	Load default metadata .
12657	Sets the parent id .
12658	Gets the category category
12659	Get all category words
12660	Flush the cache .
12661	Add a key to the collection .
12662	Remove a key from the collection .
12663	Remove cache from cache
12664	Get boolean value
12665	Create a new Parameter object from the request .
12666	Extract parameters from collection
12667	On console command .
12668	Push a route .
12669	Get all classes for a given type .
12670	Set service properties .
12671	Create a container from an annotation .
12672	Creates a ContainerContext from a ServiceContext .
12673	Get the cache instance .
12674	Returns the query builder instance .
12675	Create a component
12676	Get the class name of the given class name .
12677	Get the class name of the class .
12678	List packages .
12679	Determine if the given state is sorted .
12680	Compile the command .
12681	Generate the application arguments .
12682	Execute the process .
12683	Save the stream .
12684	Replace the content of the stream .
12685	Add route .
12686	Add a route
12687	Add a new route
12688	Add a new route
12689	Add route .
12690	Add a route
12691	Add HEAD route
12692	Get a route by name .
12693	Get route url .
12694	Match request route .
12695	Match a route .
12696	Checks if the given URI is a valid route .
12697	Dispatch a route .
12698	Setup routes .
12699	Set dynamic route .
12700	Validate route url
12701	Match static route .
12702	Tries to match a route .
12703	Get the matched route .
12704	Get a dynamic route that matches the given route .
12705	Get the route middleware .
12706	Register the response middleware .
12707	Get the response from the response .
12708	Setup the route collection .
12709	Setup annotation routes .
12710	Render the header
12711	Render the toggle button .
12712	Get a message from a file
12713	Get the pagination result .
12714	Add filters .
12715	Filter the query by parameters .
12716	Filter the query .
12717	Add ORDER BY clause
12718	Add offset to query
12719	Add limit .
12720	Find entity by id
12721	Adds a JOIN clause to the query .
12722	Get the data sort column for the given parameters .
12723	Order query params
12724	Validates the given value .
12725	Replace entities in a string
12726	Replace entities in a string
12727	Returns XML representation of XML .
12728	Returns the documentation for a docblock .
12729	Convert attributes to string
12730	Removes empty tags from XML .
12731	Create a new XML tag
12732	Create a start element
12733	Splits a qualified name into a qualified name .
12734	Check if the name is valid .
12735	Dispatch a callable .
12736	Add tags to cache .
12737	Invalidates the tag cache .
12738	Validate an entity .
12739	Interpolates a message .
12740	Checks if two points are equal to another point .
12741	Checks if two positions are equal
12742	Returns the intersection between two lines .
12743	Determine if the given line is a subfoldant .
12744	Determine if the given line is valid .
12745	Determine the direction of the given point .
12746	Get direction by coordinates
12747	Execute all commands .
12748	Prepare the eager loading for the query .
12749	Remove duplicate models from the database .
12750	Execute the command .
12751	Check if a string is valid .
12752	Assert that header value is valid .
12753	Execute the request
12754	Build the request URI .
12755	Set default language
12756	Set media type
12757	Set result format
12758	Set the limit .
12759	Set entity options
12760	Sets the attribute .
12761	Set callback .
12762	Set the default type .
12763	Get photos .
12764	Log a message
12765	Create temporary directory
12766	Get info from file
12767	Get information about a package file .
12768	Get info from xml file
12769	Get the info from the file .
12770	Get a list of all offers
12771	Get all offers
12772	Search for an entity
12773	Set log handler
12774	Sets the mail handler
12775	Get log entries
12776	Make log row
12777	Shutdown debugging
12778	Handle the request .
12779	Dispatch the controller .
12780	Initializes the bundle .
12781	Add a bootstrap error
12782	Initialize a constant path
12783	Add a path to the application .
12784	Returns the path to the given name .
12785	Get absolute path
12786	Determine if the user is ini .
12787	Sets the mode
12788	Load the default config file .
12789	Initialize the application .
12790	Load a bundle .
12791	Get the converter .
12792	Generate a hash for the given path .
12793	Add a reply to the reply list .
12794	Create a new user
12795	Resume a user .
12796	Calculates a decimal value .
12797	Get the URL of the user details .
12798	Execute raw SQL query
12799	Returns the meta tags for the request .
12800	Generates a label .
12801	Creates a button .
12802	Creates a submit button .
12803	Generates a submit input
12804	Generates a reset button .
12805	Creates a hidden input field .
12806	Create password input
12807	Processes boolean input options
12808	Sets the hours .
12809	Sets the minutes .
12810	Sets the number of seconds .
12811	Checks if the given time is valid .
12812	Write a file .
12813	Write a file to the stream .
12814	Update a file .
12815	Update a stream .
12816	Write a file to the filesystem .
12817	Write a stream to the stream .
12818	Renames a file
12819	Copies a file
12820	Get metadata of a file
12821	Get the mimetype .
12822	Get file size
12823	Get the timestamp of a file
12824	Get the visibility of a file .
12825	Set visibility .
12826	Set visibility .
12827	Setter for visibility
12828	List all files
12829	Get local adapter .
12830	Get the S3 adapter instance .
12831	Process the request .
12832	Deserializes a request .
12833	Checks if an object has access to an object
12834	Parse a block .
12835	Returns the path to the given path .
12836	Get authentication object
12837	Get data from URL
12838	Parses a JSON response .
12839	Get all data
12840	Get entity alias
12841	Creates a query builder instance .
12842	Creates the result set for the result set .
12843	Returns all the identifiers of the entity .
12844	Returns the minimum value of a column .
12845	Execute the paginator .
12846	Check if the entity is a valid entity .
12847	Returns the identifier for the given entity .
12848	Validate an entity .
12849	Convert entity to array
12850	Filter uploaded files .
12851	Get size limit
12852	Check if a key exists
12853	Handle the console command .
12854	Terminate the console .
12855	Render account categories .
12856	Run the controller .
12857	Initialize the default timezone
12858	Execute the given function .
12859	Returns an array representation of this object .
12860	Initializes the database .
12861	Get children list
12862	Detects the children of the given parent .
12863	Invalidate the cache
12864	Get last batch number
12865	Creates a HTML response .
12866	Create a json response .
12867	Create a new template
12868	Creates a list of files .
12869	Returns the adapter instance .
12870	Set the adapter .
12871	Set the prefix .
12872	Get server value
12873	Show the index page .
12874	Install tables .
12875	Displays the bootstrap error page .
12876	Get serializer .
12877	Increment version number
12878	Get the body of the request .
12879	Get the body as array
12880	Get the body object .
12881	Get results from a query
12882	Set default values
12883	Sets the response body .
12884	Convert the response to an array
12885	Get unique validation rule .
12886	Creates a URL from an object .
12887	Get the connection adapter
12888	Get ADO connection ID
12889	Log an exception .
12890	Wrapper for curl errors
12891	Read the body of the request body .
12892	Write a header to the response .
12893	Write the body of the response body .
12894	Add a command collection
12895	Prints a time string
12896	Print console help message
12897	Prints help message
12898	Prints a line .
12899	Creates an async image
12900	Clears the content of the HTML code
12901	Before save event
12902	Handle the event .
12903	Decode a JSON attribute .
12904	Create a new Bank instance .
12905	Sets the locale .
12906	Get localized question .
12907	Establish a tunnel
12908	Check if the request is still alive
12909	Disconnect from socket
12910	Handle redirect request
12911	Determine if the request is valid .
12912	Determine if the proxy digest is valid .
12913	Write the request body
12914	Read a chunk of chunks .
12915	Builds SQL query string
12916	Builds a where clause
12917	Build a SQL JOIN clause
12918	Build a GROUP BY clause
12919	Prepares the dependencies for a given field .
12920	Merge data from the data array
12921	Clean up a string
12922	Checks if the given function is called .
12923	Decode YAML configuration .
12924	Start a session
12925	Execute a query
12926	Insert data into database
12927	Update an existing record
12928	Insert data into database
12929	Execute a SELECT query
12930	Get all rows
12931	Returns an array of ids
12932	Get a single row from the database .
12933	Get the value of a row .
12934	Prepare a query
12935	Execute a SQL statement
12936	Fetch a prepared statement
12937	Get the value of a single value
12938	Parse the value into a string .
12939	Filters the value of the given value .
12940	Dispatch the router .
12941	Terminate route middleware .
12942	Start a handler
12943	Called when an element is parsed
12944	Run a command .
12945	Process the message
12946	Modify the uploadable behavior .
12947	Create a new request from a JSON string .
12948	Open a session
12949	Read data from session
12950	Destroy a session
12951	Write data to database
12952	Renders the widget .
12953	Returns the ID of this page .
12954	Run before run
12955	Checks if the application is valid .
12956	Find a record in the database
12957	Delete a record
12958	Get all rows of a table
12959	Saves the record
12960	Displays the dashboard page
12961	List all budgets
12962	Verify user account .
12963	Load bank bar .
12964	Checks if the given period is valid .
12965	Setup the MD5 file
12966	Execute the constructor .
12967	Get the name of the person .
12968	Save user .
12969	Changes user password .
12970	Defines the given implementation .
12971	Get the writer .
12972	Parse the version string .
12973	Compare two versions .
12974	Returns the children of the tree .
12975	Get parent node
12976	Returns the parents of this record .
12977	Convert an object into an array
12978	Apply a modifier .
12979	Create a css resource from a given URL .
12980	Get the address book .
12981	Display the contacts .
12982	Display a message .
12983	Manage a message .
12984	Append extensions to an array .
12985	Destroy the session .
12986	Add autoloader .
12987	Remove autoload .
12988	Remove an aggregate from an aggregate
12989	Get a Console option
12990	Execute a GET command
12991	Parse a short option .
12992	Parse the given arguments .
12993	Convert a directory to an array
12994	Convert multiple files to an array
12995	Removes files from a directory
12996	Creates a directory .
12997	Create a temporary temp file .
12998	Remove temporary files .
12999	Find all files in a directory
13000	Get a log message .
13001	Sets the budget ID .
13002	Gets the budget for the current user .
13003	Get all transaction transactions
13004	Prepares a value .
13005	Set the url
13006	Set request method
13007	Set authentication credentials
13008	Add a cookie
13009	Set request body
13010	Get request body
13011	Add a file upload
13012	Attach an observer .
13013	Detach observer .
13014	Sets the last event .
13015	Set the adapter
13016	Sets the cookie jar .
13017	Send the request
13018	Detect mime type
13019	Show a setting .
13020	Create a new setting .
13021	Creates a new setting .
13022	Update a setting .
13023	Add a WHERE clause to the query .
13024	Returns a new instance with the given status code .
13025	Removes a record from the database .
13026	Determine if the given event listeners exists .
13027	Get field value
13028	Returns a string representation of the message .
13029	Creates a 403 exception .
13030	Set flash message .
13031	Commit the transaction
13032	Format a date string
13033	Formats a time string
13034	Format a boolean value .
13035	Sets the time zone in the database .
13036	Get a service instance .
13037	Determine if the given class exists .
13038	Create a new object
13039	Adds a resolver .
13040	Add service to container
13041	Get the pool .
13042	Query a query .
13043	Executes a query .
13044	Create a new connection
13045	Gets the oldest connection .
13046	Install assets .
13047	Get reflection class
13048	Get the version of a class .
13049	Find a class name by its version .
13050	Get the migration methods for the given class .
13051	Get required options for a class
13052	Show a job .
13053	Creates a new job .
13054	Creates a new job .
13055	Update a job .
13056	Set client name
13057	Guess the file extension .
13058	Get the mime type
13059	Get human readable size
13060	Returns the date as a datetime .
13061	Get the current date time .
13062	Returns the date as a datetime .
13063	Create a file from a file .
13064	Find all applications .
13065	Find application by id
13066	Create a new application
13067	Deletes the application .
13068	Update application .
13069	Returns the closest date interval for the given date .
13070	Returns the closest date interval for the given date .
13071	Builds a DateInterval object from a DateInterval object .
13072	Gets the day of the week .
13073	Returns the day after the given day .
13074	Get information about a role .
13075	Commit the transaction .
13076	Rollback transaction .
13077	Set the transaction isolation level .
13078	Get the database connection .
13079	Set backend backend
13080	Add a debug message
13081	Logs a message .
13082	Add a warning to the logger .
13083	Add a warning to the logger .
13084	Log an error message .
13085	Logs a critical message .
13086	Log an alert .
13087	Logs an emergency message .
13088	Logs a message .
13089	Get property value
13090	Truncates the given HTML string .
13091	Install the package .
13092	Remove all packages from a package .
13093	Add a file operation
13094	Download a package .
13095	Set downloaded packages .
13096	Checks if the given point is valid .
13097	Creates an exception .
13098	Register components .
13099	Add attributes to array
13100	Changes class names .
13101	Parse class attributes
13102	Get the column type .
13103	Binds the object to the binding .
13104	Bind a shared closure .
13105	Registers a callback .
13106	Determine if a binding is shared .
13107	Get the closure for a concrete class .
13108	Add a dependency to a callable .
13109	Returns the context for the given abstract .
13110	Add middleware to the request .
13111	Add middleware middleware .
13112	Terminate middleware .
13113	Show webservice
13114	Get WSDL file
13115	Initialize options .
13116	Convert a string to a timestamp .
13117	Convert a timestamp to an array
13118	Convert date to string
13119	Calculates the difference between seconds .
13120	Get the properties of this object .
13121	Checks to see if the given function is valid .
13122	Parses a parameter value .
13123	Adds a parameter to the collection .
13124	Filter string
13125	Displays a breakpoint
13126	Download all channels .
13127	Add a new mock instance .
13128	Creates a new instance of the given class .
13129	Displays the profile page .
13130	Checks if a namespace exists .
13131	Get the value of a variable .
13132	Make a response .
13133	Render a view .
13134	Return json response .
13135	Create a json response .
13136	Redirect to the application .
13137	Redirect to a route .
13138	Validate email address
13139	Returns the difference between two dates .
13140	Returns the difference between two dates .
13141	Returns the difference between two dates .
13142	Returns the difference between two times .
13143	Get the list of commands .
13144	Set command properties .
13145	Creates a console command from an annotation .
13146	Get storage path .
13147	Find model by id
13148	Get task parameter
13149	Send an HTTP request .
13150	Get a GET request .
13151	Perform a POST request .
13152	Get HEAD request .
13153	Make a PUT request .
13154	Patch a URI .
13155	Deletes a URI .
13156	Deserializes the host .
13157	Track the given name .
13158	Merge data with the given data .
13159	Read a file .
13160	Get a package by name .
13161	Initializes the config file .
13162	Clears all PHP code .
13163	Returns the code of the php code .
13164	Evaluate PHP code
13165	Initializes the template paths .
13166	Add template path
13167	Creates a new instance of the given object .
13168	Get schema names .
13169	Get table names .
13170	Refresh table metadata .
13171	Get table metadata
13172	Get table metadata .
13173	Set table metadata .
13174	Get cache key
13175	Get option by name
13176	Get tmp directory
13177	Initializes the database .
13178	Create a new role .
13179	Assign role to role
13180	Registers a function .
13181	Call a method on the given name .
13182	Get parameter value
13183	Resolves a value from a string
13184	Convert a query string to a URL
13185	Get twitter twitter .
13186	Render panes .
13187	Register a new user .
13188	Sets a random vector .
13189	Opens the cipher .
13190	Initializes the cipher .
13191	Connects to a user
13192	Verify user credentials .
13193	Fetch user data
13194	Creates a new AuthExtension instance .
13195	Add data tokens to the object
13196	Get auth protocol
13197	Determine if the given credentials is authenticated .
13198	Determine if the given credentials are valid .
13199	Close the stream .
13200	Attach a stream to the stream .
13201	Returns the contents of the stream .
13202	Sets the stream .
13203	Write data to file
13204	Get the virtual account .
13205	Get the previous account
13206	Updates an existing account .
13207	Set query duration
13208	Sets the connection .
13209	Fetches the results of a row .
13210	Execute an INSERT query
13211	Execute the query .
13212	Log query .
13213	Query scopes .
13214	Executes a query and returns the result .
13215	Check if the given pattern matches the given pattern .
13216	Executes a SQL statement .
13217	Invokes a closure .
13218	Check if the given layer is valid .
13219	Prepare the DOM document
13220	Dispatches the router .
13221	Render an error
13222	Render debug info
13223	Render a view .
13224	Initialize channels .
13225	Add the response headers .
13226	Register shortcode .
13227	Remove shortcode .
13228	Parse shortcode tag .
13229	Parse shortcode attributes
13230	Get the download URL for a package .
13231	List packages .
13232	Sort releases .
13233	Get array data
13234	Get all hours
13235	Parses a page
13236	Get all accounts by user id
13237	Output the application message .
13238	Display usage message .
13239	Get the usage path .
13240	Displays the arguments section .
13241	Prints options section
13242	Get option name .
13243	Generate a rollback
13244	Set the column s columns .
13245	Add having clause
13246	Add a where condition .
13247	Adds a JOIN clause to the query .
13248	Adds a left join to the query .
13249	Adds a join to the query .
13250	Returns the SQL for the SELECT statement .
13251	Execute the SELECT query
13252	Prefix table join condition .
13253	Get a value from the collection .
13254	Add a value to the collection .
13255	Remove a key from the collection .
13256	Inserts a row into a table
13257	Sets the error stack
13258	Get a singleton instance .
13259	Handle error .
13260	Sets the message callback .
13261	Set default callback
13262	Removes an error from the stack .
13263	Pop the stack .
13264	Returns true if the error has an error .
13265	Get all errors
13266	Returns true if the stack has any errors .
13267	Returns an array of error messages
13268	Get error message
13269	Register configuration .
13270	Register a provider .
13271	Registers an autoloader .
13272	Gets the required parameters for the given reflection .
13273	Set the target directory
13274	Set the mode
13275	Get all routes .
13276	Set route properties .
13277	Get the routes for the given class .
13278	Build a new route based on the given route .
13279	Creates a route from an annotation .
13280	Publish annotations .
13281	Format the response .
13282	Format JSON response .
13283	Returns the host port .
13284	Returns the host port .
13285	Returns a new instance with the specified host .
13286	Returns a new instance with the specified port .
13287	Returns a new instance with the given path .
13288	Returns a new instance with the specified query string .
13289	Returns a new instance with the specified fragment .
13290	Determine if the scheme is standard .
13291	Validate the scheme .
13292	Validate the port .
13293	Validate a package
13294	Validates a dependency .
13295	Normalizes a dependency .
13296	Add a word to the sentence
13297	Tokenize a string
13298	Join array with values
13299	Check if a table exists
13300	Maps a class name to a table
13301	Get table class name
13302	Process a comment .
13303	Handles a channel .
13304	Login a user .
13305	Log out a user .
13306	Converts a separator to a separator .
13307	Get migration files .
13308	Get the migration map .
13309	Publish a method
13310	Execute a curl request
13311	Check if the given URL is valid .
13312	Transforms a directory .
13313	Create app builder .
13314	Create an AppBuilder instance from the container .
13315	Get app dependencies .
13316	Reset the given file .
13317	Create a branch .
13318	Delete a branch .
13319	Push a branch .
13320	Create a pull request .
13321	Clone project .
13322	Called when a callback is called .
13323	Run a command .
13324	Connect to the client
13325	Add a file to the filter .
13326	Get the name of a file
13327	Get the filename of a file
13328	Gets a service
13329	Generates a service definition .
13330	Set service service
13331	Set alias .
13332	Get parameter by id
13333	Set a parameter .
13334	Get service definition
13335	Set service definition
13336	Initializes the project .
13337	Initialize event from user event .
13338	Convert the table to an array
13339	Check if the string is serialized
13340	Checks if the given procedure is valid .
13341	Add a route
13342	Initialize routes .
13343	Create a controller instance .
13344	Registers a controller .
13345	Registers controller action .
13346	Registers a controller .
13347	Get default controller action .
13348	Register observer .
13349	Unregisters an observable observer .
13350	Set the channel name .
13351	Execute command .
13352	Add flash message
13353	Redirect to the current URL .
13354	Configure the shared cache .
13355	Initialize the bot .
13356	Finalizes the middleware .
13357	Returns the configuration directory .
13358	Checks that the given arguments are expected .
13359	Get the connection instance .
13360	Configure TinyMce .
13361	Set the capabilities .
13362	Create a new instance .
13363	Create a new Locale instance .
13364	Get the list of available choices .
13365	Check if a constant is valid
13366	Checks if the given value is valid .
13367	Check if value is valid
13368	Get the adapter instance .
13369	Create the controller path
13370	Create cache path
13371	Update the WSDL file
13372	Compiles the SOAP server .
13373	Returns the documentation of the controller .
13374	Returns a list of all the controllers .
13375	Build the output .
13376	Builds the Bootstrap CSS .
13377	Get parameter value
13378	Rebuild the base URL .
13379	Add a route .
13380	Get a route instance .
13381	Checks if a route exists .
13382	Get a dynamic route .
13383	Checks if a route exists .
13384	Get a named route .
13385	Creates a sub - tree .
13386	Locates a file
13387	Convert a number to a decimal representation .
13388	Compare two numbers .
13389	Calculate decimal value .
13390	Adds a new number to the end of this instance .
13391	Subtracts a number from the specified number .
13392	Multiplies the multiplication of this object .
13393	Divide the value of this Money
13394	Get the adapter instance .
13395	Returns an array of aliases .
13396	Find aliases for a query .
13397	Replace all files in the destination directory .
13398	Reads data from the socket .
13399	Enable SSL encryption .
13400	Check timeout .
13401	Add route .
13402	Sets the items .
13403	Builds the HTML for the given site key .
13404	Prepare the name attribute .
13405	Check if attribute is set .
13406	Add a resource to the queue .
13407	Creates a Day from an array of hours .
13408	Creates an instance from an associative array .
13409	Determine if the given interval is a valid interval .
13410	Create request from array
13411	Set server info
13412	Set request headers
13413	Set post fields
13414	Set query fields
13415	Returns the header value .
13416	Convert request to array
13417	Add a command .
13418	Add a command to the command .
13419	Get a command by name .
13420	Removes a command .
13421	Match the given path .
13422	Get all available commands .
13423	Setup console commands .
13424	Setup the console command .
13425	Get the cacheable .
13426	Sets the separator .
13427	Register a listener .
13428	Listen to listeners .
13429	Check if an event exists
13430	Removes an event .
13431	Determine if the given event exists .
13432	Add an event .
13433	Remove event .
13434	Trigger an event .
13435	Setup events .
13436	Setup event listeners .
13437	Initialize the template
13438	Check if template exists
13439	Fetch the template
13440	Load the data from the file
13441	Save data to file
13442	Initializes the reader .
13443	Initializes the writer .
13444	Get default options .
13445	Encrypt data .
13446	Decrypt data .
13447	Generates a key for the session .
13448	Writes an exception to the response .
13449	Render an exception .
13450	Get the view file for the given exception .
13451	Create a Response object
13452	Get exception data
13453	Get stdout logger
13454	Read session data .
13455	Write a session to the cache .
13456	Destroy a session
13457	Update timestamp .
13458	Extract data from session
13459	Extract the timestamp from the record .
13460	Get session data
13461	Get the message of the exception .
13462	Converts a table into a SQL statement .
13463	Add auto increment increment increment
13464	Adds a key .
13465	Adds a foreign key .
13466	Returns the SQL for a column .
13467	Start the jump stage .
13468	Creates an exception .
13469	Renders the toggle button .
13470	Get response template
13471	Get module name
13472	Load class reflection .
13473	Load object reflection .
13474	Loads a property reflection .
13475	Get callable method .
13476	Get class properties
13477	Set a property value
13478	Set property value
13479	Load class annotations .
13480	Clears the mode .
13481	Determine if the given class is instantiated .
13482	Returns the reflection of the given object .
13483	Returns the reflection class for the given object .
13484	Checks if the given method is valid .
13485	Get reflection from object
13486	Sets the reflection to the cache .
13487	Get cache key
13488	Get object class name
13489	Parse doc comment .
13490	Get class doc comment
13491	Get the documentation of a method .
13492	Initialize database by key
13493	Map the namespace to the namespace
13494	Remove indentation .
13495	Processes the data
13496	Extract photos from source data
13497	Fetches image sizes .
13498	Extract images from source
13499	Find placeholders in placeholders
13500	Build route path .
13501	Search for the given route .
13502	Replace placeholders .
13503	Initializes the language .
13504	Preload messages .
13505	Find categories by pattern .
13506	Check if a property exists
13507	Send an exception .
13508	Returns the content of the exception .
13509	Format a file path .
13510	Format arguments .
13511	Escapes a string .
13512	Set the validation rules .
13513	Transforms a string into an array
13514	Dispatches a connection .
13515	Handles the event handler .
13516	Callback for phone callback .
13517	Called when a client is closed .
13518	Get the proxy handler .
13519	Display application config .
13520	Load bundles .
13521	Load messages .
13522	Set HTTP headers
13523	Sets the server environment variables .
13524	Perform a POST request
13525	Send JSON RPC request
13526	Connect to database
13527	Escape a string
13528	Initialize the application .
13529	Checks if the field has a slug .
13530	Get special fields
13531	Get fields by type
13532	Get date from time
13533	Returns the preferred language .
13534	Returns the allowed charset .
13535	Returns the MIME type of the given Accept header .
13536	Match Accept header
13537	Sort Accept header .
13538	HTTP HEAD request
13539	Convert charset to string
13540	Get entity manager
13541	Get object structure structure
13542	Retrieves an object from the database
13543	Get table structure
13544	Get the model s model
13545	Builds the object structure structure
13546	Prepare error message .
13547	Checks if the given budgets are valid .
13548	Check if the given budget is valid .
13549	Find a budget by id
13550	Sets the ID of this node .
13551	Sets the main menu .
13552	Get account user account
13553	Get the bank bank .
13554	Parses a CSV file .
13555	Get icon icon
13556	Builds the query builder
13557	Escapes a value .
13558	Create a new redirect response .
13559	Sets the redirect URL .
13560	Redirect to the response .
13561	Throw an exception .
13562	Filter the global commands .
13563	Sort commands .
13564	Outputs a command line .
13565	Initializes the session .
13566	Start a timer .
13567	Returns the timer for the given name .
13568	Display timer .
13569	Initialize the provider .
13570	Initializes the application .
13571	Initializes the basic configuration .
13572	Locates the config file path .
13573	Locates the autoloader .
13574	Create a new configuration instance .
13575	Get config reader
13576	Initialize container .
13577	Initialize static application .
13578	Returns true if the token matches the given request .
13579	Get token from request
13580	Initialize the bot .
13581	Get the forecast for a given location .
13582	Get the precipitation for a given location .
13583	Get longitude for a given location .
13584	Add error message
13585	Get English intensity for the given intensity .
13586	Get annotation annotations .
13587	Returns an array of class annotations .
13588	Get annotations for a class
13589	Get annotations for a given class .
13590	Get annotations for a given type .
13591	Get annotations for a class
13592	Get method annotations .
13593	Filter annotations by type
13594	Returns an array of method annotations .
13595	Returns an array of function annotations .
13596	Filter annotations by type
13597	Set annotation values .
13598	Get a class reflection
13599	Gets a property reflection .
13600	Returns the reflection method for the given class .
13601	Gets a function reflection .
13602	Get dependency dependencies .
13603	Calculate the length of the center
13604	Returns the center of the center
13605	Renders the form .
13606	Create a new field .
13607	Check if a key exists .
13608	Get the display name .
13609	Scan directory recursively
13610	Add a header
13611	Get all headers
13612	Creates a database connection
13613	Get all database tables
13614	Update the database from a structure .
13615	Update table relations .
13616	Update many tables .
13617	Generate a SQL statement .
13618	Generate the SQL for a column
13619	Generate index SQL query
13620	Generates the SQL for a constraint .
13621	Returns the keys of the given key .
13622	Returns a list of keys for a given key .
13623	Get a class annotation
13624	Returns the class for the given class .
13625	Get a property of a property
13626	Returns the property of the given property .
13627	Get method annotations for a given method .
13628	Returns the method for the given method .
13629	Get the reader .
13630	Get method reflection .
13631	Get value from cache
13632	Sets a value to the cache .
13633	Returns the paths of the given key .
13634	Process a key
13635	Check event class name
13636	Build the event .
13637	Get average value
13638	Order by field .
13639	Read parameters from constructor
13640	Returns the value of a given path .
13641	Set the value of an object
13642	Filters an array of objects .
13643	Set the email address .
13644	Add a new address
13645	Add a reply to the mail .
13646	Add a CC address
13647	Add a bcc .
13648	Add an attachment
13649	Run the console command .
13650	Set the referrer
13651	Get the referrer .
13652	Builds the URL for the given parameter .
13653	Download package .
13654	Extract the package from the zip archive .
13655	Reset default locale translations .
13656	Returns the first occurrence of a string .
13657	Create the sidebar menu .
13658	Add example menu item
13659	Register the migration repository .
13660	Publish pages .
13661	Update the query
13662	Load messages .
13663	Get all messages .
13664	Get file name .
13665	Validates uploaded files .
13666	Initializes the result object .
13667	Get the pattern for the given pattern .
13668	Sets the attributes .
13669	Detect configuration by key .
13670	Check if the shell is enabled .
13671	Get the configuration .
13672	Returns a datetime representation of the datetime .
13673	Returns a datetime representation of this instance .
13674	Calculate the latitude range between two points
13675	Calculates the longitude range .
13676	Returns the distance of the given location .
13677	Check if the given data matches the given data .
13678	Create tables from config
13679	Bind multiple tables .
13680	Get a point by name
13681	Publish command .
13682	Get the matching url fragment
13683	Generates the response for the given request .
13684	Retrieves data from cache .
13685	Checks if a string ends with a given string .
13686	Count words in a string
13687	Creates a new active user .
13688	Initializes the session .
13689	Open session .
13690	Open session .
13691	Registers the session handler .
13692	Close session .
13693	Destroy session .
13694	Regenerates the session ID .
13695	Read session data
13696	Write session data
13697	Destroy a session
13698	Set a value
13699	Remove a key from the cache
13700	Removes all data from the session
13701	Returns the value of a given key .
13702	Get all flash messages .
13703	Set flash message
13704	Add flash message
13705	Removes a flash message .
13706	Removes all flash messages .
13707	Sets the session data
13708	Deletes the session data .
13709	Create session cookie
13710	Validate if the given attribute is valid .
13711	Validates the given date with the given parameters .
13712	Validate date format
13713	Checks if the prediction is predicted .
13714	Assign a value to an array .
13715	Get the controller config .
13716	Execute a rule .
13717	Process a list of all defined dependencies .
13718	Parses a raw string into an array
13719	Creates a view instance .
13720	Sets the view variables .
13721	Sets a view variable .
13722	Escapes a string .
13723	Get template directory .
13724	Set the layout .
13725	Set view template .
13726	Render partial template .
13727	End block .
13728	Render view .
13729	Get full path to a template file .
13730	Render template file
13731	Renders the layout .
13732	Set the route .
13733	Get line line separator
13734	Output message message .
13735	Get all notification notifications .
13736	Create a new notification .
13737	Sets the key .
13738	Determine if the file should be renamed .
13739	Guess the file extension .
13740	Guess the filename of the file .
13741	Set rename .
13742	Download file .
13743	Upload a tiny image
13744	Called when an exception is thrown .
13745	Get cURL request
13746	Execute the curl request
13747	Set cookie file
13748	Choose an array of parameters
13749	Lists all items .
13750	Initializes options .
13751	Writes the configuration to the file .
13752	Get exception from context
13753	Convert an exception to an array
13754	Render a file
13755	Checks if a file is core
13756	Get exception name .
13757	Sets the content of the response
13758	Generate a minify list
13759	Sets the default value .
13760	Sets the date start date .
13761	Set the date end date
13762	Sets whether or not the model is writable .
13763	Sets the month mask .
13764	Returns a list of all available category categories .
13765	Returns a list of all available budgets for this subscription .
13766	Executes a prepared statement .
13767	Throw an error
13768	Loads a class path
13769	Updates the connection .
13770	Down down the database .
13771	Inserts a table into the database .
13772	Insert a batch into a batch .
13773	Update a table .
13774	Delete a table .
13775	Renames a table .
13776	Drops a table .
13777	Truncates a table .
13778	Drops a column .
13779	Renames a column .
13780	Modify column .
13781	Add a primary key .
13782	Drops a primary key .
13783	Adds a foreign key .
13784	Drops a foreign key .
13785	Creates a new index .
13786	Drops a table .
13787	Adds a comment to the table .
13788	Adds a comment to a table .
13789	Drops a comment from a table .
13790	Drop comment from table .
13791	Executes a command .
13792	Log a message .
13793	Validates a regular expression .
13794	Captures the given text .
13795	Splits text into a string .
13796	Replace text with given text .
13797	Displays config form
13798	Get the seo image url
13799	Get an entity by id .
13800	Get an instance of the model .
13801	Returns a list of all the models .
13802	Save a model .
13803	Deletes a model .
13804	Get all items in the database
13805	Returns a list of models with the given keys .
13806	Set a cookie
13807	Connect to a remote server
13808	Save record .
13809	Sets the data for this record .
13810	Convert the record to an array
13811	Returns the value of the given field .
13812	Sets the value of a record .
13813	Get the primary key of the record .
13814	Parse a path .
13815	Validates a path .
13816	Splits segments into an array .
13817	Parse a path string into an array
13818	Get parameter replacement .
13819	Store a value in the cache .
13820	Flush the cache manager .
13821	Process response data
13822	Invokes the given action .
13823	Get content type
13824	Regenerate a new id
13825	Create session id
13826	Create a GC timer .
13827	Sets the content type .
13828	Set buttons .
13829	Add a button .
13830	Validates the given type .
13831	Validates a size .
13832	Register commands .
13833	Archive tar archive
13834	Add a string to the file
13835	Determine if the file is a valid filename .
13836	Parse the user command .
13837	Migrate the given object to another object .
13838	Get unique keys .
13839	Get primary key .
13840	Returns the primary key of the table .
13841	Get the priority .
13842	Get the validator instance .
13843	Load mime types
13844	Load mime aliases .
13845	Unlink a file
13846	Returns a string representation of the given mode .
13847	Convert a permission string to an ASCII string .
13848	Add a join to the query .
13849	Generate SQL query
13850	Execute search query
13851	Create a new table .
13852	Load modules .
13853	Get the container .
13854	Initializes the bot .
13855	Select a select statement
13856	Set the query builder .
13857	Set the value of a column .
13858	Add a where clause to the query builder .
13859	Add OR WHERE clause
13860	Sets the ORDER BY clause .
13861	Sets the ORDER BY clause .
13862	Get the query string .
13863	Set where clause
13864	Sets the order by clause .
13865	Get select query
13866	Returns the insert query string
13867	Get update query string
13868	Get delete query
13869	Returns the SQL query string .
13870	Get the WHERE clause .
13871	Returns the ORDER BY clause .
13872	Dispatch an expression .
13873	Register a new post .
13874	Edit a user .
13875	Get the version string .
13876	Create route .
13877	Handle the request .
13878	Resolves a route .
13879	Get the home URL .
13880	Set component definition
13881	Restrict a user
13882	Get user by id
13883	Get active active activity .
13884	Save messages to file
13885	Finds a value in the list .
13886	Finds a model with the given conditions .
13887	Fetches data from the database .
13888	Reads a column from the database .
13889	Read an object from the database
13890	Fetches all results .
13891	Get column count
13892	Finds the constraints for a table .
13893	Get server version
13894	Publish routes .
13895	Parse route data .
13896	Builds a route expression .
13897	Register a service alias .
13898	Bind service to service
13899	Bind the service to the container .
13900	Get service from context context
13901	Check if a service id exists
13902	Check if a context has a context .
13903	Get a service .
13904	Make a service instance .
13905	Get a singleton instance .
13906	Get the service provider .
13907	Returns the context id for the given context .
13908	Setup services .
13909	Configure service from cache
13910	Setup service providers .
13911	Get cacheable data .
13912	Get address lines
13913	Set the level of the filter
13914	Get unique ID .
13915	Registers the router .
13916	Resolve action .
13917	Sets the before action .
13918	Event after an action .
13919	Render a view .
13920	Renders an AJAX request .
13921	Gets the list of actions .
13922	Render the view .
13923	Render a view .
13924	Normalize action name .
13925	Resolve error message .
13926	Resolve error response .
13927	Get error data
13928	Get exception name .
13929	Validate action .
13930	Get action id
13931	Get action method .
13932	Convert color to hex string
13933	Convert color to RGB .
13934	Creates an image from a string
13935	Get the stream stream .
13936	Selects a prompt .
13937	Append a path to a file .
13938	Get the pg client .
13939	Executes a SQL query .
13940	Write a file to the stream .
13941	Creates a new instance from the server .
13942	Get header value
13943	Strip the query string from the given path .
13944	Marshall the host header into an associative array .
13945	Normalize uploaded files .
13946	Checks if a string ends with a given string .
13947	Generate random string
13948	Creates the annotations for the given class .
13949	Find all annotations for a given class .
13950	Create a new repository .
13951	Fetch all collection items
13952	Update a record .
13953	Set status code
13954	Set response headers
13955	Get the date header .
13956	Set the date header
13957	Add a cache control
13958	Get a cache control
13959	Remove a cache control
13960	Check if the response is valid .
13961	Get the age of the response .
13962	Set the expiration time .
13963	Get the expiration time .
13964	Get max age
13965	Set the max age of the response .
13966	Set the expiration time .
13967	Set the response body
13968	Check if the response is valid .
13969	Returns true if the status code is in the response .
13970	Check if response is successful
13971	Check if the response is redirection
13972	Checks if the client is an error
13973	Check if the response is a redirect .
13974	Check if the response is empty .
13975	Closes output buffers .
13976	Initializes the request .
13977	Validates the HTTP method .
13978	Locates a command .
13979	Returns all the paths of the given command .
13980	Downloads the package .
13981	Remove installed packages .
13982	Detects the duplicates of the given parameters .
13983	Load file from file
13984	Get request parameters
13985	Enable error handler .
13986	Returns the difference between this transaction .
13987	Add a bitmask to the current month .
13988	Checks if the given month is a month .
13989	Get the length of the request
13990	Get request boundary
13991	Loads a user by username .
13992	Create a new user .
13993	Set IP address
13994	Render a view .
13995	Publish an event .
13996	Processes a resource .
13997	Set request parameters
13998	Fetch the message
13999	Encrypt a message
14000	Decrypts a string
14001	Decrypt a string
14002	Encrypt an object .
14003	Decrypt a string
14004	Get option value
14005	Initialize default values
14006	Replace the magic fields
14007	Convert a query to a query builder .
14008	Convert rich text to text
14009	Creates a HTML block .
14010	Convert the given block to HTML .
14011	Remove a cookie .
14012	Send the HTTP response .
14013	Validates the status code .
