0	Checks if the given URL is supported .
1	Builds an array of dependencies .
2	Builds the dependencies of a dependency array .
3	Builds the dependencies of a dependency .
4	Builds the dependencies for a given dependency .
5	Builds the dependencies of a package .
6	Parse the version constraint constraint .
7	Parse version .
8	Fix a package .
9	Authorize OAuth .
10	Get the current installed packages .
11	Mock the local repository .
12	Set autoloader .
13	Set the class map .
14	Copy file to cache
15	Replaces the version .
16	Gets the content of a composer file .
17	Returns a list of locked packages .
18	Get the timestamp of a package .
19	Get repository data .
20	Parses the given level .
21	Tries to revert a level .
22	Add a package .
23	Remove a package .
24	Copy a file .
25	Get contents of a file .
26	Get remote content
27	Writes the contents of the package .
28	Register the error handler
29	Filters required packages .
30	Append a list of packages .
31	Parses a line .
32	Add a rule .
33	Add a reason .
34	Converts a job into a string .
35	Prints a list of versions .
36	Prints all links .
37	Prints licenses .
38	Initializes the styles .
39	Generate the package tree .
40	Fetch root identifier
41	Check if a certificate is valid .
42	Get certificate names .
43	Parses a package .
44	Dispatch script .
45	Dispatch package event .
46	Dispatch installer event .
47	Adds a subscriber to the list .
48	Get the list of listeners .
49	Gets the script listeners .
50	Push event to stack
51	Add a repository .
52	Set output progress .
53	Set the downloader .
54	Get downloader .
55	Download a package .
56	Update a package .
57	Remove a package .
58	Resolve the package preference .
59	Add a suggested package .
60	Add suggestions from package .
61	Checks if a directory is empty .
62	Unlink a file
63	Deletes a directory .
64	Get file size
65	Normalize a path
66	Check if a directory is a symlinks directory .
67	Resolves a symlinks directory .
68	Create a junction .
69	Remove a junction .
70	Create an autoloader
71	Filter the package map .
72	Authorize OAuth authentication .
73	Authorize an access token .
74	Request access token .
75	Sets the pointer at the given offset .
76	Remove the item from the collection .
77	Configure the command line .
78	Find a package by its name .
79	Create repository .
80	Supplies an error .
81	Call a callable
82	Extract the package .
83	Copies files to a file .
84	Expands a path .
85	Get the name of the package .
86	Archive a package .
87	Get the defaultizer .
88	Checks if a rule is equal to another .
89	Writes data to the file .
90	Throw an error .
91	Parse JSON string .
92	Validate a JSON string .
93	Filters the path against the given path .
94	Checks if a vendor file is ignored .
95	Find the best version of a package .
96	Read a channel .
97	Selects the REST version of a channel .
98	Adds a prefix to the list of paths .
99	Adds a PSR - 4 prefix to the list of paths .
100	Sets a list of paths .
101	Sets the PSR - 4 paths for the given prefix .
102	Find a class by its class name .
103	Get the highest priority of the given package .
104	Determine if the request is a rate limit .
105	Watch the results of a decision .
106	Moves the watch .
107	Checks if the given url is not allowed .
108	Add a new extension
109	Get git version .
110	Load installed plugins .
111	Add a plugin .
112	Collect dependencies .
113	Get install path
114	Open browser .
115	Execute a command .
116	Execute a local command .
117	Get command line
118	Get credentials string
119	Get the user s password .
120	Determine if the user is authenticated .
121	Create auth credentials from config
122	Create credentials from url
123	Get the current binary version .
124	Get error message .
125	Returns the provider for the given constraint .
126	Create a remove rule .
127	Ensure that the package is installed .
128	Get package base path
129	Get the content of a resource .
130	Parses an XML file .
131	Update the local repository .
132	Disable plugins .
133	Get installer by type
134	Check if a package is installed .
135	Ensure that the package is binary .
136	Execute the job .
137	Install a package .
138	Updates a repository .
139	Uninstall a package .
140	Mark an alias .
141	Mark an alias .
142	Get install path
143	Fix HTTP header field
144	Insert a rule .
145	Propagate a literal to a rule .
146	Move a node .
147	Process the URL of a package .
148	Create a validator .
149	Check if scenario is active
150	Add error message .
151	Create a new command
152	Returns a batch query .
153	Execute batch query
154	Populate the list of rows .
155	Returns a scalar value .
156	Add select columns
157	Add a where condition
158	Add a condition to the query .
159	Add having clause
160	Add a condition to the query .
161	Adds a condition to the query .
162	Add multiple params
163	Set query cache .
164	Create a new instance from a query .
165	Serializes an array of links .
166	Load messages from file
167	Load mime types
168	Load mime aliases
169	Unlink a file
170	Filters the given path .
171	Creates a directory .
172	Matches a path to a given path .
173	Returns the first occurrence of a given pattern .
174	Check if the given action is optional or not .
175	Remove value from array
176	Remove value from array
177	Decode HTML data .
178	Filters an array of filters
179	Load bundle .
180	Loads a dummy bundle
181	Get the converter converter
182	Publish a file .
183	Returns the published URL for the given path .
184	Initializes the view .
185	Render the input .
186	Renders the text .
187	Fetch data from the database
188	Get column definition
189	Set the transaction isolation level .
190	Loads information about table columns .
191	Set status code
192	Sends the response .
193	Clears the response .
194	Sends a file .
195	Sends a file to the response .
196	Sends a file to a stream .
197	Set download headers
198	Send a file .
199	Redirect to URL
200	Check if the given attribute exists .
201	Checks if a value exists in the database .
202	Determine if the given value exists .
203	Create a new query .
204	Outputs a cursor to a cursor .
205	Wrap the text with the given text .
206	Get the stdout of the stream .
207	Confirm user confirmation .
208	Selects a prompt .
209	Format scalar value .
210	Returns the valid XML element name .
211	Hash plugin options
212	Initializes the client options .
213	Registers client scripts
214	Get the request parameters
215	Resolves route parameters .
216	Returns a string representation of the text .
217	Render an image .
218	Returns the URL for the given value .
219	Format a boolean value .
220	Format a number .
221	Normalize numeric value .
222	Determine if the given value is normalized .
223	Normalizes a numeric value .
224	Convert an integer value to an integer .
225	Returns a string representation of the given value .
226	Returns a string representation of the given currency .
227	Get schema names .
228	Get table names .
229	Returns the type of the given data .
230	Get last insert id
231	Inserts a table into the database .
232	Quote a string
233	Quote table name .
234	Unquote table name
235	Get column type .
236	Get cache key
237	Set table metadata .
238	Normalizes the given row key .
239	Load table metadata from cache
240	Save table metadata .
241	Initializes the model .
242	Renders the table .
243	Render attribute .
244	Export log messages .
245	Get column by name
246	Fix primary key .
247	Initializes the session .
248	Destroy the session
249	Regenerate session id
250	Set session cookies
251	Removes a flash message from the session .
252	Removes all flash messages .
253	Clear session data
254	Ends a widget .
255	Validates the widget .
256	Executes the given result .
257	Initializes the theme .
258	Render view file
259	Find a view file
260	Render a view file
261	Cast value to type
262	Deletes a model .
263	Close session .
264	Escapes a column name .
265	Sets the logger .
266	Load messages from database
267	Load messages from database
268	Get the context message .
269	Format a message .
270	Get enabled enabled .
271	Render the separator .
272	Convert data to json
273	Convert data to XML .
274	Renders a cell cell
275	Render cell content
276	Print help message
277	Notify all fixtures .
278	Notify fixtures .
279	Notify all fixtures .
280	Confirm fixtures .
281	Confirm all fixtures .
282	Output a list of items
283	Find fixtures .
284	Get fixtures configuration .
285	Set default header
286	Remove a header
287	Tries to negotiate the request .
288	Resolve the language .
289	Check if the language is supported .
290	Checks if a variable exists
291	Populates a relation .
292	Determine if the attribute exists .
293	Get attribute by name
294	Set attribute value
295	Get old attribute
296	Check if the attribute is changed .
297	Get dirty attributes
298	Update attributes .
299	Before save event
300	Refresh the current record .
301	Check if the given keys are primary key
302	Get attribute label .
303	Get attribute hint .
304	Reset all relations .
305	Set relation dependencies .
306	Get size limit
307	Convert size to bytes .
308	Create route rule
309	Export message .
310	Compose a message .
311	Applies a table alias to the query .
312	Run the request .
313	Sets the runtime path .
314	Get vendor path .
315	Sets the vendor path .
316	Renders a view
317	Register asset bundle .
318	Register css file .
319	Registers a JS file .
320	Renders the body of the body
321	Normalizes the given path .
322	Convert a word to plural form .
323	Returns a human - readable human readable string .
324	Converts a string to camel case .
325	Converts a word to a string .
326	Returns a string representation of words .
327	Sends the mailer .
328	Get an instance of the class
329	Builds the key for the given key .
330	Get a value by key .
331	Set multiple items .
332	Add multiple items .
333	Add a value to the collection .
334	Get the sequence name of a table .
335	Create a column
336	Finds the constraints for a table
337	Extracts column type .
338	Extracts column size .
339	Registers the client scripts .
340	Create a field instance .
341	Validate input data
342	Validates multiple models .
343	Render sort links .
344	Generates a mail .
345	Set the active placeholder for the model .
346	Merge CSS classes .
347	Remove CSS classes .
348	Creates CSS style from array
349	Convert CSS style to array
350	Get attribute value
351	Get input name .
352	Get input id
353	Escape regular expression .
354	Tokenize a pattern .
355	Prepare the model .
356	Initializes the controller
357	Check if PHP version is PHP version .
358	Compares two bytes .
359	Checks if the uploaded file size is greater than max size
360	Normalizes a requirement .
361	Render errors .
362	Get client options
363	Renders the table .
364	Render the caption .
365	Render column group
366	Renders the footer .
367	Renders the filters .
368	Renders the table body
369	Get view names .
370	Check if value is empty .
371	Check if the color is enabled .
372	Write a string to STDOUT
373	Get option values
374	Get the values of the passed option .
375	Get the arguments for a action .
376	Parse the doc comment .
377	Get the size of a verbose size .
378	Renders an exception .
379	Render a stack item .
380	Renders the stack .
381	Create server link .
382	Convert arguments to string
383	Get exception name .
384	Validate image .
385	Get order orders
386	Returns an array of sorted attributes .
387	Set attribute orders
388	Get attribute order by attribute .
389	Generates a link .
390	Load default values
391	Filter the query aliases .
392	Filters a condition .
393	Filter column names .
394	Update all attributes
395	Update all counters
396	Delete all records
397	Get table schema .
398	Deletes a record
399	Deletes the object from the database .
400	Processes a markdown .
401	Processes a paragraph
402	Performs a purifier .
403	Override default settings
404	Prepares headers .
405	Add CORS headers .
406	Determine if the browser is flash .
407	Get request parameters
408	Get query parameter
409	Get host information
410	Set hostname
411	Encode a UTF - 8 string .
412	Get the port .
413	Sets the port .
414	Sets SSL port .
415	Get the allowed content types .
416	Get the list of allowed languages .
417	Get an array of all the e - mail headers .
418	Get all cookies .
419	Validates a CSRF token
420	Renders the block .
421	Initializes the connection .
422	Renders the form tag .
423	Add hidden input .
424	Adjust the label for the widget .
425	Adds the error class to the form .
426	Get module instance
427	Sets the module instance .
428	Initializes the controller .
429	Get unique ID .
430	Get base path
431	Get module by id
432	Get all modules
433	Sets the modules .
434	Determines if the given class name is correct .
435	Check if the given action is valid .
436	Executes the given action .
437	Compare two values .
438	Check if a property is set .
439	Check if a property exists
440	Check if a property has a given property .
441	Check if the given method exists .
442	Determine if the given event handlers exists .
443	Removes an event .
444	Trigger an event .
445	Get a behavior by name .
446	Detach behaviors .
447	Attach a behavior .
448	Render button buttons .
449	Initializes the cache .
450	Encodes a JSON string .
451	Prepare insert query .
452	Update an existing table .
453	Delete a row from a table
454	Drop primary key .
455	Drop a column .
456	Drop a foreign key .
457	Drop a unique constraint .
458	Drop a check column
459	Get column type .
460	Quote table names
461	Builds the columns from an array .
462	Build a condition .
463	Builds a logical condition .
464	Builds a logical condition .
465	Builds a BETWEEN condition .
466	Builds a condition .
467	Builds a condition .
468	Build a simple condition .
469	Run a model .
470	Updates the database .
471	Down the database .
472	Inserts a table into the database .
473	Execute a batch query
474	Update an existing table .
475	Delete a table
476	Create a new table .
477	Renames a table .
478	Drops a column
479	Renames a column .
480	Updates a column .
481	Add a primary key .
482	Add a foreign key
483	Create a new index
484	Drop index .
485	Adds a comment to the database .
486	Add a comment to a table .
487	Drop comment from table .
488	Returns an array of instances for the given model .
489	Finds the table constraints .
490	Find primary key from table
491	Adds a relation to the model .
492	Find a relation by its name .
493	Index all buckets .
494	Flush all messages .
495	Get profiling profiles .
496	Get profiling profiling .
497	Calculates the timing of messages .
498	Applies the path to the given path .
499	Write an integer .
500	Reads a string from a file .
501	Get header name
502	Registers the css script .
503	Execute a batch query
504	Render the response .
505	Initializes the class .
506	Get message formatter .
507	Get message source
508	Compose fields .
509	Displays a controller action .
510	List all actions
511	Format an option .
512	Add values to array
513	Updates migrations .
514	Removes the migration history .
515	Migrate a migration
516	Mark migration .
517	Reset all migrations .
518	Generate class name .
519	Returns the path to the given namespace .
520	Migrate migration .
521	Migrate migration .
522	Creates a migration file .
523	Include migration file .
524	Migrate a migration .
525	Migrate the given version .
526	Initializes the application .
527	Register asset files .
528	Gets the info about the application .
529	Generate a package .
530	Sort a list of changes .
531	Splits the changelog .
532	Sort changelog .
533	Fixes the given file .
534	Fixes the contents of a file .
535	Fix the doc block .
536	Clean doc comment
537	Update doc comment
538	Serialize data provider .
539	Serializes the pagination .
540	Add pagination headers
541	Serialize model errors .
542	Serialize models .
543	Initializes the log file .
544	Export log file
545	Rotate log files .
546	Returns the SQL for creating a new table .
547	Add servers to cache
548	Add memcache servers .
549	Dump variable as string
550	Index all caches .
551	Flush all caches .
552	Flush all caches .
553	Flush a database schema
554	Notifies a list of caches .
555	Notify all caches .
556	Set components .
557	Build a JOIN condition .
558	Build block condition .
559	Builds the condition for a given condition .
560	Builds the operator condition .
561	Autoload a class
562	Logs debug message .
563	Renders the summary .
564	Render sorting .
565	Get the script file .
566	Sets the script file .
567	Parses a date value
568	Format a timestamp .
569	Encrypt the given data
570	Validate data against a given key
571	Generate password hash
572	Validates a password
573	Compare two strings .
574	Unmask a masked token .
575	Get default value .
576	Runs the request .
577	Normalizes a route .
578	Returns the URL to the given URL .
579	Ensure the scheme exists .
580	Get current route
581	Get asset manager
582	Sets the asset manager .
583	Compress assets .
584	Load the configuration file .
585	Loads bundled bundles .
586	Load dependency dependencies .
587	Builds the target file .
588	Adjust the dependencies of a bundle .
589	Registers a bundle .
590	Compress JS files .
591	Compress css files .
592	Combines JS files .
593	Combine CSS files .
594	Compose circular dependency trace .
595	Delete assets .
596	Checks to see if the given file is valid .
597	Get one row from database
598	Add a relationship to the query .
599	Joins a relationship .
600	Add a condition to the query .
601	Adds a condition to the condition .
602	Tokenize SQL statement
603	Checks if the string starts with the given string .
604	Returns a substring of the string
605	Returns the index of the given string .
606	Tokenize a string
607	Tokenize operator .
608	Add a token from the buffer .
609	Convert an asset to a file
610	Get a singleton instance .
611	Set a class definition .
612	Set a singleton instance .
613	Build an instance of the given class .
614	Get dependency dependencies .
615	Resolve dependencies .
616	Set the definitions .
617	Parses an associative array
618	Parse a string
619	Validates the given data .
620	Generate query data
621	Splits a condition .
622	Set the parameters for the request .
623	Creates an array of models .
624	Find all related models .
625	Handle the exception .
626	Set query cache .
627	Bind a parameter to the database .
628	Bind a parameter to the query .
629	Fetch a scalar value .
630	Inserts a table
631	Execute a batch query
632	Update an existing table .
633	Delete a table
634	Create a new table .
635	Renames a table .
636	Drop table .
637	Truncates a table .
638	Adds a column to the table .
639	Renames a column .
640	Drop primary key .
641	Add a foreign key
642	Create a new index
643	Add a unique constraint
644	Adds a default value to the query .
645	Reset sequence sequence
646	Checks if the database is valid .
647	Adds a comment to the query .
648	Adds a comment to the query .
649	Drop comment from table .
650	Drop comment from table .
651	Drops a view .
652	Execute the query
653	Get cache key
654	Execute a raw SQL query
655	Reset the query .
656	Initializes the lock .
657	Release a lock
658	Add a query to the cache .
659	Removes a query .
660	Create a new command
661	Begin transaction .
662	Triggers a transaction .
663	Get the master master .
664	Sets the master master .
665	Open a pool .
666	Render the items .
667	Checks if a string starts with a given string .
668	Normalize a number .
669	Generate dependency data
670	Delete cache .
671	Runs a model .
672	Upgrade the model .
673	Modify a column
674	Normalize row data .
675	Get the current page
676	Sets page number
677	Returns an array of links
678	Detects the search attribute type .
679	Validates a condition
680	Validates condition condition .
681	Validates a condition .
682	Validates a condition .
683	Normalize a complex filter .
684	Merge rules .
685	Get currency symbol
686	Sort a list of models .
687	Get children recursively
688	Removes all items from the collection .
689	Add rules to the url
690	Get url from cache
691	Check if action is active
692	Create view object .
693	Compose the message .
694	Send multiple messages .
695	Validates the given email .
696	After sending the mail
697	Install all extensions
698	Run a command .
699	Execute an application .
700	Execute an extension
701	Clean up vendor dir
702	Find all directories in a directory .
703	Parse request body .
704	Set default roles .
705	Get default roles .
706	Get primary key .
707	Generates a new primary key .
708	Defines a char .
709	Returns a string representation of the column .
710	Generate a tiny integer .
711	Generate a small integer .
712	Creates a new integer .
713	Generate a big integer .
714	Defines a float .
715	Define a float .
716	Create a decimal number .
717	Returns a DateTime object .
718	Creates a timestamp .
719	Creates a new timestamp .
720	Defines a binary column .
721	Returns the amount of money .
722	Get column type
723	Checks if the given table is valid .
724	Get unique id .
725	Render view .
726	Get attribute value
727	Add an event to an event .
728	Removes an event .
729	Add default primary key .
730	Creates a new model .
731	Get unique index information
732	Evaluate the attributes of an event .
733	Convert an array to an array
734	Initializes the item .
735	Get all permissions for a given user .
736	Get the inherited permissions for a given user .
737	Save data to file
738	Save items .
739	Save assignment assignments .
740	Save rules .
741	Checks if the event is valid .
742	Displays the event .
743	Initializes the event handlers .
744	Get fragment configuration .
745	Set unsigned type
746	Build default string .
747	Get the type of the type .
748	Build the complete string representation .
749	Load messages from file
750	Save messages .
751	Validates the slug .
752	Add a rate limit to the response .
753	Initializes the font file .
754	Render verification code
755	Validates the input
756	Renders the image .
757	Renders the image
758	Renders an image
759	Sets the children .
760	Returns whether this node is a collection .
761	Returns the SQL code of the current node .
762	Checks if a token matches the given pattern .
763	Update the collection offsets
764	Splits the statements into a SQL statement .
765	Extracts the parameters from the statement .
766	Sets the identity .
767	Logs a user .
768	Regenerates the CSRF token .
769	Checks if the error is fatal .
770	Get the iterator .
771	Generate config file
772	Creates a configuration file .
773	Extract messages from file
774	Extract messages from file .
775	Reset sequence .
776	Checks if the current server is supported .
777	Returns the default time map for the type .
778	Check if the image is valid .
779	Get cookie value
780	Get cookie value
781	Check if a cookie exists .
782	Adds a cookie to the collection .
783	Report a translation file
784	Validates if the cache is valid .
785	Generate an HTML tag
786	Get all scenarios .
787	Get form name .
788	Get attribute hint .
789	Returns the first error for the given attribute .
790	Get error summary
791	Add errors .
792	Clear error messages
793	Get all attributes .
794	Get active attributes .
795	Load form data
796	Returns the end of the annotation .
797	Returns the index of the given index .
798	Inserts a new token .
799	Remove spaces from the given token .
800	Finds the start of a token .
801	Clear all comments in a range .
802	Determine if the given tag is between two groups .
803	Determine if the given token is void .
804	Check if there is a type hint .
805	Checks if the given token is void .
806	Finds the return annotations .
807	Generates a token .
808	Sorts the given array .
809	Sorts the given list of namespaces .
810	Converts a list of namespaces to an array .
811	Fixes the indentation of a class .
812	Fixes the indentation of a class .
813	Fixes the spacing of a class .
814	Returns the first line of the given tokens .
815	Fixes annotation .
816	Gets the sequence of tokens for the given token .
817	Fixes a single line
818	Fixes new line .
819	Check if the last comment is a comment .
820	Fix the backtick tokens .
821	Splits the doc block .
822	Fixes the closing brace .
823	Returns the previous block .
824	Get the name of the line .
825	Sets the name of the tag .
826	Checks if the given element is a substring .
827	Returns the index of a comment block .
828	Check if a variable is valid .
829	Check if the given token is a string .
830	Processes an exception .
831	Fix the constructor .
832	Fix parent class .
833	Finds the function body .
834	Gets the list of tokens for a function .
835	Finds a function that matches the given function .
836	Clear cache .
837	Detects the block type .
838	Create tokens from array
839	Create a new token from the given code
840	Sets the image size .
841	Unsets a token .
842	Sets a new token .
843	Clear all changed tokens .
844	Clear empty tokens .
845	Removes whitespace from the given index .
846	Generate partial code
847	Get next token .
848	Returns the first sibling of the given token .
849	Returns the previous token .
850	Returns the sibling of the given token .
851	Returns the first sibling of the given token .
852	Returns the first sibling of the given token .
853	Returns the first sibling of this node .
854	Finds the sequence of the given sequence .
855	Inserts a new token .
856	Overwrites the given token .
857	Overrides a range of items in the range .
858	Sets the code of the token .
859	Determine if the given token is found .
860	Clears the given range .
861	Checks if the current token is a PHP type .
862	Get a cache key
863	Change the code hash
864	Registers a token .
865	Checks if the given token is a non - empty array .
866	Check if the type is a valid type .
867	Get previous block .
868	Determines if the condition is in the condition .
869	Create a new process for the given source .
870	Configures the tokens .
871	Returns the list of allowed values .
872	Wraps a word into a string
873	Get annotations .
874	Returns all annotations for the given type .
875	Converts a token into a string .
876	Checks if the given indentation is valid .
877	Check if a class is skipped .
878	Use the rule set .
879	Resolves the set of rules .
880	Resolve a set of subset .
881	Fixes the type of annotations .
882	Normalizes a type .
883	Checks if a function is a function .
884	Returns the longest delimiter for the given pattern .
885	Get the name of a token .
886	Clear tokens .
887	Checks if the given token is valid .
888	Checks if the given function is a valid type .
889	Checks if the token is clear .
890	Gets the list of types .
891	Sets the types of the text .
892	Returns an array of normalized types .
893	Get the content of the tag .
894	Gets the arguments from the given tokens .
895	Finds the comparison between two tokens .
896	Finds the comparison between two tokens .
897	Fixes two tokens .
898	Checks if the given token is a lower case .
899	Gets the list of import statements .
900	Checks if the current line is a multi - dimensional array .
901	Get method attributes .
902	Check if a class is anonymous .
903	Checks if the token is a function .
904	Determines if the given token is an operator .
905	Determines if the given operator is a predicate .
906	Checks if a variable is binary .
907	Find all classes in the given token .
908	Checks if the given token is a short array .
909	Returns the header as a string .
910	Find the position of the header .
911	Add blank blank .
912	Move parameter annotations .
913	Moves the return annotations .
914	Calculates the bitmask .
915	Converts a string to camel case .
916	Calculate trailing trailing whitespace .
917	Sorts an array of elements
918	Sort a list of fixes .
919	Returns the end of the document .
920	Fixes doc comment .
921	Fix annotations .
922	Checks if two lines are between two lines .
923	Ensures that the annotations are not separated .
924	Get invalid errors .
925	Get exception errors .
926	Returns an array of all errors .
927	Get the comment block .
928	Delete a file
929	Clean all files
930	Process all tokens .
931	Clears tokens .
932	Clears the current token .
933	Checks if this object is equal to another .
934	Checks if the given array is equal .
935	Checks if the given key is case insensitive .
936	Get the name of a token .
937	Get the keywords for a list of tokens .
938	Determine if the given object is a valid kind of the object .
939	Checks if the string is whitespace .
940	Overridden to override this method .
941	Returns the path to the file .
942	Determine if the current request is running .
943	Compute config files .
944	Parse the rules .
945	Sets an option
946	Handle the request .
947	Checks if the given script tag exists .
948	Get the API instance .
949	Sanitize shop domain .
950	Creates a hash for the given data .
951	Activate a charge
952	Save a charge
953	Authenticate a request .
954	Redirect to the user .
955	Retrieves a charge
956	Check if the current user is active .
957	Calculates the duration of the trial .
958	Calculates the remaining days of the trial .
959	Cancel Charge .
960	Handle the billing .
961	Handle a job .
962	Build auth url
963	Process the shop .
964	Dispatch webhook hooks .
965	Dispatch script tags .
966	Dispatches the application .
967	Clean up shop .
968	Cancel a plan
969	Get the grant type
970	Set shop domain .
971	Get the grant token
972	Removes the session .
973	Create a new shop .
974	Handle the webhook .
975	Get all webhooks .
976	Delete all webhooks .
977	Get URL from name
978	Validate shop .
979	Get the response .
980	Get the API instance .
981	Get plan charge
982	Show billing .
983	Processing billing plan .
984	Creates a new usage charge .
985	Get charge .
986	Get confirmation url
987	Get payment params
988	Activates a plan .
989	Save a plan
990	Validate the given schema .
991	Get all rules .
992	Visitor for validation rules .
993	Checks if a value is valid .
994	Returns the description of the node .
995	Get deprecated reason .
996	Check if a given offset exists .
997	Unset an offset
998	Returns the type map .
999	Get a type by name
1000	Get a directive by name .
1001	Determine if the given type is overlapping .
1002	Visits the given type .
1003	Parse request body
1004	Parse request parameters
1005	Convert a response to a PSR - 7 response .
1006	Resolve type .
1007	Validates a name .
1008	Get suggestions list
1009	Get the default value for a given field .
1010	Reads the name of the token .
1011	Reads a number from the token .
1012	Read digits from the current position
1013	Read a comment .
1014	Move a string to the current position
1015	Set validation rules .
1016	Check if the given type is a valid type .
1017	Get all registered types .
1018	Merges two arrays .
1019	Create a new error instance .
1020	Returns the locations of the node .
1021	Convert the source to an array .
1022	Build the execution context .
1023	Execute the operation .
1024	Get the operation type for the operation .
1025	Get field entry key
1026	Determine if the given fragment matches the given type .
1027	Execute the given fields and return the result .
1028	Resolve the field definition .
1029	Resolve the value of a field .
1030	Called when a value is completed .
1031	Complete the completion of a field .
1032	Complete the value of a field .
1033	Get the promise for the given value .
1034	Recursively completes a list of values .
1035	Complete the value of a leaf value .
1036	Complete the value of an object .
1037	Complete the value of an object .
1038	Execute a list of fields and return the result .
1039	Prints a path string
1040	Process PUT request
1041	Wait for a promise .
1042	Prints a block string
1043	Prints error message .
1044	Highlight source code .
1045	Create an exception from an exception .
1046	Convert an error to an array
1047	Creates a new operation instance .
1048	Parse a raw string
1049	Get the values of a variable .
1050	Get the values of a directive .
1051	Returns the argument values for the given definition .
1052	Build an AST node .
1053	Build the schema from a DOMDocument .
1054	Determine if the given type is allowed .
1055	Returns the breaking changes for the given schema .
1056	Find all removed types .
1057	Find all changes between two types .
1058	Removes all types from the given schema .
1059	Removes all values from an enum .
1060	Finds the diff of the given type .
1061	Finds all values in the given enum .
1062	Find all types in the given schema .
1063	Recursively find the conflicts of the given selection .
1064	Collect all conflicts in the given response .
1065	Finds the conflict between two fields .
1066	Determine if the given type is a type .
1067	Recursively find the conflicts between two fields .
1068	Collect conflicts between two fields .
1069	Collects the conflicts between two fields .
1070	Collect conflicts between two fragments .
1071	Returns an array of sub - fields for the given response .
1072	Gets the list of supported types .
1073	Get the list of supported field names .
1074	Convert an array to an array
1075	Creates a node from an array .
1076	Check if a variable is missing .
1077	Creates a type from an array .
1078	Execute a query .
1079	Enable warnings .
1080	Parses a document .
1081	Returns the location of the given token .
1082	Skip a token .
1083	Parses a token .
1084	Parses a keyword .
1085	Parse name .
1086	Parse a document node .
1087	Extract types from schema
1088	Get field definition .
1089	Get a stub file
1090	Reorder by column
1091	Aggregate a function .
1092	Reload model attributes .
1093	Get fresh instance .
1094	Get all root nodes .
1095	Get all children .
1096	Get scoped attributes .
1097	Move a node to another node .
1098	Update the structure of this node .
1099	Resolve a node .
1100	Checks if the node is moved .
1101	Get parent id .
1102	Determine if the node has changed .
1103	Fire the move event .
1104	Quote identifier .
1105	Apply the lock to the database .
1106	Write a migration file .
1107	Write model .
1108	Validates that the node has duplicates .
1109	Group roots by scope .
1110	Get the key for the given scope .
1111	Map nodes to a node
1112	Map nodes to the tree .
1113	Recursively maps the given tree .
1114	Boot the tree .
1115	Get the fully qualified column names .
1116	Creates a nested set query .
1117	Get all roots .
1118	Get all the leaves of the query .
1119	Applies the limit to the query .
1120	Get the root node .
1121	Get the ancestors of this node .
1122	Get all descendants of this node .
1123	Get descendants of this node .
1124	Get all descendants of this node .
1125	Determines if this node is a descendant of this node .
1126	Determine if the current node is a sibling of this node .
1127	Determine if the given node is an ancestor of this node .
1128	Determine if the given node is a sibling of this node .
1129	Get the left sibling .
1130	Make the first child of the given node .
1131	Check if the current scope is in the current scope .
1132	Checks if the given node is in the tree .
1133	Sets the default limit for the query .
1134	Stores the parent id .
1135	Move the parent to the parent .
1136	Sets the depth of this node .
1137	Sets the depth of this node .
1138	Deletes descendant nodes .
1139	Restores siblings of this node .
1140	Compute the depth of this node .
1141	Sets the value of the element .
1142	Returns an array of available options .
1143	Boot the views .
1144	Bootstrap configuration .
1145	Get a JavaScript rule .
1146	Add a conditional rules to the given attribute .
1147	Check if the given attribute is a conditional rule .
1148	Get attribute name .
1149	Set default values
1150	Render the view .
1151	Get view data
1152	Set selector .
1153	Set the view .
1154	Make a validation rule .
1155	Get validation message .
1156	Run a validation rule .
1157	Add validation rule .
1158	Adds a rule to the rule .
1159	Get validation message .
1160	Fake validation data .
1161	Sets the required data .
1162	Called when a file is uploaded .
1163	Validates a JavaScript request .
1164	Throw an exception .
1165	Parse attribute name
1166	Parse parameters .
1167	Validates a remote request
1168	Set remote validation rules .
1169	Purge non - empty rules from the given validator .
1170	Creates a protected callable .
1171	Get the value of a property .
1172	Call protected method .
1173	Set the delegator .
1174	Generates javascript validation rules .
1175	Convert javascript rules to javascript
1176	Add a validation rule .
1177	Create a new validator instance .
1178	Get a validator instance .
1179	Get validation data .
1180	Create a validator instance .
1181	Creates a form request .
1182	Create a JavaScript validator .
1183	Get session token
1184	Wraps the validator .
1185	Resolve the given field .
1186	Resolve the validator .
1187	Create a validator instance .
1188	Create a validator closure .
1189	Check if the given rule is implemented .
1190	Check if a remote rule is a remote route
1191	Add custom definition
1192	Add custom attributes
1193	Add custom elements
1194	Set request object
1195	Get all extensions .
1196	Render HTML attribute .
1197	Render attribute callback .
1198	Escape a string .
1199	Adds a voter .
1200	Get a menu item .
1201	Determine if the current item is current .
1202	Build an item .
1203	Build extras .
1204	Render children .
1205	Renders an item .
1206	Render a link .
1207	Move the item to the given position .
1208	Move the item to the given position .
1209	Returns a subset of the given items .
1210	Splits an item into an array .
1211	Recursively call the given item .
1212	Returns true if the value is true .
1213	Returns the type of the given argument .
1214	Checks if the given value is an object .
1215	Checks if the given value is equal to another .
1216	Sorts an array of sorted data
1217	Splits an array into a slice .
1218	Set configuration options .
1219	Debug debug request
1220	Validate sequence sequence
1221	Reduce the given values into an array .
1222	Wraps the given expression .
1223	Resolve a resource .
1224	Fill path parameters
1225	Build query parameters .
1226	Parses the given delimiter .
1227	Parses a JSON string .
1228	Parse an expression .
1229	Parses the left of the right node .
1230	Resolve configuration .
1231	Resolve configuration options .
1232	Sets a value at the given offset .
1233	Ensure that the property type is valid .
1234	Convert XML to XML .
1235	Get element meta data
1236	Set attachment data
1237	Set property value
1238	Ensure that a property is valid .
1239	Returns the actual type of the given value .
1240	Convert a property to XML .
1241	Encode a value .
1242	Returns the value of the given property .
1243	Returns the value of the given value .
1244	Returns a memoized value .
1245	Generates a chain of providers .
1246	Get the credentials from the environment .
1247	Loads the credentials from the credentials file .
1248	Get home directory
1249	Create a service instance .
1250	Parses an XML string
1251	Start an element
1252	Normalize element name .
1253	Creates a php object from a meta object .
1254	Checks if the given meta type is simple .
1255	Returns the value of the given value .
1256	Search for a given expression .
1257	Creates a runtime runtime runtime .
1258	Make a variable .
1259	Write a string
1260	Create access token
1261	Create transaction node .
1262	Compile endpoint URL .
1263	Creates an Accept request .
1264	Creates a new invoice request .
1265	Recursively recover a label .
1266	Create a new recovery request .
1267	Creates a request to create a new request .
1268	Creates an authorization request
1269	Get subscription .
1270	Creates a request object
1271	Returns the number of candidates for this request .
1272	Check if address is valid
1273	Determine if the address is ambiguous .
1274	Creates a request to be used to create a request .
1275	Send request .
1276	Determine if the mail is an email .
1277	Creates the request object
1278	Add location information
1279	Extract the space id from the storage .
1280	Extract the environment id .
1281	Builds a file from an array .
1282	Get field by id
1283	Add a field .
1284	Resolves resources for a given resource type .
1285	Fetch all resources for a given resource .
1286	Creates an array of chunks .
1287	Fetches the collection of resources from the API .
1288	Build content type collection .
1289	Set type .
1290	Set Content Type
1291	Performs a sync request .
1292	Builds a result from the response .
1293	Get the token from the response .
1294	Create a new resource pool .
1295	Checks if a given field exists .
1296	Returns the resolved value for a given field .
1297	Resolve field links .
1298	Get all entries of this entry .
1299	Format a value .
1300	Returns the locale for the given locale .
1301	Parse a JSON string .
1302	Returns the default locale .
1303	Fetches a file .
1304	Show a discussion .
1305	List all discussions
1306	Destroy a discussion .
1307	Replace the url parameter with the given url .
1308	Get url parameter
1309	Normalize HTML tags .
1310	Generates a menu menu .
1311	Check if a request signature is valid .
1312	Set connection timeout
1313	Sets the number of attempts .
1314	Builds the URL for the given parameters .
1315	Get a GET request .
1316	Perform a POST request .
1317	Delete a path
1318	Make a PUT request
1319	Clean up parameters .
1320	Get curl options
1321	Make a request
1322	Parses headers into an array
1323	Encode a consumer .
1324	Decode a string .
1325	Creates a request from the API .
1326	Get request parameters
1327	Returns the URL of the request .
1328	Get option value
1329	Set the value of a key .
1330	Execute a query .
1331	Execute a relation query .
1332	Read a record from the database .
1333	Apply filters .
1334	Fill related models .
1335	Paginates a query .
1336	Executes a query and returns the results .
1337	Get query parameters .
1338	Set default API API
1339	Add a record to the map .
1340	Check if a resource exists .
1341	Find a resource by its identifier .
1342	Get the encoding parameters .
1343	Determine if the route is index .
1344	Check if the resource is read .
1345	Determine if the resource is update .
1346	Determine if the route should be deleted .
1347	Determine if the request is read .
1348	Add a new resource type
1349	Add a new resource type
1350	Allow multiple resource types .
1351	Checks if the given resource type is allowed .
1352	Determine if the given resource type is allowed .
1353	Validates the invalidator .
1354	Sorts the given query .
1355	Get default sort parameter
1356	Get sort column .
1357	Set the field name .
1358	Create a new MediaType instance .
1359	Create a JSON API request .
1360	Create a new MediaType instance .
1361	Returns true if the given media type is valid .
1362	Check if the given media type is acceptable .
1363	Create a new request instance .
1364	Register the package .
1365	Boot the application middleware .
1366	Boot the response .
1367	Boot the blade directive .
1368	Bind the Json service to the container .
1369	Bind the request to the container .
1370	Bind exception parser .
1371	Make a validator instance .
1372	Checks if a field is filled .
1373	Get all data
1374	Filters the given command .
1375	Runs the given commands .
1376	Validates a type member .
1377	Validates a ID .
1378	Validates an identifier
1379	Validates a relationship .
1380	Validates a value against a relationship .
1381	Validates an array of data
1382	Checks if a given key exists .
1383	Get data from the document .
1384	Check if a resource exists .
1385	Validates a member .
1386	Validates the list of fields for a member .
1387	Add a resource type .
1388	Add a client to the client
1389	Check if a resource exists
1390	Checks if a path exists .
1391	Checks if the resource has the given attributes .
1392	Determine if the request is JSON .
1393	Prepare API exception .
1394	Set the media type .
1395	Set the encoding .
1396	Update a resource .
1397	Delete a resource .
1398	Create an error response .
1399	Return an array of errors .
1400	Creates an exception .
1401	Check if a resource is empty .
1402	Get all errors
1403	Parse the response .
1404	Add a record to the database .
1405	Find related models .
1406	Get the default attributes for the model .
1407	Extract model attributes from model .
1408	Get attribute keys .
1409	Validates a member .
1410	Create a new resource type .
1411	Creates an error .
1412	Get the client ids for a resource .
1413	Create an error .
1414	Deletes a resource .
1415	Validates a resource .
1416	Validates a query parameter .
1417	Returns an array of failed validation errors .
1418	Creates a failed validator .
1419	Translate a key .
1420	Get the path of a file .
1421	Create a belongs to a relationship .
1422	Create model identity .
1423	Add relationships to the query .
1424	Loads the required relationships .
1425	Get relationship paths .
1426	Convert a path to an include path .
1427	Get model relation name .
1428	Create multiple errors .
1429	Fill soft deletes .
1430	Deserialize a soft delete attribute .
1431	Get soft delete field .
1432	Set the allowed parameters .
1433	Convert a string to camelCase
1434	Convert a string to camelCase
1435	Convert a value to underscore
1436	Convert a value to camel case .
1437	Convert a value to a string
1438	Build the class .
1439	Get stub stub .
1440	Get resource name .
1441	Replace the resource type .
1442	Replace dummy record .
1443	Replace the application namespace .
1444	Returns the stub for the given implementation .
1445	Determine if the current query is an optional or not .
1446	Get the data for a record .
1447	Get data for deletion .
1448	Get data for a relationship .
1449	Get the rules for a relationship .
1450	Creates a validator for a resource .
1451	Creates a new validator for deletion .
1452	Creates a delete validator .
1453	Get excluded keys .
1454	Validates a relationship .
1455	Validates a relationship .
1456	Validates a relationship .
1457	Get next paginator .
1458	Get previous paginator .
1459	Add an item to the query .
1460	Order the query .
1461	Sorts the query .
1462	Get column value
1463	Guess the column name .
1464	Guess the route name .
1465	Decode JSON string .
1466	Determine if the request body contains a body .
1467	Checks if the response body contains a body .
1468	Determine if the request is JSON API .
1469	Returns the HTTP status of an error .
1470	Create resolver .
1471	Create a response factory
1472	Create a relationship validator instance .
1473	Create a validator instance .
1474	Create a validator .
1475	Create a new relationship validator .
1476	Create a query validator .
1477	Update a resource .
1478	Delete a resource .
1479	Remove a relationship .
1480	Flips all resources .
1481	Get default codec .
1482	Create a new encoder instance .
1483	Register a provider .
1484	Create a new MediaType instance .
1485	Adds a new decoder to the stack .
1486	Adds a new decoder to the stack .
1487	Merge the decodes of the given decodes .
1488	Adds a callback to the collection .
1489	Adds a new condition to the collection .
1490	Returns whether the given media type is equal .
1491	Convert array to camelCase
1492	Get the current URL .
1493	Creates a link .
1494	Creates an instance from an array .
1495	Create a custom encodings .
1496	Adds a new encoding to the stack .
1497	Push the stack to the stack .
1498	Merge the encodes of the stack .
1499	Add a new encodings .
1500	Adds a new condition to the query .
1501	Match the given media type .
1502	Returns the acceptable encoding of the Accept header .
1503	Handle the request .
1504	Bind the API to the API .
1505	Binds the page to the current page .
1506	Build query parameters .
1507	Create a new client .
1508	Create a new instance from an array
1509	Get resource URL .
1510	Get the URL for a related field .
1511	Get relationship URI .
1512	Reads and returns the response .
1513	Create a new record .
1514	Update a record .
1515	Deletes a resource .
1516	Read a related resource .
1517	Read a relationship .
1518	Replace a relationship .
1519	Adds a new relationship to the collection .
1520	Remove a relationship .
1521	Get all processes .
1522	Process the given request .
1523	Execute search .
1524	Reads a record .
1525	Create a new record .
1526	Update a record .
1527	Replace a record in the database .
1528	Create a transaction .
1529	Create route registration .
1530	Create a new resource .
1531	Creates a new validator instance .
1532	Deserializes a resource .
1533	Determine if the field is filled .
1534	Get the method name for a relation .
1535	Fill the resource .
1536	Fill relationships .
1537	Fill a relationship .
1538	Determine whether the request has a given route .
1539	Checks if the request is expected .
1540	Set the column name .
1541	Set the column name .
1542	Builds the query builder .
1543	Get cursor cursor .
1544	Checks if the given media type is encoded .
1545	Determine if the given media type is valid .
1546	Get a JSON API document .
1547	Register custom routes .
1548	Register process routes .
1549	Authorize a relationship .
1550	Get the relation for a given key .
1551	Determine if the given record is inverse .
1552	Get the adapter for the given relation .
1553	Returns an array of attributes .
1554	Get the relationships for a record .
1555	Get the validator for the query .
1556	Get query rules .
1557	Sets the default order .
1558	Check if the query is required .
1559	Fill attributes .
1560	Get model key for model .
1561	Deserialize attributes .
1562	Deserializes an attribute .
1563	Check if a field is a date attribute .
1564	Set the job .
1565	Get resource .
1566	Replace binding bindings .
1567	Get the resource type .
1568	Get resource id
1569	Get resource identifier .
1570	Get resource from registry
1571	Returns the process ID .
1572	Get the process process .
1573	Returns the resource identifier .
1574	Get the default API endpoint .
1575	Get the API instance .
1576	Registers an API endpoint .
1577	Validates a document .
1578	Creates a new resource .
1579	Returns a new instance with the given type .
1580	Returns a new instance with the given id .
1581	Returns a new instance with the given attributes .
1582	Returns a new instance with the given relationships .
1583	Get all relations .
1584	Returns a new instance with the given meta data .
1585	Returns a new instance with the given links .
1586	Returns the pointer to the given key .
1587	Get the pointer for a relationship .
1588	Get the meta data
1589	Invokes a hook .
1590	Invokes multiple hooks .
1591	Validates the document .
1592	Validates the resource .
1593	Validates the resource data
1594	Validates the resource type
1595	Validates the resource ID
1596	Validates the attributes .
1597	Validates the relationships .
1598	Validates all fields in the collection .
1599	Authenticates the authentication .
1600	Serializes a record .
1601	Inject robots .
1602	Gets the fallback for the social image .
1603	Returns an array of variables
1604	Handle the exception .
1605	Find all redirects
1606	Find a redirect by path
1607	Save a redirect
1608	Bulk bulk redirects
1609	Delete a redirect record
1610	Determines if the uri matches the given uri .
1611	Creates the document .
1612	Set criteria id
1613	Closes the database connection .
1614	Sends a command to the server .
1615	Read session data
1616	Returns the number of rows in the query .
1617	Execute a column
1618	Get scalar value
1619	Builds all records from the database .
1620	Builds the SQL query .
1621	Build column column .
1622	Add column .
1623	Build a SQL condition .
1624	Release a lock
1625	Update all counters in the database
1626	Build a key from a string
1627	Use this method to load all loggers .
1628	Use the daily files in the log file .
1629	Get the monolog log .
1630	Resolve console request .
1631	Get meta data
1632	Log a message .
1633	Fire log event .
1634	Boot the application .
1635	Setup event events .
1636	Format a query string .
1637	Setup job queue .
1638	Get Guzzle Guzzle Client
1639	Setup callbacks .
1640	Setup project paths .
1641	Setup session tracking .
1642	Parse a string from a given string
1643	Returns the center of the center .
1644	Simplify a Polygon .
1645	Returns the distance of the given coordinate .
1646	Calculates the distance between points .
1647	Calculate the bearing of the given point .
1648	Calculate the ending bearing of the given point .
1649	Returns an array of lat points .
1650	Returns an array of longitude objects .
1651	Returns true if the given geometry contains the given geometry .
1652	Calculate perimeter perimeter .
1653	Calculate the area of this point .
1654	Returns a copy of this Polygon .
1655	Handle the socket connection .
1656	Add a message
1657	Get an argument by name .
1658	Returns the date time for the given argument .
1659	Creates a new suggestion .
1660	Set reply .
1661	Render the media .
1662	Add a message to the response .
1663	Set the image .
1664	Get all countries
1665	Get the list of countries for select
1666	Enable the user factor .
1667	Disable the user factor .
1668	Purge the folder
1669	Delete the folder
1670	Rename a file
1671	Copy a file to another folder
1672	Protect the folder .
1673	Checks if the file is public
1674	Syncs the folder .
1675	Unsynchronize the file
1676	Get the model instance .
1677	Returns the hash of the folder .
1678	Get file size
1679	Check if the user has access to the current user
1680	Handle the user profile .
1681	Generate a copy of a user
1682	Clears the session data
1683	Get all modules
1684	Check if admin status is active
1685	Check if the user is disabled
1686	Update current user
1687	Displays the login page .
1688	Update style sheet
1689	Update the stylesheet .
1690	Write the stylesheet
1691	Compiles a color .
1692	Shortcut to shorten hexadecimal
1693	Convert hex color to hexadecimal format
1694	Export the stylesheet
1695	Check the name of a style sheet
1696	Finds a single theme by id
1697	Removes the user authentication .
1698	Loads a frontend user .
1699	Get file by name
1700	Unzip a file
1701	Convert a timestamp to a Unix timestamp .
1702	Returns an array of searchable pages .
1703	Returns the link for the given item .
1704	Purge old news feed
1705	Add a cookie to the response .
1706	Clear response cookie
1707	Check if the response contains a cookie .
1708	Remove entry from url
1709	Render backend template
1710	Replace the insert tags in the database .
1711	Sets the default end time .
1712	Get article alias .
1713	Execute post actions
1714	Get user instance .
1715	Check if a field has access to a given field
1716	Checks if the current page is allowed
1717	Checks if the given table is editable .
1718	Handles the kernel request .
1719	Returns an array of news archives
1720	Get the chunks from a unit .
1721	Returns a string representation of a string representation .
1722	Adds a global variable to the list .
1723	Get preview image
1724	Generate random secret .
1725	Checks if the configuration is valid .
1726	Check user status
1727	Find data by column
1728	Save data to database
1729	Regenerates the session id .
1730	Returns true if the given user is a member of the given ID .
1731	Trigger import hook .
1732	Generate the page .
1733	Gets all pages of a page .
1734	Validates the given code .
1735	Get the authorization URL .
1736	Get QR code
1737	Loads the routes .
1738	Generate a file
1739	Generate the template
1740	Checks if the main image is important .
1741	Checks if a file name is valid
1742	Synchronize files .
1743	Upload a file
1744	Delete file .
1745	Render a file .
1746	Add enclosure to file
1747	Get all calendars
1748	Generate a single record
1749	Import a class
1750	Logs a message
1751	Get the referrer URL
1752	Check if a language is installed .
1753	Get the list of countries
1754	Get all languages
1755	Returns array of time zones
1756	Set a cookie
1757	Returns a human readable representation of the given number .
1758	Returns a formatted string representation of a variable .
1759	Get session hash
1760	Normalizes the given IP address .
1761	Reads a PHP file .
1762	Convert a php file to PHP .
1763	Terminate the kernel .
1764	Determine if the database query is valid .
1765	Colorize log entries
1766	Handle the request response .
1767	Get relative uri
1768	Return list of articles
1769	Checks if a key is set .
1770	Returns the error message as string .
1771	Generates a new error
1772	Get attribute value
1773	Validate the input
1774	Add attributes to array
1775	Check if option is checked
1776	Check if option is selected
1777	Get selected option
1778	Check if the given option is checked .
1779	Returns empty string for empty field type
1780	Generate calendar component
1781	Determines if the given path is secure .
1782	Check if file name is valid
1783	Count the number of items in the list .
1784	Fetches the list of news items .
1785	Check if request is private
1786	Generates the alias for a given variable .
1787	Get active sections
1788	Edit an article
1789	Do paste an article
1790	Prepares an alias .
1791	Prepare the domain .
1792	Add the host to the request .
1793	Get the host of the given domain .
1794	Get auto item items
1795	Add frontend route .
1796	Add index route .
1797	Add locale to route .
1798	Find class name by name
1799	Get help text
1800	Combines the given list of names .
1801	Switch the edit page
1802	Initialize the picker .
1803	Generates an HTML input field .
1804	Invalidate cache tags
1805	Returns active member groups
1806	Sets a new password
1807	Store a date in the database
1808	Returns an array of content elements
1809	Returns the content group for the given element .
1810	Adjusts the css type for a given type .
1811	Add css type
1812	Get all form fields
1813	Set rtf syntax
1814	Get the list of import wizard items
1815	Generate a new wizard wizard
1816	Get the page picker .
1817	Delete an element
1818	Sets the value of a single image
1819	Extracts the youtube id from a video .
1820	Extracts the vimeo id from a video .
1821	Returns a list of all pages for a given page .
1822	Updates the user s permissions .
1823	Renders the image size
1824	Get the original row .
1825	Set row data
1826	Merge row data
1827	Mark a string as modified
1828	Save model to database
1829	Deletes the record
1830	Refresh the current record
1831	Detach this object
1832	Register the alias for the field .
1833	Unregisters an alias .
1834	Find a model by its primary key
1835	Find model by id
1836	Find multiple records by id
1837	Find a single record by its value
1838	Find a single column by its name
1839	Find a model by its primary key
1840	Returns the number of rows in a table .
1841	Parse a file
1842	Registers the extension .
1843	Get controller name .
1844	Generates the feed files for a calendar .
1845	Returns a list of searchable pages .
1846	Converts a timestamp to a Unix date .
1847	Parse article articles
1848	Get meta fields
1849	Generate link .
1850	Preprocess the given fragment .
1851	Generate the next page .
1852	Get next page .
1853	Replace insert tags .
1854	Find current record by pid
1855	Returns a list of upcoming records in the database .
1856	Get page layout
1857	Open a file
1858	Renames a file
1859	Copy file to destination directory
1860	Recursively copy a file
1861	Change file mode
1862	Move uploaded file
1863	Validate file path
1864	Called when the request is processed .
1865	Add a sender to the sender .
1866	Add sender name to sender .
1867	Validate session lifetime .
1868	Checks if the user is enabled .
1869	Parse a file .
1870	Checks if the request is a CORS request .
1871	Generate AJAX request
1872	Convert paths to array
1873	Add bundles .
1874	Add component components .
1875	Get bundle package name .
1876	Creates a new record
1877	Delete a file
1878	Delete all records
1879	Protect the folder
1880	Determine if the given folder exists .
1881	Check if file is valid
1882	Returns a list of all files in a directory
1883	Finds and returns an array of related models
1884	Returns the number of rows in a table .
1885	Returns a string representation of the page .
1886	Returns an array of all links
1887	Link to page
1888	Generate AJAX request
1889	Get path nodes
1890	Checks if the file is granted .
1891	Checks if the given line is granted .
1892	Checks if the current folder is locked .
1893	Handle authentication failure .
1894	Generate a single file
1895	Add htaccess to the web directory
1896	Purge old files
1897	Checks if a file exists .
1898	Check if user is active .
1899	Create resize configuration .
1900	Creates a new ImagePart object .
1901	Validate input
1902	Prepare query string
1903	Set LIMIT clause
1904	Execute the query
1905	Execute the query
1906	Replace wildcards with wildcards
1907	Escapes an array of values
1908	Get the argument name .
1909	Remove namespace from namespace
1910	Creates a new template .
1911	Get the type of the controller .
1912	Displays a picker .
1913	Generate captcha data
1914	Generates the hash for the given sum .
1915	Generate a question
1916	Generate captcha text
1917	Find a record by id
1918	Find by id
1919	Append a table to the schema .
1920	Gets the SQL definitions for the database .
1921	Get index length
1922	Create an image from a file .
1923	Creates an image from the given dimensions .
1924	Sets the GD resource .
1925	Convert palette image to palette
1926	Count the number of colors .
1927	Checks if the current image is transparent .
1928	Validate input .
1929	Generate HTML code
1930	Attach a file
1931	Attaches a file from a string
1932	Parse backend template
1933	Get locale string
1934	Get date string
1935	Generate a new page .
1936	Returns the URL for the forward page .
1937	Convert a value to a file .
1938	Updates the specified user s permissions .
1939	Clears the newsletter data .
1940	Check if a unique recipient is unique
1941	Checks if a given value is a blacklist .
1942	Renders the list of recipients .
1943	Replace tags in the given tag .
1944	Loads a section .
1945	Loads the sections .
1946	Get custom sections
1947	Set cache headers
1948	Generate a new page .
1949	Show related records
1950	Resend a token .
1951	Renders a button .
1952	Find a record by parent id
1953	Find active record by id
1954	Find all expired subscriptions
1955	Get style sheets
1956	Returns the stylesheet for the current page
1957	Generates the HTML for this page .
1958	Get task from input .
1959	Encode a domain .
1960	Decodes a domain string .
1961	Encode an email address
1962	Decode email address
1963	Encode a URL .
1964	Decode a URL .
1965	Generate a unique file
1966	Find a record by its primary key
1967	Find by id
1968	Find a record by ID
1969	Find multiple documents by id
1970	Find a record by UUID
1971	Find multiple rows by uuid
1972	Finds a project by its path .
1973	Find multiple documents by path
1974	Find multiple files by their extensions .
1975	Find multiple files by folder
1976	Find multiple folders by folder
1977	Sets the preview url .
1978	Add flash message
1979	Generates the HTML code for the given scope .
1980	Generates a wrapped message
1981	Reset session data
1982	Determine if the error has an error
1983	Returns true if the current user has messages .
1984	Get all image sizes .
1985	Get image sizes .
1986	Load options .
1987	Filter sizes .
1988	Get root page from url
1989	Add url to request
1990	Reload the current page
1991	Get login status
1992	Get meta data
1993	Prepare meta description .
1994	Applies the index to the page .
1995	Generate RSS .
1996	Adjust publication date .
1997	Dump parameters .
1998	Get the locale .
1999	Get accepted languages
2000	Fetch data from file
2001	Returns a list of files .
2002	Get the version of a package .
2003	Returns the normalized version of the package .
2004	Add attributes to array
2005	Validates a form
2006	Remove a recipient from an email
2007	Called when an exception is thrown .
2008	Load language file .
2009	Initializes the system .
2010	Initializes the controller .
2011	Find Calendar by id
2012	Add a namespace
2013	Add a list of namespaces .
2014	Add classes .
2015	Loads a class
2016	Generate markdown markup
2017	Resize uploaded image
2018	Sets the image service .
2019	Overwrites the image directory .
2020	Returns an array of searchable pages .
2021	Find published by pid
2022	Finds the first page with the given language .
2023	Find first record by id
2024	Finds the table by aliases .
2025	Find published by id
2026	Returns a list of subpages for a given page ID .
2027	Returns a list of published users with the given id .
2028	Returns a list of published users with the given ID .
2029	Find a published record by its name
2030	Find all published pages
2031	Finds parent page by id
2032	Returns the first active member of the given group .
2033	Get page details by ID
2034	Register the default domain .
2035	Unregisters the domain .
2036	Get absolute URL .
2037	Get slug options
2038	Apply the legacy logic to the given URL .
2039	Creates a picture configuration .
2040	Creates a picture item .
2041	Create a symlink
2042	Validate symlinks
2043	Find a user by email address
2044	Create a database connection .
2045	Generate HTML code
2046	Get temporary directory .
2047	Indexes the schema definition .
2048	Create a new SQL statement
2049	Execute a hook
2050	Find group by column
2051	Save group data
2052	Create a picture .
2053	Get template data
2054	Get configuration item .
2055	Validates the input .
2056	Sets root page type
2057	Check if the root type is root .
2058	Make a redirect to the database
2059	Generate sitemap .
2060	Schedule the update .
2061	Generates the alias for the given variable .
2062	Generate article .
2063	Delete search index
2064	Check if a feed is valid .
2065	Checks to see if a variable is a reference
2066	Get page types
2067	Get page layouts
2068	Generate a copy of a page
2069	Renders a page
2070	Delete a page
2071	Gets the date time for the calendar .
2072	Returns an array of allowed archives
2073	Get all tables
2074	Delete search tables .
2075	Purges the version table .
2076	Purge image cache
2077	Purges the script cache
2078	Purge page cache
2079	Purge the internal cache
2080	Purge expired registrations .
2081	Deletes all tokens from the server .
2082	Generate XML files .
2083	Generate cache cache .
2084	Rotate log files .
2085	Add multiple files
2086	Get the path to a file .
2087	Get the default template path .
2088	Initialize the templates .
2089	Finds published by parent id
2090	Returns the number of published records .
2091	Generate the template
2092	Initializes the session .
2093	Validates password input
2094	Determines if the request is a valid scope .
2095	Create date range
2096	Returns the start date of the week .
2097	Converts a date string to a regular expression .
2098	Convert a string to JS format
2099	Returns the formatted date format .
2100	Returns the timestamp format for the current page .
2101	Returns the datetime format for the current page .
2102	Resolve custom date modifier
2103	Determine if the old layout table exists .
2104	Get the list of templates .
2105	Generate FAQ link .
2106	Get max file size
2107	Finds a single record by id
2108	Finds related models by id
2109	Get related records
2110	Set related records
2111	Ask for password prompt .
2112	Generate the page .
2113	Generate the template
2114	Build menu node .
2115	Get field value
2116	Adds the template to the template
2117	Returns the list of excluded fields
2118	Generate SQL form .
2119	Get data from DB
2120	Get the data from the database .
2121	Get active modules
2122	Add a file
2123	Add multiple files
2124	Returns an array of file URLs
2125	Get debug markup
2126	Handle css files
2127	Fix the path to a file
2128	End block .
2129	Initialize configuration .
2130	Mark the file as modified
2131	Save script
2132	Add a variable
2133	Persist a variable
2134	Remove a key from the config
2135	Loads configuration files .
2136	Loads the parameters .
2137	Escapes a variable .
2138	Handle the kernel request .
2139	Sets the response headers .
2140	Fetch all headers from the request .
2141	Called when a user is logged in .
2142	Get session bag .
2143	Generates a page .
2144	Handle the login credentials .
2145	Replace a string with another string
2146	Generate email object
2147	Sends email to email
2148	Removes subscriptions from a user .
2149	Create new new user .
2150	Activate newsletter .
2151	Change the visibility of a notification .
2152	synchronize a user
2153	Update a user s account
2154	Get newsletter list
2155	Returns a list of all the pages in the list .
2156	Validate input .
2157	Generates the HTML for the video .
2158	Updates the number of events .
2159	Run the update table update
2160	Updates the layout .
2161	Updates the layout .
2162	Runs the SQL update table .
2163	Runs the update script .
2164	Convert a single field to a single file
2165	Converts a multi - dimensional array into an associative array
2166	Convert an order field to an order
2167	Generates a helper object
2168	Creates a content element
2169	Accept a license .
2170	Sets the password .
2171	Displays the login page .
2172	Purges the Symfony cache .
2173	Clean up the cache .
2174	Setup the database connection .
2175	Adjust database tables .
2176	Import the website .
2177	Get the redirect response .
2178	Add defaults to the request .
2179	Generate symlinks .
2180	Finds all files in a given path .
2181	Filters nested paths .
2182	Renders the image size
2183	Creates a menu item .
2184	Get all events for a given calendar .
2185	Initializes the application .
2186	Fetch a record by its alias
2187	Fetch an alias by its alias
2188	Registers an object
2189	Unregister a model
2190	Check if a model is registered
2191	Registers alias .
2192	Check if an alias is registered
2193	Send activation email
2194	Activate an entry
2195	Resolve activation email .
2196	Sends an email notification
2197	Handle the login event .
2198	Find a record by id
2199	Find a record by id
2200	Find published by pid
2201	Initialize the request
2202	Strip tags .
2203	Decodes a variable .
2204	Encode special characters .
2205	Find a post by key
2206	Generate the login page
2207	Compile Calendar Menu
2208	Check if a key exists
2209	Fetch a row from the result set
2210	Fetch an associative array
2211	Fetches all rows from the result set
2212	Fetch a single field from the database
2213	Get first result set
2214	Removes the next element from the list
2215	Fetches the next result
2216	Removes the last result set
2217	Returns the list of all subscribed channels .
2218	Returns an array of fields
2219	Returns the number of published records .
2220	Finds published by pid
2221	Find a published record by its primary key
2222	Returns the number of published records .
2223	Returns a list of all templates in a directory .
2224	Outputs the CSS stylesheet .
2225	Handle the exception .
2226	Render error screen .
2227	Renders the header for a row .
2228	Add breadcrumb
2229	Renders a file
2230	Returns the list of target folders .
2231	Check if the user has a token .
2232	Get list of admin options
2233	Checks to see if the current user is allowed .
2234	Show deleted records
2235	Generate a new calendar .
2236	Generates the HTML for the article .
2237	Generate pdf .
2238	Handle prepend locale .
2239	Add the default server version .
2240	Get template group
2241	Returns a module object
2242	Returns the content element for the given id
2243	Generate a form element
2244	Get speller string
2245	Get status icon
2246	Check if a model is visible .
2247	Generate the margin .
2248	Adds a URL to the URL
2249	Redirect to URL
2250	Replaces the old paths in the application .
2251	Converts a string to a relative URL .
2252	Redirect to frontend page
2253	Get parent entries
2254	Remove nested paths .
2255	Remove nested pages .
2256	Set static urls
2257	Add static url to the script
2258	Prepares the widget for rendering .
2259	Creates a new version .
2260	Casts a glob pattern .
2261	Prepares a prepared statement
2262	Execute a query
2263	Lists all tables in the database
2264	Check if table exists
2265	Check if a field exists
2266	Check if a table exists
2267	Get field names
2268	Check if a value is unique
2269	Lock tables .
2270	Get size of table
2271	Get uuid
2272	Quotes a string .
2273	Returns a list of all modules .
2274	Gets the list of member properties .
2275	Get layout sections .
2276	Get activation default value
2277	Get password default value
2278	Set page flags
2279	Returns the value of the given key
2280	Checks if the given language is acceptable .
2281	Get HTTP host
2282	Check if current request is secure
2283	Returns the URL of the host .
2284	Get IP address
2285	Get server server name
2286	Get the user agent
2287	Find active user by email
2288	Find a user by email address
2289	Activate the recipient .
2290	Add a new recipient
2291	Triggered when the request is executed .
2292	Get the theme .
2293	Get all themes
2294	Determine if the short language should be used .
2295	Get TinyTemplates .
2296	Adds a URL to the request .
2297	Handle a single file
2298	Find all pages in a page
2299	Adds a file to the database
2300	Get system messages
2301	Convert layout sections to associative array
2302	Returns the HTML for a divider .
2303	Add custom layout sections
2304	Create page list
2305	Create a new page list
2306	Create file list
2307	Creates a list of files
2308	Set the important part of the file
2309	Get the main part of the file .
2310	Sets the zoom level .
2311	Get resized path .
2312	Get the cache name for the image
2313	Execute resize .
2314	Prepare the image
2315	Prepare the main image
2316	Prepare resize configuration .
2317	Calculate the resize coordinates .
2318	Get the path to a file
2319	Resize image .
2320	Creates an image .
2321	Get image resource
2322	Get pixel value .
2323	Get the token .
2324	Validates a CSRF token
2325	Checks if a given key exists
2326	Creates a new instance from the database
2327	Set row data
2328	Save model .
2329	Delete model .
2330	Get next model .
2331	Fetches all records from the database
2332	Validate input input
2333	Called when the request is handled .
2334	Saves the user to the given user .
2335	Initializes the kernel request .
2336	Sets the cookie response .
2337	Set legacy options .
2338	Initializes the database .
2339	Renders the dropdown list .
2340	Get edit url
2341	Get username .
2342	Returns the ID of the current user .
2343	Explode a string into an array .
2344	Creates a new file
2345	Truncate the file
2346	Close the file
2347	Get the content of the file
2348	Write content to file
2349	Renames a file
2350	Copy a file to another folder
2351	Resize image .
2352	Send file to browser
2353	Write data to file
2354	Get the redirect response
2355	Returns true if the user is frontend .
2356	Determine if the user is backend .
2357	Get the frontend user .
2358	Get the backend username .
2359	Determine if the user is preview .
2360	Find published by id
2361	Find all active active records
2362	Finds the first member of the specified page .
2363	Decode a string
2364	Generates a unique alias .
2365	Prepare slug .
2366	Converts a string to a string
2367	Encode email address
2368	Extract email addresses from string
2369	Splits a string into an array .
2370	Highlights a string
2371	Split a string into a CSV string
2372	Converts a string to XML string
2373	Converts a string to HTML
2374	Generate insert tag
2375	Inserts a string into a file
2376	Sanitizes a file name .
2377	Convert encoding to string
2378	Escapes special characters .
2379	Deserializes a variable .
2380	Trims a string
2381	Strip root directory
2382	Find a published by parent id
2383	Called when the request is handled .
2384	Called when an exception is thrown .
2385	Add a legend .
2386	Remove a field .
2387	Splits the palette map .
2388	Splits the config into an array .
2389	Apply a fallback to the current config .
2390	Find the legend for a given field .
2391	Adjust the permissions for a user
2392	Returns list of allowed calendars
2393	Add a file
2394	Add a string to the file
2395	Close archive directory
2396	Convert to hexadecimal format
2397	Parses a BBB snippet .
2398	Change subscription status
2399	Notify comments .
2400	Output the template
2401	Generates a route .
2402	Render a route .
2403	Translates a string
2404	Get asset path
2405	Minify HTML code
2406	Generate a style tag
2407	Generate script tag
2408	Flush all data
2409	Get an instance of a table
2410	Returns an array of database fields
2411	Export a single theme
2412	Adds a table to the table
2413	Adds the stylesheet to the table
2414	Add table to table
2415	Adds the table size to the table .
2416	Adds the tables to the table .
2417	Adds data to the table
2418	Adds a folder to the archive .
2419	Add templates to the archive
2420	Move a file to a folder
2421	Copies a file
2422	Delete a resource
2423	Updates folder hashes
2424	Get folder hash
2425	Determine if a file is sync .
2426	Checks if a file exists
2427	Add menu manager .
2428	Checks if the current time is available .
2429	Initializes the application .
2430	Renders the stylesheet .
2431	Check if a category is valid
2432	Update the stylesheet
2433	Get a session variable
2434	Set a variable
2435	Remove a key from the session
2436	Get session data
2437	Set session data
2438	Append data to the session
2439	Creates a new instance with the current context .
2440	Encodes the data
2441	Decode a string .
2442	Get the backend user .
2443	Encrypt a variable
2444	Decrypt a value
2445	Initializes the encryption .
2446	Check if a comment is allowed to edit a comment .
2447	Notify comment .
2448	Send notification .
2449	Edit comment .
2450	Invalidate comment tags .
2451	Handle the request event .
2452	Get the locale .
2453	Find a record by its ID
2454	Show all records
2455	Copies all records from the database
2456	Delete all records
2457	Deletes child entries
2458	Deletes data from database
2459	Moves the current record
2460	Render pagination menu
2461	Normalizes a string .
2462	Generates the HTML markup for the upload .
2463	Find sent by ID
2464	Finds sent by ID
2465	Checks if the user has permissions .
2466	Show welcome screen .
2467	Sets the impersonated user .
2468	Get the validator options .
2469	Maps a content block to a content block .
2470	Returns the max depth for the given content type .
2471	Returns the content of a document .
2472	Finds the content of a given document .
2473	Indexes a content block .
2474	Bulk bulk indexes .
2475	Delete a content .
2476	Log a warning .
2477	Send a request to the server .
2478	Get request headers .
2479	Get search fields for a given criterion .
2480	Maps the value to a search field .
2481	Execute a search query .
2482	Generate query string .
2483	Get search targets .
2484	Get all search targets .
2485	Bulk bulk indexes .
2486	Commits the response .
2487	Search for given parameters .
2488	Returns the sort field name .
2489	Determine if the route has multiple routes .
2490	Process connection configuration .
2491	Configure search services .
2492	Defines the endpoint .
2493	Returns a string representation of a range .
2494	Escapes a string .
2495	Adds the endpoints configuration .
2496	Returns the index name of the index .
2497	Get core criterion .
2498	Get language filters .
2499	Returns the filters for the language .
2500	Returns the index type of the field .
2501	Get facet parameters .
2502	Map data to array
2503	Loads the messages from a list of versions .
2504	Extracts the messages from an XML file .
2505	Loads the WSDL XML document .
2506	Evaluate a WSDL query .
2507	Loop through all operations in the given query .
2508	Creates a new request object .
2509	Find a message by its name .
2510	Analyze the response .
2511	Make the status of an exception .
2512	Set status .
2513	Determines if the current status is greater than the given status .
2514	Set consumer ID .
2515	Retrieves a remote number from the server .
2516	Creates a new PPNPNSP2Pr - 1 - 1 .
2517	Add a new multi - multi - element to - multi - multi - multi - element
2518	Retrieves the number of pagedNodes .
2519	Get queue list
2520	Queue a PPNP PRP PUT request .
2521	Ignore a non - reserved protocol .
2522	Call a message .
2523	Make request options
2524	Loads the AuthParameters from the AuthRequest
2525	Get consumer ID .
2526	Prepare the next message to be sent
2527	Get the endpoint from the XML file .
2528	Extracts the action from the XML file .
2529	Generate a GUID
2530	Make the soap client options .
2531	Returns the state of the state of the state .
2532	Load optional segment information .
2533	Loads the inventory .
2534	Set session data
2535	Gets the list of versions .
2536	Returns the WSDL for the given message name .
2537	Get the soap client
2538	Initializes the SOAP client
2539	Execute a soap call on the server
2540	Generates a segment name for the given element .
2541	Analyze a query and return the result
2542	Analyze a query and return the result
2543	Analyze the response and return the result
2544	Analyze the error message and return the result
2545	Convert a DOMDocument to a DOMDocument .
2546	Make a status string from an error .
2547	Analyze the response .
2548	Returns the handler for the given message .
2549	Loads the client parameters .
2550	Load a session handler
2551	Load request creator .
2552	Gets the string between two characters .
2553	Load pricing options .
2554	Make the price option for the given price .
2555	Loads and returns an array of options .
2556	Loads the options for an object
2557	Loads the mappings .
2558	Load payment module
2559	Load payment data .
2560	Creates and fills the payment data
2561	Loads the changes of the changeset .
2562	Load geo code
2563	Loads the business ID .
2564	Generate random string
2565	Analyze the response .
2566	Check if the argument is empty .
2567	Check if all arguments are empty
2568	Check if an integer is an integer
2569	Checks if any of the given arguments are true .
2570	Loads the nonce base64 parameters .
2571	Determines if the given FIF type is valid .
2572	Load the session handler .
2573	Load auth params
2574	Load the session handler .
2575	Load request parameters .
2576	Merge existing options .
2577	Checks if a price option exists .
2578	Load an ARN segment .
2579	Load customer references
2580	Load WSDL .
2581	Loads the soap client .
2582	Load transaction link
2583	Prepares the next session for the given message .
2584	Analyze the response
2585	Loads the reference references .
2586	Loads an array of elements
2587	Loads the PnrPanners .
2588	Add an itinerary .
2589	Adds the received data to the sender .
2590	Set arrival date .
2591	Load payment data .
2592	Creates a new request instance .
2593	Loads the fee IDs .
2594	Loads the currency .
2595	Finds the error message .
2596	Decode the process level .
2597	Check if the next token is a next token .
2598	Moves the next token .
2599	Skip the given type .
2600	Get the next token .
2601	Returns the literal for the given token .
2602	Execute the action
2603	Execute the command
2604	Execute the action .
2605	Called when a header is set .
2606	Delete ACL item
2607	Execute the image options .
2608	Get current version .
2609	Get next version number
2610	Determine the version of the given array .
2611	Get active version .
2612	Execute auth data
2613	Prepare the ARQTI data
2614	Get the website name .
2615	Check if the api key is valid .
2616	Prepare custom variables
2617	Returns the country name .
2618	Get site location .
2619	Generate a unique ID .
2620	Send a new install request
2621	Send validation request .
2622	Sends a configuration request to the server .
2623	Returns the number of days from the installation .
2624	Send request to Google API
2625	Returns the HTML for the current page .
2626	Configure the field .
2627	Render a cell template
2628	Returns an array of options .
2629	Delete a dictionary item
2630	Execute the request
2631	Execute custom snippet .
2632	Send a purge request .
2633	Runs the dashboard .
2634	Execute the request
2635	Check if the current version is updated .
2636	Get the last version of the last version
2637	Updates a dictionary item .
2638	Execute the ACL
2639	Get element by path
2640	Remove a URL from the cache .
2641	Removes all keys from the collection .
2642	Removes all items from the repository .
2643	Purge a PUT request
2644	Get customer information
2645	Check service details
2646	Clone a version
2647	Add a comment
2648	Upload a VCL .
2649	Sets the main main page .
2650	Validates a service version .
2651	Activate a version .
2652	Upload a snippet .
2653	Update a snippet .
2654	Check if a snippet exists .
2655	Create a new condition .
2656	Create a header
2657	Create a response object
2658	Get response object
2659	Creates a request .
2660	Get request settings
2661	Delete a request .
2662	Get backend backend
2663	Configure backend .
2664	Send webhook .
2665	Create a dictionary
2666	Get dictionary items
2667	Get a single dictionary
2668	Get auth dictionary
2669	Checks if the auth dictionary is valid
2670	Create a dictionary item
2671	Delete a dictionary item
2672	Updates a dictionary item .
2673	Get a single ACL
2674	Delete an ACL .
2675	List ACL items
2676	Updates an ACL item .
2677	Delete an ACL item
2678	Update an ACL item .
2679	Query statistics .
2680	Check image optimization status
2681	Configure image options
2682	Get service details
2683	Retrieves a WAF setting
2684	Fetch data from the API
2685	Renders the given request .
2686	Execute the image
2687	Executes the configuration for the given path .
2688	Sorts the given angle
2689	Resize the image .
2690	Get resized image info
2691	Get the url of the image
2692	Returns the fast URL for the current image .
2693	Compile the URL parameters .
2694	Execute the action
2695	Execute the response .
2696	Gets the value of the type .
2697	Execute the request
2698	Upgrade module configuration
2699	Upgrade config paths .
2700	Upgrade country config
2701	Execute the module
2702	Saves the file
2703	Determine if the block should be shown .
2704	Get content type options
2705	Execute the request
2706	Get all modules
2707	Execute the request
2708	Clean up the config
2709	Saves the page cache
2710	Execute all domains
2711	Execute the authorization
2712	Returns the HTML for the element .
2713	Get the values of the ratio .
2714	Get checked values
2715	Render the group .
2716	Add a text field
2717	Render an element .
2718	Execute custom snippet .
2719	Determine if the given host is a host .
2720	Execute the controller
2721	Returns the message for the given store .
2722	Handle the purge request .
2723	Executes the given observer .
2724	Purges the cache .
2725	Checks if the given object is purged .
2726	Execute the authorization
2727	Execute the webhook .
2728	Execute custom snippet
2729	Adds the image to the image
2730	Execute the Auth
2731	Execute the backend
2732	Clean up the cache
2733	Execute the view
2734	Generate the cache for the page .
2735	Applies the output to the response .
2736	Execute the list of countries
2737	Saves the service ID .
2738	Saves the given token .
2739	Upload a v1 snippet .
2740	Execute the plugin .
2741	Returns a list of all manifest manifests .
2742	Execute the request
2743	Execute the update .
2744	Execute the purge request .
2745	Returns true if the image is enabled .
2746	Returns true if the image ratio is enabled .
2747	Returns the GeoIP mapping for the given country code .
2748	Extracts the mapping from a string
2749	Get VCL file .
2750	Gets the list of snippets .
2751	Validates a custom snippet
2752	Processes blocked items
2753	Get request for given path
2754	Renders plain text .
2755	Saves the repository .
2756	Deletes the config .
2757	Get the permissions for a taxonomy .
2758	Returns the new ratio for the given key .
2759	Get storage key
2760	Fetches branches .
2761	Returns the log level for the given event name .
2762	Logs a message .
2763	Determine if the repository is cloned .
2764	Run a git command .
2765	Determine if the current revision is up .
2766	Determine if the current revision is ahead .
2767	Push a tag .
2768	Creates a new branch .
2769	Add remote remote .
2770	Get remote URL .
2771	Clones a repository .
2772	Initializes the command .
2773	Fetches all tags .
2774	Set a private key
2775	Sets the output stream .
2776	Parse the repository name .
2777	Create a new Git repository .
2778	Clone a repository .
2779	Execute git command .
2780	Build options .
2781	Get the current command line .
2782	Renders a shadow marker .
2783	Render summary report
2784	Indicates the output .
2785	Extracts the failure code from a test failure .
2786	Determine if the given token is mutated .
2787	Execute the analysis .
2788	Gets the mutator for the given token .
2789	Recursively reconstruct the tokens from a string .
2790	Get the number of mutations .
2791	Checks if the output of the results are valid .
2792	Get an option .
2793	Get the cache directory .
2794	Set temp directory
2795	Get the temporary directory .
2796	Set adapter options
2797	Get the adapter instance .
2798	Returns an array representation of the migration .
2799	Generates a new thumb .
2800	Generates the code of the bean .
2801	Generates the PHP code for the given bean .
2802	Parse boolean value .
2803	Set proxy directory
2804	Displays the profile page
2805	Displays the view .
2806	View log .
2807	Delete all profiles .
2808	Returns filtered request filters
2809	Get all visible panels .
2810	Initializes the logger
2811	Get event events .
2812	Get observers .
2813	Initializes the controller
2814	Get block by name
2815	Add a new collection
2816	Returns the collection as array
2817	Add model to model
2818	Get all models .
2819	Initialize queries .
2820	Returns the serialized information .
2821	Before save method
2822	Loads the data from the object
2823	Delete expired requests
2824	Get expiration date .
2825	Translate the current locale .
2826	Get request url
2827	Format a number .
2828	Get option array
2829	Enable SQL profiling .
2830	Disable SQL profiling .
2831	Displays a select query
2832	Renders the stack trace .
2833	Initialize the query
2834	Start a block
2835	Finalizes the block .
2836	Get the layout updates .
2837	Get the information about the theme .
2838	Get request info
2839	Get request url
2840	Renders the given array .
2841	Renders an array
2842	Returns a list of all blocks .
2843	Render the block tree
2844	Renders a tree node .
2845	Get request path
2846	Returns the URL for the given route .
2847	Get module config file path
2848	Set module status
2849	Sets the SQL profiling status .
2850	Sets the template hints .
2851	Search config for config
2852	Deletes all templates in the database .
2853	Delete all profiles
2854	Get the update files for a given handle .
2855	Get database updates for a given handle .
2856	Initializes the collection .
2857	Displays a view .
2858	Displays the layout update page .
2859	Returns the HTML for the HTTP method
2860	Returns a select select box .
2861	Returns the range of a log file .
2862	Start the request .
2863	Get the log content .
2864	Get last file position
2865	Get log content .
2866	Returns the total number of lines .
2867	Get the content of a file .
2868	Dispatches the response .
2869	Renders an array
2870	Get extension status
2871	Get modules .
2872	Initializes the model .
2873	Get request filters .
2874	Enable module .
2875	Get the category for a given timer .
2876	Convert a request to an array
2877	Search for group classes
2878	Enable debug mode
2879	Enable template hints .
2880	Disable translation .
2881	Get email body
2882	Initialize the email
2883	Get request info
2884	Start profiling .
2885	Save profiling information .
2886	Dispatches the controller action .
2887	Generate layout .
2888	Renders the block .
2889	Adds the collection to the collection .
2890	Called when a model is loaded .
2891	Called after the frontend .
2892	Displays the website restriction .
2893	Checks if a block is captured .
2894	Initializes the profiler .
2895	Send email .
2896	Capture email .
2897	Replace the profiler .
2898	End a query .
2899	Get query models .
2900	Initializes the controller
2901	Add response info
2902	Downloads a file
2903	Download a config file .
2904	Sends email to email
2905	Add email to profile
2906	Returns the message body .
2907	Get the content of a MIME part .
2908	Decode the subject .
2909	Get module version
2910	Execute SQL query
2911	Convert XML to array
2912	Formats a number .
2913	Format a memory size .
2914	Format stack trace .
2915	Get the list of update files .
2916	Convert string to string
2917	Ensure that the file is writable .
2918	Append a setter .
2919	Update a setter .
2920	Delete a setter .
2921	Save data to file .
2922	Ensure that the file is readable .
2923	Returns the lines of the file .
2924	Format a setter .
2925	Normalize a value .
2926	Loads the file .
2927	Reset the contents of the file .
2928	Returns an array of keys .
2929	Check if a key exists
2930	Returns the value of a given key .
2931	Sets the keys of the given data .
2932	Set key value
2933	Delete all keys
2934	Save the file .
2935	Make backup file .
2936	Get all backups .
2937	Restores the contents of the file .
2938	Delete backup files .
2939	Creates a new ScaleFactory instance .
2940	Add a unit definition .
2941	Returns the unit of the given unit .
2942	Checks if the given unit is already registered .
2943	Check if the role has a permission .
2944	Assign role to user .
2945	Remove a role .
2946	Set the roles .
2947	Grant a permission .
2948	Release a package .
2949	Dispatch the queue .
2950	Handles failed requests .
2951	Parse text from text
2952	Prepare template template
2953	Extract data from text
2954	Find the template for the given text .
2955	Searches for the current operating system
2956	Close the device .
2957	Set character length
2958	Sets the stop bit of the device
2959	Set control mode
2960	Sends a message to the server
2961	Reads the port of the specified port .
2962	Flush the serialized message
2963	Check if user is authorized
2964	Perform a request .
2965	Build a request .
2966	Creates a request .
2967	Create a response from an array
2968	Pick metadata from array
2969	Get the table gateway .
2970	Send a message
2971	Process all attachments .
2972	Determine the context .
2973	Wrapper for closures
2974	Analyzes a closure .
2975	Binds this instance to the given closure .
2976	Serialize closure .
2977	Unserializes the closure .
2978	Get license by identifier
2979	Get exception by identifier
2980	Adds a resource to the bundle .
2981	Finds the last imported path of a resource .
2982	Add a bundle
2983	Make relative path .
2984	Get the next token .
2985	Generate index view .
2986	Generate form .
2987	Add a resource
2988	Determine if the annotation has a resource .
2989	Sets the logger .
2990	Upload a file from a path
2991	Encode a record .
2992	Parses the response .
2993	Initialize SMTP .
2994	Encode a string
2995	Encode Subject header
2996	Sets a value to the server .
2997	Set email address
2998	Set email reply
2999	Set error message .
3000	Resets the SMTP .
3001	Set the HTML for a message .
3002	Set message content
3003	Attach a file
3004	Save a message to the file
3005	Generate ping .
3006	Receive a message .
3007	Set the layout .
3008	Get attribute by key
3009	Fetch view data
3010	Sets the consumer .
3011	Follow a blog .
3012	Unlink a blog .
3013	Performs a LIKE request .
3014	Unpin a user .
3015	Delete a post .
3016	Receive a post .
3017	Edit a post
3018	Create a post .
3019	Get tagged posts .
3020	Get blog info
3021	Get blog avatar .
3022	Get blog likes
3023	Get the followers for a given blog .
3024	Get blog posts .
3025	Perform a POST request .
3026	Parse the response .
3027	Make a request .
3028	Sets the consumer .
3029	Sets the token .
3030	Pause a delivery execution .
3031	Resumes a session .
3032	Get session state .
3033	Returns the description of the session .
3034	Returns a list of items for a given item .
3035	Check if a key exists
3036	Persists a cache entry
3037	Saves data to cache
3038	Retrieves a user from the cache .
3039	Checks if the user has a given call
3040	Deletes a user .
3041	Persist cache entry
3042	Pack a time line
3043	Unpack a time line
3044	Encodes data into an array .
3045	Compiles assessments from the given delivery .
3046	Save tool states .
3047	Get tool states .
3048	Initializes the session .
3049	Initializes the compilation directory .
3050	Initializes the storage .
3051	Retrieve the item index
3052	Get item index value
3053	Get the category engine .
3054	Persists the cat item IDs .
3055	Retrieves the last item of the category
3056	Persists the last category item .
3057	Checks if the current item is eligible .
3058	Determines if the given template is enabled .
3059	Select next item
3060	Get the current assessment item .
3061	Returns the current position of the current route .
3062	Determines if the current user can be moved .
3063	Save test results .
3064	Stores the result of the result .
3065	Converts an array of variables into an array
3066	Processes the given data .
3067	Process the request
3068	Initialize service context
3069	End item timer .
3070	Save item state .
3071	Save item response response
3072	Get item reference
3073	Process the request .
3074	Gets the rubric .
3075	Process the tool .
3076	Process the input data
3077	Process the output .
3078	Check if the given channel exists .
3079	Gets the category information for the given assessment .
3080	Determines if the given assessment section is a valid assessment section .
3081	Build options .
3082	Get the engine instance .
3083	Returns a reference for the given identifier .
3084	Returns an array of assessment items for the given identifier .
3085	Returns an array of assessment items for the given template .
3086	Returns an array of possible analysis information for the given assessment .
3087	Validate the adaptable section .
3088	Determines whether the assessment section has an assessment section .
3089	Modify the timeout value .
3090	Stores the trace data .
3091	Stores session data .
3092	Loads session data
3093	Process the given data
3094	Get all available actions
3095	Resolve action .
3096	Process item data
3097	Get item data
3098	Returns the state of the given test .
3099	Retrieves the items from the service context .
3100	Get item data
3101	Returns the sub - identifiers for the given identifier .
3102	Returns the storage instance .
3103	Load state from storage
3104	Save user state .
3105	Get store id
3106	Get all events .
3107	Get the item index index
3108	Sets the category value .
3109	Get category value
3110	Remove category value
3111	Get storage service
3112	Persist a test session
3113	Sets the store id .
3114	Clear events .
3115	Store item index .
3116	Sets category value .
3117	Get category value
3118	Remove category value .
3119	Fill data from array
3120	Removes a point from a point .
3121	Filter the query with the given tags .
3122	Find all points matching the given tag .
3123	Calculates the duration of a range .
3124	Fixes a range
3125	Clones a time point .
3126	Check if the start point is start point .
3127	Check if the endpoint is endpoint .
3128	Calculates the duration of a time range .
3129	Loads the item data from the given path
3130	Get the service context context
3131	Persists the test session .
3132	Initializes the test session .
3133	Returns the rubric instance .
3134	Get item data
3135	Get item state
3136	Sets the item state .
3137	Parses an item from the response .
3138	Checks if the response is empty .
3139	Store item response .
3140	Checks if the given item has feedback .
3141	Moves a step to another step .
3142	Move a target to the given scope .
3143	Close the timeout .
3144	Finish the delivery execution .
3145	Pauses the test context .
3146	Resume the test context .
3147	Checks if the test is valid .
3148	Check if the item is completed .
3149	Returns the URL for the given item .
3150	Send a comment .
3151	Check if the current test is continue .
3152	Handle the timeout .
3153	Store a trace variable .
3154	Get a meta variable .
3155	Store the outcome variable .
3156	Get the outcome variable .
3157	Store response variable .
3158	Get the response variable .
3159	Stores the variables in the database
3160	Store a variable in the database
3161	Returns the translation id for the given item .
3162	Asserts that the QtiServiceContext is valid .
3163	Start timer .
3164	Ends the timer .
3165	Switch the client id to the client
3166	Get the current assessment session .
3167	Check if the theme is enabled .
3168	Get current theme id
3169	Returns the index file index .
3170	Check if the item index exists .
3171	Get the map for the given Runner .
3172	Update stats .
3173	Gets the route reference to the given route item .
3174	Creates a new time constraint constraint .
3175	Get item label
3176	Returns the navigator .
3177	Checks to see if there is a timed exit .
3178	Returns an array of item classes .
3179	Returns an array of QTI items
3180	Determine if the client container is enabled .
3181	Returns the maximum time of the current time .
3182	Returns the minimum time for the current time .
3183	Returns the duration of the given duration .
3184	Serializes the source data .
3185	Process the task
3186	Start a new time
3187	End a time range
3188	Returns the first timestamp of the given tags .
3189	Get last timestamp .
3190	Gets the last timestamp of the time line
3191	Check if the given time is within the given time .
3192	Save data to storage
3193	Load data from storage
3194	Get extra time
3195	Sets the maximum time .
3196	Calculates the total time of the request .
3197	Returns the remaining remaining time of the request .
3198	Checks to see if a timestamp is valid .
3199	Get time range
3200	Populate binary count
3201	Get all items for a given resource .
3202	Process the CSS style .
3203	Validates CSS property value .
3204	Determines if the current version of the given PHP version .
3205	Get the docblock tags .
3206	Parse response headers
3207	Splits a binary string into chunks .
3208	Encode a string
3209	Creates a new OAuth2 access token .
3210	Disable access token .
3211	Checks if the given argument is valid .
3212	Loads a JSON file from a JSON file .
3213	Checks if a value is null or not .
3214	Disable access token .
3215	Get account information
3216	Start a chunk of uploaded files .
3217	Performs a chunk of uploaded files .
3218	Finish a chunk .
3219	Get the delta of a cursor .
3220	Restore a file .
3221	Search for files in a directory .
3222	Create a share link
3223	Create a temporary URL for a temporary file .
3224	Get thumbnail .
3225	Create a folder .
3226	Move file to file
3227	Builds the URL for the given host .
3228	Get a GET request
3229	Convert a string to a string
3230	Load a host from a JSON string
3231	Loads a json file from a JSON file .
3232	Finds the error for a given path .
3233	Sets the external path to the external file .
3234	Compares two strings .
3235	Returns the total count attribute .
3236	Get total price
3237	Gets the total cost of the shop
3238	Run calculation calculations .
3239	Resets calculation calculations .
3240	Set callback callback
3241	Create seeder file .
3242	Returns the name of the item .
3243	Returns the url to the shop url .
3244	Returns true if the user has been saved .
3245	Sends a charge
3246	Callback for callback
3247	Adds an item to the cart .
3248	Remove item from cart
3249	Returns true if the item has a SKU .
3250	Get scope for current user .
3251	Find a cart by user
3252	Create order .
3253	Clear cart .
3254	Get item from cart
3255	Applies a scope to the query .
3256	Register the router .
3257	Searches for a SKU .
3258	Get scope by user
3259	Create a new transaction .
3260	Process the transaction .
3261	Creates a new payment .
3262	Callback for a transaction .
3263	Format price .
3264	Check status code
3265	Removes lines from a string .
3266	Get the path .
3267	Opens a file .
3268	Close the file .
3269	Read line from file
3270	Append a line to the file .
3271	Write temporary file .
3272	Set config .
3273	Get data from cache .
3274	Sets the value of a key .
3275	Deletes a key .
3276	Flush the cache .
3277	Get the keys of the database .
3278	Get all data from database
3279	Replace data in the database
3280	Normalize config .
3281	Sets the directory .
3282	Set extension .
3283	Set the cache .
3284	Set the formatter .
3285	Get the source context for a given template .
3286	Bootstrap the application .
3287	Get a plugin .
3288	Read data from socket .
3289	Start the process .
3290	Join process .
3291	Sets the signal .
3292	Build twitter link .
3293	Builds the link .
3294	Builds the link .
3295	Get the fingers from the lead
3296	Convert a DOMDocument to an array
3297	Automatically enable autoloaders .
3298	Check if a file is an image .
3299	Set the headers .
3300	Create a POST request
3301	Make an HTTP request .
3302	Make a POST request .
3303	Get the HTTP client
3304	Append the signature .
3305	Get fixed image format
3306	Make a POST request .
3307	Build request parameter
3308	Generate signature .
3309	Build the signature key
3310	Get access token
3311	Get access token
3312	Get cache key
3313	Append the application ID .
3314	Upload an image .
3315	Set config value
3316	Initialize the spec from a spec string
3317	Push a value to the queue .
3318	Renders the readable spec .
3319	Set whether or not .
3320	Get validator values
3321	Get suggestions .
3322	Determine if the given option contains the given options .
3323	Consume an option token .
3324	Returns the next argument .
3325	Renders an option .
3326	Renders the given options .
3327	Corrects the variation of the product .
3328	Returns a list of price configurations .
3329	Get status
3330	Create a file from a file .
3331	Create a new instance from a file
3332	Create a new instance from a file .
3333	Create a new group
3334	Initialize curl request
3335	Execute curl request
3336	Get integration data
3337	Generates a HTML tag
3338	Convert a datetime string to a string
3339	Get a list of groups for a group .
3340	Get file chunks .
3341	Get file list
3342	Get group list
3343	Create a copy of a file
3344	Bulk batch files .
3345	Bulk batch files .
3346	Perform a HTTP request
3347	Prepare a request for a request .
3348	Prepare pagination parameters
3349	Get query string
3350	Returns the path for the given type .
3351	Set request type
3352	Get the user agent header
3353	Update file info
3354	Copy file to destination
3355	Get the URL of the request .
3356	Returns the path to the file .
3357	Generates an HTML tag
3358	Resize the image .
3359	Preview the image .
3360	Add a new operation .
3361	Check if the container exists .
3362	Returns true if the container has been loaded .
3363	Load chunk data
3364	Flush the WordPress rules .
3365	Renders the page structure .
3366	Get the list of modules .
3367	Prepare the event .
3368	Generate the metadata from the given metadata .
3369	Returns a string representation of the class .
3370	Get class by name
3371	Visit an association
3372	Get form factory .
3373	Displays the index page .
3374	Get the filename of the file .
3375	Opens a file .
3376	Create a new image instance .
3377	Removes the password reminder .
3378	Determine if the link is visible .
3379	Get default namespace
3380	Get the model class name .
3381	Check if the user has a role .
3382	Check if a given permission exists .
3383	Authenticates the user .
3384	Finds the user in the database .
3385	Get the role .
3386	Authenticate an identity
3387	Send a reset link
3388	Redirects to the login path .
3389	Redirect to the login page
3390	Returns the redirect path for the current user .
3391	Confirm a confirmation code .
3392	Resend confirmation .
3393	Register a new user .
3394	Send confirmation to user
3395	Attempt to attempt the login .
3396	Returns the mail message .
3397	Decode the given string .
3398	Parse a string
3399	Retrieve a blueprint .
3400	Make request .
3401	Get the value of the given method .
3402	Applies a callback to the result set .
3403	Load YAML from YAML file .
3404	Lock the command .
3405	Checks if the given timeout is expired .
3406	Load all commands .
3407	Set the lock factory
3408	Get the lock factory
3409	Set the lock path .
3410	Run a command .
3411	Format the time .
3412	Outputs the crawled URLs .
3413	Refresh all fields
3414	Fill fields
3415	Update the fields .
3416	Normalizes the selected fields .
3417	Get the value from the language field .
3418	Registers the Closure .
3419	Instantiate service container
3420	Delete a record
3421	Load models .
3422	Count the number of records in the database .
3423	Check if the current group is selected
3424	Normalizes the filter .
3425	Get a single record by id
3426	Sets the sort order .
3427	Add filters .
3428	Returns a paginated collection .
3429	Checks if the selected properties are selected
3430	Store data in cache .
3431	Count the number of rows in the query .
3432	Normalize select fields
3433	Refresh all fields
3434	Refresh the current user groups .
3435	Replace a group with the given name .
3436	Fetch all properties for the given object
3437	Refresh all fields
3438	Refresh all sections .
3439	Get the current block .
3440	Save the properties to the database .
3441	Normalize property format
3442	Fetch the fetch method
3443	Checks if a field exists .
3444	Returns the value of a field .
3445	Returns the accessor for the given field .
3446	Returns the accessor for the given language field .
3447	Convert the fields to an array .
3448	Get attribute value
3449	Set attribute value
3450	Get all children of this section .
3451	Record the event changed .
3452	Gets the aggregate root .
3453	Determine the stream name .
3454	Creates an aggregate type from an aggregate root .
3455	Creates a new aggregate type .
3456	Creates a new AggregateType from a string .
3457	Replay history events .
3458	Extends a module
3459	Add a route .
3460	Find a route by its path .
3461	Register a middleware .
3462	Process the request .
3463	Handle the middleware .
3464	Register a route .
3465	Register a route .
3466	Register a route .
3467	Register a route .
3468	Register a route .
3469	Register route options .
3470	Register a route .
3471	Merges the given configuration .
3472	Extract a configuration from a namespace .
3473	Set a config value
3474	Handle the bot .
3475	Get the gateway .
3476	Send a request .
3477	Returns an instance with the localized title .
3478	Returns an instance with the given body .
3479	Returns a new instance with the specified locale .
3480	Returns a copy of the launch image .
3481	Include configuration file .
3482	Returns a new instance with the given content .
3483	Returns a copy of this PUT request .
3484	Returns a new instance with the specified id .
3485	Resolve the signature generator .
3486	Add default resolver .
3487	Resolve the JWT token .
3488	Try to resolve the JsonSigner .
3489	Create temporary file .
3490	Set custom data .
3491	Returns a new instance with the given header .
3492	Returns a new instance with the given headers .
3493	Returns a new instance with the specified certificate .
3494	Returns a new instance with the specified certificate .
3495	Adds a new HTTP visitor .
3496	Send a notification .
3497	Adds the default headers to the builder .
3498	Creates a chain visitor chain .
3499	Create a new device .
3500	Returns a new instance with the specified IPN .
3501	Returns a copy of this instance .
3502	Initializes the curl resource .
3503	Prepare the cURL resource .
3504	Creates a new notification exception .
3505	Convert an array to an array .
3506	Convert an alert to an array
3507	Process the diff .
3508	Diff between two characters .
3509	Render text from source code
3510	Convert a value to a database value .
3511	Adjust the translation table .
3512	Generate insert translations .
3513	Publish translations .
3514	Post missing keys .
3515	Get the current locale
3516	Sets the locale .
3517	Determine if the user is published .
3518	Set whether or not to be published .
3519	Get the webhook translations .
3520	Choose a single choice
3521	Login a user
3522	Refresh a refresh token .
3523	Get item by id
3524	Fetch all platforms .
3525	Get a user by username .
3526	Parse stat item .
3527	Fetch a profile
3528	Get friends list
3529	Send a GET request .
3530	Send a request to the client .
3531	Send a GET request
3532	Send a POST request
3533	Finds user by attribute value
3534	Creates a new user .
3535	Create a new user .
3536	Update account status
3537	Get all groups assigned to this user .
3538	Query LDAP user object
3539	Get adress provider
3540	Get sync options
3541	Get the group assignment options for an individual group
3542	Returns an array of options for a given name .
3543	Creates a new example role .
3544	Check if file is writable
3545	Writes a template file .
3546	Create a new user .
3547	Boot the application .
3548	Create a new model .
3549	Register repository repository .
3550	Register the parser .
3551	Parse an inline image
3552	Boot the model instance .
3553	Set meta data
3554	Get the meta value .
3555	Cast the meta value .
3556	Set meta group
3557	Set meta type
3558	Set meta value
3559	Mutates attribute value .
3560	Returns the value of the given value .
3561	Get the mutator type .
3562	Check if a value is mutator
3563	Get mutator .
3564	Cast value to string
3565	Get attribute value .
3566	Set the attribute .
3567	Convert meta data to array
3568	Replicate the model attributes .
3569	Get a set of meta data .
3570	Unset a hook .
3571	Get query hook .
3572	Set an attribute
3573	Set attribute .
3574	Update attribute value
3575	Remove an attribute .
3576	Replies items from the collection .
3577	Build meta query .
3578	Adds meta fields to the query .
3579	Get meta query .
3580	Order query builder .
3581	Splits meta data .
3582	Adds meta fields to the query .
3583	Join meta table .
3584	Add meta query .
3585	Get meta operator .
3586	Binds the values to the given arguments .
3587	Gets the where clause for the query .
3588	Get the query between two values .
3589	Save meta attributes .
3590	Checks if a key is allowed .
3591	Set meta attributes
3592	Load meta attributes .
3593	Set a fake mac address
3594	Get the current mac address
3595	Registers the css rules .
3596	Create tables .
3597	Creates index indexes .
3598	Parses a HTTP request .
3599	Handle HTTP request .
3600	Create a HTTP response from an exception .
3601	Collect exception data
3602	Determine if the container is debug .
3603	Creates a JSON response from a JSON response .
3604	Handle JSON request .
3605	Determine if the request is cached .
3606	Get an HTTP Handler
3607	Get table names .
3608	Get the URL for a resource .
3609	Get the list of all the users .
3610	Get schedule schedule
3611	Get next scheduled event
3612	Set target mode
3613	Set the target temperature .
3614	Sets the target temperature .
3615	Set the temperature of the given temperature
3616	Set the device mode
3617	Set the device mode
3618	Set the device mode
3619	Cancel the device mode
3620	Sets the schedule for a given device .
3621	Use this method to use when the device can be used
3622	Enable a certain device .
3623	Returns the temperature for the given device .
3624	Calculate the temperature for the given user .
3625	Get device devices
3626	Get the default serializer for the given serializer .
3627	Get network network information
3628	Get cURL certificates
3629	Tries to touch a file .
3630	Validates an array of items
3631	Get all event listeners .
3632	Get configuration from request .
3633	Get the pools .
3634	List event listeners .
3635	Get middleware middleware .
3636	Get the middleware middleware .
3637	Initialize the application .
3638	Show environment info .
3639	Checks if the environment is running .
3640	Get all values
3641	Get a value from the request .
3642	Get an array of values .
3643	Remove values from the request .
3644	Map values to array
3645	Retrieve a value from the request .
3646	Clean up a value
3647	Process a string
3648	Register the binary input .
3649	Returns the value of the given cookie .
3650	Get template path
3651	Call template hook .
3652	Parse the template
3653	Render a template
3654	Purge all meta files .
3655	Returns the label for the given type .
3656	Bootstrap the database .
3657	Try to dispatch an event .
3658	Encode the widget property value .
3659	Get subscribed services .
3660	Get filter rule
3661	Add parameters to query
3662	Parse the query string
3663	Get the value from the container .
3664	Get the value from the given source .
3665	Convert a variable to an array .
3666	Convert a parameter to a query string
3667	Get row from database
3668	Generates the URL for the given filter .
3669	Get the current filter url .
3670	Determines the parts of the request .
3671	Gets the URL fragment for the given alias .
3672	Returns the candidates for a given alias .
3673	Get page id from url
3674	Extract post data from request url
3675	Collects attribute factories .
3676	Checks if a column exists
3677	Checks if a given table exists .
3678	Generate AJAX request
3679	Build backend modules .
3680	Inject the child tables into the view .
3681	Get the jump to the current page .
3682	Returns the filter factory .
3683	Get filter url builder
3684	Builds the native SQL for the given query .
3685	Optimizes a filter .
3686	Calculates the AND condition for the given operation .
3687	Get the attribute from the filter .
3688	Calculates the sub filter for the given operation .
3689	Create button button .
3690	Create a variant .
3691	Sets variant base variant .
3692	Get breadcrumbs
3693	Create a new attribute .
3694	Get breadcrumbs .
3695	Get breadcrumbs .
3696	Extract the id from the environment .
3697	Checks if the model is purged .
3698	Get the view definition .
3699	Parse the listing configuration .
3700	Handle sorting .
3701	Converts a group type to a group .
3702	Get the legend .
3703	Get a property .
3704	Handle duplicated model .
3705	Handle the meta model .
3706	Get the meta filter for the model .
3707	Render a widget .
3708	Checks if the given parameters are valid .
3709	Get frontend filter options
3710	Get filters .
3711	Generates a new element
3712	Generate clear clear all elements
3713	Determine if the type is nested .
3714	Set the attribute types .
3715	Add attribute type
3716	Handle the event options .
3717	Create a new column .
3718	Get meta model from model .
3719	Determine if the environment should be handled .
3720	Returns the validator .
3721	Handle delete event .
3722	Handle update event .
3723	Add meta model names .
3724	Build the cache service .
3725	Builds the picker service .
3726	Create a new QueryBuilder instance from a query builder .
3727	Sanitize Doctrine Connection
3728	Unserialize a value
3729	Returns an array of all the attributes of the given interface .
3730	Get all matching ids .
3731	Fetch rows from database
3732	Copy a filter to the current object
3733	Get attribute by name
3734	Save a single column
3735	Save attribute data
3736	Updates variant attributes .
3737	Creates a new item .
3738	Get the connection
3739	Save base column columns
3740	Returns a list of combinations for a user .
3741	Get label parameters .
3742	Deletes a variable
3743	Sets the language .
3744	Get meta model
3745	Fetch a model from the database
3746	Set base config
3747	Extract sorting .
3748	Get the IDs of the given filter .
3749	Get items by filter
3750	Get filter options
3751	Check if a field is unique
3752	Resets the default value for a given field .
3753	Save meta data
3754	Saves collection items
3755	Checks if two models are identical .
3756	Creates a variant .
3757	Decodes a property value .
3758	Encode property value .
3759	Builds the widget widget .
3760	Create conditions for a palette .
3761	Get the legend .
3762	Get condition chain .
3763	Get the property property .
3764	Get the visible condition .
3765	Map translations to array
3766	Adds the input translations for the input
3767	Get filter options .
3768	Resolve path .
3769	Collects all attributes for the given transformer .
3770	Create a new RenderSetting
3771	Fixes the module data
3772	Build language string
3773	Build meta conditions .
3774	Get the list of available types .
3775	Returns the max children of the given condition .
3776	Renders the field
3777	Get parameter name .
3778	Get label .
3779	Get filter options
3780	Get filtered attribute
3781	Determine the filter value .
3782	Adds a label to the model .
3783	Get the condition attribute .
3784	Handle the update property value .
3785	Updates the values of the given properties .
3786	Add an event listener
3787	Get meta model .
3788	Calculates conditions for the given model .
3789	Returns a set of values for a set of values .
3790	Determines the list of available languages .
3791	Fetch the items for the given list .
3792	Get model by id
3793	Checks if the model has variants .
3794	Checks to see if a given action is available .
3795	Check if action is empty
3796	Checks if the root is a root of the root model .
3797	Checks if the model is a valid model .
3798	Determine if the model has variants .
3799	Checks if the model is disabled .
3800	Get meta model .
3801	Get the service container .
3802	Get the palette definition .
3803	Create a property .
3804	Build a condition .
3805	Generate the stylesheet
3806	Determine if the column name is changed .
3807	Translate a legend .
3808	Translate a property .
3809	Applies the legend conditions to the given attribute .
3810	Translate a row into an array
3811	Transforms a condition .
3812	Transforms the given conditions into an array .
3813	Transforms an array of groups .
3814	Inject service providers into service container .
3815	Process a meta model .
3816	Render form fields .
3817	Fetch the list of existing records .
3818	Generates form fields .
3819	Get checkbox caption .
3820	Performs an INSERT query .
3821	Get the referrer URL .
3822	Purge meta data
3823	Set a page value
3824	Get filter parameters
3825	Compiles the renderer .
3826	Determine if the widget is active .
3827	Get the frontend filter value
3828	Add a url parameter
3829	Build filter url
3830	Prepare filter options
3831	Prepare the filter for the widget .
3832	Validates a widget .
3833	Get language value
3834	Adds additional values to the format
3835	Prepare template data
3836	Set language strings
3837	Get base definition
3838	Builds the data from the container .
3839	Ensure the form element is submitted .
3840	Parse a panel row .
3841	Parse panel filter .
3842	Parses the panel sort order .
3843	Parses the search panel .
3844	Upgrades the jump to the table .
3845	Updates the database settings .
3846	Changes the sub - conditions to be used in the database .
3847	Updates the database schema .
3848	Updates the current settings .
3849	Handle the widget property .
3850	Get service container
3851	Set pagination limit
3852	Set sorting .
3853	Set the output format
3854	Set the meta model
3855	Set meta tags
3856	Prepare meta model
3857	Prepare view .
3858	Set the filter settings
3859	Add a filter rule
3860	Get attribute names .
3861	Prepare the items
3862	Get the output format .
3863	Get caption text .
3864	Set page title
3865	Render the item list
3866	Returns the basic definition for the given container .
3867	Handle the wizard .
3868	Get the list of available pages .
3869	Get meta model .
3870	Get the view for the given identifier .
3871	Returns the language for the given language .
3872	Returns the list of links for the given page .
3873	Returns the base URL for the given page .
3874	Remove empty page details from array
3875	Add page pages
3876	Get all meta models .
3877	Builds the query
3878	Add a child filter
3879	Add a sub procedure to the query .
3880	Gets the label for this table .
3881	Get page details
3882	Determines the jump to the page .
3883	Get backend icon .
3884	Create a setting from the database
3885	Collect all rules for a given filter .
3886	Collects rules .
3887	Render edit button .
3888	Get attribute names .
3889	Get filter settings
3890	Build filter parameters for a given element
3891	Load callback .
3892	Get filter parameters .
3893	Render edit button .
3894	Get filtered attributes .
3895	Get meta model .
3896	Returns a list of template templates .
3897	Render the page pager .
3898	Handle a column change .
3899	Sets the data for the given record .
3900	Search for a given pattern
3901	Creates a column
3902	Delete column .
3903	Renames a column
3904	Sets the options for the screen .
3905	Get property names .
3906	Handle the group options .
3907	Builds the data definition .
3908	Set accepted extensions
3909	Add a path to the queue .
3910	Get download link
3911	Fetch additional data from the file .
3912	Replace sorting files .
3913	Sort files .
3914	Sort files by name .
3915	Sort files .
3916	Sort files by id
3917	Sort files .
3918	Check if the file is downloaded .
3919	Converts a set of meta models to an array .
3920	Add model models .
3921	Process a file .
3922	Resize image .
3923	Get the database connection
3924	Get the value of the property options .
3925	Decode the property value .
3926	Encode property value .
3927	Sets the value of the widget options .
3928	Get the options for a given attribute .
3929	Builds the data from the container .
3930	Build a property .
3931	Create a new property .
3932	Sets the label .
3933	Sets the description of the property .
3934	Set excluded properties .
3935	Set searchable property .
3936	Sets the widget type .
3937	Set property options .
3938	Sets the explanation of the property .
3939	Set the attributes for the property
3940	Set empty property value
3941	Returns the maximum children of the given condition .
3942	Build language array .
3943	Prepares the language widget .
3944	Search for files
3945	Load data from table
3946	Handle meta table .
3947	Handle the meta table .
3948	Build the map .
3949	Builds the caption .
3950	Builds a child button .
3951	Check if a value is empty .
3952	Check if an array is empty
3953	Get attribute value
3954	Returns the variant of this object .
3955	Get variant base .
3956	Get siblings of this object .
3957	Save meta data
3958	Registers assets .
3959	Parses and returns an array of values
3960	Parse attribute .
3961	Get the variant class name .
3962	Get meta model definition .
3963	Checks if a column is reserved .
3964	Get json file .
3965	Authenticate user .
3966	Get input screen .
3967	Get meta model by id
3968	Create attribute instance .
3969	Deletes condition settings .
3970	Converts an attribute id to an attribute .
3971	Get attribute options .
3972	Decode attribute value .
3973	Encode attribute value .
3974	Builds the data provider .
3975	Get data provider definition .
3976	Handle column value .
3977	Adds a select command to the select list .
3978	Parse model operations .
3979	Create command instance .
3980	Get command instance .
3981	Get the child caption for a model .
3982	Extracts the rights from the backend .
3983	Builds the menu menu .
3984	Add menu menu
3985	Check if a route is active
3986	Returns a list of combinations for this user .
3987	Returns the combination of the given table .
3988	Get the children of this table .
3989	Get a single screen
3990	Get input screens .
3991	Check if the given condition is a child of the given model .
3992	Decodes a property value .
3993	Encode property value .
3994	Builds the widget widget .
3995	Replace all tags in a string
3996	Tries to jump to a given item .
3997	Get item list
3998	Get attribute value
3999	Returns the count for a given type
4000	Load meta model .
4001	Get meta data from table
4002	Returns the count of count for the given ID .
4003	Check if item is published
4004	Get meta model name .
4005	Create a new meta model instance .
4006	Create a new meta model instance .
4007	Create meta model .
4008	Collect meta names .
4009	Collects meta information about a model attribute .
4010	Get maximum pagination links .
4011	Returns the pagination string .
4012	Calculate pagination .
4013	Calculate the pagination .
4014	Gets the help wizard
4015	Make sure the field is required
4016	Get widget class name
4017	Handle callback .
4018	Initializes the widget .
4019	Handle save callback .
4020	Validates a widget
4021	Validate input field
4022	Returns the help text for the widget .
4023	Builds the options array .
4024	Adds a grid definition to the grid .
4025	Adds a condition to the given property .
4026	Adds the label to the model .
4027	Get label comment .
4028	Returns the label for the label .
4029	Get label text .
4030	Returns the label pattern for the label .
4031	Updates the image .
4032	Creates an inverse image .
4033	Push an element .
4034	Returns the label for the table .
4035	Get the list of templates for a given base template .
4036	Fetch all templates from the resource directory .
4037	Get the templates for a given folder .
4038	Returns a list of ids that match the given filter .
4039	Returns the class name for the given option .
4040	Generate an option .
4041	Render the label .
4042	Get the value of the property .
4043	Adds additional header fields to the parent model .
4044	Remove variant attributes .
4045	Decode the property value .
4046	Encode property value .
4047	Build widget widget .
4048	Get filter settings
4049	Fetches the input fields from the database .
4050	Prepare input fields
4051	Build a list of conditions for a given condition .
4052	Fetch the properties for the given input .
4053	Fetch all conditions for a given user .
4054	Fetches the groups for a given group .
4055	Converts a list of legend properties into an array .
4056	Convert a property to a legend .
4057	Convert an attribute to a column .
4058	Draws a model attribute .
4059	Draws the legend .
4060	Compares two values .
4061	Returns a human readable string .
4062	Checks if an array is empty .
4063	Calculates the difference between two arrays .
4064	Calculates the difference between two arrays .
4065	Get the referenced attributes .
4066	Handle the widget .
4067	Returns the value of the given name
4068	Configure the meta container .
4069	Handle options .
4070	Get the stylesheet .
4071	Get javascript options .
4072	Scan files .
4073	Returns the authenticated user .
4074	Resolves the input information .
4075	Sets the table mapping .
4076	Get meta model name .
4077	Returns a list of all combinations of the combination .
4078	Fetch the input details for the input .
4079	Build input for input
4080	Determine if the input is a standalone screen .
4081	Get the render setting for a given meta model .
4082	Get input screen .
4083	Returns an array of input controls .
4084	Get parent model .
4085	Create breadcrumb store
4086	Handle filter parameters .
4087	Transforms a DSL term to a string
4088	Transforms a DSL string into a string
4089	Builds the URL .
4090	Delete a record
4091	Create the payload .
4092	Set the term .
4093	Add a wildcard
4094	Get the query builder .
4095	Calls a GET request
4096	Builds the query builder .
4097	Set a field property
4098	Set config value
4099	Sets the index .
4100	Set the transport type .
4101	Create a new mapping .
4102	Perform a GET request .
4103	Execute a search query .
4104	Parse a DSN .
4105	Begin the current batch .
4106	Commit the batch .
4107	Determine if the user has a hint .
4108	Get skin content
4109	Returns an array of options .
4110	Convert an array to an array
4111	Finds the file and line of a class
4112	Search the full path
4113	Get block info
4114	Get remote callbacks
4115	Get remote url template
4116	Returns the path of the block .
4117	Returns true if the block is within the given block .
4118	Returns the type of the given name .
4119	Add a new type
4120	Override the type of a class
4121	Get a proxy class
4122	Get proxy file name
4123	Generate proxy classes .
4124	Generate proxy class .
4125	Generate method methods .
4126	Get the document namespace
4127	Create the default annotation driver .
4128	Loads the metadata for the given class .
4129	Creates a query object
4130	Creates a query object .
4131	Creates a Lucene query .
4132	Clear document manager .
4133	Initializes the object .
4134	Encrypts a string with the given length
4135	Decrypt and decrypt a key
4136	Get request params
4137	Process headers .
4138	Perform a POST request
4139	Get OAuth parameters
4140	Get request string
4141	Returns the signature string .
4142	Get OAuth string
4143	Get all headers
4144	Get the response .
4145	Validate credentials .
4146	Get the URL for the request
4147	Get the response .
4148	Find the exceptions for the given response .
4149	Build multipart file
4150	Get binary file
4151	Reset the call state .
4152	Get bearer token
4153	Invalidate the bearer token .
4154	Get the access token for the consumer .
4155	Build request header
4156	Add an expression to the query .
4157	Add cron expression .
4158	Run the queue .
4159	Removes a job from the queue .
4160	Get login URL
4161	Modify a relationship .
4162	Search media .
4163	Make an API call
4164	Set access token
4165	Merges the given scope .
4166	Run a command .
4167	Returns a string representation of the given name .
4168	Handle the package .
4169	Tokenize package info .
4170	Get a list of packages .
4171	Ask the package key .
4172	Run the migrations .
4173	Check if the file is a migration file .
4174	Build the providers .
4175	Get service providers .
4176	Get the Facades .
4177	Get the migration instance .
4178	Get all files .
4179	Checks if the manager exists .
4180	Notify user .
4181	Get the resources .
4182	Returns a new instance of the class .
4183	Adds a file to the collection .
4184	Get file by class name
4185	Search service providers .
4186	Search packages .
4187	Publish package .
4188	Register the password strength .
4189	Dumps the constants .
4190	Dumps methods .
4191	Dump method parameters
4192	Dump a php docblock
4193	Dumps properties .
4194	Returns the magic information about the magic method .
4195	Extract an object from an object
4196	Gets the abstract details of an object .
4197	Sets the event properties .
4198	Called when an object has been set .
4199	Add constants .
4200	Add methods to the object
4201	Adds the methods to the object .
4202	Adds methods to the docblock .
4203	Add properties to the object
4204	Add properties to the docdoc
4205	Get parameters from reflection .
4206	Get property info
4207	Get the info about a comment .
4208	Check if an object is excluded
4209	Get information about a method .
4210	Parse PHP doc comment parameter
4211	Get all constants
4212	Filter constants by level
4213	Get column keys
4214	Convert a row into an array
4215	Get the keys of an object
4216	Clear error messages .
4217	Clear error messages .
4218	Clear log entries
4219	Clear the summary of the log entry .
4220	Get log arguments .
4221	Retrieves an array from an array
4222	Retrieves the value from the response .
4223	Get config value
4224	Handle an exception .
4225	Handle the shutdown event .
4226	Registers the event handler .
4227	Unregister the event handler
4228	Build error message .
4229	Returns the hash of the error message .
4230	Get parsed comment content
4231	Determine if the reflection method is inherited .
4232	Get the comment content .
4233	Gets the hash of a given class .
4234	Splits the params into an array
4235	Trims whitespace .
4236	Generate an error message
4237	Get meta values
4238	Determine if the log entry exists .
4239	Called on bootstrap
4240	Handles the config event .
4241	Handles an error .
4242	Outputs the debug information
4243	Shutdown the application .
4244	Build the error list
4245	Logs the PHP environment info .
4246	Log request .
4247	Log request headers
4248	Event handler .
4249	Process a log entry
4250	Get the metadata for the given method .
4251	Generate a method table
4252	Output the output of the log entry
4253	Process a log entry
4254	Builds the stats .
4255	Builds the fatal error .
4256	Builds the log output .
4257	Returns an array of errors for the given category .
4258	Add a subscriber to the interface .
4259	Returns a list of subscribed subscribers .
4260	Returns true if the event is subscribed .
4261	Remove a subscriber from the given interface .
4262	Add an event to the queue .
4263	Unsubscribe an event .
4264	Publish an event .
4265	Sorts an event .
4266	Registers the cache .
4267	Close the directory
4268	Opens a directory .
4269	Read a directory
4270	Rewinds the directory .
4271	Rename a file
4272	Close the stream .
4273	Called when the stream is closed .
4274	Flush the stream .
4275	Lock the stream .
4276	Performs a stream on the stream .
4277	Opens a stream .
4278	Reads data from stream .
4279	Sets the stream to the specified offset .
4280	Returns the stream statistics .
4281	Get the position of the stream .
4282	Truncates a stream .
4283	Unlink a file
4284	Returns the URL of a file
4285	Process the output .
4286	Process a log entry
4287	Get all subscriptions
4288	Called when an error occurred .
4289	Process a log entry
4290	Process log entry
4291	Publish meta data
4292	Get config value
4293	Gets the value of a resource
4294	Returns the type of the given value .
4295	Log an alert .
4296	Asserts that the given assertion is valid .
4297	Clear log entry
4298	Counts the number of data for a given label .
4299	Reset counter count .
4300	End group value
4301	Add a group summary
4302	Unregisters a group .
4303	Start profiling .
4304	End a profile .
4305	Triggers the log .
4306	Calculate timer time
4307	Gets the time for a given time .
4308	Truncate the trace .
4309	Get a channel .
4310	Get all channels .
4311	Output the output .
4312	Set error handler
4313	Autoload a class
4314	Logs a group
4315	Returns the depth of the stack .
4316	Get default services .
4317	Get the default arguments for a method .
4318	Sets the log destination
4319	Interpolate a message
4320	Merge two arrays
4321	Get a path from an array
4322	Build attribute string
4323	Build HTML tag .
4324	Convert size to bytes
4325	Get caller info
4326	Get HTTP interface
4327	Checks if a value is an array
4328	Parse attribute string
4329	Generate request ID .
4330	Serialize log data
4331	Unserialize a string
4332	Build attribute value
4333	Builds attribute value from attribute
4334	Get css config
4335	Called when the output is done .
4336	Close all groups .
4337	Get the default output as a string .
4338	Remove empty groups
4339	Sets the output of the output .
4340	Recursively removes all errors from an array
4341	End the timer .
4342	Start profiling .
4343	Pop up the stack
4344	Push function to stack
4345	Get a config value from the config
4346	Sets the config
4347	Get all configs
4348	Get config keys
4349	Normalize config array
4350	Set copy values
4351	Set debug config
4352	Set config file .
4353	Process log entry
4354	Sets the file .
4355	Check if a timestamp is valid .
4356	Dump an array of methods
4357	Process log entry
4358	Process sub substitutions
4359	Add special characters
4360	Dump a string
4361	Checks if string is UTF - 8
4362	Convert a string to UTF - 8 .
4363	Convert string to UTF - 8
4364	Sets the string
4365	Triggered when an error occurred .
4366	Returns a string representation of the exception .
4367	Send an error message
4368	Returns the value of the given key .
4369	Build table .
4370	Dumps the given value .
4371	Render class name .
4372	Output the debug bar
4373	Build a string representation of an argument .
4374	Build the channel tree .
4375	Builds a group .
4376	Build table footer
4377	Build table header
4378	Build table row
4379	Dumps an array
4380	Remove whitespace whitespace .
4381	Replace whitespace whitespace .
4382	Process output .
4383	Build a string representation of an argument .
4384	Dumps an array
4385	Dumps an object .
4386	Dump methods .
4387	Returns an array of configuration values
4388	Set config value
4389	Receive payment data .
4390	Get xml provider
4391	Returns an array of configs
4392	Checks if the given attributes are valid .
4393	Cancel payment .
4394	Capture the given order .
4395	Returns true if the payment is implemented .
4396	Refunds a refund
4397	Returns the redirect form
4398	Get transaction reference reference
4399	Save the customer data
4400	Saves a transaction reference
4401	Translates the status of a payment .
4402	Get the provider .
4403	Loads the related layouts .
4404	Returns the path for the given location .
4405	Generate the configuration file .
4406	Check if the route matches the given request .
4407	Get the current menu plugin .
4408	Called when the controller is registered .
4409	Render a template .
4410	Build the view parameters .
4411	Process the menu plugin .
4412	Get the legacy preference value .
4413	Sets the response for the exception .
4414	Called when the request is set .
4415	Modify the template .
4416	Handles the kernel response .
4417	Show layout layouts .
4418	Creates a request object .
4419	Check permission permissions
4420	Called when the kernel is registered .
4421	Generate the site access .
4422	Intercept the interactive interface .
4423	Interal mechanism to interact with siteaccess .
4424	Run the installation .
4425	Generate legacy autoloader .
4426	Ask the data for the given option .
4427	Ask the data for the given option .
4428	Get a question .
4429	Get a choice question .
4430	Output the installer summary .
4431	Write a section .
4432	Get the runner .
4433	Create a new subscriber .
4434	Call the given command .
4435	Creates an exception from an error message .
4436	Get config value
4437	Set config value
4438	Create a new job instance .
4439	Unregister a signal
4440	Generate a signal name for a signal .
4441	Get a list of subscriptions from a topic .
4442	Get completed jobs .
4443	Multiple jobs .
4444	Get failed jobs for a group
4445	Returns an array of failed failures .
4446	Get tagged tags .
4447	Get jobs from a worker .
4448	Add a job to the queue .
4449	Removes a job from the queue .
4450	Get a job from the queue .
4451	Receive a job .
4452	Retrieves the stats from the server .
4453	Checks if the queue is paused .
4454	Register sync event .
4455	Attach an event to the queue .
4456	Fetch the queue queue .
4457	Detach an event handler
4458	Fire the event .
4459	Fire queue event .
4460	Creates a child process .
4461	Handle child errors .
4462	Read error from socket
4463	Handle the process exit status
4464	Perform a job .
4465	Executes a command .
4466	Normalize command arguments .
4467	Refreshes the cache
4468	Set priority .
4469	Cancel the request .
4470	Execute the job .
4471	Requests the queue .
4472	Retry a message .
4473	Retrieve the heartbeat .
4474	Performs the job .
4475	Fail a job
4476	Track the track .
4477	Remove track .
4478	Get the job instance .
4479	Add tags .
4480	Set job data
4481	Set the interval .
4482	Set the backlog .
4483	Require a queue .
4484	Register the signal handler handler .
4485	Dispatches a watchdog .
4486	Broadcast the message .
4487	Send a message .
4488	Broadcast a message to a platform .
4489	Registers a device .
4490	Create a topic .
4491	Register a device on the device .
4492	Publish a message .
4493	Set localized text .
4494	Gets an array of APN objects .
4495	Returns an associative array representation of the object .
4496	Returns a JSON string representation .
4497	Get the text for the message .
4498	Retrieves the trimmed string
4499	Merges two arrays .
4500	Returns true if the document matches the given selector .
4501	Get elements by class name
4502	Adds a node to the next node .
4503	Replace the node with the given replacement .
4504	Get element by index
4505	Get a list of all organizations .
4506	Create a new organization .
4507	Create a new event .
4508	Decodes a JWT .
4509	Get tenant context
4510	Sets the created event .
4511	Decodes a JWT .
4512	Displays the controller view .
4513	Convert the collection to an object .
4514	Parses a JSON string .
4515	Parse a file .
4516	Sets the sort order .
4517	Post update parameter .
4518	Prepend the entity to the database .
4519	Get parameter value .
4520	Sets a parameter .
4521	Sets the created event .
4522	Handle the autoload event .
4523	Load a zone .
4524	Creates a zone from a definition .
4525	Creates a ZoneMember object from a given definition .
4526	Creates a ZoneMember object from the given definition .
4527	Persists the entity s identity .
4528	Adds a permission to the collection .
4529	Handle the request request .
4530	Set User UUID
4531	Process the service loader .
4532	Set the first result .
4533	Get a list of tasks .
4534	Set the candidate group group .
4535	Prevent the event .
4536	Set tenant ID .
4537	Stores the entity identifier .
4538	Set tenant ID .
4539	Set Individual UUID
4540	Get config value
4541	Set a config value
4542	Sets the entity s value .
4543	Add a filter constraint to the query .
4544	Handles the exception .
4545	Sets the sort order .
4546	Sets the required tasks .
4547	Check if the given alias exists .
4548	Get all data
4549	Get a stat .
4550	Set the assignable value .
4551	Get the list of models
4552	Check if a user exists
4553	Create a new event .
4554	Decodes a JWT event .
4555	Adds a translation to the database .
4556	Set organization UUID .
4557	Generate a unique identifier .
4558	Generate UUID .
4559	Execute an action .
4560	Translate a model .
4561	Translate a model .
4562	Get the properties of a model .
4563	Preprocess the entity .
4564	Handle an exception .
4565	Create a new user .
4566	Get form fields
4567	Resolves a form .
4568	Returns the parent of the given permission .
4569	Convert a permission to an array .
4570	Decrypt the entity .
4571	Sets the anonymous user .
4572	Sets the identity .
4573	Get the properties of an entity .
4574	Get the properties of a model .
4575	Get the count of the given parameters .
4576	Get a single object by id
4577	Get the XML representation of a resource .
4578	Starts a resource .
4579	Get the start form
4580	Encrypt model .
4581	Get the properties of the model .
4582	Create a new event .
4583	Decodes a token .
4584	Create a new event .
4585	Decodes a JWT .
4586	Get the signature .
4587	Set the staff uuid .
4588	Set max results
4589	Sets the variables in the request .
4590	Checks if a given form exists .
4591	Set owner uuid
4592	Submit a new variable .
4593	Replace placeholders in a string
4594	Called when the entity is loaded .
4595	Get permissions for a user .
4596	Get a list of all objects
4597	Set the serialized values .
4598	Generate the identity .
4599	Handle the request .
4600	Handle the event .
4601	Triggers the request .
4602	Encrypt data
4603	Decrypt data .
4604	Parse a fixture .
4605	Set entity uuid
4606	Create a new app .
4607	Get the status of a account
4608	Create a new status
4609	Register the plugin .
4610	Add geo coordinates
4611	Get the URL of the image
4612	Prepare the command .
4613	Set scalar value
4614	Set the range value
4615	Build a cluster .
4616	Validate configuration .
4617	Build the local host .
4618	Validates the given object .
4619	Creates a new location from a location string .
4620	Builds the object
4621	Build json object
4622	Pick a node in the list
4623	Execute a command
4624	Pick a new node
4625	Prepare the command .
4626	Create index query path .
4627	Prepare request data
4628	Prepares the request URL .
4629	Prepare request parameters
4630	Prepare request headers
4631	Prepare request method
4632	Adds a response header to the response .
4633	Get header value
4634	Get attachment attachments .
4635	Attach mail listeners .
4636	Send an email .
4637	Creates a mail event .
4638	Build the message body .
4639	Attach attachments to the email
4640	Create helper manager .
4641	Callback for build callback
4642	Get project name .
4643	Start a job
4644	Stop the service .
4645	Sets a dimension .
4646	Compute the computed dimensions
4647	Copy a file to another .
4648	Get config value
4649	Get services .
4650	Parse environment variable .
4651	Clean up a project .
4652	Clean up directories .
4653	Returns a list of jobs that have been scheduled .
4654	Get all jobs from a project .
4655	Get job from image
4656	Create an image .
4657	Run a job .
4658	Gets the build strategy .
4659	Get chain strategy .
4660	Get console logger
4661	Sends email to sender
4662	Sends the email
4663	Sets SMTP .
4664	Replace dynamic content with given params
4665	Creates a new message .
4666	Configure the transport
4667	Renders the view .
4668	Generates the class definition
4669	Generate the parser
4670	Processes the response template
4671	Add body to body
4672	Sets the directory paths .
4673	Get template file
4674	Add a callback
4675	Add a string to the view .
4676	Render the given region .
4677	Render the given region .
4678	Render template file
4679	Set template data
4680	Renders the template
4681	Starts a timer .
4682	Formats the given number of seconds .
4683	Stop timer .
4684	Set the value of the column .
4685	Adds a select statement .
4686	Add select statement
4687	Set where clause
4688	Add a where condition .
4689	Add a group by expression .
4690	Add a group by expression .
4691	Add having clause
4692	Add a condition to the query .
4693	Sets the order by clause .
4694	Add a ORDER BY clause
4695	Set limit by offset
4696	Get a session token
4697	Validate request data
4698	Compare two hashes
4699	Get error info
4700	Handle input input
4701	Create a cssicon .
4702	Run the help command .
4703	Prints the PHP code .
4704	Get an object by name
4705	Returns a subset of the collection .
4706	Iterates over each element in the collection .
4707	Processes the scores for the given text .
4708	Initialize the text
4709	Initializes the text .
4710	Deletes a textarea .
4711	Wrapper around the end of the text .
4712	Escapes the text .
4713	Replace the text with the given pattern .
4714	Replace the string with the given string .
4715	Splits a string into a string .
4716	Register an event .
4717	Emits an event .
4718	Process the standard URL
4719	Process block tags
4720	Registers a text .
4721	Process list items
4722	Set the text .
4723	Set attribute value
4724	Render HTML tag
4725	Add a rule
4726	Get the plural form .
4727	Get the singular name of a singular form .
4728	Sets the cache .
4729	Check if a string is singular
4730	Transforms a string to a string .
4731	Converts UTF - 8 characters to UTF - 8 .
4732	Set the expiration time .
4733	Set session cookie
4734	Write data to the session
4735	Regenerate session id
4736	Processes the event handlers .
4737	Send an exception .
4738	Called when an exception is thrown .
4739	Clear temporary folder .
4740	Clear a file .
4741	Creates a new profiling probe .
4742	Checks if review option is valid
4743	Validates if the article is valid
4744	Checks if review error is valid
4745	Determine if the review is required .
4746	Checks if review error is valid
4747	List plans .
4748	Get plan by code
4749	Returns an array of all available addon objects .
4750	Filter the list of plans .
4751	Get price by plan code
4752	Sends the options to the user
4753	Get contact form
4754	Start profiling .
4755	Stop profiling .
4756	Transforms a value into an object .
4757	Transform an array into an array
4758	Transform the cache annotation into an array
4759	Transforms a template .
4760	Update stats .
4761	Flush the queue .
4762	Sends data to the server
4763	Creates a new user
4764	Validates delivery address
4765	Validates if the user is valid
4766	Validate invoice address
4767	Convert XML to PHP array
4768	Convert PHP array to PHP object
4769	Run the process .
4770	Render widget .
4771	Sets the status of a widget .
4772	Save widget config
4773	Order the widget .
4774	Builds the widget .
4775	Loads the widget config
4776	Render the widget .
4777	Returns the rendered item .
4778	Add a widget .
4779	Remove widget .
4780	Clear widget cache .
4781	Add widget config
4782	Remove widget config .
4783	Returns the module object
4784	Handle a message .
4785	Checks if an item exists
4786	Returns the value of a row .
4787	Sets the value of a row .
4788	Insert data into database
4789	Updates the given data .
4790	Insert an INSERT statement
4791	Delete rows from database
4792	Sets a select query
4793	Sets the order .
4794	Sets the group .
4795	Execute an aggregation query
4796	Execute the query
4797	Fetch a single row from the result set
4798	Get an offset from the collection .
4799	Executes a SQL query
4800	Adds a statement to the query .
4801	Injects SQL bindings into a string .
4802	Locates a directory .
4803	Renders rich text .
4804	Get template path .
4805	Returns the lowest index of the index .
4806	Process a member variable .
4807	Schedule event .
4808	Unschedule an event .
4809	Deactivates the site .
4810	Check if a cron is scheduled .
4811	Creates a new language .
4812	Adds a value to the context .
4813	Get a value from storage .
4814	Create a new instance from a given file .
4815	Returns a DOMElement as an array .
4816	Append a single row
4817	Inserts a row into the table .
4818	Adds a field to the collection .
4819	Get the iterator .
4820	Add a new field
4821	Returns the value of a row .
4822	Sets a field value
4823	Removes a field from the table .
4824	Removes a value from the table
4825	Replace a value in the database
4826	Returns the DOMDocument as an array
4827	Find a specific client
4828	Create a new bill
4829	Cancel a subscription .
4830	Finds a specific ID .
4831	Perform a retry request .
4832	Get the payout .
4833	Returns the authorization URL .
4834	Fetch an access token
4835	Get a merchant by ID .
4836	Create a new payment
4837	Confirm a resource .
4838	Create a new limit
4839	Perform an API request .
4840	Validates a webhook .
4841	Fetch a subresource
4842	Generate a query string
4843	Sort two arrays .
4844	Convert a string to singular
4845	Calls a curl request
4846	Register aliases .
4847	Unregister all registered aliases
4848	Get the destinations for a given file .
4849	Create driver instance .
4850	Prepare the counter
4851	Applies the ID to the given row .
4852	Get driver instance .
4853	Returns the real rows of the current table .
4854	Calculate the profiling time
4855	Logs a message .
4856	Set session params
4857	Get session params
4858	Get a list of all the sessions
4859	Returns a list of all children .
4860	Push a job to the queue .
4861	Push a job to the queue .
4862	Create an envelope .
4863	Marks a job .
4864	Populate the queue .
4865	List jobs .
4866	Delete a job
4867	Fail a job .
4868	Parses the given options and returns the date .
4869	Create a new DateFormat instance .
4870	Convert entity to string
4871	Sets the event type .
4872	Trigger event listeners .
4873	Initializes buttons .
4874	Set form id
4875	Get meta data
4876	Vote vote .
4877	Creates a new listener instance .
4878	Set the current user .
4879	Get formatted size .
4880	Get the resource file .
4881	Get the file content .
4882	Get permissions .
4883	Generate public alias .
4884	Add a dependency to the collection .
4885	Set exclude methods .
4886	Get a helper instance .
4887	Create an entity .
4888	Redirect to page
4889	Renders a page .
4890	Render a page .
4891	Get the target .
4892	Get the snapshot generator .
4893	Compares two arrays .
4894	End capture .
4895	Renders an HTML tag
4896	Start capture .
4897	Get config directory
4898	Checks the cache cache .
4899	Setup CLI environment variables
4900	Load dotenv environment .
4901	Load a configuration file .
4902	Get the environment environment .
4903	Create select service
4904	Create a value from a node .
4905	Get application by key
4906	Displays a view .
4907	Event handler .
4908	Render a Summary .
4909	Renders the form .
4910	Renders summary .
4911	Inject components .
4912	Set variables .
4913	Add a dependency .
4914	Add an iterator to the collection .
4915	Add an array to the collection
4916	Sets the value of the field .
4917	Set request parameters
4918	Sets a parameter .
4919	Attach the input filters to the input filter .
4920	Sets the form .
4921	Set the current region
4922	Remove a region
4923	Remove a type from a region
4924	Registers a new type .
4925	Returns the types of the given region .
4926	Get all regions
4927	Set the listeners .
4928	Adds a listener to the event .
4929	Attach event listeners .
4930	Detach listeners .
4931	Update the values of this item .
4932	Render notification .
4933	Load entities .
4934	Deletes an entity .
4935	Trigger event .
4936	Get all permissions for a given resource .
4937	Creates a nested array of nested options .
4938	Get option config
4939	Set allowed types
4940	Set whether or not .
4941	Get allowed types
4942	Check if the file count is valid .
4943	Add base fieldset
4944	Grant a resource .
4945	Revoke a resource .
4946	Build the view .
4947	Check if the given permission is valid .
4948	Returns a list of drafts for a given criteria .
4949	Creates a query builder .
4950	Create draft .
4951	Returns the target class name .
4952	Check if rating is valid .
4953	Call a method .
4954	Initializes the head script .
4955	Listen to the renderer .
4956	Proxy method to proxy .
4957	Processes the document .
4958	Attach an event to the dispatcher .
4959	Detach listeners .
4960	Render a form
4961	Sets the form .
4962	Add a view model .
4963	Add a view template
4964	Add view variables
4965	Get files from request .
4966	Get request headers
4967	Get POST parameters
4968	Get request parameters
4969	Get parameter from event .
4970	Process the request .
4971	Convert the given content to another one .
4972	Flattens a tree .
4973	Prepare hydrate data
4974	Hydrate a node into a tree .
4975	Creates a child node .
4976	Creates a new module instance .
4977	Sends the message to the server .
4978	Filter value by value
4979	Get form element
4980	Convert a database value to a database .
4981	Convert a PHP value to a PHP type .
4982	Set options .
4983	Get the iterator for the form .
4984	Set form parameters
4985	Sets a parameter
4986	Execute an action
4987	Set form field
4988	Set form fields
4989	Enable form fields
4990	Disable form fields
4991	Get entity by key
4992	Map the entity to the entity .
4993	Returns the active form .
4994	Gets the previous form .
4995	Returns the next active form element
4996	Get column map
4997	Set search params
4998	Determines if the given content is granted .
4999	Fixes the content of a page .
5000	Removes a menu item .
5001	Removes a form .
5002	Remove empty tabs .
5003	Get the configuration .
5004	Create event manager instance .
5005	Attach listeners .
5006	Normalize listener options .
5007	Initialize the order
5008	Trigger an event .
5009	Set subject .
5010	Get permissions .
5011	Get logger instance
5012	Inject log logger
5013	Attach events to the event manager .
5014	Logs a bootstrap event .
5015	Log the finish event .
5016	Log a job .
5017	Logs a job .
5018	Check if field is enabled
5019	Get field options
5020	Get field flags .
5021	Returns the input specification for the given field .
5022	Copy array values to array
5023	Determine if the option has multiple items .
5024	Find a leaf node .
5025	Render a dropdown element .
5026	Get custom options .
5027	Returns the template for the given page .
5028	Decorate class metadata .
5029	Find page by id
5030	Find page by repository
5031	Sets the loaded page .
5032	Returns the loaded page .
5033	Extract data from a file
5034	Hydrate a value into an entity .
5035	Set the email address
5036	Displays the dashboard view .
5037	Sets the images .
5038	Get image by key
5039	Set an image .
5040	Set the permissions .
5041	Bootstrap event handler .
5042	Sets the notification listener .
5043	Add notification .
5044	Handle the route .
5045	Add paginator .
5046	Add a form to the stack .
5047	Get search result
5048	Call a plugin .
5049	Checks if a property exists
5050	Trigger an event .
5051	Trigger a callback for a given event .
5052	Get the content type
5053	Set response .
5054	Initializes the settings .
5055	Get entity class name
5056	Attach event listeners .
5057	Get controller class name
5058	Generate badge .
5059	Generate a badge from a string .
5060	Creates an instance from a URI string .
5061	Calculate width .
5062	Returns the output stream .
5063	Output JSON string .
5064	Execute curl request
5065	Get info about curl
5066	Initialize curl object
5067	Set cURL option
5068	Set curl option
5069	Retrieves information about the connection .
5070	Determines the header tags for the given depth .
5071	Traverses the header of the given document .
5072	Render menu menu
5073	Create controller .
5074	Set the output format .
5075	Write a log line
5076	Get all items
5077	Get item ID
5078	Get search results
5079	Removes post data from request
5080	Post index action
5081	Update a resource
5082	Delete a resource
5083	Lookup a resource by its name
5084	Validate input data
5085	Build the URL for the current page .
5086	Start transaction .
5087	Commits the transaction .
5088	Returns a map of values in the query .
5089	Returns a map of rows in the query .
5090	Execute a command .
5091	Parse a subquery
5092	Builds the sql command
5093	Renames a table .
5094	Execute the SELECT statement .
5095	Returns the default array of default values .
5096	Checks if the query exists .
5097	Append field by position
5098	Append multiple values to the position
5099	Insert a table into the database .
5100	Append multiple values to the list .
5101	Add multiple values to the query .
5102	Sets the SELECT query .
5103	Appends a set of values to a set of values .
5104	Execute the query
5105	Add a limit to the query .
5106	Add a new element to the server .
5107	Create a new connector
5108	Append a column to the list
5109	Order by clause
5110	Append a part to the query .
5111	Append a part to the query .
5112	Set a part of the query
5113	Write a timestamp to the current time .
5114	Convert string to UTF - 8
5115	Submit an article
5116	Submit an attachment .
5117	Delete an article
5118	Delete an attachment
5119	Assign options .
5120	Send a request to the gateway .
5121	Send a request .
5122	Set authorization header
5123	Get attachment endpoint .
5124	Cast value to array
5125	Serve the dispatcher .
5126	Initialize the container .
5127	Reads a QTI DateTime object
5128	Reads a QTI DateTime object from the buffer .
5129	Convert string to UTF - 8
5130	Returns a new instance with the given string .
5131	Filter the port .
5132	Checks if the host is a standard port .
5133	Create Uri instance .
5134	Create Uri instance .
5135	Extract resources from collection .
5136	Handle shutdown .
5137	Handle an error .
5138	Handle an exception .
5139	Add a middleware
5140	Map a route to the router .
5141	Run the application .
5142	Process the request .
5143	Create a new photo .
5144	Create a new photo .
5145	After the test is executed .
5146	Access the inbox
5147	Get opened email address
5148	Get the most recent email .
5149	Get full email
5150	Get email recipients
5151	Returns the text after the given string .
5152	Determines if the given email was created .
5153	Add a configuration
5154	Configure the configuration .
5155	Sets the configuration .
5156	Get filename .
5157	Determine if the route should be executed .
5158	Create gallery .
5159	Create a Gallery instance .
5160	Get attachment by field name
5161	Attach a model .
5162	Attach a gallery .
5163	Serializes an entity .
5164	Send an email .
5165	Render the given data .
5166	Filter Uri instance
5167	Filters a date instance .
5168	Converts UTF - 8 characters to ASCII characters .
5169	Get type by value
5170	Get name by type
5171	Get the available ratios .
5172	Set the encoder .
5173	Creates a new article .
5174	Get property value
5175	Set a property .
5176	Adds a property to the collection .
5177	Map all properties to the collection .
5178	Filter collection .
5179	Adds a new property .
5180	Adds a property to the collection .
5181	Append a value to an array .
5182	Fill the source image .
5183	Creates an article from a JSON string .
5184	Recursively searches for a list of articles .
5185	Add article attachment
5186	Make an attachment object .
5187	Create a photo .
5188	Create a new page .
5189	Create video .
5190	Filter string .
5191	Handle a string
5192	Add a route .
5193	Dispatch the request .
5194	Add routes to the collection .
5195	Returns the results of the specified method .
5196	Add a search result .
5197	Get the version of the application .
5198	Save the message .
5199	Validate options .
5200	Set options .
5201	Build the connection options .
5202	Open the connection .
5203	Closes the connection .
5204	Check if current url is active
5205	Check if the given string matches the given string .
5206	Determine if the given route names are active .
5207	Check if all active URLs are active
5208	Converts a node to a PHP node .
5209	Convert the given statements into an array .
5210	Get the application instance .
5211	Convert a node to a node .
5212	Get a constant
5213	Get a binding for a given type .
5214	Find a binding by name .
5215	Returns the binding binding for the given class .
5216	Create a new instance of the given class .
5217	Get the bindings for the application .
5218	Get the host name .
5219	Cast a predicate .
5220	Determine if the given path exists .
5221	Returns a list of all the vendor paths .
5222	Check if a property exists
5223	Get the value of the given value .
5224	Get the provider factory .
5225	Resolve binding bindings .
5226	Check if the given value is a type .
5227	Binds a list of binding bindings .
5228	Create a new injector .
5229	Returns the value of the given name .
5230	Get enum instance .
5231	Returns an array of all the values of the class .
5232	Checks if this object is equal to another .
5233	Handle exception .
5234	Adds a value to the registry .
5235	Adds a provider to the registry .
5236	Get a new instance of the class
5237	Gets the injection values for the given method .
5238	Get the binding name of a method .
5239	Get parameter type .
5240	Log an exception .
5241	Get exception fields .
5242	Get autoloader .
5243	Transforms a path to a file .
5244	Prefix namespace .
5245	Replace a file in the filesystem .
5246	Get the contents of a file .
5247	Get all child models .
5248	Find model by id
5249	Save child .
5250	Save data to database
5251	Delete this object
5252	Find a model by id
5253	Find model by id
5254	Destroy a model .
5255	Make pagination .
5256	Sets the parent model .
5257	Search for models .
5258	Maps a query to a list of results .
5259	Get all documents .
5260	Set option options
5261	Merges the query .
5262	Merges a boolean query .
5263	Set query fields
5264	Put an instance into the cache .
5265	Get the attributes of the given key .
5266	Merge two models .
5267	Escapes a value .
5268	Converts a value to a string
5269	Translates a select statement
5270	Translate the update statement .
5271	Translate the delete statement to the query .
5272	Translate order by clause
5273	Get the table instance .
5274	Adds a GROUP BY clause .
5275	Add where clause
5276	Sets the ORDER BY clause .
5277	Add a where clause
5278	Add OR WHERE clause
5279	Generate where clause
5280	Add select statement
5281	Adds a function to the SELECT statement .
5282	Get the value of a variable
5283	Insert data into database
5284	Set the limit
5285	Set page limit
5286	Reset the query .
5287	Perform an HTTP request
5288	Get request method name
5289	Perform a request .
5290	Perform a curl request
5291	Detects the given text .
5292	Build Gravatar URL
5293	Generate font font .
5294	Execute the font .
5295	Execute the font .
5296	Set font options
5297	Get options from XML .
5298	Add a glyph
5299	Get glyphs .
5300	Get glyph names .
5301	Get the CSS styles .
5302	Converts a UTF - 8 character to UTF - 8 .
5303	Converts UTF - 8 characters to UTF - 8 .
5304	Returns the path of the document .
5305	Returns the path part of the XML element .
5306	Transforms a path to an image
5307	Get path from polygon
5308	Gets the path from a text element .
5309	Get the path from a circle
5310	Get the path from an elliplement .
5311	Generate the HTML for the icon .
5312	Generate the HTML for the icon .
5313	Gets the HTML for the icon .
5314	Generate code codes
5315	Generate blocks .
5316	Convert the collection to a collection .
5317	Run the process .
5318	Wait for process
5319	Checks if the process is successful .
5320	Wait for child process .
5321	Removes the file .
5322	Execute a callable .
5323	Registers a signal handler .
5324	Dispatch all handlers .
5325	Lock the given task .
5326	Start profiling .
5327	End profiling .
5328	Gets the CPU information about the CPU
5329	Push a string to the buffer .
5330	Get the emoji pattern .
5331	Returns a list of all the emoji codes .
5332	Generate a UUID
5333	Sets the cookie .
5334	Sign a request .
5335	Creates a SHA512 SHA1 hash .
5336	Encodes parameters .
5337	Get the API instance .
5338	Build the SOAP client
5339	Sets the mode .
5340	Set balancing mode
5341	Calls a service
5342	Build the SOAP client
5343	Build the SOAP client .
5344	Make a SOAP client
5345	Request access to a user
5346	Requests remote commands .
5347	Resolves a new snapshot .
5348	Install an operating system
5349	Install an operating system .
5350	Set mailbox password .
5351	Set the database password .
5352	Get the list of supported names .
5353	Get the supported authentication credentials
5354	Get authentication data
5355	Guesses a class from an operation .
5356	Parse a schema specification
5357	Creates the query parameters for the given operation .
5358	Creates the parameters for the given operation .
5359	Creates URL statements .
5360	Create body statements .
5361	Creates the headers for the given operation .
5362	Create a new instance of the schema
5363	Generate the schema files .
5364	Fixes the configuration file .
5365	Pushes a single step .
5366	Renders a test failure .
5367	Renders an exception .
5368	Returns the MIME type .
5369	Checks if a string is an ASCII ASCII .
5370	Add a pair to the collection .
5371	Attaches an attachment .
5372	Merge the request with the given parameters .
5373	Get a value from the request .
5374	Create a new tag
5375	Create a new input tag
5376	Convert a string to lowercase
5377	Get attribute value
5378	Check if column is enabled
5379	Wrap the given text .
5380	Set the value of the option .
5381	Get the value of the option .
5382	Set the value of the option .
5383	Check if the value is a value .
5384	Sets the value of the attribute .
5385	Checks if the given ID is a valid widget .
5386	Check if a label is a label
5387	Sets the value of the widget .
5388	Checks if the given value matches the given values .
5389	Sets the value of the widget .
5390	Check if the given value is a valid value .
5391	Get widget value
5392	Prints an error message
5393	Print an error message
5394	Print an error message
5395	Print an exception .
5396	Prints a skip message .
5397	Renders a message .
5398	Draw a signal .
5399	Sets the host name .
5400	Truncate host .
5401	Check if path is valid
5402	Checks if the current time is expired .
5403	Fix the path
5404	Restarts the session .
5405	Sets the lifetime of the cookie .
5406	Find the first match of the given cookie .
5407	Get cookie value
5408	Check if a cookie matches the given name .
5409	Returns a list of all the cookies .
5410	Close the file .
5411	Write message to socket
5412	Read data from socket
5413	Create socket socket
5414	Get request line
5415	Fetch the response .
5416	Dispatch the request .
5417	Creates a new HTTP response .
5418	Writes the cookies to the URL .
5419	Parse header line
5420	Parse a cookie line
5421	Parses raw HTTP headers
5422	Read all data from socket
5423	Invokes the given method .
5424	Sets the exception .
5425	Checks if the given exception is expected .
5426	Convert an exception to an exception .
5427	Get interfaces .
5428	Get all interfaces .
5429	Get the parent class .
5430	Determine if the interface has the final method .
5431	Returns the parents of the given interfaces .
5432	Check if a method is abstract or not
5433	Determine if the given method is abstract or not .
5434	Check if the given method is static .
5435	Gets the method signature .
5436	Gets the parameters for a method .
5437	Add a pattern
5438	Tries to match the given pattern .
5439	Add a pattern
5440	Adds a new pattern to the current mode .
5441	Parses raw text .
5442	Dispatch tokens .
5443	Execute the parser .
5444	Reduce the given string into a regular expression .
5445	Add skip patterns
5446	Add tag tokens .
5447	Add attribute tokens .
5448	Accepts a start tag .
5449	Accepts the end of a token .
5450	Accepts an attribute .
5451	Parses the response .
5452	Start a new element
5453	Ends a tag .
5454	Check if a tag has a named tag .
5455	Add a content to the content
5456	Add content to open tags
5457	Add content to open tag
5458	Open tag .
5459	Accepts a tag
5460	Accepts label .
5461	Called when the page is complete
5462	Stretch the path to the given url .
5463	Returns the full path for the given path .
5464	Check if the given url is within the current page .
5465	Add a realm
5466	Set the identity for the given realm .
5467	Finds a realm from a URL .
5468	Add headers to the request .
5469	Overrides the error message .
5470	Describes a regular expression .
5471	Returns the value of a property .
5472	Returns the private property for the given object .
5473	Check if the widget is match .
5474	Creates an action .
5475	Get the current action .
5476	Encode the widget .
5477	Add a widget
5478	Adds a widget .
5479	Add a radio button
5480	Add a checkbox
5481	Get the value of the widget .
5482	Sets the field value
5483	Attach a label to the widget .
5484	Returns true if the submit button matches the given selector .
5485	Check if the image matches the given selector .
5486	Submit the submit button .
5487	Submit image .
5488	Creates a new encoder
5489	Parse an array of arguments
5490	Adds an item to the array .
5491	Describes the difference between two parameters .
5492	Render the given arguments .
5493	Add an action .
5494	Finds the first action .
5495	Find the first slot in the map
5496	Registers an action .
5497	Registers an action .
5498	Assert that the given parameters are expected .
5499	Respond to the action .
5500	Replace wildcards with wildcards
5501	Checks if the given arguments are valid .
5502	Throw an exception
5503	Add a new call
5504	Returns the number of calls .
5505	Registers a method .
5506	Registers a set of methods .
5507	Register a single value by method .
5508	Register a method by reference
5509	Assert that the given method is expected .
5510	Assert that the given time is expected .
5511	Sets the count of calls .
5512	Sets the maximum number of calls .
5513	Sets the minimum count of the given method .
5514	Asserts that the given method is expected .
5515	Asserts that the given method exists .
5516	Register an error .
5517	Register an error .
5518	Invokes the given method .
5519	Invokes the given method .
5520	Checks if the given method is expected .
5521	Generates a mock class .
5522	Generate mock methods .
5523	Generate a sub class .
5524	Generate a partial mock .
5525	Create the class for the given class .
5526	Generates the stub for a class .
5527	Extends a class definition .
5528	Creates the code for the given methods .
5529	Builds the mock methods .
5530	Builds the mock expectation .
5531	Builds the callable methods .
5532	Create an array of methods for the given methods .
5533	Renders a rectangle .
5534	Renders the footer .
5535	Divide a map
5536	Add a new frame
5537	Sets a page .
5538	Get frame focus
5539	Get the public name of a subject .
5540	Set the index of the frame .
5541	Set the frame focus .
5542	Clear all nested frames .
5543	Returns the list of frames .
5544	Get the raw data
5545	Returns the text of the frame .
5546	Returns the transport error message .
5547	Get the current frame
5548	Get the URL of the frame .
5549	Get the base URL for this frame .
5550	Get request data
5551	Get the mime type .
5552	Get the response code
5553	Get request request .
5554	Get the headers of the frame .
5555	Returns an array of urls .
5556	Get url by id
5557	Triggers the tags with the given frame .
5558	Finds the form for the given attribute .
5559	Find the form for the given frame .
5560	Record a new entry .
5561	Get the parser
5562	Parse the response .
5563	Loads a page .
5564	Load a frame .
5565	Get a HEAD request
5566	Loads a URL from the URL .
5567	Perform a POST request .
5568	Perform a POST request .
5569	Deletes a URL .
5570	Retrieves the next page .
5571	Restore the current history .
5572	Authenticate a user
5573	Set field value
5574	Click a submit button .
5575	Click a submit button .
5576	Click a submit button
5577	Click image by label
5578	Click image by name
5579	Click image by id
5580	Submit form submission
5581	Get link by label
5582	Click a label .
5583	Click a link to the page
5584	Click a label .
5585	Check if label is clickable
5586	Restart session
5587	Get cookies .
5588	Set cookies .
5589	Get cookie value
5590	Set the identity for the given realm .
5591	Fetches the response .
5592	Fetch a response from a URL .
5593	Fetch data from a URL .
5594	Create an HTTP request .
5595	Create route .
5596	Invokes the given method .
5597	Create error queue
5598	Add a new error
5599	Tries to tally the exception .
5600	Returns a string representation of a severity .
5601	Prints a message
5602	Print an error message
5603	Print an exception
5604	Renders a method .
5605	Outputs the status of the method .
5606	Draw a group .
5607	Draws the code for a group
5608	Append the given method to the output .
5609	Draw a group .
5610	Renders a test case .
5611	Renders a method .
5612	Pushes the assertion .
5613	Render an assertion .
5614	Renders the case of a method .
5615	Renders a group .
5616	Compare two nodes .
5617	Get total size
5618	Outputs a test header .
5619	Renders a test failure .
5620	Compute the coordinates of a URL .
5621	Checks the scheme of the scheme .
5622	Converts a URL to a URL .
5623	Parses the request .
5624	Set the coordinates .
5625	Returns the encoded string .
5626	Add a request parameter
5627	Returns the string representation of the request .
5628	Make absolute path .
5629	Extract relative path from base path
5630	Get the identity of the user .
5631	Renders the footer
5632	Remove trailing slash .
5633	Collects the given path .
5634	Handle the test .
5635	Print an exception .
5636	Prints an error message
5637	Print error message
5638	Checks if the given method is invoked .
5639	Renders a group .
5640	Renders a test group .
5641	Renders a test case .
5642	Renders the case of a test .
5643	Make sure this report is ready
5644	Returns the status of the report
5645	Checks if the given method is invoked .
5646	Create an invoker .
5647	Renders a test case .
5648	Prints the method end of the report
5649	Assign value to array
5650	Parse the given arguments .
5651	Explicitly explain .
5652	Renders the header .
5653	Returns the longest flag for the given flags .
5654	Render a set of flags .
5655	Parses the given response .
5656	Walk through child nodes
5657	Create empty form .
5658	Adds a widget to the form .
5659	Index a widget by id
5660	Collect select options .
5661	Parse the attributes
5662	Merge attributes into an array .
5663	Remove quoted quotes from quoted string
5664	Collects the frames .
5665	Returns the inner HTML for the given node .
5666	Attach labels to the widget .
5667	Returns the type of the given value .
5668	Describes the difference between two types .
5669	Clones a string to a given length .
5670	Returns the difference between two values .
5671	Returns the difference between two strings .
5672	Returns the difference between two floats .
5673	Describes the difference between two arrays .
5674	Check if two keys are equal
5675	Describes the difference between two objects .
5676	Get the members of an object .
5677	Returns the difference between two strings .
5678	Extract the response from the response .
5679	Sets the response .
5680	Get text .
5681	Check if a URL is absolute .
5682	Returns an array of URL objects .
5683	Returns an array of all URLs .
5684	Get url by id
5685	Get the URL from a link .
5686	Expands the given url .
5687	Get form by selector
5688	Get form by selector
5689	Get form by id
5690	Normalize HTML tags .
5691	Returns the HTML for the button .
5692	Displays the edit button .
5693	Create form element
5694	Displays the frontend form .
5695	Save form data .
5696	Get the form action from the request .
5697	Displays the form field
5698	Displays the form field
5699	Find a form by name
5700	Get default button list
5701	Create buttons list
5702	Checks if a custom action has a custom action
5703	Binds the grid field to the grid .
5704	Creates a field .
5705	Determine if the field should be displayed .
5706	Determine if the current record is displayed .
5707	Get button link
5708	Transforms the button to the page .
5709	Get button name .
5710	Get button HTML .
5711	Get the field holder .
5712	Add new item
5713	Update the item edit form
5714	Filter the fields list
5715	Saves a new record
5716	Saves the given data to the database .
5717	Publish a new form
5718	Publish the given data
5719	Cancel the request
5720	Handles the next page
5721	Saves the previous record
5722	Save a new version .
5723	UnPublish a record .
5724	Get the top level of the controller
5725	Redirect to the form
5726	Check if the record is published
5727	Determine if the record is deleted .
5728	Generates a dropdown button
5729	Binds the grid field to the grid .
5730	Returns the HTML for the button .
5731	Get all competitions .
5732	Get league league
5733	Get team team teams
5734	Get league matches
5735	Get all matches for a team .
5736	Get show parameters
5737	Returns the renderer for the given view .
5738	Set default suffix
5739	Render the view .
5740	Logs the duration of the request .
5741	Prefix the given data .
5742	Returns the parser for the given content type .
5743	Parse content type .
5744	Returns the value of the given column type .
5745	Gets the debug backtrace
5746	Returns a form for creating a new form .
5747	Validate where clause
5748	Remove last characters from a string
5749	Convert an array to a string
5750	Set the roles .
5751	Delete a role by primary key
5752	Get all roles .
5753	Returns the roles for the given roles .
5754	Sets the index filter .
5755	Selects all roles from the database .
5756	Selects the roles with the given roles .
5757	Returns an array of permissions for the given table .
5758	Get the FROM clause .
5759	Builds a permission object .
5760	Returns a list of permissions for the current user .
5761	Delete a permission .
5762	Render the view .
5763	Get field value
5764	Reset index filter .
5765	Lists all admin objects .
5766	Clears the mailer .
5767	Creates a new Mailer instance .
5768	Adds a column to the list .
5769	Set the SQL statement
5770	Get administrator administrator .
5771	Check if the user has a role .
5772	Get the roles string .
5773	Determine if the current user is available .
5774	Determine if the user can delete this account .
5775	Lists all roles .
5776	Adds a SQL statement to the query .
5777	Evaluate an SQL statement
5778	Set SQL statement
5779	Returns the first row of the result set .
5780	Set the navigation .
5781	Get the section for the given administrator .
5782	Execute delete action .
5783	Add an event to the event .
5784	Update an existing record .
5785	Add a column
5786	Find a database record .
5787	Get logout .
5788	Execute the query .
5789	Sets the rules for the given record .
5790	Set default value
5791	Determine if the model should be deleted .
5792	Set the constraints for the table .
5793	Add a column constraint .
5794	Adds a boolean column to the query .
5795	Inserts a row into the database .
5796	Set the slim middleware .
5797	Get route name
5798	Renders the index view .
5799	Returns a list of all roles in the database .
5800	Deletes a user .
5801	Get cell row
5802	Lists all permissions for a given response .
5803	Set the whitelist definition .
5804	Check if the value matches the given value
5805	Increment the counter .
5806	Validates the extension
5807	This method is called when a tag has been created .
5808	Deletes the given tag .
5809	Updates the search form .
5810	Updates the searchable fields .
5811	Updates the tags fields .
5812	Sets the tags for this field .
5813	Gets the fields of the CMS .
5814	Validates a Fusion tag
5815	Write the tags to the tag
5816	This method is called when a tag has been created .
5817	Returns a list of tagged tags .
5818	Update the tags of a given Fusion object .
5819	Create alerts for given type .
5820	Transform files into an array
5821	Write a file to the container .
5822	Render flash alerts .
5823	Resolve options .
5824	Set HTTP method
5825	Encodes the data
5826	Set JSON encoding
5827	Build the URL for the given URL .
5828	Create a new request
5829	Creates a raw request .
5830	Prepare the request
5831	Send a request
5832	Create a response object
5833	Convert header to array
5834	Sets the status code
5835	Clear expired cache entries .
5836	Handle a request .
5837	Transforms a transformation into an array .
5838	Transforms a URL into a URL .
5839	Trims the given string .
5840	Crop an image .
5841	Add a role .
5842	Get additional fields .
5843	Validates the required fields
5844	Save additional fields .
5845	Executes all the image files .
5846	Logs a message
5847	Sanitize a file name .
5848	Populate metadata .
5849	Generates the module content
5850	Builds the form for the given row .
5851	Add toolbar buttons
5852	Process the data
5853	Load virtual tables .
5854	Persist form elements .
5855	Add social images to twitter image
5856	Initializes the rules .
5857	Normalizes the input string .
5858	Notify a callback
5859	Returns a list of all the directories .
5860	Get all file types .
5861	Compile rules .
5862	Expands a set of rules into an array .
5863	Expands conversion mapping .
5864	Get directory path
5865	Report an additional image size .
5866	Get indexer object
5867	Get orientation .
5868	Extract metadata from a file
5869	Create a temporary file object .
5870	Get the metadata for the given file .
5871	Convert a rational number to decimal
5872	Returns the transformation for the given orientation .
5873	Determine if the given file is a parent .
5874	Checks if the given file is an image .
5875	Add container to container
5876	Get image extensions .
5877	Finds a file by its name .
5878	Update the index .
5879	Create a new index
5880	Access the protected property
5881	Process uploaded file
5882	Read a byte from a file .
5883	Before find callback .
5884	Normalize order config
5885	Render dropdown .
5886	Resolve the host name .
5887	Get icon name
5888	Get the class name .
5889	Gets the view of this node .
5890	Filter the list of nodes
5891	Get permission type
5892	Convert a log entry into an array
5893	List audio templates .
5894	Get audio template
5895	List image templates .
5896	Retrieve an image template
5897	List video templates .
5898	Get video template .
5899	List all functions
5900	Retrieves a function .
5901	List all groups .
5902	Retrieve a group .
5903	Get current user .
5904	List roles .
5905	Retrieve a role .
5906	List account settings .
5907	Retrieves a setting .
5908	List users .
5909	Retrieve a user .
5910	Create a setting .
5911	Create a new user .
5912	Update a user .
5913	Add a user to a group .
5914	Update last login attempt
5915	Send a password reset request .
5916	Reset password .
5917	Update a setting .
5918	Set secret key
5919	Sets the created date .
5920	Set the updated date .
5921	Get a property .
5922	Set property sets
5923	Add a property set
5924	Set filter items
5925	Add a filter
5926	List categories .
5927	Get category by id
5928	Create a new category .
5929	Update a category .
5930	Remove category .
5931	Sets the definition .
5932	Set end date .
5933	Sets the start date .
5934	Sets the last login time .
5935	Set the groups .
5936	Add a group
5937	Sets the list of functionalities .
5938	Adds a function to the collection .
5939	Set extra data
5940	Add extra data
5941	Connect to the socket
5942	Read data from the stream .
5943	Fetch the object from the given node .
5944	Get category categories
5945	Fetches a filtextension .
5946	Get a single property
5947	Get adapter type
5948	Wait until the connection is read .
5949	Set response results
5950	Add a media response
5951	Add a folder to the collection .
5952	Sets the transition .
5953	Get channel list
5954	Create a channel .
5955	Get a list of channel permissions .
5956	Get a list of client permissions
5957	Get a channel by name .
5958	Get client by ID
5959	Get client by UID
5960	Get client by ID
5961	Get server group by name
5962	Returns a list of server groups .
5963	Get the list of servers for the server .
5964	Get a channel group by its ID .
5965	Get a list of group permissions for a channel .
5966	Reset the password reset token .
5967	Get password list
5968	Sort group list
5969	Sort file list
5970	Get accounts .
5971	Get categories .
5972	Get the deployment controller .
5973	Get all events .
5974	Get filters .
5975	Get all folders .
5976	Get the media instance .
5977	Get the list of moodle objects .
5978	Get object types .
5979	Get property setter .
5980	Get social media .
5981	Build base path .
5982	Get Guzzle Client
5983	Add OAuth2 OAuth2 OAuth2 .
5984	Update credentials .
5985	Set Access Token
5986	Returns an array of tokens
5987	Sets the created date range .
5988	Sets the updated date range .
5989	Sets properties .
5990	Add property criteria
5991	Set the deployment date range .
5992	Set sort fields
5993	Adds a search field to the list .
5994	Set sub folders
5995	Add a folder
5996	Sets saved search search .
5997	Set the min .
5998	Set the max value
5999	Sets the protocol .
6000	Set image templates .
6001	Add an image template
6002	Set video templates
6003	Add a video template
6004	Set categories .
6005	Add category response
6006	Convert character to UTF - 8
6007	Creates a new instance from a hexadecimal string .
6008	Initializes the file transfer .
6009	Sets the deleted date .
6010	Sets the date range .
6011	Set reply replies .
6012	Add a comment .
6013	List all protocols .
6014	Retrieves the protocol .
6015	Get a deployment site .
6016	Create a new deployment site .
6017	Update a deployment site .
6018	Add media to deployment .
6019	Remove a deployment .
6020	Remove media from deployment .
6021	Set API key
6022	Perform an API request .
6023	Calls a curl request
6024	Set metadata .
6025	Add meta data
6026	Set mime type
6027	Sets the uploaded file .
6028	Set deployed files .
6029	Add a new deployment file
6030	Sets the child media .
6031	Add a new item
6032	Get the deployed file .
6033	Returns the metadata for the given section .
6034	Set mime type
6035	Set command commands .
6036	Add a command .
6037	Initializes the model .
6038	Initializes the transport
6039	Create a custom event
6040	Download all events .
6041	Search for events .
6042	Sends a session
6043	Add a new media .
6044	Show an event .
6045	Renders the items .
6046	Register plugin plugin .
6047	List object types
6048	Get object type
6049	Set properties .
6050	Add a property response
6051	List all folders
6052	Retrieve a folder .
6053	Get the parents of a folder .
6054	Create a folder .
6055	Add media to a folder
6056	Update a folder .
6057	Remove media from folder
6058	Remove folder .
6059	Retrieve media .
6060	Retrieves an asset data from a file .
6061	List deployments .
6062	Download media .
6063	List all folders
6064	Get a list of moodleboards .
6065	List media files .
6066	List media media .
6067	Get a list of all users .
6068	List versions .
6069	List comments .
6070	Download media archive .
6071	Upload a file .
6072	Update media .
6073	Add a group .
6074	Restore media .
6075	Set a status
6076	Upload a preview
6077	Upload a new chunk .
6078	Create a comment .
6079	Combines multiple slides .
6080	Update a media .
6081	Remove media .
6082	Remove a comment .
6083	Upload a file .
6084	Upload a new version .
6085	Retrieves a moodle board .
6086	List all templates .
6087	Retrieve a specific template
6088	Create a moodle board .
6089	Update a moodle board
6090	Add media to a moodle
6091	Remove a moodleboard .
6092	Remove a media from the database
6093	Get a section from the string .
6094	Checks if the string is UTF - 8 .
6095	Assign a permission to a client .
6096	Returns a list of member groups for this client .
6097	Execute a GET request .
6098	Perform a POST request .
6099	Make a PUT request
6100	Delete an endpoint
6101	List property sets
6102	List property types
6103	Send a command
6104	Wait for event
6105	Get the host
6106	Get grid class name
6107	Returns a list of client permissions .
6108	Remove a channel from the channel .
6109	Assign a permission to a channel .
6110	Returns a list of channel files .
6111	Delete a channel
6112	Create a new channel
6113	Send a plugin .
6114	Get the current version .
6115	Get server port
6116	Get server by name
6117	Get server by UID
6118	Create a new server .
6119	Deletes a server .
6120	Start a server .
6121	Get permission by name
6122	Get permission name by id
6123	Logs a user .
6124	Logout the user .
6125	Set the roles .
6126	Add a role .
6127	Set the expiration date .
6128	Get the class name of the channel .
6129	Get title title
6130	Get channel name
6131	Get server icon
6132	Get suffix flag
6133	Generate an image
6134	Set metadata .
6135	Performs a search .
6136	Performs a search on a folder .
6137	Get total number of results
6138	Parse the URI string
6139	Check if a URI is valid .
6140	Check if the user is valid .
6141	Check if the given password is valid .
6142	Check if the path is valid .
6143	Check if the query string is valid
6144	Checks if a query variable exists .
6145	Check if the given fragment is valid .
6146	Set status code
6147	Send HTTP headers
6148	Set body body
6149	Send a JSON response .
6150	Set json body
6151	Redirect to the request .
6152	Renders the field .
6153	Sets the property type .
6154	Sets the value of the property .
6155	Converts the value to a property type .
6156	Redirect to url
6157	Redirect to current request
6158	Render an item .
6159	Creates a URL for a given model .
6160	Set property properties
6161	Add a property request
6162	Starts the application .
6163	Get memory usage
6164	Sets the data
6165	Set options .
6166	Write progress .
6167	Write performance statistics
6168	Write an assertion failure .
6169	Write an exception .
6170	Handles an exception .
6171	Adds a test failure .
6172	Set the configuration .
6173	Read a file .
6174	Deletes a file .
6175	Adds a JOIN clause to the query .
6176	Unique unique keys .
6177	Execute delete query
6178	Sort an array by key
6179	Load schema schema schema
6180	Write a record to the log .
6181	Returns the severity for the given error code .
6182	Redirect to a URL
6183	Add a message
6184	Display flash messages .
6185	Clear flash messages .
6186	Render a template .
6187	Assign a value to the view .
6188	Renders the given data .
6189	Render json data
6190	Render json response
6191	Run the controller .
6192	Load routes .
6193	Load models .
6194	Load controllers .
6195	Find all controller files .
6196	Check if a url is active
6197	Parse route parameters .
6198	Parse the GET request
6199	Transforms a route parameter
6200	Get current path
6201	Add a new route
6202	Execute a method call
6203	Start a new instance
6204	Notify an error .
6205	Notify an exception .
6206	Called when an exception is triggered .
6207	Set a value in the store
6208	Load data from array
6209	Notify an error .
6210	Notify an exception .
6211	Clean backtrace .
6212	Convert array to array
6213	Filter array by key
6214	Initializes the object
6215	Get all parameters .
6216	Converts a domain name into a slug .
6217	Converts a thumbnail URL to a thumbnail .
6218	Returns the period start date .
6219	Returns the period end date .
6220	Authorize a transaction
6221	Set the HTTP client .
6222	Returns the elevation of the given location .
6223	Get menu presence .
6224	Remove directory .
6225	Sets the path to the file .
6226	Check if payment is valid
6227	Remove the item from storage .
6228	Move the file to the file
6229	Get available permissions .
6230	Get module permissions
6231	Get the user s permissions .
6232	Set the pickup point .
6233	Add a child element
6234	Set access mode .
6235	Creates a directory .
6236	Tries to find a filesystem path .
6237	Get an array of options
6238	Write content to file
6239	Returns the extension for the given mime type .
6240	Get the mime type for a given extension .
6241	Normalize path components .
6242	Reload the cache .
6243	Check if the file is open
6244	Get the list of permissions for a given group .
6245	Iterate over the storage .
6246	Get all files .
6247	Returns a list of all directories .
6248	Get all permissions .
6249	Prepare the list of permissions .
6250	Filters the presence of the given presence .
6251	Create a new group presence .
6252	Creates a new permission instance .
6253	Normalizes the ACL presence .
6254	Fetch shipping labels
6255	Search points for a phone .
6256	Search points by text
6257	Authorize the given user .
6258	Check if the user is authorized by the given action .
6259	Check if the given user has allowed roles .
6260	Get controller name .
6261	Get action map
6262	Returns the prefix map .
6263	Get next key .
6264	Creates a new promise .
6265	Resolves the response .
6266	Resolves an exception .
6267	Open a file
6268	Determine if the given text is academic .
6269	Get the name of the exam .
6270	Checks if the given domain is valid .
6271	Throws an exception
6272	Open a file
6273	Determine if the extension exists .
6274	Returns the value of a key .
6275	Read data from file
6276	Reads the integer from the buffer .
6277	Reads an integer from the buffer .
6278	Find a key for a given key
6279	Returns the first key of the next key .
6280	Get next key
6281	Builds the DNS resolver .
6282	Build the HTTP client
6283	Build a HttpClient instance .
6284	Build a HttpClient
6285	Returns the left shift of the given number .
6286	Hash a string
6287	Build the react request .
6288	Build the response object .
6289	Set a theme .
6290	Get theme .
6291	Load a theme .
6292	Find theme by directory
6293	Scan themes .
6294	Finds the path for the given directory .
6295	Parse the theme info .
6296	Migrate asset config
6297	Register navigation .
6298	Add an item to the main menu
6299	Adds an item to the list .
6300	Renders the navigation .
6301	Get main navigation .
6302	Get navigation bar
6303	Set active nav .
6304	Process the navigation .
6305	Returns the distance between two points .
6306	Registers service providers .
6307	Add a success message .
6308	Set attribute value
6309	Drops a database .
6310	Get the command .
6311	Get a table by its name .
6312	Get all tables .
6313	Loads the constraints .
6314	Set the referenced columns .
6315	Sets the update action .
6316	Sets the delete action .
6317	Executes a SQL query .
6318	Execute an SQL query
6319	Execute the query
6320	Get column by name
6321	Add a constraint to the table .
6322	Parse the configuration .
6323	Get attribute by name
6324	Start the file
6325	Stop the file
6326	Returns the class name of the given object .
6327	Builds the SQL query string
6328	Builds the SQL query string .
6329	Get column comments .
6330	Registers an effect .
6331	Registers a PostProcessor .
6332	Create a PSR - 7 response
6333	Validates a string
6334	Attach handlers .
6335	Create a flash message .
6336	Create an overlay .
6337	Parses an XML document .
6338	Factory method .
6339	Get the stream instance .
6340	Create search form
6341	Initializes the object .
6342	Get the value of a constant .
6343	Returns true if the object is equal .
6344	Creates an iterator from a traversable .
6345	Filter by class name .
6346	Concatenates two arrays .
6347	Returns true if the given predicate is true .
6348	Returns the index of the given predicate .
6349	Creates a new limit .
6350	Returns the next element at the given position .
6351	Returns the size of an iterator .
6352	Creates a new partition iterator .
6353	Try to find the first element in the collection .
6354	Set the fake time .
6355	Set timestamp .
6356	Convert to timestamp .
6357	Get the timestamp .
6358	Set timezone .
6359	Creates a new chunkable iterator .
6360	Filters a generator .
6361	Converts a DateInterval object to a DateInterval object .
6362	Convert a duration to a duration .
6363	Start a profiler .
6364	Returns a list of all the items in the collection .
6365	Returns the order of the given function .
6366	Compares two objects .
6367	Returns the minimum of the given traversable .
6368	Parses a string into a decoded format .
6369	Compose two functions .
6370	Returns a closure for the given map .
6371	Add a new column
6372	Appends an iterator to the iterator .
6373	Filter by class name
6374	Creates a new collection with the given transformer .
6375	Get the first element .
6376	Sorts the collection .
6377	Convert an array to an array
6378	Read record record
6379	Read records from database
6380	Read a quiz attempt
6381	Read the question attempts .
6382	Read questions .
6383	Read a feedback attempt .
6384	Returns a list of feedback questions .
6385	Read a course .
6386	Read a user .
6387	Read discussions .
6388	Read a site .
6389	Read a facet from the session
6390	Reads the Facpaces from the session .
6391	Reads the survey tracks
6392	Returns a reverse order by the given comparator .
6393	Runs a callable .
6394	Creates a new instance with the given callback .
6395	Initializes the directory .
6396	Run the execution .
6397	Add the evolution of an entity
6398	Instantiate a new entity
6399	Creates event events .
6400	Initializes the class map .
6401	Get the resource path .
6402	Register error handler .
6403	Returns true if the date is valid
6404	Propagate an exception to the given exception .
6405	Consume the remaining chunk of the chunk .
6406	Force cache file
6407	Filter an iterable iterator .
6408	Filter an iterator by class name .
6409	Creates a new iterator from an iterator .
6410	Creates an iterator from an iterable iterator .
6411	Returns true if the iterator is true .
6412	Returns true if the iterator contains a predicate .
6413	Transforms an iterator into an iterator .
6414	Creates a new iterable iterator .
6415	Get the iterator from the iterator .
6416	Returns a new iterable iterator .
6417	Returns the size of the iterator .
6418	Returns true if the iterator is empty .
6419	Start the stopwatch .
6420	Stop the timer .
6421	Creates a new condition with the given predicate .
6422	Get menu item .
6423	Check if the configuration is configured .
6424	Get Google Client
6425	Get login URL
6426	Attempt to complete the login profile
6427	Get user profile .
6428	Get Facebook Facebook .
6429	Get login URL
6430	Attempt to complete the login page
6431	Get user profile .
6432	Remove a display field
6433	Get serialized variables
6434	Get login URL
6435	Attempt to complete the login page .
6436	Get user profile .
6437	Get login URL
6438	Attempt to complete the user s credentials .
6439	Get user profile .
6440	Transforms a route .
6441	Get social login object
6442	Get all resources
6443	Perform HTTP request
6444	Get the linked client .
6445	Get login URL
6446	Fetches the login profile
6447	Get user profile .
6448	Returns the best match for the given languages .
6449	Compares the language headers .
6450	Get language values from headers array
6451	Check if session is logged in
6452	Find all labels for the given text .
6453	Creates a response body .
6454	Creates an exception for a given type .
6455	Assert that the text is text .
6456	Assert that the select field is selected .
6457	Redirect to the given URI .
6458	Write a JSON response to the response .
6459	Fill the user with the given value .
6460	Displays a radio button .
6461	Checks if the image is a thumbnail .
6462	Add a header
6463	Try to fetch a value from the collection .
6464	Checks if the response is JSON .
6465	Determine if the request is multipart .
6466	Creates a default boundary .
6467	Create a stream from a string
6468	Parses the Accept header value .
6469	Parse Accept header value
6470	Parse Accept header value
6471	Parse content type header .
6472	Returns the best match for the given media type .
6473	Compares the accept charset .
6474	Sort Accept headers .
6475	Read the form input from the given body .
6476	Reads the body as JSON .
6477	Parse a multipart request and return an array of parts
6478	Check if the encoding is supported .
6479	Get client IP address
6480	Get header value
6481	Creates a default response .
6482	Assert that the error messages are not empty .
6483	Filter the path .
6484	Filter query string
6485	Determine if the current port is allowed .
6486	Creates a new request object from the environment .
6487	Creates the headers from the environment .
6488	Get client IP address
6489	Add a header value
6490	Get a Drupal select selector .
6491	Get editor instance
6492	Find the best match format for a given type .
6493	Compares the accept media type header .
6494	Sort Accept media types .
6495	Visit a page .
6496	Get current id
6497	Switch the current window
6498	Resize screen resolution .
6499	Before step .
6500	Execute the after step .
6501	Get the request target .
6502	Parse the query string into a query string .
6503	Publish a message .
6504	Serializes the given parameters .
6505	Deserializes the given parameter .
6506	Serializes the response .
6507	Deserializes the response .
6508	Stop the job .
6509	Create handlers .
6510	Initializes the handler .
6511	Adds the parameter to the event .
6512	Updates the job .
6513	Copies the given job .
6514	Invokes the given job .
6515	Consume a message .
6516	Registers the entity manager .
6517	Set parameter type
6518	Creates a new instance from a DateTime object .
6519	Removes all fields from the message .
6520	Populate the default value .
6521	Boot the service provider .
6522	Checks if the given field is compatible .
6523	Checks if this field is compatible with another .
6524	Get the handler name .
6525	Creates a new message .
6526	Resolve the ID of the schema .
6527	Resolve the given schema .
6528	Registers a new manifest map .
6529	Find one or more schemas .
6530	Find all registered schemas .
6531	Apply the mapping to the field .
6532	Build the params for the message .
6533	Get a connection factory
6534	Renders the response .
6535	Hydrate a property
6536	Retrieves data from the database
6537	Register asset files .
6538	Initializes the panel .
6539	Transforms an iterator .
6540	Loads data from the given identifier .
6541	Fetch a single record from the database .
6542	Get the current model .
6543	Returns the current element
6544	Get the current shard key .
6545	Creates a new sheet
6546	Creates a new sheet
6547	Close the resource
6548	Returns the current sheet .
6549	Add data to the sheet
6550	Returns the current row .
6551	Send a message
6552	Lock the process .
6553	Unlock a pid file
6554	Remove line from file
6555	Stop the log .
6556	Logs a message
6557	Map the log level to the log level .
6558	Set slug .
6559	Get phone number
6560	Splits a path into an array .
6561	Get relative path
6562	Join a base path
6563	Get carrier data
6564	Loads a class .
6565	Registers the application .
6566	Make a request .
6567	Get the email link
6568	Create migration file .
6569	Unset all headers
6570	Returns the error message .
6571	Get session path .
6572	Register migrations .
6573	Recursively traversing the given path .
6574	Check if session is valid
6575	Get session cookie
6576	Stop the handler .
6577	Returns a list of countries .
6578	Parses a URL .
6579	Set the query parts .
6580	Creates a vector from the given angle .
6581	Translates a shift .
6582	Get session data .
6583	Creates a new instance with the given amount .
6584	Calculates the sum of the given number .
6585	Performs the given callback .
6586	Execute curl request
6587	Set an option
6588	Get a GET request
6589	Perform a POST request .
6590	Make a PUT request
6591	Generates the output for the given type .
6592	Checks if the configuration is valid .
6593	Parse the tags from the given type .
6594	Get the documentation for a method .
6595	Get method comment .
6596	Returns the summary of the given lines .
6597	Get the description of a line .
6598	Gets the parameters from a list of parameters .
6599	Get the return type of the return type .
6600	Unlink a file
6601	Builds the URL for the given URL .
6602	Set credentials .
6603	Make request token
6604	Make an access token .
6605	Validate request token
6606	Validate access token
6607	Get all records
6608	Get all providers .
6609	Get id by field
6610	Get records by date range
6611	Gets the first error .
6612	Get the dropdown map .
6613	Get settings by setting
6614	Validate settings .
6615	Check if a method exists
6616	Get endpoint result
6617	Maps the request parameters to the request .
6618	Parse the endpoint name .
6619	Check if a controller has a child controller
6620	Get a child controller
6621	Set the submenu menu
6622	Register custom styles .
6623	Parse an access token .
6624	Process the request .
6625	Put data into cache
6626	Process the request .
6627	Get response data
6628	Get a value from the response .
6629	Authenticate the state .
6630	Callback for authentication .
6631	Get auth url
6632	Get access token
6633	Request a profile .
6634	Parse a profile response .
6635	Bootstrap application .
6636	Initializes languages .
6637	Initializes the parameters .
6638	Initializes the container .
6639	Initializes the navigation .
6640	Get container route .
6641	Initializes the controller .
6642	Encode a hash .
6643	Decode hash ID
6644	Returns HTML code for the given status .
6645	Format a phone number .
6646	Authenticate the current request .
6647	Callback for authentication .
6648	Creates the database tables .
6649	Upload file .
6650	Unlink a file
6651	Append extra fields
6652	Add extra data
6653	Remove extra data
6654	Get request token
6655	Normalize headers .
6656	Handles the request
6657	Creates a failed response .
6658	Serializes the message .
6659	Get the endpoints for the controller .
6660	Get all controllers .
6661	Get controller method .
6662	Execute a GET request .
6663	Perform a POST request
6664	Instantiate the provider .
6665	Parse profile .
6666	Set body data
6667	Prepares the response .
6668	Output the response .
6669	Set movie parameters
6670	Get rating rating
6671	Restore rating .
6672	Restore ratings .
6673	Update the rating
6674	Registers a new rating .
6675	Add meta box .
6676	Render meta box .
6677	Returns the relative time between two dates .
6678	Get date range
6679	Convert a date string to a date .
6680	Get date time
6681	Handle the action .
6682	Set security headers
6683	Sends success response .
6684	Sends an error response
6685	Send a failed response .
6686	Show flash messages .
6687	Merge flash messages .
6688	Check if the request is valid .
6689	Set session data
6690	Check if the current user has access to the current user
6691	Add a route
6692	Adds a middleware to the stack .
6693	Sort an array by position
6694	Applies active navbar
6695	Applies the visibility to the view .
6696	Hide a method .
6697	Determine if the given method is hidden .
6698	Compare two versions .
6699	Set build .
6700	Sets the pre - release version of the request .
6701	Parse a string from a string .
6702	Determines the precedence of two arrays .
6703	Generate a GET request
6704	Generate base URL
6705	Get the writer factory .
6706	Before update event
6707	Handle the event after the event .
6708	Get the reader factory
6709	Get the request parameters .
6710	Parses an array of headers .
6711	Convert URL parameters to URL
6712	Convert string to array
6713	Get parameter value
6714	Get request chain
6715	Get the format from the request .
6716	Get request chain .
6717	Sets the parameters .
6718	Sets a parameter .
6719	Handle an authorization response
6720	Authorize the authorization .
6721	Handle the token response .
6722	Fetch access token
6723	Validates the request parameters
6724	Validates the token parameters
6725	Get access token
6726	Get movie votes
6727	Sets the votes for a movie .
6728	Set the total number of votes .
6729	Set movie rating
6730	Set the vote for a user
6731	Get post posts .
6732	Process a message .
6733	Run the request .
6734	Handle the exception .
6735	Get a middleware by name .
6736	Instantiate a provider .
6737	Uninstall the post .
6738	Renders the rating .
6739	Set custom options
6740	Add the default rating .
6741	Convert a target to another .
6742	Apply the given parameter to the request .
6743	Returns true if the given parameter is supported .
6744	Handle the request .
6745	Applies the response encoding to the response .
6746	Returns the current locale .
6747	Bootstrap application .
6748	Handle the HTTP request .
6749	Transform a collection into an array
6750	Get the transformer class .
6751	Create the transformer class name .
6752	Creates a callable for a message .
6753	Install web server .
6754	Creates a new folder .
6755	Create copy of file
6756	Creates a kernel instance .
6757	Determines if the given data type is supported .
6758	Extract the message from a string
6759	Process the service .
6760	Build cache key
6761	Find a collection by criteria
6762	Expands all nodes
6763	Append collection to collection .
6764	Handle insert operation .
6765	Handle update operation .
6766	Change the address of the address .
6767	Handle the address change .
6768	Handle the content change action .
6769	Handle the state change event .
6770	Handle state change .
6771	Determine if the discount is discount .
6772	Determine if the shipping address was changed .
6773	Determine if the tax is needed .
6774	Determine if the delivery address was changed .
6775	Update the key .
6776	Update the sale information .
6777	Update VAT data .
6778	Update VAT mode
6779	Configures the accepted sale .
6780	Updates the exchange rate .
6781	Update the locale .
6782	Set form parameters .
6783	Set header parameters
6784	Build query string .
6785	Build the query string .
6786	Build the headers .
6787	Fix the default customer group .
6788	Get customer group .
6789	Assert that the shipment is installed .
6790	Merge the given units .
6791	Create a new notification .
6792	Builds a notification .
6793	Gets the sort column name .
6794	Returns the number of tags in the table .
6795	Convert the value to an array of values
6796	Get the values of the tags .
6797	Convert a row into an array
6798	Install the cart .
6799	Install countries .
6800	Install currencies .
6801	Install taxonomies .
6802	Install tax groups .
6803	Install tax rules
6804	Install customer groups .
6805	Generate a new entity .
6806	Create a new formatter instance .
6807	Create a new instance from the context .
6808	Format a number .
6809	Format the currency .
6810	Returns an array of rates .
6811	Get the date formatter instance .
6812	Get the date time format
6813	Get the number formatter instance .
6814	Get the currency formatter .
6815	Build the CSV file .
6816	Checks if the given adjustment is equal .
6817	Builds adjustments for a given type .
6818	Writes the invoice lines to the invoice .
6819	Write shipping line
6820	Write invoice lines
6821	Compare two numbers .
6822	Get the goods number for the given rule .
6823	Returns the shipment number for the shipment .
6824	Returns the tax number for the given currency .
6825	Get payment account number .
6826	Get the account number for the given group .
6827	Check if the given action is valid .
6828	Get delivery address .
6829	Determine the order of the given assignment .
6830	Move an asset to another unit .
6831	Syncs the supplier with the given product .
6832	Get supplier order item from event .
6833	Check if a user has rights
6834	Finds a new order by supplier .
6835	Checks if the given line is allowed .
6836	Check if the cart is valid .
6837	Map object to object
6838	Map data to an array
6839	Get object by key
6840	Get data by key
6841	Get cache by key
6842	Returns an instance of the given key .
6843	Call a function .
6844	Call the given class
6845	Converts seconds to seconds
6846	Returns an array of hours .
6847	Calculates the hour of the specified hour .
6848	Returns the day of the given month .
6849	Returns a list of months .
6850	Returns an array of years
6851	Get span span .
6852	Check if a payment is valid
6853	Handle the status of the payment .
6854	Find the payment tokens .
6855	Transforms a sale .
6856	- - - - - - - - - - - - - - - - - - - - - - - - - i - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
6857	Calculate the year of the month .
6858	Returns the year of the given year .
6859	Searches for the given year .
6860	- - - - - - -
6861	Converts a value to a default value .
6862	Register the Factory .
6863	Register the notification manager .
6864	Update invoice totals .
6865	Update customer balance .
6866	Checks if the given invoice is allowed .
6867	Get the sale instance from the invoice .
6868	Builds the invoice for the given sale .
6869	Builds invoice list .
6870	Build the payment list .
6871	Initializes the payment method .
6872	Initializes the shipment point .
6873	Builds the item for the given sale item .
6874	Creates a new item .
6875	Execute a query string
6876	Returns a list of reviewed records .
6877	Build the response data .
6878	Get the revenue query .
6879	Finish the column view .
6880	Transforms an array to an address .
6881	Transforms an address .
6882	Formats a number .
6883	Get all available types
6884	Check if a notification type is valid .
6885	Get a list of postal addresses
6886	Look up a postcode metadata .
6887	Execute a GET request .
6888	Creates an exception for the given response .
6889	Returns an array of assignments
6890	Removes an assignment .
6891	Creates an assignment for a given quantity .
6892	Resolves the quantity of a sale item .
6893	Sort assignments .
6894	Compare stock units .
6895	Compares the stock unit of the given stock .
6896	Set a value
6897	Bind a value to a key
6898	Deletes data from the collection .
6899	Regenerates the session .
6900	Close session .
6901	Destroy session data
6902	Returns the URL of the current page .
6903	Renders the page .
6904	Run the wildcard .
6905	Remove a recipient .
6906	Add extra recipient
6907	Remove extra recipient .
6908	Add a copy of this recipient .
6909	Remove a copy of this recipient .
6910	Add a new copy of this recipient
6911	Remove a copy of this recipient .
6912	Add invoice .
6913	Add a new shipment .
6914	Remove a shipment .
6915	Add an attachment .
6916	Remove attachment .
6917	Returns true if the message is empty .
6918	Returns true if the model has adjustments .
6919	Get all adjustments .
6920	Validates an identity .
6921	Get the tax for a tax group .
6922	Set a tax group .
6923	Builds the key for the tax group .
6924	Finds and returns a single instance with the given value .
6925	Finds the matching criteria for the given country .
6926	Determine if a resource is changed .
6927	Add a notification .
6928	Persist invoice .
6929	Checks if the shipment is valid .
6930	Purges a shipment .
6931	Updates the shipment invoice .
6932	Determine if the invoice is shipped .
6933	Transforms an asset .
6934	Returns the operator for the given sale .
6935	Format a message .
6936	Finds the units of the given subject .
6937	Check if the given stock contains a given stock .
6938	Searches for the given stock .
6939	Push an item to the list .
6940	Remove an item from the list .
6941	Get purchase cost .
6942	Schedule subject change event .
6943	Returns the localized date for the given day .
6944	Register a class instance .
6945	Watch the payment .
6946	Get the query builder for a regular expression .
6947	Builds the query builder for the expiry query .
6948	Sets the order parameters for the query .
6949	Get customer by country
6950	Get query by country
6951	Get base query builder .
6952	Checks if a sale item is covered .
6953	Resolve price .
6954	Returns the grid for the given country .
6955	Get the tax rates .
6956	Calculates the payment amount .
6957	Renders a csv tag
6958	Set a redirect to the page .
6959	Update expiration time .
6960	Creates an instance of DateTime object .
6961	Creates a Julian Year instance .
6962	Creates a new instance with the given year .
6963	Convert to DateTime object
6964	Returns the year .
6965	Check if the identity is empty .
6966	Clear identity .
6967	Calculates the gross lines .
6968	Calculates the costs for the given line .
6969	Calculates the discount for the given line .
6970	Calculates the shipment line .
6971	Sync the result of a single line .
6972	Build an entity .
6973	Builds the value of a field .
6974	Builds the value of a property .
6975	Throws an exception if the operation is not allowed .
6976	Schedule the sale event .
6977	Register a gateway .
6978	Normalizes an attachment .
6979	Get the client
6980	Finds an address by expression .
6981	Create a renderer instance .
6982	Validate input data
6983	Performs validation errors .
6984	Extract the input from the request .
6985	Creates a context context .
6986	Create default context .
6987	Fill the customer .
6988	Finalizes the context .
6989	Adds a currency .
6990	Translate the api path to the api
6991	Returns the locale for the given locale .
6992	Get the cache key for the given user .
6993	Get the cache key for the given user .
6994	Stores the uploaded file .
6995	Parses and returns an array of options
6996	Parses an array of prices
6997	Get the list of viewers for this model .
6998	Prepare a related record .
6999	Returns the CSS classes for the container .
7000	Set the url
7001	Set method name
7002	Set action .
7003	Matches a route against a route .
7004	Format the given format .
7005	Format the date .
7006	Formats a day string
7007	Formats a date .
7008	Format a day string
7009	Formats a string
7010	Format the number of days .
7011	Formats the given string
7012	Formats a month .
7013	Format the month .
7014	Format the number of months .
7015	Format the year .
7016	Formats a string
7017	Format the given string .
7018	Formats a string
7019	Formats a string
7020	Format the minimum value
7021	Formats a string
7022	Formats the given time .
7023	Format the timezone .
7024	Get the formatter instance .
7025	Add a remember me cookie
7026	Check if the user cookie is valid .
7027	Log a user .
7028	Get default implementation .
7029	Returns the messages for the given quantity .
7030	Returns an array representation of this resource .
7031	Finds the matching shipment item .
7032	Run the migration .
7033	Get last migration
7034	Save migrations .
7035	Create migration table .
7036	Drop migration table .
7037	Compute dependency dependencies .
7038	Get deliveries .
7039	Returns the shipment of the shipment .
7040	Determines if the given subject is different .
7041	Sets the state of the payment state .
7042	Get the scaffold configuration .
7043	Handle the meta table names .
7044	Get meta table names .
7045	Get column names from table
7046	Build customer data .
7047	Build address data
7048	Format a phone number .
7049	Builds the line lines .
7050	Build discount lines .
7051	Adds a valid phone number .
7052	Logout the current user .
7053	Returns the instance of the current instance .
7054	Generate message header .
7055	Calculates the offset of the date .
7056	Returns the day of the given year .
7057	Check if data exists
7058	Get stock adjustment .
7059	Add a class
7060	Remove a class
7061	Set CSS classes
7062	Update the customer balance .
7063	Get accepted payment states .
7064	Check if payment method is supported
7065	Get auth actions
7066	Get user rights
7067	Get the resource from the event .
7068	Get all units .
7069	Check if a unit is valid .
7070	Calculates the given value .
7071	Update a ticket .
7072	Get an attachment from an event .
7073	Determine if the given state is available .
7074	Add a sale details to the invoice .
7075	Add the item details
7076	Add discount details
7077	Returns an array of document types for a document .
7078	Checks if a document type is supported .
7079	Get all available types
7080	Preprocess the original copy of the product .
7081	Sets the original copy of the product .
7082	Sets the URI .
7083	Set method name
7084	Delete a cookie
7085	Sets the default options for the query builder .
7086	Set the default label for the column .
7087	Loads a password from an access key
7088	Set error action
7089	Set default headers
7090	Remove default headers
7091	Match the request .
7092	Add a route .
7093	Checks if invoice is valid .
7094	Loads a sale item .
7095	Throws an exception if the item is not empty .
7096	Get a block .
7097	Normalizes a stock subject .
7098	Find stock units .
7099	Calculates the comparison between two units .
7100	Compare two units .
7101	Get the classes for the given type .
7102	Generate the site URL .
7103	Get query string
7104	Sanitize a title
7105	Parse a text section
7106	Calculates the total amount of the given state .
7107	Round the given amount .
7108	Returns the precision of the given currency .
7109	Get the rounding increment increment .
7110	Get the ticket from the event .
7111	Check if the given reason is valid .
7112	Determine if the user is authorized .
7113	Checks if the given user is allowed .
7114	Determine if the given mode is greater than .
7115	Get the query builder .
7116	Watch the payment .
7117	Get the query by subject .
7118	Returns the available stock query for the subject .
7119	Returns the minimum date for the subject .
7120	Returns the query builder for the given subject .
7121	Creates a query builder for the subject .
7122	Apply the language to the browser .
7123	Update a ticket .
7124	Get Ticket Message from Event
7125	Compares two addresses .
7126	Copies the given address .
7127	Get details about the address
7128	Add ranges .
7129	Returns true if the user has a notification .
7130	Get notifications .
7131	Updates the amount of payments .
7132	Update the exchange rate .
7133	Get supplier order order from event .
7134	Finds and returns a new line .
7135	Returns the amount of the product .
7136	Merges the margin .
7137	Read number from file
7138	Get the constraints for a step .
7139	Get the groups for a step .
7140	Handle the quantity change .
7141	Registers the factories .
7142	Registers the actions .
7143	Sort order assignments .
7144	Removes all comments from the blog .
7145	Add custom profile fields
7146	Save custom profile settings
7147	Get user settings .
7148	Calculates the total amount .
7149	Calculates the adjustment amount .
7150	Clears the provider .
7151	Checks whether the subject identity is equal to the given identity .
7152	Copy the identity from the identity provider .
7153	Adds a rule to the list
7154	Checks if the given role is allowed .
7155	Determines if the given date is null or not .
7156	Set subject data
7157	Set stock state .
7158	Compile the query string .
7159	Compiles the keyboard .
7160	Builds the sale view .
7161	Initializes the view .
7162	Build the tax view views .
7163	Builds the line lines for a sale .
7164	Builds the discounts lines .
7165	Builds the discount line .
7166	Build shipping line .
7167	Get the options for the options .
7168	Updates a tab .
7169	Resolve tax rule .
7170	Resolve target country .
7171	Resolve TaxRuleRule .
7172	Resolve the target country .
7173	Resolve the customer address .
7174	Get the value of a path .
7175	Sets a value in an array .
7176	Extract paths from array
7177	Splits an array by key .
7178	Check if a type is valid
7179	Get type .
7180	Get the types of the type
7181	Generate a payment .
7182	Generate a key
7183	Updates the exchange rate .
7184	Returns the list of available products for the given country .
7185	Builds a new instance from the given stock unit .
7186	Returns the combination with the given quantity .
7187	Get an asset by id
7188	Builds the combinations for the given quantity .
7189	Copies a model adjustment .
7190	Copies a sale attachment .
7191	Copy a sale notification .
7192	Copies a sale item .
7193	Copies the given properties .
7194	Get thumbnail file .
7195	Prepares the order .
7196	Handle the release change .
7197	Sets the first order of the given order .
7198	Fix the order of the customer .
7199	Assigns a sale item .
7200	Detach a sale item .
7201	Returns the unit unit .
7202	Gets the gross total value
7203	Adds a discount .
7204	Returns the discount value .
7205	Get the base base .
7206	Add a new tax adjustment .
7207	Finalizes the tax .
7208	Round the currency .
7209	Creates an instance from a total amount .
7210	Generate the URL for the given URL .
7211	Validates a login token
7212	Generate a login token .
7213	Configure the subject .
7214	Writes a credit card .
7215	Fix the default tax group .
7216	Get tax group from event .
7217	Get the list of documentation classes .
7218	Create migration .
7219	Updates migrations .
7220	Create a JSON response .
7221	Creates an order label .
7222	Clear the shipment .
7223	Clear a parcel .
7224	Execute the curl request
7225	Get the content of the response .
7226	Get info about curl
7227	Set the url
7228	Parse header .
7229	Create a new HTTP request
7230	Calculate the margin .
7231	Loads the result from the result array .
7232	Create a new price from the given currency .
7233	Asserts that the cart is valid .
7234	Asserts that the cart item is valid .
7235	Asserts that the given item is an item .
7236	Returns the country code for the given phone number .
7237	Fix the default shipping address .
7238	Fix default delivery address .
7239	Get the customer address from an event .
7240	Resolve the object class .
7241	Get default classes .
7242	Validates the request .
7243	Display description of description
7244	Load options .
7245	Builds the sale item .
7246	Checks if the given subject is a valid subject .
7247	Purges a shipment .
7248	Dispatch order event .
7249	Validates shipping method .
7250	Validates the delivery address .
7251	Validates the identity .
7252	Validates the expiration term for a sale .
7253	Returns the shipping method for the given event .
7254	Determine if the given state is a valid state .
7255	Check if the user is logged in .
7256	Get user by key
7257	Checks if the current user is allowed .
7258	Merges the items of a sale item .
7259	Calculates the cost of the sale .
7260	Create a new percent adjustment .
7261	Asserts the given adjustment type .
7262	Assert that the given adjustment mode is valid .
7263	Convert a sale to a given sale .
7264	Validates a sale item .
7265	Returns a collection of records from the database .
7266	Find model by id
7267	Returns true if the model has a given record .
7268	Returns a many - to - many relationship .
7269	Gets the belongs to a relation .
7270	Save model to database
7271	Delete a record
7272	Delete a WHERE clause
7273	Get table name
7274	Decode a value
7275	Encode a column
7276	Get table columns
7277	Get the current time .
7278	Get input input .
7279	Get file path
7280	Validate input rules
7281	Creates a new HTTP request .
7282	Get current request
7283	Updates the cart for the cart .
7284	Set response status
7285	Initializes the invoice .
7286	Get invoice invices
7287	Returns the invoice for the invoice .
7288	Set column labels .
7289	Watch the order .
7290	Check if the given mode is valid .
7291	Get the query from the current date .
7292	Get users by meta key
7293	Save transit posts .
7294	Get the post s post .
7295	Send a mail to the mail .
7296	Gets the email address from the email address .
7297	Modifies the next group of the message .
7298	Appends a signature to the message .
7299	Send a message to the sender .
7300	Loads a class
7301	Returns the targets for a sale .
7302	Get all available transition transitions .
7303	Update the parent .
7304	Update customer from parent .
7305	Schedule the parent change event .
7306	Get Customer from Event
7307	Creates a new calendar instance .
7308	Creates a DateTime object
7309	Returns a new instance of the current time .
7310	Returns the solr date for the given year .
7311	Returns the solr date for the given year .
7312	Calculate the year of the month .
7313	Sets the date of this date .
7314	Sets the time .
7315	Set date time
7316	Sets the timezone .
7317	Returns the date of this day .
7318	Convert this date to another day .
7319	Add a new date to the day
7320	Returns the difference between two dates .
7321	Returns the day of this month .
7322	Calculate the side of the distance
7323	Checks if the given date is valid .
7324	Calculate the component of a component
7325	Determine if the cache can be cached .
7326	Configure the taxonomies .
7327	Configure the identity mapping .
7328	Configures the vat subject .
7329	Configures the payment subject .
7330	Configure the subject mapping .
7331	Configure stockMapper .
7332	Configure stockMappings .
7333	Get stock entity manager .
7334	Get the subject mapper .
7335	Adds the mapping to the mapping .
7336	Get the list of stock subjects .
7337	Create a new Logger
7338	Create a new event .
7339	Send a message .
7340	Send an attachment .
7341	Asserts that the given resource is deleted .
7342	Schedule the order content change .
7343	Initializes the stock .
7344	Checks if the shipment is allowed .
7345	Modifies the submitted value .
7346	Calculates the quantity of a delivery item .
7347	Calculates the quantity of delivery items .
7348	Watch the delivery .
7349	Check if a shipment has a notification .
7350	Initializes the payment .
7351	Check if payment is paid
7352	Calculates the amount of remaining payments .
7353	Get a provider by name .
7354	Get the URL for a subject .
7355	Checks if the given size is valid .
7356	Check if a format is valid .
7357	Check if payment state is valid .
7358	Load prices map
7359	Get the default price map
7360	Returns the stock of the given item .
7361	Update the weight of the sale .
7362	Updates the total amount of the sale .
7363	Updates the payment amount .
7364	Update invoice total .
7365	Resolve the payment date .
7366	Checks if the given product is valid .
7367	Checks if the invoice is valid .
7368	Checks if the shipment is valid .
7369	Update stock price .
7370	Set translations .
7371	Edit profile form
7372	Update a profile .
7373	Update the password .
7374	Check if a key exists
7375	Clear the queue .
7376	Get a value from the bag .
7377	Returns the value of a given key .
7378	Fetches a boolean value .
7379	Fetches a value from the cache .
7380	Fetch a value from the database .
7381	Get route .
7382	Converts an associative array into an associative array .
7383	Converts an array of values into an associative array .
7384	Generate a string
7385	Upload a file
7386	Moves a file to another .
7387	Generate thumbnail from file .
7388	Returns the value of the given key .
7389	Get the response for the given package .
7390	Sets the response .
7391	Assigns the input to the block .
7392	Serializes the object .
7393	Unserializes the object .
7394	Replace all values in the given input .
7395	Get property by name
7396	Execute a list of addresses .
7397	Add a header
7398	Set status code
7399	Redirect to a page
7400	Get error data
7401	Get all errors
7402	Get config value
7403	Reload configuration file
7404	Convert a file to an array
7405	Assigns the input into the container .
7406	Replace the input with the given values .
7407	Serializes the object .
7408	Merge the input into an array .
7409	Get a value from the container .
7410	Sets a value in the container .
7411	Combines the collection with the given keys .
7412	Called when a file is modified .
7413	Get the response .
7414	Read data from file
7415	Get error message .
7416	Get max file size
7417	Sets the view .
7418	Set JSON content .
7419	Set the redirect .
7420	Get number of urls
7421	Initializes the product gallery .
7422	Render alert block
7423	Register widget widget .
7424	Render the menu .
7425	Sets the source extension .
7426	Check if the source is valid .
7427	Render embed .
7428	Render the object .
7429	Displays the login form .
7430	Add a region .
7431	Get the mime type
7432	Guess the mime type .
7433	Export the given defender .
7434	Get directory contents
7435	Scan files .
7436	Prepare the product media .
7437	Handle fatal error
7438	Render exception .
7439	Initializes the product gallery .
7440	Reload a module
7441	Checks if the given action is granted .
7442	Show a group .
7443	Creates a new group .
7444	Creates a new group .
7445	Displays a form to edit a group .
7446	Update a group .
7447	Decrypts data
7448	Encrypt data
7449	Executes a command .
7450	Use the queue queue .
7451	Bootstrap menu .
7452	Renders the trail .
7453	Renders the trail .
7454	Get the first post .
7455	Get taxonomies .
7456	Ensure the directory exists .
7457	Persist all entities .
7458	Set the background .
7459	Set the color .
7460	Lookup a user by its hash .
7461	Sends a password reset message .
7462	Get the content of a route .
7463	Render template file
7464	Creates a new password .
7465	Create a new file from an uploaded file .
7466	Move uploaded file .
7467	Add a color
7468	Converts a string to a string
7469	Parse a color string
7470	Creates a new user .
7471	Creates a new user .
7472	Reset user password .
7473	Edit a user .
7474	Update a user .
7475	Configure the email helper .
7476	Get entities by identifier .
7477	Download file .
7478	Returns the form for the given entity .
7479	Get the contents of the file .
7480	Get mime type
7481	Sets the content of the file .
7482	Change encoding .
7483	Returns true if the string starts with the given string .
7484	Returns true if the string ends with the given string .
7485	Returns the character at the given index .
7486	Returns the index of the given string .
7487	Finds the last occurrence of the given string .
7488	Appends a string to the buffer .
7489	Inserts a string into a string .
7490	Reverse the string
7491	Sets the length of the string .
7492	Trims the string .
7493	Removes the left of the string .
7494	Trims the string with the given characters .
7495	Convert string to string
7496	Create a Message from a template entity .
7497	Create a message from a template file .
7498	Creates a message from the email .
7499	Renders the given template .
7500	Performs a JSON API request .
7501	Clear cache .
7502	Create a new group .
7503	Output a template .
7504	Get translated text .
7505	Assigns a namespace .
7506	Sets the document .
7507	Returns the token string .
7508	Sets the whitespace .
7509	Sets the identifiers .
7510	Add an error
7511	Parses the line .
7512	Get the next token .
7513	Parse the next token .
7514	Parses a string to the next token .
7515	Parses the next token .
7516	Checks if a token is expected .
7517	Parse text .
7518	Parse a comment
7519	Parse the document type .
7520	Parse css data
7521	Parses the text
7522	Parse a style tag
7523	Parse the tag .
7524	Parse the current tag
7525	Executes a SELECT query
7526	Parse a HTML file
7527	Parses a node .
7528	Minify JavaScript .
7529	Dumps the location .
7530	Convert attributes to string
7531	Returns a string representation of this tag .
7532	Returns the HTML text .
7533	Set inner text
7534	Returns plain text as plain text .
7535	Deletes this node .
7536	Detach parent node
7537	Clears all children .
7538	Get root node
7539	Check if the given tag is parent .
7540	Returns the index of this node .
7541	Sets the index .
7542	Returns the type of this node .
7543	Returns the sibling of this node .
7544	Get next sibling .
7545	Get the namespace
7546	Set the namespace
7547	Get the encoding of the node .
7548	Returns the number of children .
7549	Delete a child .
7550	Wraps the inner inner of this node .
7551	Check if the attribute has an attribute .
7552	Get children by callback
7553	Match tags .
7554	Match conditions .
7555	Match conditions .
7556	Get children by attribute
7557	Get children by tag
7558	Execute a query
7559	Get a select query
7560	Parses the next chunk .
7561	Parse sibling .
7562	Parse a pipe .
7563	Parses a token .
7564	Parse the comparison .
7565	Parse callback .
7566	Parse a single condition .
7567	Parse the list of adjacent nodes .
7568	Parse the current query
7569	Get Job API
7570	Get application API service
7571	Gets a GET request .
7572	Perform a POST request
7573	Validates required fields
7574	Checks if the given post is required .
7575	Get custom fields
7576	Configure the data
7577	Set file field value
7578	Configure the data
7579	Configure default data
7580	Verify if the URL is valid .
7581	Verify that the data is valid
7582	Verify required data
7583	Extract info from curl request
7584	Extract the response from the curl response .
7585	Returns a list of all the endpoint registered in the registry .
7586	Set the destination path .
7587	Extract the file name from the response .
7588	Sets the file name .
7589	Configure the request type
7590	Render a collection .
7591	Render a badge
7592	Set form class name
7593	Open form tag
7594	Renders a label .
7595	Renders the label .
7596	Render help block
7597	Renders a font .
7598	Renders a glyphicon .
7599	Render alert message .
7600	Renders a button group .
7601	Render buttons .
7602	Render the error message .
7603	Render a form element
7604	Renders an addon .
7605	Sets the translator .
7606	Renders a dropdown element .
7607	Renders a dropdown .
7608	Renders the dropdown list .
7609	Process the request handler .
7610	Sign the user .
7611	Creates a new user .
7612	Returns true if the user is super admin .
7613	Sends the password reset password .
7614	Update profile .
7615	Encode a bearer token .
7616	Authenticate a user
7617	Send API request
7618	Get account by name
7619	Set the permission set .
7620	Create a signed query string
7621	Checks if a request has a permission .
7622	Sign the request URL .
7623	Sign request headers
7624	Perform a request .
7625	Check if a blob exists .
7626	Check if a container exists
7627	Creates a new container .
7628	Gets a blob of a container .
7629	Set the container s ACL .
7630	Get container metadata .
7631	Set metadata metadata .
7632	Put a blob to a blob .
7633	Put a block to the server .
7634	Put block list
7635	Retrieves a block list of blocks .
7636	Get a blob instance .
7637	Get blob properties .
7638	Generates a shared URL for a shared resource .
7639	Create resource name .
7640	Check if a container name is valid .
7641	Get the error message .
7642	Get the base URL .
7643	Parse metadata headers .
7644	Parse metadata element .
7645	Get storage client .
7646	Get file name .
7647	Opens a file .
7648	Close the stream .
7649	Flush the stream .
7650	Unlink a file .
7651	Rename a file .
7652	Get the URL of a file .
7653	Opens a directory .
7654	Reads a directory recursively
7655	Add a new address
7656	Add a reply to this address
7657	Send the message
7658	Close the SMTP connection
7659	Appends an address to an address
7660	Format an address
7661	Sets the word wrapping .
7662	Create message body
7663	Add an attachment
7664	Attaches the attachment to the attachment .
7665	Encode a file
7666	Encode a string
7667	Check if image is inline
7668	Formats RFC 6 .
7669	Get server variable
7670	Get server hostname
7671	Initializes the archive
7672	Loads a sub - template from a sub - file
7673	Displays the store store
7674	Loads a store
7675	Returns the contents of a file
7676	Loads data from a file
7677	Search for files in a string
7678	Checks if the stylesheet has been set .
7679	Merge field values
7680	Deletes a slide .
7681	Prepare cell cells
7682	Determines if the file is an extension
7683	Returns the main main extension of this extension
7684	Deletes all elements of the given tag
7685	Delete column elements
7686	Parse a column number
7687	Generate a cell reference
7688	Opens a rel to a file
7689	Opens an XML file .
7690	Open chart info
7691	Opens the image collector
7692	Converts an XML string to an XML element
7693	Checks if a file exists
7694	Gets the list of drawings for the specified Excel file .
7695	Initializes the slide list
7696	Clean up the powerpoint
7697	Searches for a particular slide
7698	Determine if the given slide is a slide .
7699	Clean up a word
7700	Initializes the message footer
7701	Open a page
7702	Open a draw tag
7703	Open chart chart
7704	Open Excel Document
7705	Get attribute position
7706	Apply a diff from the current position
7707	Applies a diff to the current position
7708	Replaces the source text with the given string .
7709	Returns the source of the source file
7710	Update the parent
7711	Delete the contents of this tag
7712	Finds the name of the current element
7713	Find the end tag
7714	Switch the current tag to the current position
7715	Finds the start of a tag
7716	Finds the first element of the given tag .
7717	Get file state
7718	Prepare a convolution
7719	Convert string to string
7720	Update an associative array
7721	Lists all files .
7722	Generate an error message
7723	Convert object to array
7724	Sets a quick reply
7725	Add a button .
7726	Set post button
7727	Add login button
7728	Sets the text replacements .
7729	Generate a quick reply
7730	Make API call
7731	Returns true if the given data is supported .
7732	Normalizes the given data .
7733	Handle the response .
7734	Check if a method is a Hydration operation .
7735	Handles the mapping of the route .
7736	Returns the properties of a class .
7737	Returns the annotation for a given element .
7738	Serializes an entity .
7739	Deserializes an entity .
7740	Validate an entity
7741	Add operation definition .
7742	Returns true if the operation is supported .
7743	Sets the value of an entity .
7744	Get the value of the entity .
7745	Find getter method
7746	Find setter method
7747	Determine if the given class name is an instance of this class .
7748	Check if a method is accessible .
7749	Get all metadata for this driver .
7750	Get the metadata for a given class .
7751	Loads the metadata for the given class .
7752	Complete class metadata .
7753	Serializes the given data .
7754	Deserializes the given data .
7755	Deserializes an entity .
7756	Set a property value
7757	Process data .
7758	Load mapping configuration .
7759	Determine the mapping configuration for a bundle .
7760	Detect metadata driver .
7761	Validate mapping configuration .
7762	Returns the context for the given descriptor .
7763	Get the documentation document .
7764	Returns an array of operations .
7765	Generate the document properties .
7766	Returns the context for a given type .
7767	Loads the metadata for a given class name .
7768	Validate input data
7769	Checks if the model is valid .
7770	Returns an array of messages .
7771	Fetches the error message .
7772	Replace the message format .
7773	Validates a rule against the given rule .
7774	Check if a rule is skipped .
7775	Handle error validation .
7776	Get the arguments for a rule .
7777	Extract field aliases .
7778	Extract input data from array
7779	Extract rules from array
7780	Validates a unique value
7781	Get message by key
7782	Initialize timezone
7783	Register timezone .
7784	Add a parser
7785	Sets the statement class .
7786	Creates a Statement object .
7787	Sets the account class .
7788	Sets the controller class .
7789	Sets the transaction class .
7790	Set the opening balance class .
7791	Set the closing balance class .
7792	Create an object
7793	Parse the given text .
7794	Get account number
7795	Parse the given text .
7796	Get account number
7797	Returns the number of statements for the given text .
7798	Parse text .
7799	Get line from text
7800	Splits the statements into a string .
7801	Splits an array of transactions .
7802	Parse a statement .
7803	Creates a statement body .
7804	Parse a balance .
7805	Calculates the opening balance .
7806	Returns the closest date for the given date .
7807	Calculates the closing balance .
7808	Sets the number of retries .
7809	Get debug report
7810	Get the package version .
7811	Filter an array of keys
7812	Convert a date to a string
7813	Converts a date string into a date string .
7814	Process the request
7815	Upload image file
7816	Set event .
7817	Set the secret .
7818	Create a callback
7819	Commits the source file .
7820	Store a pipeline .
7821	Update a pipeline .
7822	Refresh all pipelines .
7823	Update a workflow .
7824	Get the width of the current page .
7825	Returns the total width of the buffer .
7826	Returns the longest length of the stream .
7827	Returns a string for a pipe .
7828	Get spaces by word
7829	Returns the left border with the given border .
7830	Returns the right border with the right border
7831	Returns the core core core .
7832	Returns the spaces of the current page .
7833	Generate the pipe .
7834	Get a list of all pipes .
7835	Get workspace namespace .
7836	Delete all files from a workflow .
7837	Register the SMS gateway .
7838	Create a contact
7839	Get contact information
7840	Add a phone number
7841	Remove a phone number
7842	Handle a job .
7843	Call the given method .
7844	Get device .
7845	Send a message .
7846	Cancel a message
7847	Get information about a message .
7848	Checks if the configuration is valid .
7849	Dispatch the given command .
7850	Marshall a command object .
7851	Get the value of a parameter .
7852	Dispatch a workflow .
7853	Resolve the request .
7854	Deletes all files .
7855	Boot the application .
7856	Publish configuration .
7857	Register the dependencies .
7858	Register the pipeline repository .
7859	Register the workflow runners .
7860	Register commands .
7861	Draws a workflow
7862	Set the pipelines for a workflow
7863	Draw a character for a character .
7864	Draws the start of the pipeline .
7865	Draws a row in the table .
7866	Draw the border border
7867	Draws the border of the rectangle .
7868	Replace UTF - 8 characters in a string .
7869	Draw core core .
7870	Draw the bottom border
7871	Draws all pipes .
7872	Send a message
7873	Get credit card
7874	Checks if the configuration is valid .
7875	Resolve repository .
7876	Generate the request .
7877	Setup the logger .
7878	Register log files .
7879	Register log viewer .
7880	Register log viewer .
7881	Read a log file .
7882	Show log page
7883	Delete a log .
7884	Show log view .
7885	Get log data .
7886	Get the list of all log levels .
7887	Parses the log .
7888	Get all logs .
7889	Make a log file .
7890	Get default project hook .
7891	Trigger the deployment .
7892	Set a property value
7893	Add a property .
7894	Parse a data array into an array
7895	Register a custom provider .
7896	Create a new uploader instance .
7897	Create a provider instance .
7898	Creates a dynamic source from a provider .
7899	Check if a provider alias exists .
7900	Upload a file .
7901	Runs a file .
7902	Get full file name .
7903	Determine the upload destination .
7904	Renders the sides .
7905	Renders the toggle button .
7906	Renders a menu item .
7907	Get label .
7908	Renders the dropdown list .
7909	Render search input
7910	Initializes the widget .
7911	Registers the plugin .
7912	Render the toggle button .
7913	Render the input .
7914	Renders the label .
7915	Registers client scripts .
7916	Initializes the options
7917	Renders the input .
7918	Generates a label group .
7919	Render input input
7920	Opens a zip file
7921	Extracts the filename from the zip archive .
7922	Check if path is valid
7923	Extract filename from file
7924	Extract files from a zip file
7925	Register a plugin .
7926	Fire an event .
7927	Register a namespace .
7928	Unregister a namespace
7929	Sets the default group group .
7930	Sets the collection .
7931	Append collection to collection
7932	Load data from array
7933	Load data from array
7934	Check if the given name exists .
7935	Send a message to the server .
7936	Get a list of all available products
7937	Create a backup file
7938	Get a backup file for a given IP address .
7939	Delete a backup block .
7940	Sets a backup block .
7941	Set boot device device
7942	Add secondary domains
7943	Delete secondary domains
7944	Get IP range
7945	Delete a notification .
7946	Get line properties
7947	Reset a line of lines
7948	Method to get the ppp login page
7949	Update domain properties .
7950	Order backend backend
7951	Order cache rule
7952	Set the reverse properties of an IP address .
7953	Get spam .
7954	Get spam stats .
7955	Unblocks a block .
7956	Returns an array of billing services .
7957	Get all properties
7958	Checks if the current configuration is enabled .
7959	Returns the number of pairs in the collection .
7960	Determine if the current user is enabled .
7961	Checks if the current configuration is valid .
7962	Determine if the capabilities can be changed .
7963	Set IP notifications .
7964	Get notification notification .
7965	Method to get a list of voice conversations .
7966	Get the details of the billing account .
7967	Set the properties of a billing account .
7968	Gets a list of all the faxes .
7969	Gets a list of voice consumers .
7970	Delete blacklist list
7971	Get incoming incoming message
7972	Delete an incoming incoming message .
7973	Purchase a purchase .
7974	Get sender sender
7975	Create sender .
7976	Add two secondary domains .
7977	Delete secondary domains .
7978	Set SSH key
7979	Get session properties
7980	Get session files
7981	Get session properties .
7982	Add a delete task
7983	Add a restore task
7984	Get current monitoring .
7985	Get available options
7986	Get all models .
7987	Set snapshot properties .
7988	Delete a snapshot .
7989	Get template properties
7990	Get a list of PPSP services .
7991	Set SSH key
7992	Sets the password for a cloud .
7993	Get disk usage usage
7994	Get a list of dedicated servers
7995	Get the list of vps .
7996	Validate hash context
7997	Returns the specification string .
7998	Get OpenSSL encryption options
7999	Identify target name .
8000	Calculate the response response .
8001	Calculates the response data .
8002	Resolve input encoding
8003	Creates a new exception instance .
8004	Creates a new instance of the given string .
8005	Calculates the payload offset .
8006	Create a new exception for the given reason code .
8007	Validates the given algorithm .
8008	Creates a new instance of the given string .
8009	Processes raw key
8010	Expand a string to a bit integer .
8011	Set the parity bit bit .
8012	Creates a new challenge message .
8013	Get basic options .
8014	Prepares a command .
8015	Execute a command
8016	Close the queue .
8017	Check if file exists
8018	Get the URL of an object .
8019	Get the S3 client
8020	Sets the request content .
8021	Send a POST request .
8022	Add a field
8023	Synchronize a closure .
8024	Destroy the semaphore .
8025	Add a free process .
8026	Remove a process .
8027	Kill all processes .
8028	Register a free process .
8029	Register a free process .
8030	Get the free process .
8031	Get process details
8032	Validates an array of dates .
8033	Load a view .
8034	Build the attributes from LDAP .
8035	Check if a group is a member of a group .
8036	Converts a number to a number .
8037	Transforms a number to a number .
8038	Find an entry by its identifier
8039	Build the event data .
8040	Build an array of dates from an array .
8041	Format calendar events .
8042	Calculate the event length
8043	Processes the process .
8044	Set process title
8045	Selects a list of available sockets
8046	Returns true if the socket is available .
8047	Send data to the socket
8048	Reads data from socket
8049	Creates a calendar event .
8050	Get calendar event .
8051	Get all calendar events .
8052	Get all events as an array
8053	Delete calendar event
8054	Update calendar event .
8055	Get random number
8056	Set the child title .
8057	Set the parent title .
8058	Sets the WorkerPool size .
8059	Set the semaphore .
8060	Create worker process .
8061	Run the worker process .
8062	Destroy the worker pool .
8063	Receive a worker .
8064	Get all workers .
8065	Get the next worker .
8066	Collect all workers .
8067	Run the worker .
8068	Connect to the LDAP server
8069	Binds to LDAP server
8070	Get domain controller strategy
8071	Get user by credentials
8072	Validate credentials .
8073	Perform a POST request .
8074	Delete a endpoint
8075	Handle the response .
8076	Perform a POST request .
8077	Delete an endpoint
8078	Builds the URI .
8079	Get error messages .
8080	Returns the console reports .
8081	Report error message
8082	Report a message .
8083	Get form errors
8084	Clear error messages
8085	Add a new error to the list
8086	Clean the console .
8087	Get database connection
8088	Generate a user password
8089	Encode a number
8090	Generate a unique id
8091	Determine if the given hash is valid .
8092	Decode a number
8093	Get the value of a key .
8094	Sets the value of a key .
8095	Add a cookie
8096	Destroy cookie .
8097	Validate the request
8098	Convert data to array
8099	Validates all validation rules
8100	Validates the given index
8101	Get a single row from the database .
8102	Get a PDO statement
8103	Builds a SQL query
8104	Execute a SQL query
8105	Runs a SQL statement .
8106	Get email body
8107	Get template variables .
8108	Get the user s review .
8109	Get field value
8110	Starts a list of subsite instances .
8111	Queue the next job .
8112	Merges the content of the content of the given group .
8113	Get the review date .
8114	Add a review .
8115	Determine the next review date .
8116	Check if the current user can be reviewed .
8117	Sets the value of the record before saving .
8118	Creates a review form
8119	Submit a review .
8120	Check if the review can be submitted .
8121	Get review form
8122	Get review form
8123	Save review .
8124	Find a record by ID
8125	Returns the schema for the request .
8126	Get a JSON response
8127	Find user by email address
8128	Finds a password reset token .
8129	Lists the profile .
8130	Add suggestions .
8131	Remove node filter .
8132	Get source context
8133	Set source context
8134	Renders a block .
8135	Displays a block .
8136	Sets the cache .
8137	Gets the cache file name .
8138	Get template class name .
8139	Load a template .
8140	Create a template
8141	Checks if the template is fresh .
8142	Clears the cache files .
8143	Get the lexer instance .
8144	Tokenize a string
8145	Get the parser instance .
8146	Parses the given stream .
8147	Get the compiler .
8148	Compiles a node .
8149	Compile a template .
8150	Initializes the runtime .
8151	Check if a given class exists .
8152	Get an extension by name
8153	Removes an extension .
8154	Add a function .
8155	Adds a global variable .
8156	Add a path to the template
8157	Prepend a path to a directory .
8158	Register a new user .
8159	Get the status of the user .
8160	Confirm user .
8161	Block the user .
8162	Unblock the user .
8163	Register Twig .
8164	Render a template
8165	Compiles a node .
8166	Writes a string to the output .
8167	Add indentation .
8168	Remove indentation .
8169	Register autoloader .
8170	Recalculates the password for the user .
8171	Render a template string
8172	Get excerpt excerpt
8173	Add a callable
8174	Checks if a loop condition is valid .
8175	Optimizes the output node .
8176	Recursively restore password .
8177	Send a welcome message .
8178	Send a mail .
8179	Login to user
8180	Sets the default strategy .
8181	Get default strategy .
8182	Get duration .
8183	Get memory usage
8184	Get the memory memory usage
8185	Get parent template .
8186	Displays a template .
8187	Check if a block exists .
8188	Get all block names .
8189	Returns the context for the given variable .
8190	Register a new user .
8191	Confirm user confirmation .
8192	Guess the given name .
8193	Get a twig file
8194	Render a template
8195	Check if the given expression is constant .
8196	Collect a template directory
8197	Collects a list of tokens .
8198	Returns the next token .
8199	Checks if a token is expected .
8200	Look up the current token .
8201	Export job .
8202	Register a command .
8203	Get a job from the queue .
8204	Reserve job .
8205	Get job stats
8206	Do a job .
8207	Put a job into the queue .
8208	Gets the Palkalk instance .
8209	Parse command arguments .
8210	Parses the connection name .
8211	Build the command signature .
8212	Validate file path
8213	Renders a job .
8214	Get the stats of a tube .
8215	Get server stats
8216	Get next job .
8217	Get the referer parameter from the URL .
8218	Check if limit is allowed
8219	Get IP address
8220	Get subnet address
8221	Get entity id
8222	Returns the limit for the given block .
8223	Increment the rate limit for the given entity .
8224	Log rate limit .
8225	Handle registration request
8226	Validates a registration
8227	Logs a user .
8228	Asserts that the user can be logged in .
8229	Read a file .
8230	Write data to file
8231	Get item by url
8232	Read configuration from config file
8233	Generate a token
8234	Check if token is expired
8235	Validate token storage .
8236	Check server configuration
8237	Generate configuration .
8238	Output the modules configuration .
8239	Set authenticator .
8240	Save reset tokens .
8241	Get directory files
8242	Handle login attempt .
8243	Checks if a user is valid .
8244	Login a user
8245	Abort a user s password
8246	Get the user s password .
8247	Encode a user password
8248	Check the password policy .
8249	Checks if the password is valid .
8250	Replace the password with the given username .
8251	Check if the username is valid .
8252	Log a login attempt .
8253	Handle the login page .
8254	Handle the registration .
8255	Handle password reset request .
8256	Initializes the provider .
8257	Start the authentication page .
8258	Finish the authenticated user
8259	Get a resource attribute
8260	Save login info
8261	Save the last login page
8262	Check if the request is valid .
8263	Handle the state of the response .
8264	Logs an OAuth2 response .
8265	Logs an OAuth resource .
8266	Lock a lock .
8267	Close the file .
8268	Opens the file .
8269	Read data from file
8270	Check if a lock is unlocked .
8271	Get the key of the lock .
8272	Validates the user config .
8273	Validates user data .
8274	Assert that the username is valid .
8275	Handle an event .
8276	Trigger an event .
8277	Sets the default configuration .
8278	Handle the request URL .
8279	Handles the request .
8280	Called when a page is loaded .
8281	Registers the twig extension .
8282	Renders the page .
8283	Resolve the real URL for the given file .
8284	Initializes the module .
8285	Checks if the session is expired .
8286	Load default config
8287	Create the container .
8288	Loads the auth modules .
8289	Get auth routes .
8290	Check if the user is logged in .
8291	Logout user .
8292	Checks if the given URL is enabled .
8293	Handle error handler .
8294	Open transaction file
8295	Opens the file .
8296	Write data to file
8297	Creates a backup file .
8298	Remove backup file .
8299	Add a rule
8300	Handle an event .
8301	Handle the login page
8302	Asserts that a configuration key exists .
8303	Asserts that the given configuration is a boolean value .
8304	Assert that the given value is an integer .
8305	Assert that the given key is greater than the given key .
8306	Asserts that the given configuration is valid .
8307	Assert that a string contains a given key .
8308	Asserts that the given configuration is a string .
8309	Assert that the given value is an integer .
8310	Sanitize url format
8311	Apply defaults to the given array .
8312	Handle password reset request .
8313	Start password reset .
8314	Finish the password reset
8315	Check if a reset token is valid
8316	Start a new password reset session .
8317	Sends a reset email
8318	Add minimum length .
8319	Checks if a string matches the given pattern .
8320	Get captcha result
8321	Checks if a captcha is valid .
8322	Get status data
8323	Add a ping to the server
8324	Get pingbacks
8325	Delete a ping .
8326	Send a user to the Google API .
8327	Tries to recognize a captcha
8328	Get captcha result
8329	Add a where condition .
8330	Connect to the server
8331	Constructs the PDO DSN object .
8332	Returns a list of sequence names .
8333	Returns the SQL for SELECT query
8334	Add a scope .
8335	Remove a scope .
8336	Set the value of the element .
8337	Set the values of the array .
8338	Set the value of the result .
8339	Get the contents of a file .
8340	Set a config file .
8341	Initialize the application .
8342	Add data table
8343	Initialize request .
8344	Run the request .
8345	Prefixes a namespace .
8346	Add a route .
8347	Determine if the given user is editable .
8348	Sets the value of the value .
8349	Returns an array representation of the object .
8350	Perform a Swift mail
8351	Convert SQL to SQL
8352	Handle a signal .
8353	Shutdown process .
8354	Build an enum definition .
8355	Build a model .
8356	Generate models .
8357	Extract domain from raw request
8358	Converts a URL into a string .
8359	Returns a list of all available dashboards .
8360	Start process queue
8361	Initializes the language .
8362	Registers translations .
8363	Translate a key into a string
8364	Sets the current language
8365	Creates a timeline entry .
8366	Register a mapping .
8367	Returns the mapping for the given name .
8368	Validates the configuration .
8369	Archives a production .
8370	Execute Swift Mailer
8371	Shutdown .
8372	Display the console command .
8373	Configure the worker .
8374	Set setter .
8375	Set where clause
8376	Sets the order by clause .
8377	Initialize the session
8378	Set the action .
8379	Get nested value from array
8380	Apply filters .
8381	Execute the SELECT statement
8382	Fetches the result .
8383	Fetches all rows .
8384	Set select query
8385	Add a group by clause .
8386	Set the having clause .
8387	Sets the distinct query .
8388	Add a join to the query .
8389	Adds a left join to the query .
8390	Adds a right join to the query .
8391	Add a join to the query .
8392	List all routes
8393	Runs the application .
8394	Add a new route
8395	Get Logger instance
8396	Ensure that the table is created .
8397	Get the definition .
8398	Get a Schema instance .
8399	Display tool toolbar .
8400	Renders a button .
8401	Sets the renderer .
8402	Initialize the console
8403	Loads a class
8404	Register a namespace
8405	Run the application .
8406	Get the model name .
8407	Get icon .
8408	Set cookie value
8409	Clear all cookies
8410	Connect to the server
8411	Disconnect from server
8412	Determine if the connection is connected .
8413	Get the link
8414	Get master link
8415	Begin transaction transaction .
8416	Commits the transaction .
8417	Rollback a transaction
8418	Register a database connection .
8419	Get database by alias
8420	Renders the widget .
8421	Get the texture
8422	Adds a notice to the menu .
8423	Display mapping .
8424	Generate models .
8425	Get all active activities .
8426	Get all inactive queries .
8427	Get controller class
8428	Get file icon
8429	Get icon icon
8430	Get icon icon .
8431	Start the queue .
8432	Get the PDO connection
8433	Migrate the mapping
8434	Writes a migration file .
8435	Delete the primary key
8436	Fetch an array of values from an array
8437	Returns the number of rows in the database .
8438	Sets the post link to the timeline .
8439	Completes the list of files in the editor .
8440	Create a new post .
8441	Update a post .
8442	Renders an array
8443	Called when a job is finished .
8444	Checks if the request is valid .
8445	Get the user from the message .
8446	Converts a question to an array .
8447	Send a request to the server .
8448	Broadcast a message .
8449	Add a contact
8450	Renames a contact .
8451	Set profile photo .
8452	Checks if the file exists in the given file .
8453	Determines the filename of a file .
8454	Downloads a media file from a file .
8455	Append arguments to the command line .
8456	Run a command .
8457	Injects arguments into the command line .
8458	Updates the database .
8459	Get the current version .
8460	Execute a command
8461	Get current page
8462	Get base URL
8463	Get the protocol s protocol .
8464	Get domain name
8465	Get the current uri
8466	Set URL parameters
8467	Add a backslash to the current URI .
8468	Get all active handlers
8469	Write an emergency message .
8470	Write an alert .
8471	Log a critical message
8472	Write an error message .
8473	Write a warning .
8474	Write a notice .
8475	Write debug message
8476	Write a log message .
8477	Deletes a model .
8478	Log a message .
8479	Bootstrap event handlers .
8480	Run the event .
8481	Get name by id
8482	Get the operating system
8483	Get the kernel version
8484	Get hostname
8485	Get the CPU model name
8486	Gets the CPU of the device .
8487	Returns the CPU frequency of the CPU .
8488	Get the load percentage
8489	Get CPU architecture
8490	Returns the time of the current installation time .
8491	Get cpu cores
8492	Returns the total memory of the system .
8493	Set the field list value
8494	Creates a new FulfulfillmentOrderOrderOrder .
8495	Retrieves the fulfillment order for a given request .
8496	Get the complete preview preview preview .
8497	Get package details
8498	Returns a list of all orders that have been completed .
8499	Updates the fulfillment order .
8500	Set curl options
8501	Set the matching product ID .
8502	Set marketplace ID list
8503	Sets the price for the given input .
8504	Confirm a new transport request
8505	Creates a new shipment .
8506	Gets the billing of the bill .
8507	Get package labels
8508	Get prepend instructions for a given request .
8509	Get prepend instructions for SKU .
8510	Get the transport content .
8511	Lists all items in a shipment .
8512	Lists all items in the next shipment .
8513	Lists all imported shipments .
8514	Returns a list of all shipments in the specified order .
8515	Put transport content
8516	Update a shipment .
8517	Sets the recommendation recommendations .
8518	Set the recommendation recommendations .
8519	Set price recommendations .
8520	Set the fulfillment recommendations .
8521	Set the list of quality recommendations .
8522	Sets the recommendation recommendations .
8523	Sets the recommendations .
8524	Set field list
8525	Set Seller SKU .
8526	List event events
8527	Converts a list of events to an array .
8528	Get the list of events for a given event .
8529	List financial events .
8530	Convert financial events to a list of events .
8531	List all events for a given token .
8532	Converts a list of events to an array .
8533	Sets the list of recovery items .
8534	Set the charge list value
8535	Set field id
8536	Sets the value of the payment list .
8537	Sets the payment fee list .
8538	Sets the field value
8539	Sets the price for the current user .
8540	Set field value
8541	Compiles the message .
8542	Set plural form .
8543	Set the shipment event list
8544	Set the refund list value
8545	Sets the list of claimClaims .
8546	Sets the contactbacks value .
8547	Sets an array of EventFields
8548	Sets the service credit card list .
8549	Set the refund list
8550	Sets the value of this transaction .
8551	Sets the frequency of the event .
8552	Set service event list
8553	The list of event listeners .
8554	Sets the list of SaleEventEvents related to this object .
8555	Sets the adjustment list .
8556	Parse a DOMElement object
8557	Set field type
8558	Sets the grouped event list .
8559	Set field value
8560	Set product value
8561	Cancel a shipment
8562	Creates a new ShippingShipment
8563	Convenience method to create a new shipment .
8564	Get eligible shipping services
8565	Converts an array of eligible shipping services to an array .
8566	Retrieves a shipment
8567	Convert a GET request to an array .
8568	Set category list
8569	Set skips .
8570	Gets the last time for a given request .
8571	List recommendations .
8572	Converts a list of recommendations to a list of recommendations .
8573	List all recommendations for a given token .
8574	Sets the price for this product .
8575	Set ItemCharge value
8576	Set ItemAmount value
8577	Sets the value of the item list .
8578	Set the amount of item adjustments .
8579	Set the promotion list
8580	Set the PromotionAmount value
8581	Sets the field value .
8582	Set field value
8583	Gets the lowest list of products for the given SKU .
8584	Sets the field value .
8585	Set product group list
8586	Sets the price of the product .
8587	Sets the lowest value of the list entry .
8588	Sets the fields in the form .
8589	Sets the list of report schedules .
8590	Set the matching product results .
8591	Set the status field
8592	Set filter options
8593	List orders
8594	Lists all orders for a given request .
8595	Get service status
8596	List the marketplaceParticipations .
8597	Gets the list of all the subscriptions for a marketplace .
8598	Creates a subscription .
8599	Converts a subscription to a subscription .
8600	Deletes a subscription .
8601	Converts a subscription to a subscription
8602	Registers a new destination .
8603	Converts an associative array to an associative array .
8604	Get subscription subscription
8605	List all registered destinations
8606	List subscriptions
8607	Converts a list of subscriptions to a list of subscriptions .
8608	Registers a new destination .
8609	Converts the given request to an associative array .
8610	Update a subscription .
8611	Convert a subscription to a subscription
8612	Set the marketplace value .
8613	Sets the adjustment list .
8614	Sets the feedSubmission information .
8615	Set SalesRank value
8616	Set field ID
8617	Set invalid SKU .
8618	Remove a block .
8619	Get block by key
8620	Parses the contents of the file .
8621	Compile the block .
8622	Sets the lowest list of SKU results .
8623	Sets the number of entries .
8624	Set shipping service list
8625	Sets the list of available deliveries .
8626	Sets the list of terms that should be accepted .
8627	Sets the price for the specified product .
8628	Creates a new price based on the given XML string .
8629	Set the participant value .
8630	Sets the lowest list of available products .
8631	Set report info
8632	Set report info
8633	Set OrderList value
8634	Set OrderAmount value
8635	Sets the shipment fee .
8636	Set the amount of shipment adjustments .
8637	Set order fee list
8638	Set order adjustments .
8639	Sets the field list value
8640	Sets the shipment list .
8641	Sets the shipment adjustments .
8642	Gets a list of report records for a given request .
8643	Cancel report requests .
8644	Get report count
8645	Parse HTTP header
8646	Get default cURL options
8647	Configure curl options
8648	Add required parameters .
8649	Calculate the signature for the request .
8650	Returns the timestamp of the given date .
8651	Convert a GET request to an array
8652	Convert report count to report
8653	Converts a report to a report
8654	Convert a submit request to submit
8655	Convert report count to report
8656	Converts a feed to a feed list
8657	Converts a feed to a feed
8658	Convert request to request report
8659	Converts the feed count to a feed
8660	Convert report list to report
8661	Converts a feed to a feed
8662	Convert feedSubmission to array
8663	Converts a request to a report list
8664	Convert report schedule to report
8665	Converts the request count to a report count
8666	Set the invalid input value .
8667	Set field value
8668	Set the field value
8669	Compute the file paths for the given resource .
8670	Creates a new collection from a collection .
8671	Combines two arrays .
8672	Iterates over over the given index .
8673	Iterates over over the given index .
8674	Map items to the collection .
8675	Merge the given list .
8676	Flip an array with the given values .
8677	Creates a unique unique key .
8678	Returns a new collection of items .
8679	Sorts the collection .
8680	Returns a sorted array of keys .
8681	Set a value in the bag .
8682	Set a path to the bag .
8683	Convert an iterator to an array .
8684	Creates an array from an iterator .
8685	Sets a value in an array .
8686	Remove a value from an array .
8687	Replace two arrays .
8688	Determine if the given value is an array .
8689	Flattens an iterable collection .
8690	Validates the element s values
8691	Create a symlink file .
8692	Check if a symlink exists .
8693	Create a symlink
8694	Parses a size .
8695	Formats the given size .
8696	Handle configuration .
8697	Validates required attributes
8698	Set attribute value
8699	Creates a new element
8700	Append an element to the list
8701	Returns a string representation of this element .
8702	Save element as string
8703	Register view composers .
8704	Apply the model to the query builder .
8705	Extend the relation builder .
8706	Set last folder ID
8707	Get last folder ID
8708	Sets the query .
8709	Qualify columns .
8710	Add a where clause to the query .
8711	Adds a where clause to the query .
8712	Add a where clause .
8713	Add OR WHERE clause .
8714	Add a where clause to the query .
8715	Get access token .
8716	Create a new model .
8717	Create a new model .
8718	Create a new model instance .
8719	Get fresh model .
8720	Initialize the translatable attributes .
8721	Get translatable attributes .
8722	Translate a locale .
8723	Returns a new instance with the given locale .
8724	Get translations .
8725	Get the translation model .
8726	Determine if the current locale is fallback .
8727	Get the dirty attributes .
8728	Change the folder
8729	Updates the folder name .
8730	Check if the current folder can be selected .
8731	Create a whitelist for a given address .
8732	Create a challenge
8733	Updates the given values .
8734	Increments a translation .
8735	Decrement a column
8736	Inserts data into database .
8737	Insert an entry in the database
8738	Filter the translatable values .
8739	Update base values .
8740	Get the query query .
8741	Generate a delete query .
8742	Sets the query for saving .
8743	Starts the listener .
8744	Runs the loop .
8745	Reset the listener .
8746	Get a listener instance .
8747	Selects the stream .
8748	Add a method call
8749	Load service providers .
8750	Dumps the value of a container .
8751	Adds the current message to the current language .
8752	Adds a definition .
8753	Register a definition .
8754	Starts the pool .
8755	Build tracker .
8756	Builds a new subscription .
8757	Run a collection of items .
8758	Starts a tick .
8759	Post request .
8760	Set line prefix
8761	Write log line
8762	Upload a file
8763	Delete an image
8764	Create unique filename .
8765	Get the next variable name .
8766	Load configuration files .
8767	Register the base bindings .
8768	Register application aliases .
8769	Bootstrap the application .
8770	Bind path to container
8771	Register the providers .
8772	Register a service provider .
8773	Register core classes .
8774	Get the base URL .
8775	Returns the admin url
8776	Add a route .
8777	Get assets url
8778	Redirect to the URL
8779	Gets the segment segment .
8780	Returns the scheme scheme .
8781	Save content to cache
8782	Finish the output .
8783	Publishes a list of files .
8784	Log a message .
8785	Get full url with query parameters
8786	Generate migrations .
8787	Render a script .
8788	Generates a CSS link .
8789	Generates an image .
8790	Link asset .
8791	Generates a meta tag
8792	Render a tag .
8793	Set the environment file .
8794	Writes a new environment file .
8795	Render view .
8796	Get a helper
8797	Trigger event handler .
8798	Register directive directives .
8799	Make a password hash
8800	Check if the given password is valid .
8801	Set a session variable
8802	Get session data
8803	Set flash message .
8804	Get flash message
8805	Get the driver driver .
8806	Checks if a facade exists .
8807	Set cookie value
8808	Get cookie value
8809	Delete a cookie
8810	Destroy a cookie
8811	Set header value
8812	Set view content
8813	Render blade view .
8814	Get post data
8815	Get the value of a given key .
8816	Perform a POST request
8817	Delete a value from a file
8818	Returns an array of file names .
8819	Get server variable
8820	Get client IP address
8821	Filters the given data .
8822	Add rules .
8823	Add a rule
8824	Get error message
8825	Validates a number
8826	Converts a migration name into a class name .
8827	Generate a CSRF token .
8828	Generates an image .
8829	Render an option .
8830	Get selected value
8831	Determine if the given value is checked .
8832	Parse a pattern .
8833	Generate a string from a pattern .
8834	Get the observer instance .
8835	Get the environment instance .
8836	Sets the maximum number of attempts .
8837	Check if the timeout is exceeded .
8838	Get the status of the process .
8839	Reads the stream streams .
8840	Sets the exit code .
8841	Generate the URL for this page
8842	Convert string to array
8843	Save user .
8844	Logs a message .
8845	Builds the theme .
8846	Get blog posts .
8847	Get blog posts
8848	Render blog posts .
8849	Show blog posts .
8850	Get RSS feed .
8851	Get the paginated posts .
8852	Get current tag
8853	Get current category
8854	Get archive year
8855	Get archive date .
8856	Increment the number of attempts .
8857	Returns the relative path to a relative path .
8858	Returns the absolute path to the target directory .
8859	Copies the target directory .
8860	Before publishing event
8861	Determine if the current user can view .
8862	Get the link link to the archive .
8863	Generates HTML code for a field .
8864	Adds the content to the query .
8865	Run a task .
8866	Run a task .
8867	Log a task .
8868	Notify the payload .
8869	Attach a runner .
8870	Detach a runner
8871	Add a new event listener .
8872	Build the attachment part .
8873	Build the headers .
8874	Add an attachment
8875	Get mime type
8876	Sends the email
8877	Format a timestamp .
8878	Sends a signal .
8879	Checks if the given path is valid .
8880	Check if the full path is valid .
8881	Check if a relative path is valid .
8882	Check if a command is valid .
8883	Get quote .
8884	Build the package packages .
8885	Send the request
8886	Parses and returns the result .
8887	Check default options
8888	Processes the request .
8889	Register a service .
8890	Get a value by key .
8891	Register a service instance .
8892	Consume a container container .
8893	Register a factory .
8894	Initializes the schema .
8895	Initialize event listeners .
8896	Get all records from the database .
8897	Insert multiple records
8898	Update the primary key .
8899	Performs an update on the database .
8900	Update one or more rows
8901	Update batch data
8902	Delete a record
8903	Delete a record by its condition
8904	Deletes multiple records .
8905	Displays dropdown .
8906	Count all records in the database .
8907	Get the next increment ID .
8908	Set the created date .
8909	Serializes a row .
8910	Get callable function .
8911	Apply soft delete filter .
8912	Fetch primary key
8913	Set where parameters
8914	Decode a string .
8915	Encode a value
8916	Parses a subject to a subject
8917	Get a message
8918	Get messages .
8919	Parse the authority .
8920	Parse the relation relation .
8921	Parse a relationship .
8922	Apply a patch to a document .
8923	Generate patch document .
8924	Merges two patches .
8925	Map JSON data to array
8926	Fetch all config files .
8927	Fetch generator .
8928	Add a generator .
8929	Renders the stack .
8930	Get an icon element .
8931	Add route .
8932	Load the dependencies .
8933	Add a dependency .
8934	Fetch a template
8935	Add a template .
8936	Create a new changeset .
8937	Read changeset .
8938	Update changeset .
8939	Close changes .
8940	Download changeset .
8941	Expands a list of boxes .
8942	Get changeset .
8943	Diff the changeset to a file .
8944	Get user details
8945	Replaces the user preferences .
8946	Change a preference
8947	Upload a trace
8948	Downloads a MetadataMetadata .
8949	Constructs the URL for the given request .
8950	Add router routers
8951	Get capabilities .
8952	Get map data
8953	Create a node .
8954	Creates a new gateway
8955	Create a relationship .
8956	Get all ways of a node
8957	Redirect to a node
8958	Validate the response .
8959	Prepares an array of parameters
8960	Send a request to the API .
8961	Parses a YAML response .
8962	Extract criteria from array
8963	Extract date criteria from array
8964	Checks if an array of criteria matches the given criteria .
8965	Rewrite count query
8966	Check if currency code exists
8967	Clean currency code
8968	Load rates .
8969	Initializes the storage .
8970	Convert a rate to a rate .
8971	Create a new rate from a JSON string .
8972	Parses an array of rates .
8973	Filters a list of sources .
8974	Set the output format .
8975	Parses a stream .
8976	Returns the type of an object .
8977	Set a parameter .
8978	Get the rate key for a currency .
8979	Initializes the database table .
8980	Builds a rate from a row .
8981	Checks if the given rate is valid .
8982	Filter configuration by criteria
8983	Asserts that two tables are equal .
8984	Asserts that two tables are equal .
8985	Asserts that two tables are equal .
8986	Get column columns .
8987	Parses a status line .
8988	Get status line
8989	Returns the template for the given data type .
8990	Get all templates .
8991	Build the entity .
8992	Get attribute names .
8993	Returns the probability of this sample .
8994	Update session data
8995	Add actions to the controller
8996	Build the namespace .
8997	Returns true if the directory is empty .
8998	Check if the entry exists .
8999	Check if file exists
9000	Fix directory separator
9001	Outputs the user column .
9002	Outputs the time column .
9003	Adds a filter to the menu
9004	Determine the dropdown dropdown .
9005	Get log levels .
9006	Builds the HTML object .
9007	Sort items by priority
9008	Prepare column column
9009	Sets the decimal value .
9010	Set character type
9011	Set the tinytext text .
9012	Set text type
9013	Set medium text .
9014	Set long text .
9015	Get root model
9016	Mark all notifications as read
9017	Get words from a string
9018	Get action words
9019	Returns the keywords for a given string .
9020	Get unique words .
9021	Get words by frequency
9022	Get stop words
9023	Checks if a string contains a confirmation message .
9024	Checks if a string contains a forbidden word .
9025	Checks if a string contains a URL .
9026	Checks if a string contains a valid email address .
9027	Check if a string is a question .
9028	Randomize random samples .
9029	Display the error message .
9030	Display the exception .
9031	Execute the given callback .
9032	Loads the class metadata .
9033	Maps a field to a field .
9034	Initializes the lock file .
9035	Persists a thread .
9036	Insert an entity
9037	Update an entity .
9038	Execute a query builder .
9039	Get entity by hash
9040	Returns the maximum position of the column .
9041	Get the environment value .
9042	Empty environment variables
9043	Logs a message
9044	Check if the file should be rotated
9045	Get the config
9046	Registers a data type .
9047	Returns the type of the given data .
9048	Render fields .
9049	Render buttons .
9050	Check log level
9051	Returns a string representation of a message .
9052	Returns an array of menu items .
9053	Recursive function for recursive menu items .
9054	Create relation table .
9055	Add a new column to rename .
9056	Changes table columns .
9057	Add a primary key .
9058	Add a foreign key constraint .
9059	Add unique index
9060	Set primary key .
9061	Get table data .
9062	Get table schema
9063	Get the keys of the table .
9064	Attach shared events to the container .
9065	Determine if the current view can be used .
9066	Persist message .
9067	Boot the model instance .
9068	Convert value to string
9069	Purge days from database
9070	Parses an array of parts .
9071	Prepares an exception .
9072	Executes a query and returns the result .
9073	Get all routes .
9074	Get route information .
9075	Add a rule
9076	Add a new tag
9077	Add a rule collection
9078	Parse context prefix
9079	Parse the request URI .
9080	Parse an element
9081	Parse request parameters
9082	Parse remote host
9083	Parses the request cookie and returns it .
9084	Add a definition .
9085	Returns the alias for the container .
9086	Get the name of the queue .
9087	Add a resolver .
9088	Returns the contents of the stream .
9089	Renders the view body .
9090	Determine if the field is multipart .
9091	Normalizes the options .
9092	Add a partial to the page .
9093	Get a partial part of a page .
9094	Handle the action .
9095	Validate action .
9096	Updates the entity .
9097	Registers module services .
9098	Initializes the theme manager .
9099	Starts the server .
9100	Bind socket to socket
9101	Listen to socket
9102	Build the SQL query .
9103	Parse the message .
9104	Parse the user query .
9105	Parses the query string
9106	Get the prepared theme object .
9107	Get the layout layout
9108	Get the theme name .
9109	Returns the resolver object .
9110	Returns the path to the theme directory .
9111	Get theme config
9112	Set the visit time .
9113	Set up the controller
9114	Initialize the controller
9115	Set default values
9116	Register a view .
9117	Unregister a view
9118	Find the best match for the given application .
9119	Register a controller
9120	Register the router .
9121	Get HTTP headers .
9122	Prepare the request
9123	Parse the response from the response .
9124	Appends the payload to the request .
9125	Handle the header .
9126	Send a request to the server
9127	Check if the connection is established .
9128	Checks if the payload length is acceptable .
9129	Set the stream interceptors
9130	Create a new instance .
9131	Load a configuration file .
9132	Validates the configuration .
9133	Get a route by name .
9134	Sets the last post .
9135	Parses a URL .
9136	Clear a tag .
9137	Call a callable .
9138	Formats a camel case .
9139	Parses the request URI and returns it .
9140	Parses request from server variables
9141	Get parameter value
9142	Returns an array of parameters
9143	Returns a parameter value .
9144	Generates a random string
9145	Reset locale .
9146	Get session data
9147	Open socket .
9148	Mark a user as read .
9149	Mark a user as read .
9150	Fetch all records
9151	Get select options
9152	Render field view
9153	Get the url string
9154	Parse action parameters
9155	Parse annotations .
9156	Get controller settings
9157	Call the action
9158	Add control controls
9159	Redirect to the application .
9160	Adjust the request headers
9161	Add a header to the response .
9162	Adjust the number of bytes .
9163	Get header by name
9164	Parse a rule .
9165	Gets an array of fields .
9166	Get validation status
9167	Set field validation status
9168	Parses a URL .
9169	Sets the timestamp .
9170	Update company profile .
9171	Get controller config .
9172	Get the view helpers .
9173	Reverses all menu items .
9174	Convert hierarchy to flat array
9175	Create a redirect from a route .
9176	Get plugins .
9177	Maps a boolean value to a boolean value .
9178	Get database by id
9179	Get the database .
9180	Get view settings
9181	Removes an item from the cache .
9182	Store a value in the cache .
9183	Remove a key from the cache .
9184	Get remember key
9185	Convert data to array
9186	Merges the given parameters .
9187	Embed campaigns .
9188	Connect to the socket .
9189	Get presenter instance .
9190	Render the flash messages .
9191	Convert an identifier to a string .
9192	Initializes the event .
9193	Initializes the theme .
9194	Add a child .
9195	Set the theme path .
9196	Get theme config
9197	Get the discussion tag .
9198	Returns the redirect URL for the current user .
9199	Get access token
9200	Upload media .
9201	Create a bearer token
9202	Create a new bearer token
9203	Get a GET request .
9204	Get config item
9205	Initialize seed file .
9206	Import tables .
9207	Import table data
9208	Truncates a table .
9209	Find the key for the given entity .
9210	Print validation errors .
9211	Get file path
9212	Create a new seed file
9213	Gets the parser .
9214	Creates a new static page .
9215	Update static model .
9216	Deletes a model .
9217	Parse page links
9218	Converts the current page number to the specified number .
9219	Request a page number
9220	Request all pages for the current page .
9221	Checks if an item exists
9222	Serializes the page .
9223	Unserialize data
9224	Setup the authorization token .
9225	Preprocess the data
9226	Execute a GET request .
9227	Perform a POST request .
9228	Make a PUT request
9229	Delete a path
9230	Patch the given path .
9231	Lists posts .
9232	Renders a model .
9233	Creates a post .
9234	Update a category
9235	Creates a new banner .
9236	Updates the given model .
9237	Returns an error message for the given path .
9238	Get text path
9239	Determines if a relationship is inherited .
9240	Renders the language switch .
9241	Returns the URL for the given language .
9242	Execute the next request .
9243	Sets the cookie for the current locale .
9244	Load configuration files .
9245	Parse a dynamic route .
9246	Replaces a string with the given value .
9247	Create a string from a string .
9248	Create a string from a string .
9249	Generate a route .
9250	Boot the application .
9251	Adds a compiler to the compiler .
9252	Initializes the container .
9253	Get container initialization .
9254	Handle the request .
9255	Get root directory
9256	Set a service
9257	Get a container by id
9258	Dumps the container .
9259	Add a route .
9260	Check if data is cacheable
9261	Add a route .
9262	Add a route
9263	Add named route .
9264	Create a controller instance .
9265	Register service providers .
9266	Create a string from a string .
9267	Renders a string .
9268	Set the timeout .
9269	Set phase .
9270	Load configuration file .
9271	Sets the URI to use .
9272	Convert data to an array .
9273	Filters a text string
9274	Get service config
9275	On bootstrap event
9276	Validates the provided fields .
9277	Renders a REST request .
9278	Fetches data from the database .
9279	Save job .
9280	Delete a row from the database .
9281	Get all pending jobs .
9282	Get all jobs .
9283	Checks if the given source is valid .
9284	Checks if the given CSS file exists .
9285	Compile a CSS file .
9286	Creates a sql statement
9287	Drop table .
9288	Truncate a job
9289	Calculates the duration of the result .
9290	Applies the serializer to the given metadata .
9291	Add grid CSS to grid
9292	Build the endpoint node .
9293	Get asset url
9294	Set default theme defaults .
9295	Build custom fields .
9296	Update documents .
9297	Update the data .
9298	Get the home page .
9299	Renders a batch .
9300	Set options .
9301	Sets the schedule for the schedule .
9302	Set schedule lifetime
9303	Sets the success log .
9304	Set the failure lifetime
9305	Set event events .
9306	Sets the Json API API .
9307	Sets the JSON security security hash .
9308	Register CORS API .
9309	Get a single record
9310	Perform a POST request .
9311	Execute a GET request
9312	Displays the index page .
9313	Display information about the database .
9314	Clear storage table .
9315	Check Accept header
9316	Filters an image .
9317	Transforms an image to a destination
9318	Rotates an angle .
9319	Generate a markdown .
9320	Returns an array of methods that can be used by the HTML code .
9321	Compile Markdown markup .
9322	Register the Markdown environment .
9323	Register the Markdown parser .
9324	Register the HTML renderer .
9325	Register Markdown .
9326	Register blade engines .
9327	Register the Markdown engine .
9328	Register the Markdown engine .
9329	Register blade blade engine .
9330	Filter the image size
9331	Performs a filter on a resource
9332	Ensure that the field is required .
9333	Create a form field instance .
9334	Get the degrees of this instance
9335	Returns the float value .
9336	Calculate the current value
9337	Returns true if the given angle is equal .
9338	Determine if the given angle is a relative .
9339	Get a value by key
9340	Load configuration .
9341	Set the value of a key
9342	Populate the array with all columns
9343	Add a new row .
9344	Add a new column
9345	Gets a row by index
9346	Gets the column from the table .
9347	Determines if the matrix is diagonal
9348	Returns true if the matrix matches the given matrix .
9349	Returns true if the matrix is true
9350	Transforms this matrix to another .
9351	Adds a matrix to the matrix .
9352	Calculate the coefficient of this matrix
9353	Returns inverse matrix .
9354	Subtracts a matrix from the matrix .
9355	Returns the difference of this matrix .
9356	Returns a new instance with the specified URI .
9357	Returns a copy of this instance .
9358	Get module path
9359	Finalizes the response .
9360	Process the middleware .
9361	Calculate the norm of this object
9362	Calculate the argument
9363	Add a new element
9364	Subtracts a zeros from the given number .
9365	Multiplies the given number .
9366	Divide a number
9367	Returns true if the given value is equal .
9368	Get the global globals .
9369	Resolves the request .
9370	Handle the middleware .
9371	Injects all integrations .
9372	Run the console .
9373	Display a page
9374	Creates a dispatcher instance .
9375	Render a template .
9376	Check if a file exists
9377	Extract data from a file
9378	Get files from a directory .
9379	Parses a route .
9380	Retrieve a route from a URI .
9381	Add a concrete resource .
9382	Render a tag .
9383	Get class name .
9384	Get all icons .
9385	Returns an array of icons .
9386	Retrieve a route by its URI .
9387	Add a REST route .
9388	Set the namespace
9389	Parse a route .
9390	Get sort value
9391	Get sort value
9392	Get skip clause .
9393	Returns a new instance with the given status code .
9394	Execute the command .
9395	Build the command .
9396	Sets the allowed options .
9397	Escapes options .
9398	Get builder builder .
9399	Compute the integer of the integer .
9400	Export log messages .
9401	Sets the HTTP response .
9402	Build the command .
9403	Creates a new container .
9404	Prepare a collection instance .
9405	Add a middleware to the stack .
9406	Checks if a middleware has a middleware
9407	Call the middleware .
9408	Resolve a callback .
9409	Transform a middleware to a middleware .
9410	Collect routes .
9411	Throw an exception .
9412	Get the authority .
9413	Create a new Uri instance .
9414	Calculate the variance
9415	Set the precision number .
9416	Returns the maximum value of the float
9417	Calculates the fraction of the float
9418	Calculates the fraction of the given value .
9419	Generate random samples
9420	Search for icons .
9421	Returns the contents of the stream .
9422	Returns the metadata of the stream .
9423	Get the size of the stream .
9424	Write a string to the stream .
9425	Calculates the frequency of the frequency
9426	Build the command .
9427	Render a template .
9428	Updates the CMS fields .
9429	Get font classes .
9430	Get font icon
9431	Add routes .
9432	Returns the random value of a float .
9433	Checks if a float is valid .
9434	Sets the Rational Scale .
9435	Sets the axis of this matrix .
9436	Generate a random number
9437	Get multiple items
9438	Resets the graph .
9439	Alias alias .
9440	Get the value of an object
9441	Get random number
9442	Get the number of items in the collection .
9443	Set pack options .
9444	Get the name of the class
9445	Get entity mapping .
9446	Get the config path .
9447	Get the symlinks .
9448	Get the package path .
9449	Check if method is allowed
9450	Extract path from array
9451	Logs the user stats
9452	Performs a query .
9453	Get a collection of entities .
9454	Parse a string
9455	Returns an array of queries .
9456	Returns the offset of the query .
9457	Add a countable attribute .
9458	Map admin routes .
9459	Get all tickets .
9460	Delete all tickets .
9461	Append a value to the filter .
9462	Get event map .
9463	Compose the view .
9464	Register Loger viewer .
9465	Get summary of the report
9466	Get server modules .
9467	Initializes the object .
9468	Register routes .
9469	Register the log views .
9470	Load all groups .
9471	Sets the pagination number .
9472	Deletes a success message .
9473	Deletes a failed failure .
9474	Read a value from the stream .
9475	Remove quotes from a string
9476	Get start date
9477	Returns the top level of the top of the list of downloads .
9478	Returns a list of days for a calendar
9479	Respond to the response .
9480	Set error code
9481	Respond to the response .
9482	Prepare the folders .
9483	Convert object to array
9484	Creates an array from an array
9485	Check if the model is created .
9486	Checks that the fields are set .
9487	Install modules .
9488	Returns an array of page numbers .
9489	Get file data
9490	Get file data .
9491	Returns an array of file data
9492	Get application size .
9493	Get folder size
9494	Format the size of bytes .
9495	Creates a Sphinx service
9496	Get a paginated collection .
9497	Get a singleton
9498	Save entity .
9499	Processes a request
9500	Checks if an event is supported .
9501	Watch watcher .
9502	Runs the process .
9503	Join command parts .
9504	Listen for Permission
9505	Show the dashboard view .
9506	List logs .
9507	Show log .
9508	Show log entries .
9509	Show log entries .
9510	Download a log .
9511	Deletes a log .
9512	Get the list of logers .
9513	Set the match mode .
9514	Add facet query
9515	Initialize the logger
9516	Update settings .
9517	Recursively recreate database .
9518	Get the usage usage .
9519	Returns the string representation of the property .
9520	Returns an array of aliases .
9521	Add a parameter .
9522	Updates an existing document .
9523	Get configuration .
9524	Deploy the deployer .
9525	Parse the given arguments .
9526	Check if the parameters are valid .
9527	Parse the parameters and return the result .
9528	Parse a single parameter .
9529	Validates required parameters
9530	Initializes the parameters .
9531	Sets the default value .
9532	Preload aliases .
9533	Parses the parameters .
9534	Parse quote command
9535	Parse a parameter .
9536	Check if a parameter exists .
9537	Get the prefix of a parameter .
9538	Get the real name of a parameter .
9539	Get the closure for a parameter .
9540	Get the parameter closure for the given parameter .
9541	Decode the response .
9542	Run a sync action .
9543	Get all messages
9544	Returns an array with all the values of the given columns .
9545	Create a new table .
9546	Returns the number of records in the database .
9547	Renders a score .
9548	Validates the uploaded file .
9549	Sets the PDO instance .
9550	Get PDO instance
9551	Sets the order by clause .
9552	Add mime types
9553	Add extensions to the list .
9554	Set the name of the command .
9555	Get upload handler
9556	Adds a closure .
9557	Add multiple parameters .
9558	Get usage usage
9559	Resolve an error handler .
9560	Render the close button .
9561	Make a response object .
9562	Checks if the given handler has a type hint .
9563	Call a handler .
9564	Create a fatal error exception .
9565	Add a new hook
9566	Add a new hook
9567	Register a configurator .
9568	Invokes a configurator .
9569	Sets the container .
9570	Add a middleware
9571	Boot the console application .
9572	Bootstrap the application .
9573	Registers dependencies .
9574	Register the provider .
9575	Resolve the stack .
9576	Resolve the kernel .
9577	Register the materialize plugin .
9578	Register plugin .
9579	Set a channel .
9580	Defines a deferred channel .
9581	Get a channel .
9582	Get validation options
9583	Add a route to the cache .
9584	Returns the route for the given request .
9585	Get the full url
9586	Create a form field instance .
9587	Get attribute value
9588	Check if an attribute is set .
9589	Default dropdown list
9590	Generates a radio box .
9591	Renders a radio list .
9592	Creates a checkbox .
9593	Creates a checkbox list .
9594	Make the session handler .
9595	Make session storage
9596	Create a session instance .
9597	Flash messages .
9598	Flash input flash message .
9599	Redirect to a URL
9600	Returns the length of the component .
9601	Adds a vector to the matrix .
9602	Returns the product of this matrix .
9603	Creates a cross - dimensional vector between two vectors .
9604	Calculate the triples of the multiplication .
9605	Computes the vector of the vector with the given vector .
9606	Multiplies the given scalar .
9607	Projects the given unit .
9608	Returns the difference between two numbers .
9609	Checks if the vector is a vector .
9610	Get route url
9611	Get asset url
9612	Get root url
9613	Register Guzzle Guzzle .
9614	Authenticate a token .
9615	Add a new manager
9616	Register a command .
9617	Register a subscriber .
9618	Register a stack middleware
9619	Check if the captcha is valid
9620	HTTP POST request
9621	Encode a query string
9622	Get a PDO instance .
9623	Get connection configuration
9624	Make a session handler .
9625	Get character by character
9626	Get all results
9627	Checks if a route matches the given parameters .
9628	Validates the given route parameters .
9629	Get route identifier .
9630	Verify the uploaded file .
9631	Set a setting
9632	Get setting value
9633	Sets the name of the field
9634	Get form field
9635	Read contents of a file .
9636	Write contents to file
9637	Handle the authentication request .
9638	Returns an array of attributes .
9639	Set url value
9640	Rebuild a URL .
9641	Validates the URL
9642	Resolves a path to a given path .
9643	Get driver driver .
9644	Map params to array
9645	Make a PDO instance .
9646	Build route .
9647	Add a route to the route builder .
9648	Get constant values
9649	Returns the mapping for the given class .
9650	Delete all options
9651	Duplicate a node
9652	Initializes the form field .
9653	Add a loader
9654	Returns the loader for a given path .
9655	Override the route with the given name .
9656	Merge routes .
9657	Mount routes .
9658	Creates a writer
9659	Create a new reader instance .
9660	Identify a file
9661	Create a new reader for the given filename .
9662	Get reader type from filename
9663	Register a writer
9664	Register a reader
9665	Set custom header
9666	Writes a polygon object
9667	Write gradient fill
9668	Write the pattern to the pattern .
9669	Write a font .
9670	Write border boundaries
9671	Write a cell style
9672	Write border border
9673	Write number format
9674	Get all conditional styles .
9675	Returns an array of all FillFill objects .
9676	Get all fonts
9677	Get all borders
9678	Returns an array of number formats
9679	Creates report object from XML .
9680	Get column name .
9681	Create contact from XML .
9682	Initializes the contact object .
9683	Get country name
9684	Returns the storage object .
9685	Set storage .
9686	Splits a value into an array .
9687	Serialize the collection .
9688	Returns the difference of this matrix .
9689	Get data type
9690	Render a template file
9691	Compile a template file
9692	Compile a string
9693	Get token by id
9694	Checks if a file is read .
9695	Applies the inline style to an inline style
9696	Create transactions .
9697	Finds a transaction type by its name .
9698	Generates HTML code .
9699	Generate text .
9700	Generate the page .
9701	Add a writer
9702	Adds a font .
9703	Adds a color to the palette .
9704	Writes the worksheet .
9705	Calculates the sheet offsets .
9706	Write all the number formats
9707	Writes a label to a file .
9708	Writes the shortcode to a short name .
9709	Write the code to the server .
9710	Write the current window .
9711	Write a bound sheet to the sheet
9712	Writes the data to the spreadsheet .
9713	Writes the external data to the source file .
9714	Write Style Style
9715	Write a number format
9716	Write a country
9717	Write a record ID
9718	Write palette .
9719	Writes the MIME marker to the image .
9720	Set Escapes .
9721	Get all samples
9722	Write a spreadsheet
9723	Get temporary folder
9724	Get the filename of a file
9725	Returns a temporary file name .
9726	Logs a file
9727	Log a file from a path
9728	Parse XML object from XML .
9729	Convert DateTime to DateTime
9730	Set max dimensions
9731	Check if a file is read
9732	Write the font .
9733	Sets the RGB value of this cell .
9734	Set RGB value
9735	Returns the indexed color for the given index .
9736	Sets the worksheet .
9737	Set width .
9738	Set the height of the page .
9739	Set the width of the page .
9740	Returns the display area
9741	Checks if the current page area is set .
9742	Add a print area
9743	Sets the country .
9744	Set state .
9745	Sets the city .
9746	Sets the quarter .
9747	Sets the timezone .
9748	Check order status status
9749	Calculates the size of a file
9750	Saves the PPSP PPSP .
9751	Sets the image images
9752	Set the reviews for the post .
9753	Get temp directory
9754	Assert that a file exists .
9755	Assert that the value is a type .
9756	Assert that the value is greater than the given value .
9757	Assert that the value is greater than the given value .
9758	Asserts that the given value is equal .
9759	Asserts that the file contains the given value .
9760	Assert that the given type contains a given value .
9761	Asserts that the given class contains a given class .
9762	Ensure that the target is empty .
9763	Assert that the string ends with the given value .
9764	Assert that the value is equal .
9765	Assert that the assertion exists .
9766	Assert that the given class is a class .
9767	Assert that the value is greater than the given value .
9768	Assert that the value is expected .
9769	Match a regular expression .
9770	Match the given format .
9771	Assert that the value matches the given value .
9772	Sets a property .
9773	Checks whether the file is readable .
9774	Assert that the predicate is satisfied .
9775	Asserts that the given string starts with the given value .
9776	Throw an exception .
9777	Asserts that the given range is within the range .
9778	Assert that the target is writable .
9779	Assert that the given constraint is expected .
9780	Returns the length of the given value .
9781	Set flag .
9782	Parse the statement .
9783	Parse expression .
9784	Parse HTML code .
9785	Parses the expression .
9786	Parses the output stream .
9787	Parse the filter value .
9788	Set conditions .
9789	Sets the bottom right position of the cell .
9790	Get formatted value .
9791	Calculate the cell value
9792	Set data type
9793	Checks if the cell is valid .
9794	Returns the data for this cell .
9795	Sets the data for this cell .
9796	Checks if the cell has a link .
9797	Get the hyperlink link .
9798	Set the hyperlink link .
9799	Compare two cells
9800	Set chart renderer
9801	Sets the libxml driver options .
9802	Returns an array of libxml options
9803	Sets the created date .
9804	Sets the modified timestamp .
9805	Reads the next record .
9806	Read a BLETE record .
9807	Read a blink
9808	Reads an OPTIFF record
9809	Read the client text box .
9810	Read the client anchor .
9811	Perform a GET request .
9812	Perform a POST request .
9813	Delete a raw content .
9814	Adds an entry to the blacklist list .
9815	Sets the worksheet .
9816	Write raw data
9817	Set the sheet type
9818	Compute the inverse of this matrix
9819	Sets the segment size .
9820	Returns the column s column .
9821	Shift a column to another .
9822	Write relationships to the spreadsheet
9823	Write workbook relationships
9824	Write the worksheet relationships
9825	Write the drawing relationships
9826	Write Relationship Relationship
9827	Sets the password
9828	Generate an association name .
9829	Get association name .
9830	Get association name .
9831	Register a controller .
9832	Sets the revision password .
9833	Sets the workbook password .
9834	Converts the column width to a cell .
9835	Create a new image from a file .
9836	Opens a file .
9837	Creates a basic authentication request .
9838	Creates a JsonResponse from an array .
9839	Creates a symmetric request .
9840	Creates a JsonResponse from a JSON string .
9841	Creates a new SSE request .
9842	Create a json response .
9843	Creates a signed request .
9844	Create a signed json response .
9845	Creates a symmetric request .
9846	Create a new request .
9847	Create a new response .
9848	Create a signed request .
9849	Create a signed response .
9850	Convert a string to a stream .
9851	Hash password hash
9852	Set file path
9853	Set the expiration time .
9854	Append data to the buffer .
9855	Store a BIFF record .
9856	Add a message to the next record
9857	Check if a cell is valid
9858	Checks if a cell contains a value
9859	Get stream data
9860	Returns the integer value of the specified parameter .
9861	Writes a dimension to the output .
9862	Write Excel Format Format
9863	Writes the columns to the output .
9864	Write data validation rules
9865	Write hyperlinks to hyperlink .
9866	Writes a list of protected ranges .
9867	Write merge cells
9868	Writes the output options to the output .
9869	Write page margins
9870	Write the page setup .
9871	Writes an array of breaks
9872	Write sheet data
9873	Write drawings
9874	Write the legacy stylesheet
9875	Write the legacy header
9876	Write a workbook
9877	Write the file version .
9878	Writes the workbook to the workbook .
9879	Write the book views .
9880	Write workbook protection .
9881	Writes the calculation to the calendar .
9882	Write a sheet
9883	Writes the namespaces to the output .
9884	Writes the namespaces for the given spreadsheet .
9885	Writes the definition for the given name .
9886	Writes the field name to the output .
9887	Initialize the Permission
9888	Get permission by code
9889	Convert a response to an array
9890	Convert a response into an XML string .
9891	Create hint .
9892	Create error message .
9893	Get input properties
9894	Add a shipping method .
9895	Convert a token to a string
9896	Convert a number to a decimal number
9897	Convert a string to a string
9898	Convert a function to PHP function .
9899	Convert an error code to an array
9900	Parses the formula .
9901	Parse a formula .
9902	Checks if a given cell address is within a range
9903	Update a cell reference
9904	Update cell range
9905	Update cell reference
9906	Map color to palette
9907	Sets the block size .
9908	Set Position
9909	Set Position
9910	Convert object to array
9911	Creates an object from an array
9912	Parse XML element from XML
9913	Get field value
9914	Creates a new menu item .
9915	Render a single sheet
9916	Configure the model configuration .
9917	Get relations for a model .
9918	Get the table name .
9919	Finds the columns for the given model .
9920	Finds the model relations .
9921	Find a many - to - many relationship .
9922	Defines a many - to - many relationship .
9923	Requires a parameter .
9924	Filter parameters .
9925	Handle collection of parameters
9926	Handle the given parameters .
9927	Clean up unwanted parameters .
9928	Check if value is empty
9929	Handle an invalid parameter .
9930	Sets the filter type .
9931	Gets a rule .
9932	Add a rule .
9933	Set the rule type .
9934	Set the rule value
9935	Sets the column operator .
9936	Set the grouping .
9937	Checks if a sheet name is valid .
9938	Check the sheet title
9939	Add a chart
9940	Calculate the width of the column
9941	Sets the cell title
9942	Set protection .
9943	Set cell value
9944	Get a cell by index
9945	Creates a new cell .
9946	Checks if a cell contains a cell .
9947	Get a row dimension .
9948	Get column dimension .
9949	Get style by column
9950	Duplicate a cell
9951	Duplicate cell style
9952	Sets a cell breaker
9953	Merges two cells
9954	Merges two cells between two columns .
9955	Removes all cells from the specified row .
9956	Protect cells .
9957	Protect cells by column
9958	Unset cell cells
9959	Removes all cells for a given column
9960	Set filter by column
9961	Sets the cell pane .
9962	Inserts a new row into the table
9963	Remove a row
9964	Get comment comment
9965	Set selected cells
9966	Creates a new instance from an array .
9967	Get a hyperlink for a cell
9968	Sets the hyperlink link .
9969	Get data validation for a cell
9970	Set data validation .
9971	Rounds the given range .
9972	Sets the cell name
9973	Sets the format of the cell .
9974	Sets the format code for this cell .
9975	Fill the built - in format codes
9976	Returns the format code for the given format .
9977	Prepare the save for writing
9978	Execute a curl request
9979	Writes the comments to the document .
9980	Write comment .
9981	Writes the XML document to XML .
9982	Write a VML comment .
9983	Returns the data type for a given value .
9984	Populate the object from XML .
9985	Map vinal alignment
9986	Map the alignment to the horizontal alignment
9987	Map border style
9988	Generate HTML header
9989	Generate the navigation .
9990	Write an image to a cell .
9991	Write chart to chart
9992	Generate the stylesheet
9993	Creates CSS style .
9994	Format a color value .
9995	Write a comment
9996	Check if the delimiter is a separator .
9997	Determines the separator .
9998	Set shadow properties .
9999	Set shadow color
10000	Sets softges size .
10001	Add a decorator .
10002	Apply the given tag to the given tag .
10003	Remove a directory recursively .
10004	Get HTTP status code from HTTP status code
10005	Set the ribbon data .
10006	Gets the ribbon data .
10007	Returns an array of ribbon objects
10008	Disconnects the worksheet
10009	Creates a new sheet .
10010	Add a new sheet
10011	Remove a sheet by index
10012	Get a single sheet
10013	Get a single sheet by name
10014	Returns the index of the worksheet .
10015	Set the active sheet by name
10016	Add external sheet
10017	Add a named route .
10018	Remove a named range .
10019	Add a cell style
10020	Removes a cell from the sheet
10021	Add a cell style
10022	Remove a cell style
10023	Flattens a multi - dimensional array
10024	Flattens an array into a flattened array .
10025	Get contact .
10026	Get contacts .
10027	Get contact by email
10028	Get contacts by external id
10029	Get contacts by filter id
10030	Update a contact .
10031	Sync contacts .
10032	Unscribe a contact by email address
10033	Add a unsubscribe request to a subscription .
10034	Unsubscribe a contact
10035	Unsubscribe a contact
10036	Get blocked contacts .
10037	Create a custom field
10038	Rename a custom field
10039	Try to load a simple XML string .
10040	Loads a spreadsheet
10041	Returns a string representation of this rule .
10042	Validate a plugin .
10043	Sets the value at the given key .
10044	Creates a select form for the given model .
10045	Create a new instance from the given type .
10046	Check if email is empty
10047	Recursive recursive recursive function .
10048	Get colour by index
10049	Convert object to array
10050	Resolve the configuration field .
10051	Resolve visible fields .
10052	Resolve template path .
10053	Set data type
10054	Set data values
10055	Push a value to the stack
10056	Get a cache item
10057	Check if a key exists
10058	Save cache item .
10059	Commit all deferred items .
10060	Set meta data
10061	Create meta .
10062	Update meta data
10063	Get meta value
10064	Get all meta data
10065	Set the piece of pieces .
10066	Generate the generator .
10067	Registers tags .
10068	Register the decorators .
10069	Add a tag .
10070	Make a tag .
10071	Render the widget .
10072	Constructs the object from XML .
10073	Get all drawings
10074	Initializes the system .
10075	Converts an XML string to a PHP string .
10076	Converts a PHP string to an XML string .
10077	Sanitize UTF - 8 characters .
10078	Convert a string to an encoding
10079	Reverse the case of a string .
10080	Get currency code
10081	Register the Alias manager .
10082	Register the database adapter .
10083	Register the router .
10084	Write text to stream
10085	Sets the mapping .
10086	Write debug log
10087	Creates a zip archive
10088	Add an attachment from a file .
10089	Add an attachment from a file .
10090	Returns the URL for the given identifier .
10091	Check options .
10092	Generate a unique identifier .
10093	Gets the domain name .
10094	Gets the server s URL
10095	Process the default url
10096	Process size .
10097	Write a cell range to a range
10098	Set the outline .
10099	Write a label
10100	Writes a text string to a string
10101	Write a string to a string
10102	Write a URL to the internal URL
10103	Write dimensions .
10104	Write the window to the current window
10105	Write default row height
10106	Write a default column
10107	Write a column info
10108	Write the selected cells
10109	Write merge cells
10110	Write the cell layout
10111	Write the ExcelProtected section .
10112	Write a cell range
10113	Write the page setup
10114	Write the header
10115	Write footer header
10116	Write the HIFF record
10117	Writes a VIFF record
10118	Write left margin
10119	Write the right margin
10120	Write the margin .
10121	Write the bottom margin
10122	Write print header
10123	Write print grid lines
10124	Write grid grids
10125	Write automatic filter info
10126	Writes the data to the grid
10127	Writes the output to the XML .
10128	Writes an array of breaks
10129	Write protection .
10130	Write scopes to file
10131	Write the object to the file
10132	Write password to file
10133	Insert a bitmap
10134	Position the image
10135	Process a PNG image .
10136	Write the zoom level
10137	Writes the drawing of the image
10138	Write page layout
10139	Writes the column header
10140	Read data from a file
10141	Loads the LTI file .
10142	Read a default value
10143	Read a text object from the stream .
10144	Reads the BIFF file .
10145	Create a key for a block
10146	Read a style record
10147	Read palette data
10148	Reads a MIME group .
10149	Reads print grid lines
10150	Reads the CSV header .
10151	Reads the footer .
10152	Reads the HIFF record .
10153	Read vars from the current page
10154	Reads the page setup .
10155	Reads a row from the CSV file
10156	Read a shared formula .
10157	Reads a boolean value from the CSV file .
10158	Reads a multi - record from the buffer .
10159	Read a label
10160	Reads the mime data from the stream .
10161	Reads a cell .
10162	Reads the selection of a cell .
10163	Reads the cell layout
10164	Reads a range of ranges .
10165	Reads the next record .
10166	Reads a byte address from a binary string .
10167	Reads a range of bytes from a range
10168	Returns the integer of the given data .
10169	Write a spreadsheet
10170	Set diagonal direction
10171	Load custom fields from XML .
10172	Get custom fields
10173	Check if the given coordinate is in the index .
10174	Delete a cell
10175	Get the highest position of the row .
10176	Get the highest position of the row .
10177	Clone cell collection
10178	Remove a row
10179	Remove a column
10180	Stores the current cell .
10181	Adds a cell to the list
10182	Unset sheet cells
10183	Get all cache keys .
10184	Create a contact filter
10185	Decode JSON string
10186	Creates an object from an array
10187	Build authorization header .
10188	Parses XML object from XML .
10189	Writes the vars to the spreadsheet .
10190	Returns a list of all Spainers .
10191	Validate request parameters
10192	Parses a DSN string
10193	Get the query string .
10194	Get last query string
10195	Get the query logs .
10196	Create a string representation of a string
10197	Writes a string to a string
10198	Writes the rows to the table
10199	Write a cell span
10200	Writes the stylesheet .
10201	Write cell range
10202	Sets the horizontal horizontal axis .
10203	Set Vertical .
10204	Set shrink .
10205	Set indentation
10206	Sets the read order .
10207	Get a resource .
10208	Delete a resource
10209	Performs an HTTP request .
10210	Creates a contact .
10211	Initialize the object from XML .
10212	Convert this object to a CSV string
10213	Returns the shared component .
10214	Set the color .
10215	Scan text for text element
10216	Add a source to the collection .
10217	Adds a new item to the collection .
10218	Clean the complex number
10219	Converts a number to a number format
10220	Get conversion groups .
10221	Returns a list of conversion units .
10222	Create authentication form .
10223	Returns the menu for the given model .
10224	Build index menu menu .
10225	Returns a list of items for a given model .
10226	Creates a menu menu .
10227	Get a page for a given model .
10228	Resolve model name .
10229	Load language files
10230	Returns the context string
10231	Writes the spreadsheet
10232	Write a single line
10233	Edit a user .
10234	Main function .
10235	Get image mime type
10236	Write default content type
10237	Get a singleton instance
10238	Wrap the value as a string
10239	Unmarshall a value .
10240	Calculates a cell value
10241	Calculates a formula
10242	Get matrix dimensions
10243	Checks if a function is implemented .
10244	Gets the list of implemented functions .
10245	Initializes the report object .
10246	Convert an ASCII string to ASCII
10247	Returns the string representation of this string .
10248	Generate GUID .
10249	Generate a date .
10250	Get DDL for the current state .
10251	Get first person name .
10252	Get last name .
10253	Get full name .
10254	Get the city name .
10255	Returns the name of the application .
10256	Get the state of a zip code
10257	Get the address of the address
10258	Get company name
10259	Get phone number
10260	Get IP address
10261	Get email address
10262	Get the Internet .
10263	Get credit card card
10264	Get bank account .
10265	Get person .
10266	Set rotation .
10267	Set end color
10268	Create a new Mail .
10269	Set the HTML content of a mailing .
10270	Set the reply to the specified address .
10271	Add a new attachment .
10272	Add custom properties
10273	Update custom settings .
10274	Set the lock .
10275	Returns the width of the given text .
10276	Calculate the width of a column .
10277	Get default row height
10278	Write a spreadsheet
10279	Parse a coordinate string from a cell string
10280	Returns the absolute reference of a cell .
10281	Returns the absolute coordinates of a cell .
10282	Splits a range into an array .
10283	Builds a range from an array .
10284	Get range boundaries
10285	Get column index from string
10286	Get a string from a column
10287	Parses cron jobs .
10288	Returns a list of scheduled jobs .
10289	Execute all tasks .
10290	Store last run time
10291	Acquire the lock .
10292	Set default timezone
10293	Validates a timezone .
10294	Convert Excel to DateTime object
10295	Convert a day string to a string
10296	Write a chart
10297	Write a title
10298	Write the legend .
10299	Write Data Labels
10300	Write the bubble data to the given data .
10301	Write the layout .
10302	Write print settings
10303	Set disk disk .
10304	Resolves the given key .
10305	Recursively recursively recursively recursively .
10306	Set line style properties
10307	Set the glow properties .
10308	Sets the foreground size .
10309	Gets the number of clicks .
10310	Get the number of users in the list .
10311	Get all recipients
10312	Get count of recipients
10313	Get a list of clicks for a given contact .
10314	Get the number of clicks .
10315	Get the number of unique clicks .
10316	Get number of bounces .
10317	Get the number of bounces for a given contact .
10318	Get all blocks .
10319	Returns the number of blocks .
10320	Get a list of unsubscribers .
10321	Get number of unsubscribed subscribers .
10322	Get count of subscribers .
10323	Create query parameters .
10324	Create count query parameters
10325	Sets the database options .
10326	Add a rule
10327	Extracts the rules from XML .
10328	Get the nesting level .
10329	Sets the original image .
10330	Replace the image with the given id .
10331	Loads the given URL .
10332	Set the size of the image .
10333	Sets the field from XML .
10334	Sets the name of the cell .
10335	Set the superset .
10336	Calculates the distance between two cells .
10337	Renders an angle between two coordinates .
10338	Returns the XML representation of this object .
10339	Check if a string is a string
10340	Check the error code
10341	Validate columns .
10342	Checks if the given date is valid .
10343	Extracts a range from a range .
10344	Extract step from definition .
10345	Applies the given range to the given range .
10346	Generate the next timestamp .
10347	Returns the current element of the current date
10348	Rewinds the current time to the current time .
10349	Validate the response set .
10350	Validate the result set
10351	Get a channel adapter .
10352	Get the source for the given job .
10353	Fire an event .
10354	Get event name
10355	Increment the number of attempts .
10356	Lock the lock .
10357	Highlight a file .
10358	Throw an error .
10359	Format the backtrace .
10360	Throw an exception .
10361	Write log messages to file
10362	Write an exception .
10363	Checks if a node exists
10364	Adds a node to the list .
10365	Log a login request .
10366	Logout the user .
10367	Register a new job .
10368	Restore the request .
10369	Reset a reset request .
10370	Add a new script
10371	Register scripts .
10372	Add stylesheet
10373	Unify an element
10374	Removes data from cache
10375	Validates form data
10376	Determine if the file should be processed .
10377	Prepare files for a given type .
10378	Get the routes for the given type .
10379	Check if a file is modified .
10380	Check if a file is modified .
10381	Unify the given files .
10382	Save external file .
10383	Compress files .
10384	Sets the params for the given type .
10385	Sanitize the given field .
10386	Create initializer .
10387	Create a new application instance .
10388	Handle the expiration time .
10389	Load the XML file .
10390	Load XML from a string
10391	Get temp directory
10392	Parse XML file
10393	Check if operation is valid .
10394	Transforms a document into a document .
10395	Get shop ids .
10396	Loads the class metadata .
10397	Process discriminator map .
10398	Perform a replacement string .
10399	Start a pipeline .
10400	Skip item skip .
10401	Count source items
10402	Creates a new application .
10403	Called when the item is processed .
10404	Get value from cache .
10405	Set the value of a key .
10406	Remove a key from the cache .
10407	Save a pair
10408	Adds a value to the document .
10409	Gets the list of urls for a document .
10410	Create urls file
10411	Invalidate the cache .
10412	Loads the URLs from a document .
10413	Load urls by type
10414	Create table .
10415	Update table .
10416	Add status field
10417	Start a pipeline .
10418	Returns the value of the given key .
10419	Parses a file .
10420	Create a new Pipeline .
10421	Add the update fields to the update field .
10422	Adds an insert statement to the insert query
10423	Set trigger type
10424	Parses XML string
10425	Set HTTP headers
10426	Outputs the response body .
10427	Initializes the services .
10428	Initializes the sync storage .
10429	Initializes the sync storage storage .
10430	Creates a list of pipelines .
10431	Get shop id .
10432	Create service services .
10433	Prepare service configs .
10434	Prepare the type configs .
10435	Perform a POST request
10436	Get logger instance .
10437	Inject the template
10438	Set attribute value
10439	Parse the next query line .
10440	Parse the query .
10441	Get line type
10442	Creates a new SQL file .
10443	Handle the start statement .
10444	Handle a statement .
10445	Handle the parameter .
10446	Detects the query type .
10447	Create a webhook .
10448	Check if the container exists .
10449	Load configuration .
10450	Delete a key
10451	Retrieve a TTL value from the cache .
10452	Formats a question .
10453	Set reset token .
10454	Reset password .
10455	Consume an item .
10456	Sets the item .
10457	Returns the amount of this unit .
10458	Validates the answer .
10459	Finish the job .
10460	Creates a new action item .
10461	Initialize the file .
10462	Get table name .
10463	Bind parameters to statement
10464	Deletes the deletion of a document .
10465	Check if shop is valid .
10466	Modifies the item from the queue .
10467	Creates a new anonymous recipient .
10468	Returns the conversion factor .
10469	Send a request to the server .
10470	Lookup a user .
10471	Check out a specific item .
10472	Check if an item is in the cart .
10473	Renew a new item .
10474	Lookup an item .
10475	Listen to an event .
10476	Push an event .
10477	Display exceptions .
10478	Resolve item action .
10479	Implements the inline context .
10480	Determine if the field is modified .
10481	Get all documents in the collection .
10482	Get a session bucket .
10483	Creates a soft notification .
10484	Creates a spam complaint .
10485	Get table mapping .
10486	Retrieve the mapping for a table .
10487	Applies a mapping to the given mapping .
10488	Runs the command .
10489	Unbuffers a connection
10490	Returns the negative value .
10491	Adds a new value to the specified value .
10492	Subtracts the given value
10493	Multiplies the given value .
10494	Divide the given value .
10495	Modify the given value .
10496	Expands the given value
10497	Returns the sqrt value .
10498	Returns the root value .
10499	Returns true if the value is greater than the given value .
10500	Returns true if the value is greater than the given value .
10501	Autocomplete input .
10502	Sets the parameters .
10503	Sets a parameter .
10504	Register log levels .
10505	Register the logger .
10506	Register log menu .
10507	Register the log file .
10508	Register the logger .
10509	Attach an event .
10510	Detach an observer .
10511	Notify all observers .
10512	Order observers by priority .
10513	Check if the event is update .
10514	Update observer state .
10515	Increments the given key .
10516	Create photos collection .
10517	Get the list of media identifiers .
10518	Get product photo .
10519	Generate the user agent .
10520	Adds a constraint to the table .
10521	Build table constant
10522	Quote column index
10523	Get the list of parents for a post .
10524	Unset data from container
10525	Set field value
10526	Set field value
10527	Get IP address
10528	Get the IP address from the proxy .
10529	Normalize proxy header .
10530	Convert the collection to JSON .
10531	Returns the number of items in the collection .
10532	Returns true if the item is valid .
10533	Get last item
10534	Checks if the given user is allowed .
10535	Get data from container
10536	Extract headers from request
10537	Prepares headers .
10538	Creates a new instance from the given URL .
10539	Sets many items .
10540	Convert a type parameter to a type .
10541	Returns the configured filtration configuration .
10542	Create a new dispatch instance .
10543	Set configuration .
10544	Set the list of sites .
10545	Sets the virtual host .
10546	Set request object
10547	Sets the resolver .
10548	Set template .
10549	Set application .
10550	Dispatch the application .
10551	Determine the virtual host .
10552	Resolve application .
10553	Find virtual host .
10554	Handles the given host .
10555	Find the best match of the given url .
10556	Make a log .
10557	Dispatch the queue .
10558	Create a new language object
10559	Setup translation logger .
10560	Initialize configuration .
10561	Creates a controller
10562	Build the controller name .
10563	Build action name .
10564	Creates a variant .
10565	Format JSON response .
10566	Format JSON response .
10567	Creates a new Media entity .
10568	Create a new Paginator instance .
10569	Parses the sort parameter .
10570	Parse a sort string
10571	Validates if the cache is valid .
10572	Sets the cache header
10573	Registers the session handler .
10574	Removes a value from the session
10575	Apply the given text to the given text .
10576	Apply style to text
10577	Get the value of a given style
10578	Converts multiple resources to an array .
10579	Checks whether two strings are equal .
10580	Create data store .
10581	Handle the request .
10582	Build the response object .
10583	Dumps the response .
10584	Create a directory .
10585	Create a temporary file .
10586	Register an entity .
10587	Clean up entities .
10588	Build a charge from a transaction
10589	Builds a Paypal object from a transaction ID .
10590	Check if a form is a type .
10591	Find a product by id
10592	Displays this node .
10593	Returns an array representation of this object .
10594	Get view data
10595	Initializes the view table .
10596	Initializes the view table row .
10597	Returns the locale for the given route .
10598	Initializes the view data .
10599	Print debug code
10600	Returns the full url
10601	Edit a query
10602	Add a query part
10603	Check if the query is a query string
10604	Set query parameter
10605	Add headers .
10606	Add a header
10607	Check if the user is logged in .
10608	Receive the password .
10609	Displays the classified form
10610	Check email confirmation .
10611	Confirm user confirmation .
10612	Display confirmation page .
10613	Authenticate user .
10614	Create migration repository
10615	Configure the response .
10616	Set the lifetime of the response .
10617	Set the response tag
10618	Display step steps .
10619	Sends a step
10620	Boot the application .
10621	Returns the percentage of the given value .
10622	Creates a whitelistedMap for the given map .
10623	Sync migrations .
10624	Check if the given migration file exists .
10625	Build the build type .
10626	Get the document root directory
10627	Get information about cpu cores
10628	Calculate the CPU percent of the CPU
10629	Creates a new instance of DDDD .
10630	Get memory memory
10631	Gets the average size of the file .
10632	Get files for a given pattern .
10633	Get the values of the model .
10634	Get array from json file
10635	Update the event manager .
10636	Resolves the required paths .
10637	Upload media .
10638	Process uploaded files .
10639	Process external URLs .
10640	Create unique path .
10641	Add a where condition to the query .
10642	Add OR WHERE clause
10643	Get parent entity .
10644	Get relative path .
10645	Bind an instance to the given object .
10646	Execute the API call
10647	Build the custom messages .
10648	Normalize rules .
10649	Build the unique rules .
10650	Get validator .
10651	Validates the form
10652	Unset many items from the collection .
10653	Checks if a property has a trait .
10654	Check if a property exists
10655	Group items by key
10656	Sorts the collection using the sort function .
10657	Returns a copy of this collection .
10658	Sorts array recursively
10659	Normalize header name .
10660	Returns a new instance with the specified headers .
10661	Returns a new instance with the given cookie name .
10662	Returns a copy of this object .
10663	Sets the parameter type
10664	Returns a new instance with the given request .
10665	Enable the block mode .
10666	Sets the report URI .
10667	Builds the SQL statement .
10668	Builds a DOM document from a string .
10669	Create a new instance from an array .
10670	Extract data from an array
10671	Convert an object to an array
10672	Add segments to path
10673	Get a value from the cache .
10674	Compares the number of bytes from a string
10675	Calculates the line of a line
10676	Returns the right part of a string
10677	Splits the text into an array
10678	Interpolate text
10679	Searches the line of the line
10680	Generates the URL for the given title .
10681	Displays the write page
10682	Quote a string with quotes
10683	Returns the preferred type for the given type .
10684	Bootstrap the application .
10685	Get the value of a parameter
10686	Show permission error
10687	Set default permissions
10688	Configure the autoloader .
10689	Setup logging .
10690	Handle an exception
10691	Shutdown the application
10692	Get the SQL statement .
10693	Fix the table name .
10694	Starts the session
10695	Select a single column
10696	Returns an array representation of the exception .
10697	Sends the response .
10698	Checks if the given password is valid .
10699	Checks if the given date is a birth date .
10700	Checks if phone number is mobile .
10701	Checks if a number is a birthday number .
10702	Calculates the quality of the given password .
10703	Load language file
10704	Get user model .
10705	Get the entity manager
10706	Get user form
10707	Apply criteria .
10708	Get multiple records .
10709	Get paginated results .
10710	Get a record by id
10711	Get multiple records .
10712	Create a new model .
10713	Save multiple models .
10714	Update an existing model .
10715	Update an existing model .
10716	Delete many models .
10717	Create a new model instance .
10718	Paginate results .
10719	Add thumbnail .
10720	Remove thumbnail .
10721	Get the label .
10722	Add a count to the query .
10723	Execute raw SQL query
10724	Get number of rows
10725	Returns a list of all history items in the database .
10726	Get all users
10727	Get the year .
10728	Get the month .
10729	Get the day of the date .
10730	Get hour hour .
10731	Returns the number of minutes .
10732	Get the second number of seconds .
10733	Check if the year is a leap year
10734	Sets the lower case .
10735	Sets the upper case .
10736	Compare two values
10737	Parses a string .
10738	Searches for a query .
10739	Returns true if the query is supported .
10740	Initialize parameters .
10741	Build the records for the clause .
10742	Get a value by key
10743	Returns a DateTime object
10744	Get an array of keys
10745	Get an array of objects
10746	Send JSON response to JSON .
10747	Sends an array of items .
10748	Send a new response .
10749	Send a DELETE request .
10750	Send a verbose request .
10751	Initializes the user .
10752	Format the user s state .
10753	Get mobile user .
10754	Get the date of a user .
10755	Builds the table options .
10756	Add a route .
10757	Get totals .
10758	Prepare log headers .
10759	Set a single column
10760	Builds the UPDATE statement .
10761	Encode a string
10762	Set alternative account .
10763	Set payment type
10764	Generate the text .
10765	Generate PNG image
10766	Explode the content .
10767	Normalize account number
10768	Convert an account to an IBAN .
10769	Renders the view .
10770	Resolve view name .
10771	Registers a media type .
10772	Get the media type matching the given data .
10773	Creates a new instance of the given object .
10774	Logs user by cookie
10775	Check if login is required
10776	Creates a Node from an array .
10777	Returns the total size of the image .
10778	Creates a new image .
10779	Add session cookie
10780	Adds the cache headers to the response .
10781	Get asset path
10782	Adds a condition to the query .
10783	Adds a OR condition to the query .
10784	Parses the request URI .
10785	Run a query .
10786	Executes a query and returns the result .
10787	Display online help page .
10788	Get search facets .
10789	Set search facets .
10790	Quote a string
10791	Register Twig extension .
10792	Get user by id
10793	Delete a user .
10794	Records password recovery .
10795	Contact a contact
10796	Displays a classified form
10797	Get the encrypted password .
10798	Convert a string to SQL format
10799	Renders history .
10800	Renders the history table .
10801	Renders the list of actions .
10802	Save historic history
10803	Delete history history .
10804	Get the list of users .
10805	Builds the configuration .
10806	Get the configuration .
10807	Selects the current query
10808	Determines if the request is valid .
10809	Get the list of templates .
10810	Displays the index page
10811	Bind values to SQL query
10812	Perform API call
10813	Call a wrapped method
10814	Set data store
10815	Authenticate an auth method
10816	Write messages .
10817	Write information about a message .
10818	Write error message
10819	Write a comment .
10820	Write a warning message .
10821	Writes a message to a title .
10822	Block messages .
10823	Ask a question .
10824	Confirm a question .
10825	Generates a choice .
10826	Renders a table
10827	Write an array of words .
10828	Sanitize a name .
10829	Convert a directory to a directory .
10830	Convert a path to a file .
10831	Creates a new SplFileInfo object from a SplFileInfo object .
10832	Displays the index page .
10833	Adds a join to the query
10834	Adds a statement to the query .
10835	Compile join statement .
10836	Compile a join statement .
10837	Build ORDER BY clause
10838	Saves a value to the cache .
10839	Delete a cache file
10840	Get raw data
10841	Shows the message .
10842	Refresh price prices .
10843	Refresh product price .
10844	Calculates the amount of attributes .
10845	Refresh product prices .
10846	Restore the word in case .
10847	Run a command .
10848	Get table name
10849	Fill a document .
10850	Get mapping for a given class .
10851	Execute a command .
10852	Echo a content
10853	Set limit .
10854	Build column columns
10855	Returns the string representation of the address .
10856	Check if a given type exists .
10857	Get marked marked as marked as marked as marked .
10858	Executes a callback for a callback .
10859	Cache a marker .
10860	Create a new object .
10861	Creates an instance of the given type .
10862	Returns the hash of this object .
10863	Create an iterator .
10864	Generates the hash of the file .
10865	Sets an instance of the specified property .
10866	Creates a new instance of the class .
10867	Get the list of all records .
10868	Get single record by id
10869	Get user by email
10870	Verifies the password against a hash .
10871	Check if the given login exists .
10872	Check if email exists
10873	Removes user from database
10874	Returns the hash for the given ID .
10875	Decode a hash
10876	Process the approval .
10877	Checks if a hash is valid .
10878	Process forgotten password .
10879	Convert an exception to an array
10880	Renders the previous exception .
10881	Checks if the current path is valid .
10882	Aggregate the values of the given values .
10883	Report an exception .
10884	Report an error report
10885	Make a request
10886	Start a session
10887	Get session by id
10888	Add a new option
10889	Parses the options and returns an array
10890	Get user input .
10891	Sets the syntax of the command
10892	Check if the value is prime
10893	Adds a URI to the collection .
10894	Get a URI by name
10895	Add collection to collection
10896	Set the host .
10897	Set the scheme .
10898	Get the scheme .
10899	Saves the entity
10900	Validates the given field .
10901	Load all entities .
10902	Load a relation .
10903	Delete a record
10904	Returns true if the directory is empty .
10905	Returns a list of files .
10906	Remove directory .
10907	Get parameters from server
10908	Instantiate a new instance .
10909	Injects the bindings .
10910	Add a decorator .
10911	Add markers to the type .
10912	Converts a date time to UTC .
10913	Set a variable
10914	Execute the application .
10915	Find the controller for the given object .
10916	Logs script output .
10917	Check if module is active
10918	Retrieves a user entity .
10919	Get the list of words from the language .
10920	Get language string
10921	Sets the column headers .
10922	Sets the columns .
10923	Renders the table
10924	Renders the cell .
10925	Renders a row
10926	Renders a cell .
10927	Update width .
10928	Execute a SQL statement
10929	Returns the number of rows in the database .
10930	Returns the number of rows in a table .
10931	Returns the number of rows in a table .
10932	Returns true if the given row contains the given row .
10933	Resolve parameters from URI
10934	Check if PHP version is a PHP version .
10935	Check user email .
10936	Authenticate a user .
10937	Get email email address .
10938	Populate log entries
10939	Get the timestamp from the cache .
10940	Get the response .
10941	Get the modified response .
10942	Reset the timestamp .
10943	Encodes a raw string .
10944	Get the prerender event .
10945	Sets the prerender event .
10946	Get POST parameters
10947	Get the allowed content types .
10948	Get CSRF token
10949	Loads the CSRF token .
10950	Convert two strings to an array .
10951	Validates a CSRF token
10952	Write the body to the response .
10953	Check if the request has been modified .
10954	Check if the request matches the given request .
10955	Redirect to the response .
10956	Replace placeholders in placeholders
10957	Moves the move to the file .
10958	Process files .
10959	Process a file .
10960	Prepare the file path to a file .
10961	Restores the data from the response .
10962	Check if the log file is valid .
10963	Get the URI string
10964	Get the host name
10965	Get standard port
10966	Get the scheme .
10967	Check if the current request is secure
10968	Get request path
10969	Get query string
10970	Get request parameter
10971	Get header value
10972	Get auth username
10973	Get auth password
10974	Save the location
10975	Populates the location owner .
10976	Send verification .
10977	Verify a verification code
10978	Sets the verification code .
10979	Handle the post persist event .
10980	Removes the entity .
10981	Returns a list of items .
10982	Get memory info
10983	Get disk disk usage
10984	Get Host ID
10985	Check if PHP version is PHP version .
10986	Get max size
10987	Dump a value to a Dump .
10988	Build the configuration tree .
10989	Sets data to the container .
10990	Checks if the given extension exists .
10991	Get file name .
10992	Splits the file name .
10993	Get file size
10994	Returns the size of the file .
10995	Write content to file
10996	Prepend a file to the filesystem .
10997	Read data from file
10998	Get line count
10999	Check if the given locale matches the given locale .
11000	Returns the locale for the given Accept header .
11001	Set the locale .
11002	Set redirect URL
11003	Create a new url
11004	Returns the path to the given url .
11005	Set the sandbox .
11006	Set the referrer policy .
11007	Requires a set of URIs .
11008	Add report uri
11009	Add a plugin type
11010	Add default src
11011	Get the header value .
11012	Import schema file .
11013	Import data from database
11014	Sets the value of this object .
11015	Convert seconds to seconds
11016	Add default listeners .
11017	Run the controller .
11018	Loads a view
11019	Get route path
11020	Handle the event .
11021	Find tasks .
11022	List all tasks .
11023	Run a task
11024	Build group by clause .
11025	Checks if a facet exists .
11026	Displays the form field .
11027	Loads the city .
11028	Sets the form field .
11029	Generate the form field .
11030	Get submit model name .
11031	Ensure that the form fields are valid .
11032	Check if the given attribute is supported .
11033	Initializes configuration .
11034	Load parameters from file
11035	Check error level
11036	Returns the label for an element .
11037	Stores a reduce value .
11038	Walk through an array of nodes
11039	Stores a node .
11040	Walk through a leaf node
11041	Stores a leaf node .
11042	Store text in text
11043	Check if a character is a space
11044	Merge the mask tree with the given mask .
11045	Read content from container
11046	Parse the list of containers .
11047	Returns the value of a variable .
11048	Add system variables
11049	Parses information into an array
11050	Converts spaces to spaces .
11051	Builds the mask of the given entry
11052	Builds the contents of a template .
11053	Returns a string representation of a datatype .
11054	Prints the contents of a table
11055	Get an asset by name .
11056	Generates a URL .
11057	Generate a path .
11058	Get data store
11059	Get all files in a directory
11060	Get the value of the string .
11061	Returns an array of supported encoding types .
11062	Check if encoding is supported
11063	Returns the real encoding for the given encoding .
11064	Convert the string to upper case
11065	Get icon .
11066	Adds a method to the collection .
11067	Compile the mixins .
11068	Sends a message to the gateway .
11069	Returns the status of the given identifier .
11070	Set a boolean value .
11071	Set integer value
11072	Set a float value
11073	Sets a string value
11074	Set a date time
11075	Set the value of an array .
11076	Get http client
11077	Get http adapter
11078	Formats a phone number .
11079	Get month name .
11080	Get day name
11081	Generate a random GUID
11082	Generate a GUID for a given namespace .
11083	Generate a password
11084	Delete a directory
11085	Convert bytes to bytes .
11086	Get the octet of the given option
11087	Get the user platform .
11088	Get the user browser .
11089	Checks if the given date is a valid holiday .
11090	Get the greeting name .
11091	Calculate distance between two points
11092	Translate a message into a human readable text .
11093	Rewrite a string
11094	Returns a DateTime object from a birthday number .
11095	Generate a random pin
11096	Send a chat message .
11097	Returns the seconds between two dates .
11098	Calculates the time between two days .
11099	Returns the maximum number of items in the array .
11100	Fill an array with the given size .
11101	Returns the country code for the given code .
11102	Returns the country code for the given code .
11103	Filter results by scope .
11104	Registers the JavaScript client .
11105	Adds a table to the query .
11106	Adds a condition to the query .
11107	Check if the request is throttling .
11108	Log a request .
11109	Get extensions .
11110	Find extensions .
11111	Run migrations .
11112	Get the list of migration files .
11113	Run migrations .
11114	Rollback migrations .
11115	Reset migrations .
11116	Drops the repository .
11117	Rollback migrations .
11118	Run the migration .
11119	Run migration .
11120	Runs a migration file .
11121	Get pending migrations .
11122	Returns the last location of the movement .
11123	Get the current game machine .
11124	Create a new notification .
11125	Lists all settings .
11126	Update a setting .
11127	Render view .
11128	Get class name
11129	Convert arguments to string
11130	Match template .
11131	Returns the root path for the given path .
11132	Execute the query
11133	Calculates the calculation
11134	Calculate the SELECT query
11135	Calculate the update query
11136	Calculate the INSERT query
11137	Calculate DELETE query
11138	Calculate the create table .
11139	Get the value of a set item
11140	Join data from an array
11141	Get the type of a property
11142	Returns the attributes for the given properties .
11143	Run the process .
11144	Process a class
11145	Scan directory recursively
11146	Move a map to a map .
11147	Get an array of Display objects from a given location .
11148	Returns an array of display objects .
11149	Processes the request
11150	Set the cache state .
11151	Get the API instance .
11152	Set request parameters
11153	Returns a boolean value .
11154	Returns a random key by the given array .
11155	Get the value of the given power .
11156	Get the value of an array .
11157	Handle an HTTP request .
11158	Get video id
11159	Get API request .
11160	Resolves a query .
11161	Get the replacements .
11162	Get key from config
11163	Get response format
11164	Get the published date format .
11165	Get duration format .
11166	Build header .
11167	Generate the API API .
11168	Returns an associative array as an associative array .
11169	Bootstrap model .
11170	Refresh the current session .
11171	Get filters .
11172	Encrypt data
11173	Decrypt data from a string
11174	Hash a string
11175	Verify the given hash .
11176	Generate random string
11177	Create a new instance .
11178	Get api api
11179	Get value from cache
11180	Sets a value to the cache .
11181	Get all actions
11182	Cache actions .
11183	Get all actions .
11184	Generate actions .
11185	Add a new match
11186	Set the private data for the current user .
11187	Get a value by key
11188	Set a value in an array
11189	Parse json string
11190	Get transaction data
11191	Process the route
11192	Check if route exists
11193	Sets the path to the URL .
11194	Fixes tree structure
11195	Returns the result as an array .
11196	Check if the given name exists .
11197	Add an item to the collection .
11198	Deletes a resource .
11199	Deletes a container .
11200	Check if a given item is a singleton .
11201	Fetches the offset
11202	Convert collection to array
11203	Returns the maximum value of the collection .
11204	Add a where condition to the collection .
11205	Merge the given data .
11206	Apply a callback to the collection .
11207	Get the iterator .
11208	Get value from data
11209	Authenticate a subject
11210	Adds a registry to the registry .
11211	Check if a cache key exists .
11212	Get the value from the cache
11213	Removes a lookup from the registry .
11214	Returns the number of records in the database .
11215	Call static method
11216	Set a singleton name .
11217	Get route method .
11218	Dispatch the route .
11219	Invoke a callback for a callback
11220	Clean all resources
11221	Check if route is valid
11222	Checks if the request is valid .
11223	Checks if route routes are valid
11224	Get regex routes .
11225	Get error callback
11226	Get short name .
11227	Set property properties
11228	Get the URL for a section .
11229	Initialize the client .
11230	Get a section .
11231	Post a section .
11232	Gets the location of an IP address .
11233	Run a command .
11234	Check if the value is a valid value .
11235	Check if a reference is a reference
11236	Redirect to URL
11237	Save URL to session
11238	Get redirect url
11239	Run the validation .
11240	Define a custom check .
11241	Perform validation rule
11242	Call the given field
11243	Set direction direction
11244	Set up the start of the game
11245	Get all migrations .
11246	Get all migrations .
11247	Get last migration
11248	Returns an array of batch batches .
11249	Log a migration file .
11250	Delete a migration
11251	Get the last batch number of batches .
11252	Check if the repository exists .
11253	Run a transaction .
11254	Drops the table .
11255	Run the given class .
11256	Resolve a class instance .
11257	Get all files in the filesystem .
11258	Creates an invoker .
11259	Converts a string to snake_case .
11260	Convert a snake name into camelCase .
11261	Adds a method to the collection .
11262	Main console command .
11263	Check if an instance is unique
11264	Repeats a property .
11265	Load model .
11266	Create a library object
11267	Render a view .
11268	Creates a new instance .
11269	Returns the path to the given location .
11270	Displays a template .
11271	Render a template
11272	Handle response content .
11273	Sends the request .
11274	Install the migration .
11275	Build the response .
11276	Get error message
11277	Get all stubs .
11278	Populate stub .
11279	Applies data to the view .
11280	Returns a string representation of an error
11281	Returns a random float
11282	Populate the model data
11283	Populate model attributes .
11284	Populates non - empty model data .
11285	Check if the attribute is a placeholder .
11286	Get the query object for the given attribute .
11287	Get custom attribute value
11288	Get the relation attribute .
11289	Retrieves a model from the database .
11290	Get all models from the model .
11291	Get attribute data
11292	Get attribute data
11293	Get attribute data
11294	Get model attributes .
11295	Get attribute value
11296	Get attribute value
11297	Get models from table
11298	Get all models for a given attribute .
11299	Get full class name
11300	Fetch data from database
11301	Get field name .
11302	Load all model attributes
11303	Check if a path exists
11304	Get the name of a string .
11305	Get email address
11306	Get the player data from the database .
11307	Send a message .
11308	Create a new entity from a body .
11309	Populates stub .
11310	Set multiple messages .
11311	Get message from code
11312	Build auth string
11313	Build base URL
11314	Returns normalized URL .
11315	Normalize the parameters .
11316	Handle a credit request .
11317	Log a message .
11318	Get base data
11319	Execute a query
11320	Get one row from the database
11321	Get a single row
11322	Returns the annotation class for the given action .
11323	Returns the annotation method for the given request method .
11324	Convert string to camelCase
11325	Check if a string contains a suffix
11326	Remove suffix from string
11327	Returns the list of locations .
11328	Sets the form field .
11329	Get the human readable value .
11330	Gets the multi - line of the field .
11331	Sets the model .
11332	Sets the attributes of the model .
11333	Set field format
11334	Get formatted value .
11335	Get the form value .
11336	Get base namespace
11337	Get the migration class name .
11338	Get the primary key .
11339	Get module setter .
11340	Generate rules .
11341	Get model map
11342	Sets the designer .
11343	Add a form field
11344	Removes a field from the list .
11345	Renders the form .
11346	Render fields .
11347	Render a field
11348	Get field by name
11349	Set field data
11350	Get field data
11351	Validates the form
11352	Get all errors
11353	Compress the data into a file
11354	Generates a proxy class .
11355	Get the value of the item .
11356	Get input filter .
11357	Add a new block
11358	Remove a block .
11359	Updates the current page .
11360	Sets the sort keys .
11361	Check if the element is clicked .
11362	Generate a mail tag
11363	Generate mail list
11364	Generate a header tag
11365	Returns a list of mail addresses
11366	Formats text .
11367	Get mime type
11368	Duplicate an array
11369	Checks if the given arguments are valid .
11370	Convert a char to UTF - 8 characters .
11371	Delete a menu
11372	Handles the class definition .
11373	Creates a method injection .
11374	Get the inject hint hint .
11375	Uploads a file
11376	Load sub modules
11377	Get text action
11378	Add text to page
11379	Add text to the page
11380	Delete text from page
11381	Render the form .
11382	Create a pipeline .
11383	Build a middleware instance .
11384	Resolve all stages .
11385	Creates a signed URL for the Google API .
11386	Retrieves the order id from the database
11387	Hydrate the file .
11388	Create a BlockManager instance .
11389	Get the data of the DataInterface
11390	Get the current status
11391	Creates the main menu .
11392	Get debug instance
11393	Activate error handler
11394	Sets the report log .
11395	Returns the error code for the given error code .
11396	Set error name
11397	Parses a FaultException
11398	Remove block .
11399	Get custom field by type
11400	Set data from data
11401	Sets the start at the start of the start point .
11402	Get application code
11403	Get the code for the application .
11404	Change the current theme .
11405	Create cache manager
11406	Creates a new Item .
11407	Trigger event events .
11408	Bootstrap the application .
11409	Show the view .
11410	Update a tag .
11411	Get users of a tag .
11412	Bulk batch tags .
11413	Bulk batch tags .
11414	Decrypt data .
11415	Calculates the bonus for the given order .
11416	Save log entry
11417	Add piwik template
11418	Create a new instance
11419	Get the values from the database .
11420	Get the cache item
11421	Builds the SELECT SQL query
11422	Get a specific OpenID
11423	Get a list of users .
11424	Gets a list of all OpenGraphs .
11425	Get a remark .
11426	Get blacklist list
11427	Convert this object to an array .
11428	Render the select box .
11429	Run the route .
11430	Run a route .
11431	Get a GET request .
11432	Get HEAD request .
11433	Search for keywords .
11434	Registers the resources .
11435	Delete a file
11436	Remove directory .
11437	Initializes the configuration .
11438	Get default value
11439	Get error messages .
11440	Get the list of info
11441	Sets the registry
11442	Returns the registry
11443	Get message by id
11444	Set the transport transporter .
11445	Get the transport instance .
11446	Get the spooler instance .
11447	Lists all fixtures .
11448	Action for select
11449	Fill the attributes .
11450	Get the parent URI .
11451	Get the parent field name .
11452	Get all actions .
11453	Get the public id attribute .
11454	Autoload the query .
11455	Get device summary
11456	Get a list of device devices .
11457	Get a page summary
11458	Get a list of page statistics .
11459	Attach a file to this file .
11460	Send the email to the client
11461	Enables a state .
11462	Logs a notice .
11463	Display an exception .
11464	Throw an error .
11465	Asserts that the given expression is an exception .
11466	Write a log file
11467	Initializes the view .
11468	Display a list of forums .
11469	Show the forum .
11470	Store a discussion .
11471	Show the edit form .
11472	Update the question .
11473	Destroy a question .
11474	Sets the object .
11475	Sets the object type .
11476	Authenticate the current user
11477	Boot the plugin .
11478	Add a template to the template .
11479	Send a request to the API .
11480	Get json body
11481	Save page .
11482	Save all pages .
11483	Get a factory instance .
11484	Resolve function arguments .
11485	Resolves a class argument .
11486	Resolve a non - null argument .
11487	Call the resolve callback for the given key .
11488	Set the session name .
11489	Starts the session .
11490	Destroy a cookie .
11491	Get all keys
11492	Removes a session
11493	Remove all keys .
11494	Logs a message .
11495	Show the view .
11496	Get end time
11497	Fetch all records
11498	Finds a column by its value .
11499	Performs a bulk insert query
11500	Setup the database adapter
11501	Load the container .
11502	Show a comment .
11503	Creates a form to delete a comment .
11504	Set the slots .
11505	Returns an array of slots .
11506	Sets the specified slot .
11507	Sends the request
11508	Validate a token
11509	Parse the request body from the request .
11510	Parses the given PHP expression .
11511	Unescape a string
11512	Handles the request .
11513	Reset the password reset token .
11514	Get named parameters .
11515	Get named parameter .
11516	Updates metadata .
11517	Generate icon icon .
11518	Generates the HTML for the HTML document .
11519	Generate icon icon .
11520	Generate Windows Pinicon icon .
11521	Removes an event .
11522	Get a single item
11523	Parse bot names .
11524	Parse a bot .
11525	Get DOM document
11526	Resolves a template .
11527	Registers package helpers .
11528	Register custom helpers .
11529	Replace variables in a string
11530	Set permission permissions .
11531	Creates a path to a directory .
11532	Cascade a folder .
11533	Read a file .
11534	Write content to file
11535	Bootstrap application .
11536	Cast a DateTime object to a Time instance .
11537	Get request parameter
11538	Sets the items
11539	Add a block .
11540	Resolve options .
11541	Edit a profile .
11542	Confirm user email .
11543	Change user password .
11544	Confirm user password reset .
11545	Change email confirmation .
11546	Change security question
11547	Add a group
11548	Get a group by name .
11549	Execute an action .
11550	Prepare pagination list
11551	Saves a Consignment .
11552	Removes a Consignment .
11553	Dispatch a notification .
11554	Cancel a Consignment .
11555	Get bonus totals
11556	Finds a namespace parameter .
11557	Detects the namespace for the given settings .
11558	Saves the instance
11559	Sets the week words .
11560	Set the shortcuts .
11561	Set the units .
11562	Get the weeks for the week
11563	Generates line breaks
11564	Process a word
11565	Get the application instance .
11566	Registers a set of mods .
11567	Sets the dependency injection .
11568	Returns the number of records .
11569	Search for a given query .
11570	Load an attachment .
11571	Adds a block to the page .
11572	Process the given structure .
11573	Send HTTP headers
11574	Open a button tag .
11575	Register a new Registration .
11576	Connect to a user
11577	Confirm user confirmation .
11578	Resolves a new confirmation form .
11579	Configures the log handler .
11580	Get the status of the tracker .
11581	Bootstrap application .
11582	Get the service definition .
11583	Sets the exchange data .
11584	Executes an array of competencies
11585	Set spool directory
11586	Start a new task
11587	End a task
11588	Returns the duration of the task .
11589	Returns the matrix .
11590	Convert a title to a string
11591	Upload a file .
11592	Get full path .
11593	Get page action
11594	Create a new page .
11595	Get page id
11596	Executes the breakdown of the given bonus .
11597	Set cache type
11598	Get cache object
11599	Run the application .
11600	Get config value
11601	Get base URL
11602	Get component root .
11603	Alters the page s pages .
11604	Notify the callable .
11605	Get hash generator .
11606	Returns the PHP code for the class .
11607	Renders a profile .
11608	Confirm email confirmation .
11609	Disconnect a user
11610	Connects to the client .
11611	Moves the uploaded file .
11612	Resolve the container .
11613	Create a new nickname .
11614	Update a nickname .
11615	Delete an account
11616	Invoke an invite
11617	Get a list of records
11618	Compress a phase
11619	Get the current site .
11620	Returns the authentication object .
11621	Get the view .
11622	Get the API instance .
11623	Closes the session .
11624	Get the content for a given location .
11625	Process a content schedule .
11626	Check if the process is running
11627	Lock the job .
11628	Get lock file
11629	Create a new operation
11630	Returns a list of transactions .
11631	Returns a list of transitions for a given period .
11632	Group PGP data .
11633	Save log entry
11634	Binds a device to a device .
11635	Get page by device id
11636	Get device by page id
11637	Returns the table registry .
11638	Get all the authorities
11639	Get the column settings .
11640	Returns the data for the current page .
11641	Get column names .
11642	Get total number of items
11643	Returns the formatter instance .
11644	Get the connection .
11645	Adds an operation to the given method .
11646	Generates the doc block .
11647	Parse a service file
11648	Authenticates the user against the database .
11649	Creates a database select query .
11650	Validates a result
11651	Create a product from the given array .
11652	Initialize the REST route .
11653	Initializes the database resource .
11654	Initializes the multi - dimensional database resources .
11655	Parse the DSN .
11656	Get the name of the widget
11657	Make a redirect
11658	Add entries to the file
11659	Remove entries from a file
11660	Read a string from an XML string
11661	Read from file
11662	Save the given properties into a string .
11663	Save properties to file
11664	Returns true if the element is valid
11665	Filters the given element .
11666	Add a function .
11667	Add default function .
11668	Create a remote client .
11669	Creates a new aggregate connection .
11670	Get client by selector
11671	Execute raw command
11672	Handle error response .
11673	Checks if an offset exists
11674	Sets the configuration options .
11675	Get homepage template
11676	Returns the translation for a given locale .
11677	Check if a locale is loaded .
11678	Load a language file
11679	Log a message .
11680	Set path .
11681	Read data from cache
11682	Initialize the request
11683	Push a message to the stack .
11684	Registers commands .
11685	Get the cache path
11686	Get location of a location .
11687	Returns a list of all the periods in the collection .
11688	Set the center .
11689	Checks if the current period is valid .
11690	Process auth action
11691	Get the metadata of the metadata .
11692	Builds a list of requests from the API .
11693	Run the compilation .
11694	Returns a compiler instance .
11695	Restores cache files .
11696	Normalize source input
11697	Translate a key .
11698	Get a service by name .
11699	Add a new service
11700	Get cache pool .
11701	Get component by name
11702	Add a new element
11703	Returns the container .
11704	Gets the form for this object
11705	Sets the sync entity .
11706	Validates the given storage .
11707	Lists all users .
11708	Creates a new user .
11709	Update user profile .
11710	Confirm user confirmation .
11711	Block a user .
11712	Performs AJAX validation .
11713	Get calendar data
11714	Get access token from server
11715	Get the cached token .
11716	Run a command .
11717	Load the command .
11718	Fetches the data for the current period .
11719	Save queue .
11720	Count posts .
11721	Gets the categories for a given entity .
11722	Get all posts .
11723	Collects the activity .
11724	Prepares the path to the client .
11725	Assign a variable to the view .
11726	Render the view
11727	Sets the taxonomy id .
11728	Fetch value from attribute
11729	Put an attribute
11730	Validate password .
11731	Generates a new slot .
11732	Generate blocks .
11733	Publishes a page .
11734	Hide page .
11735	Updates an array of DSN objects .
11736	Set the address .
11737	Get the domain name .
11738	Normalize the address .
11739	Returns the MD5 address for the given scheme .
11740	Export contact .
11741	Get person .
11742	Add page to collection
11743	Removes a page .
11744	Registers a new account .
11745	Get SHA1 information
11746	Get the device .
11747	Get group .
11748	Get the page .
11749	Get the materialized material .
11750	Get the relation .
11751	Get stats .
11752	Open a comment
11753	Close a comment
11754	List comments .
11755	Mark a comment .
11756	Unmarks a comment .
11757	Delete a comment
11758	Reply a comment
11759	Delete a reply .
11760	Returns an array representation of the collection .
11761	Set a property value
11762	Get property value
11763	Replaces a string with the given replacement .
11764	Handle the stage .
11765	Remove an expression .
11766	Returns the index of the given expression .
11767	Clears all servers .
11768	Updates the sentinel .
11769	Get the connection by role
11770	Switch the connection to the current node .
11771	Retrieves the response for the given command .
11772	Resolve module dependencies .
11773	Find component by type
11774	Calculates the maximum percentage for the given user .
11775	Check if setting is enabled
11776	Get helper .
11777	Append the choice to the form .
11778	Starts the application .
11779	Builds the stub class .
11780	Hydrate an entity from database .
11781	Convert an entity to an entity .
11782	Generate the source from the tree .
11783	Add a new page
11784	Update a page .
11785	Get the pagination results .
11786	Delete a page
11787	Returns the age of the given birthday .
11788	Updates the totals for the given amount .
11789	Show files .
11790	Clear all clearings
11791	Set the email address
11792	Set email address
11793	Set the email address
11794	Set the bcc recipients
11795	Set attachment attachment
11796	Set subject .
11797	Set text .
11798	Set HTML text
11799	Set the reply to the email .
11800	Replace the content with the given string .
11801	Hook for rendering template
11802	Import an object
11803	Import a path from the app
11804	Check if a relation has a relation .
11805	Get a single query .
11806	Execute a query .
11807	Get a list of records .
11808	Paginate the query .
11809	Fill the relation config .
11810	Load a foreign object .
11811	Load local object .
11812	Sets the log entry
11813	Get a list of all types .
11814	Displays the installation step .
11815	Displays the setup step .
11816	Displays the step .
11817	Generate a step .
11818	Sets the service provider .
11819	Add application dependencies .
11820	Get default value
11821	Prepare the items
11822	Render admin header
11823	Replace the middleware with the given middleware .
11824	Detects the encoding of the file .
11825	Add the URI to the URI .
11826	Removes a file .
11827	Returns an array of BOMs .
11828	Set the URI .
11829	Get tag by tag
11830	Expands the item .
11831	Create a new command instance .
11832	Get the cache instance .
11833	Restore config .
11834	Store the module configuration .
11835	Save user .
11836	Add a new action
11837	Get logo url
11838	Sets a value to the cache .
11839	Convert an image to a JPEG format
11840	Get size of image
11841	Extracts the input from the request .
11842	Get bind data
11843	Gets the CID for the given data .
11844	Add a new person .
11845	Get random address
11846	Reset a column
11847	Saves row data
11848	Check if this row is writable
11849	Get the settings from the given namespace .
11850	Creates a response object
11851	Show the message .
11852	Sets the layout .
11853	Redirect to the given URI .
11854	Get header by name
11855	Get the path of the request
11856	Check if the request is an AJAX request
11857	Remove a cookie from the response .
11858	Get handler object
11859	Returns the handling of the handling object .
11860	Set the relation object .
11861	Gets the foreign key .
11862	Sets the value of a data item .
11863	Set the handled data item .
11864	Save session data
11865	Get session data
11866	Lock a session identifier
11867	Unlock a session identifier
11868	Destroy a session identifier
11869	Clear old files
11870	Shows the form .
11871	Builds the form field .
11872	Sets the data key .
11873	Get the access token .
11874	Refresh the access token .
11875	Get module dir
11876	Get the dump of a variable .
11877	Get the query result
11878	Gets the dump of a variable .
11879	Gets the stack trace
11880	Get the console application .
11881	Run the application .
11882	Prepare custom field options
11883	Get ticket cache key
11884	Get module handler
11885	Add a placeholder .
11886	Add a child .
11887	Get the user s owner .
11888	Gets the username for the user .
11889	Get pagination .
11890	Add required fields
11891	Creates a form field .
11892	Creates a new custom field group .
11893	Creates a form to edit a custom field .
11894	Encrypt data
11895	Decrypt a string
11896	Generate the IV .
11897	Get the status of the log .
11898	Calculates the end time of the interval .
11899	Get duration .
11900	Determine if the current record is recent .
11901	Builds the URL
11902	Cache content .
11903	Returns the description of the LogInterface
11904	Get log model
11905	Get field type
11906	Handle the response .
11907	Builds the bootstrap application .
11908	Get the value of the changed file .
11909	Get required parameters .
11910	Get default parameters
11911	Trims a string .
11912	Set industry industry .
11913	Returns the current entry
11914	Add a dynamic container
11915	Creates a new instance from a reader .
11916	Return a JSON response .
11917	Create a new instance of the query .
11918	Registers a function .
11919	Returns an HTML attribute .
11920	Remove page from page .
11921	Returns the difference between two arrays .
11922	Returns the amount of this unit .
11923	Returns the price of the cart .
11924	Updates the current page .
11925	Generate the generated files .
11926	Set the autoload directory .
11927	Run the console command
11928	Gets the data interface for this object
11929	Set data interface
11930	Returns active custom fields
11931	Generates a new field type .
11932	Generates a field option
11933	Render the view .
11934	Walk through the array
11935	Get the primary key .
11936	Get primary key .
11937	Finds and executes a query
11938	Find all records
11939	Find a record by its primary key
11940	Returns the URL for the given code
11941	Validates an action .
11942	Validates the given request .
11943	Validates the URL .
11944	Validates the post parameter .
11945	Handle event message .
11946	Get current user .
11947	Get the priority .
11948	Returns the signature for the request .
11949	Create base uri string
11950	Build authorization header .
11951	Get OAuth params
11952	Replace placeholders in a SQL statement .
11953	Deletes data from database
11954	Reset all properties .
11955	Generate the route .
11956	Add a new queue
11957	Add a renderer
11958	Remove an element from the list
11959	Remove an element from the array .
11960	Reduce each element in the collection
11961	Iterates over each element in the collection .
11962	Parse the connection configuration .
11963	Set parameter value
11964	Check connection source
11965	Generates a hash for the given password .
11966	Render the slots .
11967	Get pid by name
11968	Get auth class
11969	Set auth class
11970	Extend the expiration time .
11971	Handle the command .
11972	Validate the parameters .
11973	Check if the parameter is valid .
11974	Determine if the param is valid .
11975	Determine if the second parameter is valid .
11976	Handle command help .
11977	Get the interface object
11978	Transforms a message .
11979	Transform a message into an array .
11980	Performs a query .
11981	Check if a resource is accessible .
11982	Acquire a resource .
11983	Get config value
11984	Bootstrap application .
11985	Scan file format
11986	Read data from the stream .
11987	Determines if the line ends with the given line .
11988	Reads the next line .
11989	Sorts an entity .
11990	Toggle a filter .
11991	Validate slug .
11992	Returns an array of resource objects .
11993	Order by key
11994	Write data to the stream .
11995	Returns an array of catalog data
11996	Generate Doctrine Query
11997	Generate Doctrine Query
11998	Generate a SQL query .
11999	Performs a query on the database .
12000	Get Doctrine Query
12001	Converts a Doctrine entity to a Doctrine entity .
12002	Generate a random hash
12003	Get session key
12004	Convert object to array
12005	Archive a file .
12006	Returns an array of authority tree .
12007	Get the permissions for the authenticated user .
12008	Get all messages
12009	Set title .
12010	Add a link .
12011	Add block section .
12012	Add Doctrine Doctrine configuration .
12013	Instantiate a compiler .
12014	Execute a connection
12015	Assert that the client is valid .
12016	Uninstalls the command .
12017	Calculate the request filename
12018	Setup the queue .
12019	Add properties to the request .
12020	Add API method .
12021	Generates the parameters for the operation .
12022	Adds the required scope for the operation .
12023	Adds the accessor method to the constructor .
12024	Adds the constructor method .
12025	Generate the query fragment
12026	Generates the method docblock .
12027	Add method to execute method
12028	Add async async method .
12029	Generates a parameter block .
12030	Generates a filter method .
12031	Adds a method to the response .
12032	Adds a method to the application .
12033	Adds the async method to the asynchronous response .
12034	Adds the process method to the response .
12035	Create method generator .
12036	Add a new exception to the response .
12037	Generate the class
12038	Drops a session
12039	Send HTTP headers
12040	Get current user
12041	Returns the full name of the user .
12042	Updates a profile .
12043	Search for users .
12044	Determine if the user is visible .
12045	Determine if the user is deleted .
12046	Get all thumbnails for a given video .
12047	Generates a range .
12048	Render a form element
12049	Shows an image .
12050	Initializes the HTTP client .
12051	Create a renderer exception .
12052	Get the relation field name .
12053	Sets a module .
12054	Remove a container .
12055	Get module by name
12056	Get the labels for this object .
12057	Get the target .
12058	Get the list of possible targets .
12059	Sets the deletion target .
12060	Get the target label .
12061	Get the permissions for a given route .
12062	Migrate a module
12063	Check if a post has been saved .
12064	Set flash bag
12065	Destroy session data
12066	Invoke an RPC call
12067	Fetch projects .
12068	Fetches a project .
12069	Update project .
12070	Create a project .
12071	Returns an array of configuration parameters for the query .
12072	Get the list of ids that have been created .
12073	Gets the list of all products for this customer .
12074	Index all children .
12075	Show a child .
12076	Store a child .
12077	Store a new child .
12078	Associate a child .
12079	Detach a child .
12080	Update a child .
12081	Deletes a child .
12082	Get all media .
12083	Get all media objects .
12084	Get an object from a subject .
12085	Stores the given object .
12086	Save the configuration
12087	Create a new validator
12088	Determine if the user can view the forum .
12089	Destroy user policy .
12090	Execute the request .
12091	Get the client .
12092	Generate route .
12093	Get domain URL .
12094	Returns the MD5 URL for the given address .
12095	Shortcut to short text
12096	Generates a signature for the given parameters .
12097	Checks if signature code is valid
12098	Get the human readable date .
12099	Calculates the price for the given tax .
12100	Calculates the price for the given price .
12101	Set Accept header
12102	Set max size
12103	Convert size to bytes .
12104	Handle the request .
12105	Fire an exception .
12106	Throw an error .
12107	Get a page by name .
12108	Change page from request .
12109	Renames a page .
12110	Delete a page
12111	Persist all pages .
12112	Get a foreign model .
12113	Get an array of foreign keys .
12114	Load foreign data
12115	Returns an array of exception tree
12116	Returns the short name of the given name .
12117	Display the console exception .
12118	Get parameter value
12119	Get customer map
12120	Sets the content of the view .
12121	Get last modified date .
12122	Sets the last modified time .
12123	Update cache entry .
12124	Returns the list of languages .
12125	Returns the alias for the given language .
12126	Validates the given value
12127	Get a setting
12128	Run the process .
12129	Sets the failed failure .
12130	Clears the timer .
12131	Handle the error .
12132	Add parameters to url
12133	Create a settings service
12134	List all questions .
12135	Show a question .
12136	Edit a question .
12137	Update a question .
12138	Delete a question .
12139	Renders the widget .
12140	Get a message .
12141	Sign up a user .
12142	Get the provider instance .
12143	Get the user .
12144	User login .
12145	Set a setting
12146	Get setting value
12147	Check if an exception exists .
12148	Get exception code
12149	Get reserved codes .
12150	Checks for reserved codes .
12151	Get the related role type .
12152	Determine if the parent type is set .
12153	Returns the list of available roles .
12154	Get required roles .
12155	Get the initial roles .
12156	Get owner object .
12157	Get object type
12158	Gets the level of this object .
12159	Get the title .
12160	Get detail widget
12161	Returns true if the collector is childless .
12162	Get form instance .
12163	Get form segment .
12164	Creates an authorization table .
12165	Creates the authorization permissions table .
12166	Create menus .
12167	Create menu group
12168	Creates a new proxy for the given group .
12169	Creates a new property value
12170	Create tables .
12171	Get default factory
12172	Get the default factory for a callable .
12173	Add reflection arguments .
12174	Add a scalar argument .
12175	Adds a scalar argument .
12176	Adds a new class argument .
12177	Adds a new argument .
12178	Get the Individual object
12179	Get the email address .
12180	Get the taxonomy package .
12181	Returns the primary key for the given object .
12182	Returns the primary key of this object .
12183	Get a single relationship .
12184	Get a relationship by id
12185	Returns the ID for the given query .
12186	Get the preferred role id .
12187	Set default options
12188	Get the related object .
12189	Get primary relation .
12190	Check if this node is active
12191	Builds the error message .
12192	Saves data into database .
12193	Called when an exception is thrown .
12194	Instantiate a class
12195	Extract arguments from array
12196	Get the current current request
12197	Converts a JSON string to a serialized version .
12198	Serialize a block .
12199	Merges two JSON objects .
12200	Get data from object
12201	Show the media .
12202	Create a new Response instance .
12203	Register the edit fields for a user .
12204	Make the given text .
12205	Generate the response .
12206	Create a pagination .
12207	Refresh the source .
12208	Get the singleton widget
12209	Get the account s account
12210	Save transaction logs .
12211	Add snippet .
12212	Get the snippet .
12213	Get a middleware by name .
12214	Run a route .
12215	Compile configuration .
12216	Generate configuration files .
12217	Register the error handler .
12218	Shutdown shutdown handler
12219	Handle error handler
12220	Handle an exception .
12221	Log an exception .
12222	Prepare the error body .
12223	Get the current query .
12224	Paginate the query .
12225	Retrieves the middleware for the request .
12226	Inserts a new element into the DOMDocument .
12227	Delete a node
12228	Removes a node from this node .
12229	Replace this node with another one
12230	Deletes all nodes from the given path .
12231	Copies the attributes from an XML string .
12232	Clone child nodes from XML .
12233	Moves a node to another .
12234	Returns the first node of the given path .
12235	Inserts a XML document into the DOMDocument .
12236	Inserts a node to the specified target
12237	Set attribute attributes
12238	Returns the content of this node .
12239	Returns the inner XML string .
12240	Get all elements of a class
12241	Add a class
12242	Returns a formatted string as a formatted string .
12243	Loads the XSL document .
12244	Sort nodes by path
12245	Sorts the children
12246	Sorts an array
12247	Get node by name
12248	Returns a single xpath matching the given string
12249	Returns an array containing all elements of the given attribute
12250	Get attribute value
12251	Get node value
12252	Add missing missing attributes
12253	Dump the contents of this object
12254	Add compiler .
12255	Remove compiler .
12256	Determine if the given directory exists .
12257	Get the search paths for a project .
12258	Returns an ordered list of compiled components .
12259	Compile the compiler .
12260	Cache custom fields .
12261	Cache custom fields .
12262	Get custom field
12263	Render custom field .
12264	Add a source to the list .
12265	Finds the source files in the source directory .
12266	Renders the CMS block .
12267	Render a CMS block .
12268	Render slots .
12269	Generate event names .
12270	Dispatch slots .
12271	Get the current route .
12272	Executes the breakdown of the given calculation
12273	Convert a DateTime object to a DateTime object .
12274	Creates a new instance from the given format .
12275	Get template path .
12276	Build the templates map .
12277	Update a group .
12278	Move a user to a group .
12279	Move users to a group .
12280	Initializes the template manager .
12281	Get authorization code
12282	Stop custom process
12283	Render the layout
12284	Get the head .
12285	Returns the end of the block .
12286	Adds a block .
12287	Adds a condition to the block .
12288	Loop through the collection .
12289	Create a new block .
12290	Count the total number of categories .
12291	Find post post .
12292	Find last post .
12293	Update a resource .
12294	Delete a resource
12295	Find records by criteria
12296	Filter the query .
12297	Get the rules for the model .
12298	Get the fillable fields .
12299	Get pivot fields .
12300	Store a child resource .
12301	Returns the children of a given resource .
12302	Get a child resource .
12303	Generate site map .
12304	Show list of languages .
12305	Get admin header list
12306	Updates the specified language .
12307	Returns a date period .
12308	Show an option .
12309	Reset password .
12310	Finds the file for the given URI .
12311	Detect mime type
12312	Writes the web directory to the web directory .
12313	Returns an array representation of this object
12314	Creates a new category .
12315	Sort categories .
12316	Edit a category .
12317	Load a YAML file
12318	Get search query .
12319	Redirect to a short URL
12320	Get bundle location name
12321	Prepare data from input
12322	Run the process .
12323	Ask for questions .
12324	Execute all tasks .
12325	Execute the command
12326	Upload an image .
12327	Get request parameter
12328	Enqueue a script .
12329	Enqueue style .
12330	Get the path to the file
12331	Get a reference .
12332	Adds an object to the repository .
12333	Checks if the blacklist is blacklisted
12334	Check if password is valid
12335	Edit a profile
12336	Change user password .
12337	Confirm email .
12338	Change security question
12339	Returns the color of a message .
12340	Prints a message
12341	Prints error message
12342	Print info message
12343	Create a new post type .
12344	Displays a form .
12345	Edit a post .
12346	Creates a form to delete a post .
12347	Add assets .
12348	Get the connection factory .
12349	Returns the taxonomy .
12350	Validate the session .
12351	Invalidate a session
12352	Check if the role is allowed .
12353	Save an autoload
12354	Sets the view file path .
12355	Set variables .
12356	Generate the theme .
12357	Update the name of the entry .
12358	Registers a calculation
12359	Decode hash ID .
12360	Encode hash id .
12361	Returns the publisher for the given message .
12362	Create a new connection instance .
12363	Initialize the query .
12364	Update the source .
12365	Initializes the consumer .
12366	Get the next video from the database
12367	Get option value
12368	Set a header .
12369	Authenticate a user
12370	Get an array by key
12371	Add an item to the collection .
12372	Add a rule
12373	Apply a rule to a field
12374	Run the rule .
12375	Append a comparison .
12376	Compares two values .
12377	Generate admin admin admin
12378	Get database database .
12379	Handle command line
12380	Create a new instance from reflection .
12381	Returns the number of visits .
12382	Get the last month count .
12383	Returns a list of all hits .
12384	Get the total number of days .
12385	Returns a list of all pages for the current page .
12386	Parses the page .
12387	Show errors .
12388	Logout session .
12389	Updates the credentials for the given identity .
12390	Sets the entity type .
12391	Sets the hydrator .
12392	Get the page s pages .
12393	Copy the site s assets .
12394	Fill the data
12395	Construct a new connection instance .
12396	Add a where clause
12397	Add OR WHERE clause
12398	Set select query
12399	Order by field .
12400	Get the first item .
12401	Get the parsed result .
12402	Update a document
12403	Replaces a document with the given id .
12404	Create a new transaction .
12405	Authorizes the given request .
12406	Check if a key exists
12407	Saves a value to the cache .
12408	Load config file
12409	Save configuration .
12410	Delete a group
12411	Get a list of all items
12412	Get details about a group
12413	Add device to group
12414	Remove device from group
12415	Register the view .
12416	Runs the code for the source code .
12417	Creates a copy of the copy of the file .
12418	Runs the PHP code for the PHP code .
12419	Runs the PHP code for the given task .
12420	Translate a domain .
12421	Translates the given domain name .
12422	Get all messages
12423	Returns the translations for the given domain .
12424	Get authorization information
12425	Get authorization token
12426	Get Authorizer information
12427	Get Authorizer option
12428	Set authorization option
12429	Get authorization list
12430	Sorts the criteria .
12431	Generates the content filter for a given content type .
12432	List all pages .
12433	Returns the maximum value for the given scheme .
12434	Indicates if the given value is an integer .
12435	Add a form field
12436	Add extra field
12437	Add a form field
12438	Gets a form field .
12439	Render template
12440	Get an instance of the given key .
12441	Attach an instance to the cache .
12442	Remove an instance from the container .
12443	Add a task .
12444	Runs an image
12445	Gets the formula ID for a given period .
12446	Sets the container .
12447	Run the build dependencies .
12448	Execute update command .
12449	Runs the PHP code for the given files .
12450	Run the template .
12451	Runs PHP code .
12452	Update package xml .
12453	Generate a sample file .
12454	Create a new action instance .
12455	Determine if the toolbar has the toolbar .
12456	Install assets .
12457	Load data from table
12458	Create comment form .
12459	Lists all custom fields .
12460	Get default group id
12461	Creates a form to create a custom field .
12462	Create a new custom field group .
12463	Creates a new custom field group .
12464	Show custom fields
12465	Returns an array of available options .
12466	Creates a form to edit a custom field group .
12467	Render a form field
12468	Get a stream of a media .
12469	Replace the namespace in the path .
12470	Sets the application namespace .
12471	Set the database factory namespace .
12472	Check if module is enabled
12473	Checks if the file is minified .
12474	Get theme by identifier
12475	Get the current theme
12476	Sets the current theme .
12477	Get transform transformation .
12478	Connect to the Finder .
12479	Generate options .
12480	Find the slots in the template .
12481	Register an entity manager .
12482	Recursively maps the depth of a tree .
12483	Converts a bonus to an array
12484	Get default option IDs .
12485	Check if an adapter has a given adapter .
12486	Get all behaviors from adapter .
12487	Enable log file
12488	Write output to log file
12489	Set log file path
12490	Convert a select query to a string
12491	Generates a where condition .
12492	Sort by field .
12493	Group field by field .
12494	Find a cluster by id
12495	Gets a query from the database .
12496	Delete a cluster .
12497	Delete multiple records
12498	Insert a single document
12499	Insert multiple documents .
12500	Update a document
12501	Updates the depth of a document .
12502	Replace a document
12503	Start a transaction
12504	Rollback a transaction
12505	Commit a transaction
12506	Send a query to the database .
12507	Create a single document
12508	Set message type
12509	Build the message .
12510	Build preview message
12511	Build a group .
12512	Logs user .
12513	Copies a file .
12514	Creates a directory .
12515	Check if a path exists
12516	Delete a folder .
12517	Moves a file .
12518	Get all files in a folder
12519	Get an entity by its ID
12520	Get where parameter from parameter .
12521	Renders a label .
12522	Render custom field widget
12523	Update the arguments .
12524	Deserializes a JSON string .
12525	Release a lock
12526	Clean up all processes .
12527	Returns an array of data sources
12528	Returns the local source for the given local model .
12529	Get the foreign source for the given model .
12530	Applies a quantity to a given quantity .
12531	Get application status
12532	Update a device .
12533	Binds a device location
12534	Get pagination .
12535	Fetch data by id
12536	Authenticate a client .
12537	Set related objects .
12538	Sets the relations .
12539	Sanitize a string
12540	Converts a string to camel case .
12541	Generate random string
12542	Get view details
12543	Get the link to the request .
12544	Set the link
12545	Listen to event .
12546	Register an event .
12547	Get block plugin .
12548	Get theme plugin .
12549	Boot the plugins .
12550	Install assets .
12551	Check if the string is serialized
12552	Add headers .
12553	Saves the file to disk .
12554	Create table .
12555	Displays a form .
12556	Creates a form to delete a tag .
12557	Initializes the session .
12558	Flush a category
12559	Fixes a file
12560	Fixes the file slashes .
12561	Send a message .
12562	Send text message .
12563	Send a news .
12564	Send a voice .
12565	Send an image .
12566	Send a video .
12567	Sends a card
12568	Preview a message .
12569	Preview text message .
12570	Preview a message .
12571	Preview a voice .
12572	Preview image .
12573	Preview a video .
12574	Preview a card .
12575	Preview a message .
12576	Preview a message .
12577	Preview a message .
12578	Preview a voice .
12579	Preview image by name
12580	Preview a video by name .
12581	Preview a card by name .
12582	Set translator .
12583	Run the extension .
12584	Generate the configuration file .
12585	Converts a configuration file to an array .
12586	Creates a controller
12587	Initializes the database .
12588	Create token table .
12589	Sends email to contact
12590	Renders the data table .
12591	Checks if the given parameters are valid .
12592	Returns the SQL string as SQL string .
12593	Sets the operator .
12594	Make a directory .
12595	Get the minifier .
12596	Returns true if the file is minified .
12597	Get cache adapter
12598	Checks if the given namespace is valid .
12599	Get config value
12600	Copy file to destination
12601	Writes data to file .
12602	Delete a file
12603	Read a file .
12604	Upload a file
12605	Get file name .
12606	Get path from file
12607	Make sure the file is safe .
12608	Returns the child of this node .
12609	Get parent type
12610	Get all parent parents .
12611	Check if this object is checked .
12612	Get IP address
12613	Check required options
12614	Check if the required properties are required
12615	Add an attribute .
12616	Set attribute attributes
12617	Remove attribute .
12618	Set source source
12619	Load foreign data
12620	Creates a model instance .
12621	Set a value in the session
12622	Register an event .
12623	Fire an event .
12624	Set HTTP headers .
12625	Get a GET request .
12626	Perform a POST request .
12627	Returns the formatted format .
12628	Register the config file .
12629	Send a device to the device .
12630	Pay order .
12631	Prepare order .
12632	Query for orders
12633	Close a trade
12634	Reverse order .
12635	Get signature key
12636	Get sandbox key
12637	Connect to the database .
12638	Select rows from a table
12639	Reverses exceptions .
12640	Initializes the adapter .
12641	Add value to element
12642	Sets the value of an element .
12643	Get widget id
12644	Get system id
12645	Render element .
12646	Set boolean value
12647	Sets the boolean value .
12648	Returns an array of response data
12649	Build the asset manager .
12650	Reads the contents of a file .
12651	Writes text to file
12652	Get page text .
12653	Get all text texts .
12654	Get page text .
12655	Add a text container .
12656	Modify text container .
12657	Delete a text container .
12658	Get file name
12659	Sets the extra languages .
12660	Removes all required languages
12661	Create an authorization application .
12662	Determine if the contributor is defined .
12663	Returns the error message .
12664	Requires a package .
12665	Install modules .
12666	Edit a block .
12667	Get the input specification .
12668	Set the cache options .
12669	Add a new namespace
12670	Open a stream .
12671	Returns an instance of the given scheme .
12672	Enables an emulation .
12673	Set source files .
12674	Get the foreign model configuration .
12675	Get a foreign model .
12676	Authorizes a block .
12677	Removes a block .
12678	Returns a JSON representation of the scope .
12679	Boot the plugins .
12680	Check if a flag exists .
12681	Sends the message .
12682	Register profiling configuration .
12683	Process the ranking
12684	Sets a value at a given offset .
12685	Removes all data from the database
12686	Returns the type of the given value .
12687	Initializes the configuration .
12688	Loads a configuration file .
12689	Get a configuration value .
12690	Merges the given array with the given values .
12691	Output error message .
12692	Synchronize theme .
12693	Generates a new slot .
12694	Adds a new option .
12695	Get the vendor directory .
12696	Get the list of available options .
12697	Returns an array of options
12698	Archive a directory
12699	Parses a list of files in a directory .
12700	Creates a new cache instance .
12701	Set editor config
12702	Get a service by id
12703	Publish a resource .
12704	Get title attribute
12705	Get the content attribute .
12706	Get all commands .
12707	Parse the given signature .
12708	Run a command .
12709	Parse a string
12710	Create a new instance of the given instance .
12711	Registers an alias .
12712	Returns the resolved version of the given abstract class .
12713	Resolve the given instance .
12714	Resolve method parameters .
12715	Resolve dependency dependency .
12716	Get the concrete object from the given interface .
12717	Get method parameters
12718	Mark an instance as resolved .
12719	Bind a binding to a class .
12720	Call an instance of the given class .
12721	Check if a binding is shared .
12722	Convert a closure to a resolver .
12723	Returns the content of the source file .
12724	Reset all fields
12725	Format event .
12726	Get the content of the given content .
12727	Get the value of the template .
12728	Assert that the given rule is expected .
12729	Map options to route
12730	Renders the active link
12731	Get the tasks .
12732	Handle signal signal .
12733	Registers a signal .
12734	Unregister a listener
12735	Set the key title for the column .
12736	Maps a model name to a model name .
12737	Translates the translation options .
12738	Add a class name
12739	Remove class .
12740	Set the required flag .
12741	Get an attribute by name .
12742	Remove a connection from the pool .
12743	Build slot map
12744	Sets slot map
12745	Move a node to the pool .
12746	Handle the move command .
12747	Get input specification .
12748	Set the pattern .
12749	Validates a SKU .
12750	Get user alias .
12751	Send a welcome message .
12752	Send confirmation message .
12753	Send recovery message .
12754	Prepare the request
12755	Parse the response .
12756	Delete custom fields for a custom field group
12757	Starts the application
12758	Create a new MediaLink object .
12759	Parse media .
12760	Dispatch event .
12761	Checks if the browser is valid .
12762	Set cookie value
12763	Removes a cookie .
12764	Add a header
12765	Adds a HTTP header to the response .
12766	Run the request .
12767	Set a value in the cache .
12768	Get a value from the cache .
12769	Get the database connection
12770	Authorize a user .
12771	Authorize an email with the given password .
12772	Register an email
12773	Authorize the authorization .
12774	Authorize authentication .
12775	Reads a namespace
12776	Write data to the cache
12777	Render the query .
12778	Get refresh instructions .
12779	Get state by key
12780	Sets the state of the given key .
12781	Decrypts a string
12782	Get all intersections
12783	Creates an array of intersections
12784	Determine if the given mask is not masked .
12785	Generate the intersection of the combination .
12786	Get form elements .
12787	Returns an array of PUT data
12788	Set HTTP status code
12789	Load the foreign key .
12790	Create a view .
12791	Create a layout
12792	Create a new snippet .
12793	Create a new server
12794	Delete a server
12795	Get all images .
12796	Clear a queue .
12797	Pad string to string
12798	Returns the lines of the source file .
12799	Get file pointer
12800	Get all headers
12801	Create a new item .
12802	Get all pages .
12803	Returns an array of DTO objects
12804	Build column cache properties .
12805	Get column name .
12806	Creates a collection of objects .
12807	Returns an array with the values of the given column .
12808	Get primary key .
12809	Check if a column is primary key .
12810	Get the foreign keys for a table .
12811	Get foreign keys .
12812	Check if a foreign key exists .
12813	Get the list of nullables .
12814	Get the list of nullable names .
12815	Checks if a column is nullable .
12816	Get the columns for a table .
12817	Fetch all cache keys
12818	Transforms the given command to the appropriate format .
12819	Set permission permissions
12820	Execute a callback .
12821	Resolve dependencies .
12822	Resolve options .
12823	Create contributor directory .
12824	Adds a block to the slot .
12825	Get slot definition .
12826	Save slot definition .
12827	Remove slot from file
12828	Register custom functions .
12829	Set config value
12830	Compile source code .
12831	Handle a block .
12832	Process modifiers .
12833	Generate the config for the given config .
12834	Generate the static method for the given service .
12835	Generate factory method .
12836	Make a directory .
12837	Build the application .
12838	Creates a directory .
12839	Generate a filename
12840	Get mime type
12841	Delete a directory recursively
12842	Remove files from directory
12843	Add a shortcut option .
12844	Loads the choice mapping .
12845	Process text type
12846	Run the error page
12847	Loads a controller
12848	Gets the page of the page .
12849	Get page 404 page
12850	Check if cache is valid
12851	Deletes a customer .
12852	Convert a symbol to an array .
12853	Import a package
12854	Process a pipeline .
12855	Wait until the job is running .
12856	Performs a request to the queue .
12857	Set the queue driver .
12858	Render the page .
12859	Add route .
12860	Get the dispatcher .
12861	Build the cache .
12862	Parse a block .
12863	Get the cache service .
12864	Send the request to the request .
12865	Clear quota .
12866	Initializes the translations .
12867	Initialize options .
12868	Reset password .
12869	Binds to LDAP server
12870	Unbinds the LDAP connection
12871	Performs a search on the server
12872	Set the required element
12873	Returns the validator chain .
12874	Save the current page .
12875	Get json file
12876	Sets the namespace .
12877	Generate the Manifest .
12878	Sets the value of the element .
12879	Renders the toolbar .
12880	Register user .
12881	Get a foreign key
12882	Returns an array of mapped keys .
12883	Returns an array of local keys that are unset .
12884	Returns the translation for the given foreign key .
12885	Get the reverse translation for the given key .
12886	Set the raw photo .
12887	Get Composer .
12888	Get theme .
12889	Get identity .
12890	Creates a view object
12891	Redirects the domain parameters
12892	Render an element
12893	Create a new account
12894	Close a open account
12895	Set Person .
12896	Check if the opening date is closed
12897	Redirect to the given path .
12898	Translate a message .
12899	Get the response .
12900	Get an HTTP response from the response .
12901	Add the source to the request .
12902	Add a virtual worker .
12903	Create cache adapter .
12904	Set access token .
12905	List resources .
12906	Show a resource .
12907	Store a new filter .
12908	Update a filter .
12909	Returns all values of this table .
12910	Set group .
12911	Returns the number of rows in the table .
12912	Join a table
12913	Set cache flag
12914	Returns an array of where clause
12915	Get column reference .
12916	Converts the result set to an array
12917	Returns the sum of the value of this table .
12918	Finds the content type .
12919	Set filters .
12920	Get total number of items
12921	Returns the number of remaining items .
12922	Returns the list of foreign data .
12923	Get local data
12924	Returns a list of local items .
12925	Sets the search data .
12926	Display a user .
12927	Get a list of all lists .
12928	Update a business
12929	Get all entities .
12930	Attempt to attempt a confirmation .
12931	Creates the router .
12932	Generates content attribute .
12933	Generates a new content .
12934	Move a block .
12935	Resolve move options .
12936	Move the archive to the archive .
12937	Changes the block slot name .
12938	Sets the minimum value .
12939	Set max value
12940	Assert that the client is valid .
12941	Store permissions .
12942	Creates a form .
12943	Authenticate the user .
12944	Set default queues
12945	Get tags list
12946	Parse tags .
12947	Check if the owner attribute has a tag attribute .
12948	Remove tag values .
12949	Saves the tags list
12950	Sets the tags for the model .
12951	Removes tags from the database .
12952	Get the list of foreign keys .
12953	Get all foreign keys .
12954	Converts a price string to an integer .
12955	Get the registry object
12956	Removes an object from the collection .
12957	Authenticates the given identity .
12958	Inject dependencies into container .
12959	Update a table
12960	Execute a query
12961	Get database connection
12962	Get all tables .
12963	Check if database exists
12964	Get the per month for the given month .
12965	Get icon icon
12966	Get the object type .
12967	Get object type
12968	Renders the page .
12969	Transform an array into an array .
12970	Get reflection object
12971	Sets the position of the collection .
12972	Creates the Doctrine entity manager .
12973	Set the mapping .
12974	Autocomplete mapping information
12975	Registers mapping .
12976	Parse mapping information
12977	Get the default components for the given mapping .
12978	Detects the metadata driver .
12979	Register behavior behaviors .
12980	Configure the behavior .
12981	Process the request
