0	Compute the overall total counts of models and languages
1	access className property while respecting SVGAnimatedString
2	true = > true false = > false null = > null 42 = > 42 42 . 5 = > 42 . 5 08 = > 08 JSON = > parse if valid String = > self
3	Code block tag
4	Pipe a stream from one to another
5	Provide context for Nunjucks error
6	Upload a CloudFormation response for a Custom Resource
7	The repository must already exist
8	Calculate the height for containing the highest column
9	makeWorker is a little wrapper for generating web workers from strings
10	Monkey patching filesaver and html2canvas
11	Rollup removes local variables unless used within a module . This plugin makes sure specified local variables are preserved and kept local . This plugin wouldn t be necessary if es2015 modules would be used .
12	Create an HTML element with optional className innerHTML and style .
13	Initialize the tree data structures for a new zlib stream .
14	Save the match info and tally the frequency counts . Return true if the current block must be flushed .
15	Send the block data compressed using the given Huffman trees
16	Copy a stored block storing first the length and its one s complement if requested .
17	Send a stored block
18	helper functions Get the decimal values of r g b and a
19	Should only be used if pageWrapYEnabled is true
20	De Casteljau algorithm
21	Create function render header on every page
22	Returns a document - specific font key - a label assigned to a font name + font type combination at the time the font was added to the font inventory .
23	Small workaround for calculating the TextMetric approximately .
24	Returns the standard On Appearance for a CheckBox
25	Returns the standard Off Appearance for a CheckBox
26	Returns the standard Appearance
27	returns array of lines
28	Note all sizing inputs for this function must be in font measurement units By default for PDF it s point .
29	Flush the bit buffer keeping at most 7 bits in it .
30	Main compression routine palette indexes - > LZW code stream . |index_stream| must have at least one entry .
31	Helper function that maps ArrayBufferViews to ArrayBuffers Used by BlobBuilder constructor and old browsers that didn t support it in the Blob constructor .
32	Ask use a few questions on command prompt
33	Since images are loaded asyncronously we must wait to create the pdf until we actually have the image data . If we already had the jpeg image binary data loaded into a string we create the pdf without delay .
34	Parse YouTube ID from URL
35	Returns true if the two input exception interfaces have the same content
36	Returns true if the two input stack trace interfaces have the same content
37	Polyfill a method
38	Join values in array
39	Dispatch stack information to all handlers .
40	Ensures all global unhandled exceptions are recorded . Supported by Gecko and IE .
41	Reports an unhandled Error to TraceKit .
42	Adds information about the first frame to incomplete stack traces . Safari and IE require this to get complete data on the first frame .
43	Computes a stack trace for an exception .
44	Callback used for unhandledrejection event
45	Manually capture an exception and send it over to Sentry
46	Wraps addEventListener to capture UI breadcrumbs
47	Captures a breadcrumb of type navigation normalizing input URLs
48	Returns true if the in - process data payload matches the signature of the previously - sent data
49	Get the number of decimal places
50	Round to the nearest step
51	Setup a new instance
52	Setup multiple instances
53	Toggle event listener
54	Bind event handler
55	Bind once - only event handler
56	Unbind all cached event listeners
57	Get a nested value in an object
58	Deep extend destination object with N more objects
59	Create a DocumentFragment
60	Inaert an element after another
61	Insert a DocumentFragment
62	Remove all child elements
63	Get an attribute object from a string selector
64	Mirror Element . classList . toggle with IE compatibility for force argument
65	Has class name
66	Element matches selector
67	Trap focus inside container
68	Set focus and tab focus class
69	Force repaint of element
70	Check for support Basic functionality vs full UI
71	Set aspect ratio for responsive container
72	Get quality levels
73	Get the closest value in an array
74	Replace all occurances of a string in a string
75	Convert to title case
76	Remove HTML from a string
77	Like outerHTML but also works for DocumentFragment
78	Format time to UI friendly string
79	Get icon URL
80	Find the UI controls
81	Create hidden text label
82	Create a badge
83	Create time display
84	Create a settings menu item
85	Format a time for display
86	Update the displayed time
87	Update volume UI and storage
88	Update seek value and lower fill
89	Webkit polyfill for lower fill range
90	Update hover tooltip for seeking
91	Handle time change event
92	Show the duration on metadataloaded or durationchange events
93	Update the selected setting
94	Translate a value into a nice label
95	Set the quality menu
96	Get the badge HTML for HD 4K etc
97	Set a list of available captions languages
98	Get the natural size of a menu panel
99	Show a panel in the menu
100	Set the download URL
101	Replace props with their value
102	Parse a string to a URL object
103	Convert object to URLSearchParams
104	Update available language options in settings based on tracks
105	Toggle captions display Used internally for the toggleCaptions method with the passive option forced to false
106	Set captions by track index Used internally for the currentTrack setter with the passive option forced to false
107	Set captions by language Used internally for the language setter with the passive option forced to false
108	Get current valid caption tracks If update is false it will also ignore tracks without metadata This is used to freeze the language options when captions . update is false
109	Match tracks based on languages and get the first
110	Get UI label for track
111	Get provider by URL
112	Determine if fullscreen is enabled
113	Toggle native HTML5 media controls
114	Setup the UI
115	Setup aria attribute for play and iframe title
116	Check playing state
117	Check if media is loading
118	Toggle controls based on state and force argument
119	Remove current classes
120	Resize on fullscreen change
121	Subscribe to bundle load event .
122	Publish bundle load event .
123	Execute callbacks .
124	Load individual file .
125	Initiate script load and register bundle .
126	Get the media title
127	Ads constructor .
128	Load the IMA SDK
129	In order for the SDK to display ads for our video we need to tell it where to put them so here we define our ad container . This div is set up to render on top of the video player . Using the code below we tell the SDK to render ads within that div . We also provide a handle to the content video player - the SDK will poll the current time of our player to properly place mid - rolls . After we create the ad display container we initialize it . On mobile devices this initialization is done as the result of a user action .
130	PreviewThumbnails constructor .
131	Returns a number whose value is limited to the given range .
132	Toggle playback based on current status
133	Set a new source
134	it only does %s and return when arguments are undefined
135	Preprocesses cart for server .
136	Compare two different cart objects and get the messages of newest one
137	Verifies if the given redirect_to value enables SSR or not .
138	Wraps strings in a html to highlight
139	MailingList constructor .
140	Manages an EmbedDialog to allow editing the URL of an embed inside the editor .
141	Handle make build - css success or failure
142	Updates the MD5 hash of the public CSS files and returns the changed ones in a list .
143	Returns a new state with the given attributes updated for the specified site .
144	Check that all categories in a given list are valid category objects .
145	Check if the given category has the expected properties
146	Checks if an incoming change to settings . language is a change to the existing settings Currently the assumption is that if a settings . locale_variant slug exists then that is the current language
147	Initialize UserSettings with defaults
148	Depending on the current step in checkout the user s domain can be found in either the cart or the receipt .
149	Replaces the old hash parameter with the current timestamp if name is href .
150	Merge a product into the products list
151	Set the loading status for a param set in state
152	Generate an object that maps asset names name to a server - relative urls . Assets in request and static files are included .
153	Given the content of an Accept - Language request header returns an array of the languages .
154	Sets up a Content Security Policy header
155	Given a post object returns an array of float coordinates representing the geographic location saved for that post or undefined if the value cannot be determined .
156	Given a post object return a boolean indicating whether the geo - location data associated with the post is allowed to be displayed publicly .
157	Drop data . extra if it s an array
158	Monitors Gutenberg store for draft ID assignment and transmits it to parent frame when needed .
159	Listens for post lock status changing to locked and overrides the modal dialog actions addind an event handler for the All Posts button and changing the Take Over Url to work inside the iframe .
160	Listens for post lock status changing to locked and for the post to have been taken over by another user adding an event handler for the All Posts button .
161	Updates all the blocks containing a given edited image .
162	To update the featured image preview we need to manually modify the image in the core state . Though there is no direct mechanism to also invalidate its cache and re - render the preview . As a workaround we call receiveEntityRecords normally used to update the state after a fetch which has a handy invalidateCache parameter that does exactly what we need .
163	Prevents the default preview flow and sends a message to the parent frame so we preview a post from there .
164	Listens for insert media events happening in a Media Modal opened in a Classic Block and inserts the media into the appropriate block .
165	Prevents the default closing flow and sends a message to the parent frame to perform the navigation on the client side .
166	Modify links in order to open them in parent window and not in a child iframe .
167	TinyMCE plugin for toggling an is - pinned class on the editor container when the viewport scroll position exceeds the top edge of the container .
168	Config the localStorage backend using options set in the config .
169	Called when the user clicks Finish or when no more suggestions left . Removes all remaining spans and fires custom event .
170	Recurse into the data and produce DOM node output
171	Takes an array of range objects and returns the array index for the first range with the longest span meaning that if there are multiple longest ranges with the same indices the index for the first one in the array will be returned .
172	Set up the locale if there is one
173	Convert custom post metadata array to product attributes
174	Given a media string attempts to parse as a shortcode and returns an object containing all detected values .
175	Given a media string attempts to parse as an HTMLElement and returns an object containing all detected values .
176	Returns true if the specified key value query pair is identical to that of the default theme query is null or is undefined .
177	Updates state with latest MailChimp connected plugin settings
178	Updates state with settings request status
179	Updates state with settings request error Holds information only for latest request
180	Updates state with latest MailChimp connected plugin sync status . This is sync between plugin and mailchimp server
181	Updates state with sync status request status
182	Updates state with resync request status
183	Updates state with api key submit status
184	Updates state with api key submit error Holds information only for latest request
185	Updates state with store info submit status
186	Updates state with store info submit error Holds information only for latest request
187	Updates state with lists request status
188	Updates state with list request error Holds information only for latest request
189	Updates state with newsletter submit status
190	Updates state with newsletter settings submit error Holds information only for latest request
191	Returns an array of site invites without the deleted invite objects .
192	Internal dependencies StatsDataLocalList component
193	Wraps an action with a product update action .
194	Returns an array of sites objects each of which contains an array of purchases .
195	Adds a purchase renewal to the cart and redirects to checkout .
196	Checks if a purchase can be cancelled . Returns true for purchases that aren t expired Also returns true for purchases whether or not they are after the refund period . Purchases included with a plan can t be cancelled .
197	Checks if a purchase might be in the refund period whether refundable or not .
198	Checks whether the specified purchase can be removed from a user account . Purchases included with a plan can t be removed .
199	Returns the payment logo to display based on the payment method
200	Transform webpack output . filename and output . chunkFilename to CSS variants
201	Verify HTML in captions
202	Loads a CSS stylesheet into the page .
203	Overwrites the purchases in the store with the purchases from the new purchases array that share the same id value .
204	Removes purchases that are missing from the new purchases array and match the given predicate .
205	Create an UndocumentedSite instance
206	Edits existing product if one with matching ID found . Otherwise inserts the new one at the beginning of the list .
207	Returns the site - picker react element .
208	Returns a new state with the given attributes for the given receipt ID .
209	Checks whether or not an image is a tracking pixel
210	Returns true if image should be considered
211	Reports new notification data if available
212	Update lastSeenTime in object instance localStorage and remote database . Advance this . lastSeenTime to proposedTime or the latest visible note time . If the timestamp comes from a note update the remote database .
213	keyCodes for tab space left up right down respectively
214	Filter function that return notices that fit a certain criteria .
215	Checks whether the given bounds are within the viewport
216	Scroll an element into the viewport if it s not already inside the viewport
217	Returns a build middleware which runs npm run build - css upon each HTTP request . Meant for use in development env .
218	Given a caption shortcode object returns an object of parsed attributes .
219	KeyboardShortcuts accepts an array of objects representing key - bindings and creates an EventEmitter which emits an event when a keyboard shortcut is triggered .
220	Returns a list of the dependencies provided in the flow configuration .
221	Returns a boolean for whether a full sync is pending start .
222	Returns a boolean for whether a site is in the process of a full sync .
223	Returns a rounded up percentage the amount of sync completed .
224	Initializes Quora tracking . This is a rework of the obfuscated tracking code provided by Quora .
225	Recorders an individual product purchase conversion
226	Records an order in Quantcast
227	Records an order in DCM Floodlight
228	Records a signup|purchase in Bing .
229	Returns the DCM Floodlight session id generating a new one if there s not already one
230	Returns an object with DCM Floodlight user params
231	Records an order in Criteo
232	Records that a user viewed the checkout page
233	Converts the products in a cart to the format Criteo expects for its items property
234	Records an event in Criteo
235	Records an order in Google Analytics
236	Initializes the Facebook pixel .
237	Applies all the app - related checks for server side rendering .
238	Returns a function that sets the tabindex on an editor instance . The returned function assumes that this is set to the editor instance
239	Clears out state persisted reply cache
240	Parses the output of a git diff command into javascript file paths .
241	Triggers a network request to fetch posts for the specified site and query .
242	Normalizes attributes to API expectations
243	Returns true if an image is large enough to be a featured asset
244	Replaces all marker nodes tied to this view instance .
245	Returns the node or a parent of the node that has the passed className . Doing this directly is about 40% faster .
246	Deselect a selected view and remove clipboard
247	Deeply iterates over the keys of an object to remove any keys that are undefined . This method modifies the object .
248	Processes Google s libphonenumber data and generates a proper JS object
249	Creates aliases . E . g . allows uk to be found by both gb and uk .
250	Class inherited from WPCOMUnpublished class and adds specific methods useful for wp - calypso .
251	Initialize AccountPasswordData with defaults
252	receive a transfer status
253	receive a transfer initiation failure
254	Install of any theme hosted as a zip on wpcom must be suffixed with - wpcom . Themes on AT sites are not installed via downloaded zip .
255	Query the index using lunr . We store the documents and index in memory for speed and also because lunr . js is designed to be memory resident
256	Return an array of results based on the provided filenames
257	Escapes a string
258	This data can help manage infinite scroll
259	Get Users for a set of fetchOptions
260	Get Plugins for a single site
261	Array of sites with a particular plugin .
262	Array of sites without a particular plugin .
263	Decodes a url - safe base64 encoded string .
264	Capture and stop propagation on toolbar touch events . TinyMCE registers the touchstart event on buttons redirecting them as click events to the button and preventing the default .
265	Monitors the toolbar s scroll event applying a . is - scrolled - full class if and only if the left scroll position has reached the element s maximum scroll offset .
266	Monitors the window resize event assigning an . is - scrollable class to any toolbars for which horizontal scroll exists .
267	raise a console warning
268	Pull the right set of arguments for the Jed method
269	Takes translate options object and coerces to a Jed request to retrieve translation
270	Updates state with fetched account details
271	Updates state after deauthorization completes
272	Updates state after oauth initialization completes
273	Applies a precision to the cost
274	Can a domain add G Suite
275	Formats price given cost and currency
276	Retrieves the first domain that is eligible to G Suite either from the current selected site or the list of domains .
277	Filters a list of domains by the domains that eligible for G Suite
278	Stop observing the DOM changes and clean up all data structures
279	Check if there are any placeholders on the screen and trigger a timing event when all the placeholders are gone
280	Gets the default set of options to configure the Directly RTM widget . It s important to keep this config in a getter function rather than a constant on the module scope to prevent import - time errors errors that could crash Calypso .
281	Set up global variables and configuration for the RTM widget
282	Inserts a dummy DOM element that the widget uses to calculate the base URL for its assets .
283	Make the request for Directly s remote JavaScript .
284	get bootstrapped state from a server - side render
285	Determines whether to add sympathy by randomly clearing out persistent browser state and loading without it
286	Updates an edits object for a specific product .
287	Internal Dependencies Given an iframe is it okay to have it run without a sandbox?
288	Retrieves the first domain that is eligible for Email Forwarding either from the current selected site or the list of domains .
289	Filters a list of domains by the domains that eligible for Email Forwarding
290	Returns the server HTTP request handler app .
291	Fetches details for a particular plugin .
292	Get information about a given theme from the WordPress . org API . If provided with a callback will call that on succes with an object with theme details . Otherwise will return a promise .
293	Get information about a given theme from the WordPress . org API .
294	Check if the given value is a plain object .
295	Convert array - like or iterable object to an array .
296	Iterate the given data .
297	Check if the given element has a special class .
298	Add classes to the given element .
299	Remove classes from the given element .
300	Add or remove classes from the given element .
301	Get data from the given element .
302	Set data to the given element .
303	Remove data from the given element .
304	Remove event listener from the target element .
305	Add event listener to the target element .
306	Dispatch event on the target element .
307	Get the offset base on the document .
308	Add timestamp to the given URL .
309	Get transforms base on the given object .
310	Get the max ratio of a group of pointers .
311	Get a pointer from an event object .
312	Get the center point coordinate of a group of pointers .
313	Get the max sizes in a rectangle under the given aspect ratio .
314	Get the new sizes of a rectangle after rotated .
315	Transform Data URL to array buffer .
316	Transform array buffer to Data URL .
317	Parse Exif Orientation value .
318	Show the crop box manually
319	Reset the image and crop box to their initial states
320	Clear the crop box
321	Replace the image s src and rebuild the cropper
322	Destroy the cropper and remove the instance from the image
323	Move the canvas with relative offsets
324	Move the canvas to an absolute point
325	Zoom the canvas with a relative ratio
326	Rotate the canvas to an absolute degree
327	Scale the image on the x - axis .
328	Scale the image on the y - axis .
329	Scale the image
330	Get the canvas position and size data .
331	Set the canvas position and size with new data .
332	Change the aspect ratio of the crop box .
333	Change the drag mode .
334	Add custom event listener
335	Remove custom event listener
336	Append an item to the list
337	Render the item list
338	Build a list item from the HTMLOptionElement
339	Add a tag
340	Remove a tag
341	Load the next page of items
342	Clear a search
343	Query matching for searches
344	Creates a component that visualize path selection in tree based editors
345	Create a select box to be used in the editor menu s which allows to switch mode
346	get the last parsed non - whitespace character
347	get at the first next non - white space character
348	parse single or double quoted string
349	parse an unquoted key
350	Returns textarea row and column position for certain index
351	animate towards the new scroll position
352	create and attach event listeners
353	Renders the input component
354	Rule for validating whitespace .
355	Rule for validating a value exists in an enumerable list .
356	Rule for validating minimum and maximum allowed values .
357	Rule for validating required fields .
358	Performs validation for string types .
359	Validates the regular expression type .
360	Rule for validating a regular expression pattern .
361	Rule for validating the type of a value .
362	Get CSS computed property of the given element
363	Get bounding client rect of given element
364	Check if the given element is fixed or is inside a fixed parent
365	Computed the boundaries limits and return them
366	Helper used to know if the given modifier is enabled .
367	Creates a new Popper . js instance .
368	Writes given HTML AST to output index . html
369	Gets the output HTML as AST . Rollup might run with multiple outputs but there should be only one index . html output . Therefore we check if it wasn t already created before . If there is no index . html yet we copy over the input index . html with the original module scripts removed .
370	Copy required polyfills from node_modules to the build directory
371	Writes module scripts to output HTML file and copy necessary polyfills .
372	The karma esm framework . Helps the user debug the case where they don t have a module test script defined and boots up the plugin .
373	Sets up karma - esm compiler . Compiles files with babel maintains a cache and notifies karma when files change .
374	Karma preprocessor to handle compiling entry point test files .
375	Changes a relative URL to an absolute URL .
376	Normalize the text inside an element
377	Return the text value of a node or element
378	Set the text value of a node or element
379	Applies mapfn to node and the tree below node returning a flattened list of results .
380	Walk the tree down from node applying the predicate function . Return the first node that matches the given predicate .
381	Walk the tree down from node applying the predicate function . All nodes matching the predicate function from node to leaves will be returned .
382	Walk the tree up from the parent of node to its grandparent and so on to the root of the tree . Return the first ancestor that matches the given predicate .
383	Equivalent to nodeWalk but only matches elements
384	Equivalent to nodeWalkAll but only matches elements
385	Inserts newNode into parent at index optionally replaceing the current node at index . If newNode is a DocumentFragment its childNodes are inserted and removed from the fragment .
386	Removes a node and places its children in its place . If the node has no parent the operation is impossible and no action takes place .
387	Middleware for serving es modules . Karma doesn t serve any files not specified beforehand . This is extremely inconvenient when working with es modules as many files are requested on the fly .
388	The below wrapper is used to support legacy context API with Context . Consumer render prop . We need it as we want to access context from within componentDidMount callback . If we decided to drop support for older react native we could rewrite it using hooks or static contextType API .
389	we could use just string . split but IE doesn t like returning empty strings
390	error handler for output stream that swallows errors silently allowing the loop to continue over unwritable files .
391	translate weird python underscored keys into dashed argv avoiding single character aliases .
392	Private function used in filterUnusedRules .
393	Filter rules with no selectors remaining
394	Remove css rules not used in the dom
395	Parse a given uncssrc file .
396	Parse paths relatives to a source .
397	Given an array of filenames return an array of the files contents only if the filename matches a regex
398	Get the contents of HTML pages through jsdom .
399	Do the actual work
400	Main exposed function . Here we check the options and callback then run the files through jsdom .
401	Load a page .
402	Extract stylesheets hrefs from dom
403	Filter unused selectors .
404	Open a database .
405	Delete a database .
406	This is a function to prevent it throwing up in node environments .
407	Always restore page visibility
408	Create a public API
409	joins selector path from beginningPath with selector path in addPath replacedElement contains element that is being replaced by addPath returns concatenated path
410	joins selector path from beginningPath with every selector path in addPaths array replacedElement contains element that is being replaced by addPath returns array with all concatenated paths
411	replace all parent selectors inside inSelector by content of context array resulting selectors are returned inside paths array returns true if inSelector contained at least one parent selector
412	A number with a unit
413	Used after initial parsing to create nodes on the fly
414	Parse an input string into an abstract syntax tree
415	comments are collected by the main parsing mechanism and then assigned to nodes where the current structure allows it
416	A string which supports escaping and milky way he \ s the one!
417	A Variable entity such as
418	A Dimension that is a number and a unit 0 . 5em 95%
419	JavaScript code to be evaluated window . location . href
420	Call a variable value to retrieve a detached ruleset or a value from a detached ruleset s rules .
421	A Mixin definition with a list of parameters . rounded (
422	Entities are the smallest recognized token and can be found inside a rule s value .
423	A CSS AtRule
424	An operand is anything that can be part of an operation such as a Color or a Variable
425	Expressions either represent mathematical operations or white - space delimited Entities . 1px solid black
426	A function call node .
427	Node Plugin Loader
428	FileInfo = { rewriteUrls - option - whether to adjust URL s to be relative filename - full resolved filename of current file rootpath - path to append to normal URLs for this node currentDirectory - path to the current file absolute rootFilename - filename of the base file entryPath - absolute path to the entry file reference - whether the file should not be output and only output parts that are referenced
429	if there is only one nested ruleset and that one has no path then it is just fake ruleset
430	only really needed for phantom
431	Calculate which data - points exist in oldData and not nextData - these are the exiting data - points . Also calculate which data - points exist in nextData and not oldData - these are the entering data - points .
432	If a parent component has animation enabled calculate the transitions for any data of any child component that supports data transitions Data transitions are defined as any two datasets where data nodes exist in the first set and not the second in the second and not the first or both .
433	Exported Functions creates an object with some keys excluded replacement for lodash . omit for performance . does not mimick the entire lodash . omit api
434	Public Methods Returns a getDomain function
435	Returns a formatted domain .
436	Returns a domain based on categories if they exist
437	Returns a domain from a dataset for a given axis
438	Returns a domain in the form of a two element array given a min and max value .
439	Returns a the domain for a given axis if domain is given in props
440	Returns a domain for a given axis . This method forces the domain to include zero unless the domain is explicitly specified in props .
441	Returns the maxDomain from props if it exists
442	Returns the minDomain from props if it exists
443	Returns a symmetrically padded domain for polar charts
444	Checks whether a given component can be used to calculate domain
445	Returns generated data for a given axis based on domain and sample from props
446	Returns sorted data . If no sort keys are provided data is returned unaltered .
447	Returns a data accessor given an eventKey prop
448	Returns data with an eventKey prop added to each datum
449	Exported Functions Returns an object mapping string data to numeric data
450	Reduces the size of a data array such that it is < = maxPoints .
451	Returns formatted data . Data accessors are applied and string values are replaced .
452	Returns generated x and y data based on domain and sample from props
453	Returns an array of categories for a given axis
454	Returns an array of formatted data
455	Returns an array of strings from axis tickValues for a given axis
456	Returns an array of strings from categories for a given axis
457	Returns an array of strings from data
458	Returns all axis components that pass a given predicate
459	Returns a domain based tickValues
460	exposed for use by VictoryChart
461	Assumes data in datasets is sorted by Data . getData .
462	Chrome doesn t remember scroll position properly so do it ourselves . Also works on Firefox and Edge .
463	Assigns options to the internal options object and provides defaults .
464	_addBaselineStyles Adds baseline styles to the page used by all AnchorJS links irregardless of configuration .
465	Get the claim value considering any claim rank .. - disregard any claims with deprecated rank - accept immediately any claim with preferred rank - return the latest claim with normal rank
466	Additionally check for wrong formatted Wikipedia values
467	Returns a reverse index to map match keys back to their original keys
468	most Object methods by ES6 should accept primitives
469	add metadata on freeze - family methods calling
470	is it an object or not
471	to test if a HTML node
472	to test if a HTML element
473	check if node B is node A s posterrity or not
474	the handler to generate an deep traversal handler
475	use recursive to move what in source to the target if you do not provide a target we will create a new target
476	merge multiple objects
477	get an deep property
478	sort Object attributes by function and transfer them into array
479	run a queue one by one . If include function reject or return false it will stop
480	run a queue one by one . If include function return false it will stop
481	return the config box or choose the right one according to the src
482	bind the function with some context . we have some fallback strategy here
483	to check if the descirptor is an accessor descriptor
484	to check if the descirptor is an data descriptor
485	to check if the descirptor is an initiallizer descriptor
486	set one value on the object
487	Compress many function into one function but this function only accept one arguments ;
488	save bound function for super
489	auto bind the function on the class just support function
490	create a setter hook here when it get ture it will run all function in waiting queue immediately
491	checker for attr or css function
492	base css controller for container and wrapper
493	destroy function called when dispatcher destroyed
494	checker for on off once function
495	bind time update on old video when we bump into the switch point and ready we switch
496	In some situation we may have custom events For example we may have a custom kernel event We can register the event through this method
497	0x10 range - bit ops
498	0x20 range - crypto
499	0x40 range - block operations
500	0xf0 range - closures
501	0x70 range - other
502	Returns an overflow - safe slice of an array . It right - pads the data with zeros to length .
503	checks to see if we have enough gas left for the memory reads and writes required by the CALLs
504	create and add genesis block
505	add some following blocks
506	get the blockchain head
507	iterate through the given ops until something breaks or we hit STOP
508	ensure contract is loaded ; only used if runCode is called directly
509	find all the valid jumps and puts them in the validJumps array
510	determine starting state for block run
511	run block update head if valid
512	credit all block rewards
513	handle results or error from block run
514	sets up the initial state and runs the callback when complete
515	runs a transaction through the vm
516	Now lets look at what we created . The transaction should have created a new account for the contranct in the trie . Lets test to see if it did .
517	So if everything went right we should have null_radix stored at 0x9bdf9e2cc4dfa83de3c35da792cdf9b9e9fcfabd . To see this we need to print out the name register s storage trie . reads and prints the storage of a contract
518	handles a character key event
519	marks a character key as held down while recording a sequence
520	ensures each combo in a sequence is in a predictable order and formats key combos to be + - delimited
521	finishes the current recording passes the recorded sequence to the stored callback and sets Mousetrap . handleKey back to its original function
522	naive Set shim
523	THE SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND EXPRESS OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT . IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE .
524	Find all the dependencies without a main property or with a binary property or set by user and add them as webpack externals
525	Creates file export buttons
526	Escapes special characters with HTML entities
527	Unescapes HTML entities to special characters
528	Get cell data - type
529	Formats datetimes for compatibility with Excel
530	Creates an Excel spreadsheet from a data string
531	Click handler for export button download
532	Exports and downloads the file
533	Storage main interface constructor
534	Returns the libtensorflow hosted path of the current platform .
535	Deletes the deps directory if it exists and creates a fresh deps folder .
536	Downloads libtensorflow and notifies via a callback when unpacked .
537	Calls node - gyp for Node . js Tensorflow binding after lib is downloaded .
538	Ensures libtensorflow requirements are met for building the binding .
539	Symlinks the extracted libtensorflow library to the destination path . If the symlink fails a copy is made .
540	Moves the deps library path to the destination path .
541	Symlink or move libtensorflow for building the binding .
542	Downloads and unpacks a given tarball or zip file at a given path .
543	Converts CSS string to AST .
544	Processes tree and detects options .
545	Gets the detected options .
546	Gets option s data needed for detection
547	Block is considered empty when it has nothing but spaces .
548	Creates object which contains info about vendor prefix used in propertyName .
549	Returns extra indent for item in arguments
550	Wrapper for extra indent function for property node .
551	Wrapper for extra indent function for val - node .
552	Walks across nodes and call payload for every node that pass selector check .
553	Updates dict which contains info about items align .
554	Returns string with correct number of spaces for info . baseName property .
555	Start animation loop
556	Adds a vertex to the assigned list of vertices and assigns it to the given face
557	Removes a vertex from the assigned list of vertices and from the given face
558	Removes all the visible vertices that a given face is able to see which are stored in the assigned vertext list
559	Removes all the visible vertices that face is able to see
560	Reassigns as many vertices as possible from the unassigned list to the new faces
561	Computes the extremes of a simplex which will be the initial hull
562	Removes inactive faces
563	Finds the next vertex to create faces with the current hull
564	Computes a chain of half edges in CCW order called the horizon . For an edge to be part of the horizon it must join a face that can see eyePoint and a face that cannot see eyePoint .
565	Creates a face with the vertices eyeVertex . point horizonEdge . tail and horizonEdge . head in CCW order
566	Adds a vertex to the hull
567	A vertex as a double linked list node .
568	Inserts a vertex before the target vertex
569	Inserts a vertex after the target vertex
570	Appends a vertex to the end of the linked list
571	Removes a vertex from the linked list
572	Removes a list of vertices whose head is a and whose tail is b
573	Handle window resize
574	A notice for devs . These are good for things that are helpful to devs such as warning that Workers were disabled which is important to devs but not end users .
575	Non - fatal warnings .
576	Fatal errors that should trigger the fallback UI and halt execution by throwing an exception .
577	Combines two URLs . The baseUrl shall be absolute URL . If the url is an absolute URL it will be returned as is .
578	Clones viewport with additional properties .
579	Converts PDF rectangle to the viewport coordinates .
580	Promise Capability object .
581	Sends a message to the comObj to invoke the action with the supplied data .
582	Sends a message to the comObj to invoke the action with the supplied data . Expects that other side will callback with the response .
583	Sends raw message to the comObj .
584	Connect all callbevent observesrs
585	On window resize callback
586	On key pressed callback
587	On mouse move callback
588	Visulaize incoming data
589	Load group sequence
590	Initialize the scene
591	Init the quadview
592	Update Layer Mix
593	Loop through IJK BBox and see if voxel can be mapped to screen
594	Retrieves the Shortlinker instance .
595	Constructs a sentence part object .
596	Creates the Assessor
597	Represents a partial deviation when counting syllables
598	Sorts analysis results by score and then alphabetically by their identifier .
599	Maps a single results to a result that can be interpreted by the AnalysisList component .
600	Maps results to a results that can be interpreted by the AnalysisList component .
601	Creates an Participle object for the German language .
602	Constructs the AssessorPresenter .
603	Splits a text into blocks based on HTML block elements .
604	Rounds number to four decimals .
605	Creates an Participle object for the French language .
606	Checks whether a given participle matches a list of regex exceptions .
607	Retrieves the first word from the sentence .
608	Assesses that the paper has at least a little bit of content .
609	Splits sentences into sentence parts based on stopwords .
610	Creates sentence parts based on split sentences .
611	Splits the sentence into sentence parts based on stopwords .
612	Creates a default snippet preview this can be used if no snippet preview has been passed .
613	Check arguments passed to the App to check if all necessary arguments are set .
614	Returns the word combinations for the given text based on the combination size .
615	Calculates occurrences for a list of word combinations .
616	Returns only the relevant combinations from a list of word combinations . Assumes occurrences have already been calculated .
617	Sorts combinations based on their relevance and length .
618	Filters word combinations that consist of a single one - character word .
619	Filters word combinations containing certain function words at any position .
620	Filters word combinations beginning with certain function words .
621	Filters word combinations ending with certain function words .
622	Filters word combinations beginning and ending with certain function words .
623	Filters word combinations based on keyword density if the word count is 200 or over .
624	Filters combinations based on whether they end with a specified string or not .
625	Filters the list of word combination objects based on the language - specific function word filters . Word combinations with specific parts of speech are removed .
626	Filters the list of word combination objects based on function word filters a special character filter and a one - character filter .
627	Returns the relevant words in a given text .
628	Represents a word combination in the context of relevant words .
629	Creates an assessment .
630	Error that means that an argument should be passed that wasn t passed .
631	Construct the Participle object and set the participle sentence part auxiliary and type .
632	Gets all the level 2 and 3 subheadings from the text and returns these in an array .
633	Returns the sentences from a certain block .
634	Creates a WebWorker using the given url .
635	Creates the Assessor .
636	Creates a Redux store .
637	Removes links from text .
638	Removes images from text .
639	Checks if the paragraph has no text .
640	Retrieve the relevant words . Uses cached version when possible .
641	Get s the base URL for this instance of the Snippet Preview .
642	Update data and DOM objects when the unformatted text is updated here for backwards compatibility
643	Returns a rating based on the length of the title
644	Returns a rating based on the length of the meta description
645	Updates a progress bar
646	Returns the title as meant for the analyzer
647	Returns the metaDescription includes the date if it is set .
648	Shows and error trace of the error message in the console if the console is available .
649	Returns the indices of a string in a text . If it is found multiple times it will return multiple indices .
650	Matches string with an array returns the word and the index it was found on .
651	Filters duplicate entries if the indices overlap .
652	Matches string with an array returns the word and the index it was found on and sorts the match instances based on the index property of the match .
653	Creates an hidden element with the purpose to calculate the sizes of elements and adds these elements to the body .
654	The plugins object takes care of plugin registrations preloading and managing data modifications .
655	This contains all possible default researches .
656	Returns whether or not the given URLs are equal .
657	Determine whether a URL is internal .
658	Counts vowel groups inside a word .
659	Returns the number of syllables for the word if it is in the list of full word deviations .
660	Creates an array of deviation fragments for a certain locale .
661	Counts syllables in partial exclusions . If these are found returns the number of syllables found and the modified word . The word is modified so the excluded part isn t counted by the normal syllable counter .
662	Count the number of syllables in a word using vowels and exceptions .
663	Counts the number of syllables in a word .
664	Counts the number of syllables in a text per word based on vowels . Uses exclusion words for words that cannot be matched with vowel matching .
665	Filters function words from an array of words based on the language .
666	Builds morphological forms of words of the keyphrase and of each synonym phrase .
667	Retrieves morphological forms of words of the keyphrase and of each synonym phrase using the function that caches the results of previous calls of this function .
668	Calls the function that builds keyphrase and synonyms forms for a specific research data .
669	Throws an invalid type error
670	Memoizes the createRegexFromDoubleArray with the twoPartTransitionWords .
671	Matches the sentence against two part transition words .
672	Matches the sentence against transition words .
673	Checks the passed sentences to see if they contain transition words .
674	Gets positions of the first character of a word in the input text .
675	Gets indices of a specific character in the input text .
676	Replaces characters on specified indices in the input text .
677	Construct the AssessmentResult value object .
678	Construct the Sentence object and set the sentence text and locale .
679	Binds the renewData function on the change of input elements .
680	A helper method used to read a Node . js readable stream into string
681	Prompt the user for a username and password return a UserSession This function will run again on any error so it will retry until it works
682	given a UserSession prompt the user for some search params and search for items
683	this give a list of items and a UserSession this will ask us 1 at a time if we want to delte this item . This uses the new async iteration syntax with Symbol . asyncIterator to perform an async function in a loop
684	every time we ask for a new item
685	This data coul d come from a fetch OR from ldp comtaimner
686	Create a new folder in a Solid system with a dokieli editable document in it
687	Does the subject deserve an contact pane?
688	See also the source pane which has lower precedence .
689	subject is the file
690	Called when a selected cell is clicked again
691	afterTr = removedTr . nextSibling
692	Add the buttons which allow the suer to craete a new object Or reference an exiting one with a URI .
693	Does the subject deserve a link list pane?
694	Does the subject deserve an attachments pane? In this case we will render any thing which is in any subclass of certain classes or also the certain classes themselves as a triage tool for correlating many attachees with attachments . We also offer the pane for anything of any class which just has an attachment already .
695	Where can we write about this thing? Returns term for document or null
696	Find all members of the class which we know about and sort them by an appropriate property .
697	When you click on a subject filter the objects connected to the subject in Mode 1
698	END LINK META DATA add the reply to and delete buttons to the interface
699	callback after deletion
700	delete references to post
701	For each creation form allow one to create a new object with it and also to edit the form .
702	Create a new folder in a Solid system
703	When the user asks for all list of all matching parts of the data
704	Render forms using a given store
705	3 . In a workspace store
706	View the data in a file in user - friendly way
707	The property tree for a single subject or anonymous node
708	Convert a set of statements into a nested tree of tables
709	statementsAsTables View the data in a file in user - friendly way
710	Does the subject deserve an slideshow pane?
711	Remove a node from the DOM so that Firefox refreshes the screen OK Just deleting it cause whitespace to accumulate .
712	These woulkd be simpler using closer variables below
713	this function gets called once the user drops the file onto the div
714	Function to calculate the SHA1 Hash for a buffer with a given offset and length
715	Temporary solution to convert MD to plain text to show in hover Todo
716	Derive a private key from a password using count iterations of SHA3 - 256
717	Encode a private key using a password
718	Encode a message
719	Decode an encrypted message payload
720	Convert an Uint8Array to WordArray
721	Convert a wordArray to Uint8Array
722	Calculate the distance from this point to another point without the square root step . Useful if you re comparing relative distances .
723	Triggered when the main control element has a click event .
724	Registers an option to the pool of options .
725	Clears all options .
726	Selects multiple items at once . Adds them to the list at the current caret position .
727	Removes the selected item matching the provided value .
728	Update the required attribute of both input and control input .
729	Closes the autocomplete dropdown menu .
730	A helper method for inserting an element at the current caret position .
731	A helper method for rendering item and option templates given the data .
732	updates the internal vW property with the current viewport width in px
733	Adds descriptor properties to a candidate pushes to the candidates array
734	Recursively extend styles .
735	Convert camel cased property names to dash separated .
736	ResourceNamespace allows you to create nested resources i . e . stripe . issuing . cards . It also works recursively so you could do i . e . stripe . billing . invoicing . pay .
737	Return the data argument from a list of arguments
738	Return the options hash from a list of arguments
739	Provide simple Class extension mechanism
740	Remove empty values from an object
741	Node s built in exec function sometimes throws outright and sometimes has a callback with an error depending on the type of error .
742	Generates a header to be used for webhook mocking
743	Encapsulates request logic for a Stripe Resource
744	Create an API method from the declared spec .
745	Gets a JSON version of a User - Agent and uses a cached version for a slight speed advantage .
746	Gets a JSON version of a User - Agent by encoding a seeded object and fetching a uname from the system .
747	Returns generated sharer url .
748	Shares URL in specified network .
749	Touches network and emits click event .
750	Opens sharer popup .
751	Sets popup default dimensions .
752	Load and parse . properties files
753	Returns the number of pixels by which the event happens from the nearest edge of the chart . For events in the interior of the chart this returns zero .
754	Track the beginning of drag events
755	Disable zooming out if panning .
756	Given three sequential points p0 p1 and p2 find the left and right control points for p1 .
757	Creates a new DygraphLayout object .
758	contextB is the same thing as this context object but renamed .
759	Find the next stackable point starting from the given index .
760	In native format all values must be dates or numbers . This check isn t perfect but will catch most mistaken uses of strings .
761	Creates the crosshair
762	Needed for dashed lines .
763	Instantiate a Keycloak .
764	Construct a grant manager .
765	Construct a Rotation instance
766	Construct a configuration object .
767	Construct a policy enforcer .
768	Construct a token .
769	Filters user input css properties by whitelisted regex attributes .
770	Extracts the style attribues from an AbstractSyntaxTree and formats those values in the inline style attribute format .
771	Filters the existing attributes for the given property . Discards any attributes which don t match the whitelist .
772	Yes this will lose precision over 2^53 but that can t be helped when returning a single integer . We simply won t support packfiles over 8 petabytes . I m ok with that .
773	Caching has check .
774	Read a variable length number our of delta and move the offset .
775	The version is stored as an unsigned 32 integer in network byte order . It must be version 2 or 3 .
776	The number of objects in this packfile is also stored as an unsigned 32 bit int .
777	Common helper for emitting all three object shapes
778	Feed the deflated code to the inflate engine
779	20 byte checksum
780	Hide element if doesn t contain filter value
781	Filter logs based on _filterValue
782	Set _filterValue from URL parameter filter
783	Set parameter filter in URL
784	Init socket . io communication and log container
785	helper function for setting of the distance based on camera field of view and size of the product s bounding box
786	set initial conditions so that different gestures can be identified
787	Clones an object
788	Navigates forward n pages If n is negative we will navigate in reverse
789	Updates the current URL to include a hashtag of the current page number .
790	Sets the progress indicator .
791	Removes tabindex property from all links on the current slide sets tabindex = - 1 for all links on other slides . Prevents slides from appearing out of control .
792	Plucks a few fields from an object
793	Loads a single static asset from either a filename or URL
794	Loads a single asset and sets the returned data to the loaded subobject of a given resource map
795	Loads files from a given map and places them in that map s loaded field
796	Loads a settings file and sets appropriate options . Used to determine whether or not we should completely override a style in a theme
797	Promise to load a file s contents
798	Promise to perform a get request and return the result
799	Returns the home directory of the current user
800	Implements a subset of superagent s API . Packages up arguments to pass to superagent under the hood .
801	private method ; this bound to request object
802	Gets the name of a logger from its filepath .
803	Writes out the ReactElements to the response . Returns a promise that fulfills when all the ReactElements have been written out .
804	Write as many elements out in a row as possible and then flush output . We render elements as their data becomes available so they might fill in out - of - order .
805	Return fn with a wrapper that puts its return value through standardize on the way out .
806	Same as HTML5 pushState API but with old browser support
807	Same as HTML5 replaceState API but with old browser support
808	writes out a bootstrap file for the client which in turn includes the client routes file . note that outputDir must be the same directory as the client routes file which must be named routes_client .
809	Error objects are weird . Let s turn them into normal objects .
810	massage the error into a format suitable for logging
811	Each logger actually has some secondary loggers attached to it for stats . This helper wires them up .
812	This is used for classifying time and gauge values .
813	merge source into target
814	does the chain group have any ready - to - execute scripts?
815	creates a script load listener
816	script executed handler
817	make the request for a scriptha
818	execute a script that has been preloaded already
819	process the script request setup
820	depends on script - preloading
821	called when a script has finished preloading
822	called when a script has finished executing
823	main driver for executing each part of the chain
824	setup next chain script group
825	force LABjs to pause in execution at this point in the chain until the execution thus far finishes before proceeding
826	Create the production build and print the deployment instructions .
827	Try to determine a platform - specific path where can write logs
828	Transform Message object to a string
829	Try to load main app package
830	Run typedoc over library public API files to generate HTML files from customised typedoc theme The resulting files are not really useful on their own ; they will be used later to generate demo app code
831	Convert typedoc HTML file into Angular component for use in demo app
832	Generate component name from HTML file name It preserves all except for _ and . characters that get added by typedoc The generated named is still weird but it doesn t matter
833	Generate module file based on metadata from generated components
834	Generate package . json file based on package . json . template and main package . json
835	Convert public_api . json to public_api . ts
836	Get all files in directory recursively synchronously
837	Copy README . md from given location to the library directory
838	Generate template for a single file
839	Generate highlighted source code using prism
840	Common HTML template for tab
841	Find the scope that a given node belongs to .
842	Merge two visitors .
843	Define the visitor object as merging the rules of eslint - plugin - es .
844	Check whether a given case object is full - supported on the configured node version .
845	Define the predicate function to check whether a given case object is supported on the configured node version .
846	Reads the package . json data in a given path .
847	Gets allowModules property from a given option object .
848	Gets the top assignment expression node if the given node is an assignee .
849	Gets the reference of module . exports from the given scope .
850	Gets the reference of exports from the given scope .
851	Gets the location info of reports .
852	Enforces module . exports . This warns references of exports .
853	Enforces exports . This warns references of module . exports .
854	Creates a function which checks whether or not a given file is ignoreable .
855	Converts old - style value to new - style value .
856	Creates the function which checks whether a file path is matched with the given pattern or not .
857	Combines given converters . The result function converts a given path with the first matched converter .
858	Parses convertPath property from a given option object .
859	Convert a given path to name .
860	Reports a use of a deprecated API .
861	Gets tryExtensions property from a given option object .
862	Gets default version configuration of this rule .
863	Gets values of the ignores option .
864	Checks whether a given key should be ignored or not .
865	Check a given string has a given pattern .
866	Checks whether the given function has trailing commas or not .
867	Checks whether the given class extends from null or not .
868	Reports a given node if the specified feature is not supported .
869	Validate RegExp syntax .
870	Validate RegExp syntax in a RegExp literal .
871	Resolve the given id to file paths .
872	Gets the module name of a given path .
873	Checks whether or not a given path is a bin file .
874	Get all file extensions of the files which have the same basename .
875	Get the engines . node field of package . json .
876	Check whether the file exists or not .
877	Gets resolvePaths property from a given option object .
878	Checks that a path is formatted .
879	Serialize tag attributes info
880	Get require expression module id
881	Remove the bind variable declaration
882	Get the required module path or id information
883	Transform element node filter info
884	Process file using the given processor
885	Get custom component tags
886	Get need to import filter modules
887	Get included template element
888	Process media rule . Remove not current app media query target rule . Remove current app media query params .
889	Remove the given property name style declaration that the position is front of the current given style declaration .
890	Process specified app target css style property declaration
891	Mixin the target with the source
892	Flatten mixins for not support native behavior or Page mixins
893	Add ref plugin
894	Normalize the view transformation plugins
895	On tag handler
896	On filter handler
897	Initialize component view template transform options .
898	Navigate to the specified url
899	Compile the file using babel
900	Create init call arguments
901	Transform mini program code
902	Get transform options
903	Get the router page information
904	Normalize router page information
905	Normalize app route info
906	Add display page config info based the config defined in page
907	Normalize window config convert it as quick app display config
908	Add API feature item . Return the feature item to add or return false if existed .
909	Normalize API feature item
910	Compile quick app json it should compile after all files build done
911	Normalize the page information
912	Get the imported template element based on the given template name .
913	Parse the used data information of the import template . If the data attribute name is not changed it ll ignore .
914	Replace template variable using the new data variable name
915	Replace element attribute bind data variable using the new data variable name
916	Update the inline template data variable name
917	Check given the variable name whether need to polyfill
918	Proxy data getter
919	Add data change watcher
920	Collect the computed prop dependence data props
921	Find the changed computed props
922	Initialize the imported global component definition
923	Compile the file using json5
924	Init platform info
925	Create file info object
926	Resolve the required module id and replace the old module id using the resolved module id .
927	show warning log when parsing event name
928	get a random string which is not in the string
929	Sort the file default processors by the processor order property .
930	Add the file extname associated processors .
931	Remove the file extname associated processors .
932	Get the map of the file extname with processor name .
933	Initialize processor information
934	Override the function value for the given object
935	Override the builtin processor definition
936	Update existed processor processor info . If the processor has been defined it ll skip the update .
937	Register the custom processor
938	Generated filter code
939	Crate API done hook
940	Intercept the API promise response
941	Execute API initialization hook
942	Execute API done hook
943	Query component instance by the given id
944	Initialize the component relations
945	Prepare the dependencies of the polyfill to support .
946	Convert the plain object node to javascript object
947	Create AST node by the given value
948	Remove node comments
949	Handle the event proxy
950	Make computed props observable
951	Make props observable
952	Make data observable
953	Initialize the local polyfill plugins
954	Check whether has babel dep resolve plugin in the given plugin list
955	Normalize babel plugins
956	Initialize babel processor options
957	Start to build small application code to native small application code .
958	Parse event bind information
959	Initialize the extensions
960	Initialize the component data
961	Query the reference instance information by the given reference class
962	Fetch data by the given url and options
963	Normalize the transformers
964	Transform the given template element
965	Transform text node
966	Analysis native component
967	Process the component dependence sub components based on usingComponent info defined in json .
968	Update array item value
969	Make array observable
970	Watch the given expression or function
971	Initialize wx component js processor
972	Initialize wx tpl processor
973	Initialize wx style processor
974	Initialize wxs js processor
975	Init wx2swan processors
976	Replacement the file content using the given pattern
977	Convert media query to js expression
978	Determine the given media app query params is match with the current build media target .
979	Normalize the app media query tokens in place .
980	Initialize the app media query target information . Return whether should stop media query params token parsing .
981	Initialize the app media query tokens . Return the new cache token string or true if return true meaning that it should stop parse tokens .
982	Parse app media query params info
983	Compile pug template
984	Initialize native component js processor
985	Init native transformation processors
986	Prompt the user to confirm an action .
987	Wrap the prototype method of a given object .
988	Make a request to the REST API .
989	Comparator to sort operations by path and method . Methods not in the pre - defined ordered list are placed at the end and sorted alphabetically .
990	Format a date string to the given resolution .
991	Format a size in bytes into a human - readable string with metric unit prefixes .
992	Like formatSize but more generic . Returns a human - readable format of an integer using metric prefixes . The caller is expected to append any unit string if necessary .
993	This comparator can be used by collections that wish to support locale - based sorting . The locale specifies how upper and lower case are compared .
994	This comparator can be passed to the sort function on javascript arrays .
995	Add file to zip and it s SHA to manifest
996	Signs a manifest and returns the signature .
997	Clone an object by copying all its properties and returning new object . If the argument is missing or null returns a new object .
998	Get the decimal part of the millisecond value as nanoseconds
999	Used to grok the now parameter to createClock .
1000	just a helper for this demo
1001	Attempt to add a single item to the row . This is the heart of the justified algorithm . This method is direction - agnostic ; it deals only with sizes not positions .
1002	Set row height and compute item geometry from that height . Will justify items within the row unless instructed not to .
1003	Create a new empty row .
1004	Configure caching for a given path explicitly .
1005	Set a callback for when caching is activated for a path .
1006	Retrieve caching setting for a given path or its next parent with a caching strategy set .
1007	Claim access on a given scope with given mode .
1008	Remove access for the given scope .
1009	Produce a title from a filename for metadata .
1010	Get only the filename from a full path .
1011	Initiate the authorization flow s OAuth dance .
1012	Create or update a file .
1013	Delete a file .
1014	Fetch the user s info from Google .
1015	Update an existing file .
1016	Create a new file .
1017	Request a file .
1018	Request a directory .
1019	Get the ID of a parent path .
1020	Create a directory .
1021	Get the ID of a file .
1022	Get the metadata for a given file ID .
1023	Restore BaseClient s getItemURL original implementation
1024	Install an event handler for the given event name
1025	Remove a previously installed event handler
1026	This function deals with the Webfinger lookup discovering a connecting user s storage details .
1027	Set the backed to dropbox and start the authentication flow in order to obtain an API token from Dropbox .
1028	Get all items in a folder .
1029	Checks for the path in _revCache and decides based on that if file has changed . Calls _getFolder is the path points to a folder .
1030	Gets a publicly - accessible URL for the path from Dropbox and stores it in _itemRefs .
1031	Fetches the user s info from dropbox and returns a promise for it .
1032	Deletes a file or a folder .
1033	Requests the link for an already - shared file or folder .
1034	Hooking the sync
1035	Unhooking the sync
1036	Hook RemoteStorage . syncCycle as it s the first function called after RemoteStorage . sync is initialized so we can then hook the sync function
1037	Restore RemoteStorage s syncCycle original implementation
1038	Overwrite BaseClient s getItemURL with our own implementation
1039	helper method to extract features for this chunk
1040	get id from url
1041	get time from url
1042	When tables have been selected fetch data for those tables
1043	When table data has been collected build an object representation of them
1044	Given an optional cursor and a default offset returns the offset to use ; if the cursor contains a valid offset that will be used otherwise it will be the default .
1045	Couldn t figure out b . importSpecifier
1046	Parse rule codes .
1047	Add a dictionary .
1048	Get a list of values close in edit distance to words .
1049	Check and handle a generated value .
1050	Add rules for word to the table .
1051	Check whether a word has a flag .
1052	Normalize value with patterns .
1053	Find a known form of value .
1054	Construct a new spelling context .
1055	Add value to the checker .
1056	Parse a dictionary .
1057	Parse a line in dictionary .
1058	Get the casing of value .
1059	Apply a rule .
1060	Check spelling of word .
1061	Add a dictionary file .
1062	Check spelling of value exactly .
1063	Get data for template . This also acts as a view - model . Try to return proper data if model or collection is available .
1064	Add special properties _app and _model or _collection to pass to the templates .
1065	Get HTML attributes to add to el .
1066	Turn template into HTML minus the wrapper element .
1067	Get the HTML for the view including the wrapper element .
1068	If rendered on the client missing its data fetch it based on the parameters passed in .
1069	Allow appAttributes to be a function for lazy - instantiation based on req and res .
1070	abstract action call
1071	Method passed to routes file to build up routes definition . Adds a single route definition .
1072	Unmarshal converts a point serialized by Marshal into an jwk encoded key
1073	Computes the Password - Based Key Derivation Function 2 .
1074	Helper methods raw header
1075	Create sdk instance
1076	Public API for matching a URL pathname to a path .
1077	The public API for navigating programmatically with a component .
1078	Updates an entity cache in response to any action with response . entities .
1079	Updates error message to notify about the failed fetches .
1080	cancellation of the main task . We ll simply resume the Generator with a Cancel
1081	Completion callback passed to the appropriate effect runner
1082	Handle diffing of previous and current attributes .
1083	Handle updates after the initial render .
1084	Handle diffing of previous and current event maps .
1085	Register event handlers for an event name to ref .
1086	Unregister event handlers for an event name to ref .
1087	Wrap the hooks so they don t fire if they re called before the store is initialised . This only happens when doing the first client render of a route that has an onEnter hook
1088	Parse the Authorization header field of a request .
1089	Get the Authorization header from request object .
1090	Parse basic auth to object .
1091	Starts installing CEF libraries
1092	Returns a Request object
1093	Check the file matches on of the globs .
1094	Get CORS support even for older IE
1095	Determines a way to send a reply back from an incoming eval request .
1096	Turns an IPC channel into an Observable
1097	Returns a method that will act like ipc . send depending on the parameter passed to it so you don t have to check for webContents .
1098	This method creates an Observable Promise that represents a future response to a remoted call . It filters on ID then cancels itself once either a response is returned or it times out .
1099	Walks the global object hierarchy to resolve the actual object that a dotted object path refers to .
1100	Invokes a method on a module in the main process .
1101	Global Positioning System Fix Data
1102	GPS DOP and active satellites
1103	Recommended Minimum data for gps
1104	satellites in view
1105	In the event that index chunks aren t available from an external source it winds up saving time to do a fast pass over the data to compute them . This allows us to parse a single contig at a time using jBinary .
1106	Add - close - button method
1107	Callback event calls
1108	Check if element is fully in viewport
1109	In a real world app you should replace this with React or Angular or jQuery .
1110	Fallback to old WebView where SFSafariViewController is not supported
1111	Use rc - tree convertDataToTree to convert treeData to TreeNodes . This will change the label to title value
1112	Write headers to the File object . Optional argument only is an array of regular expressions ; only headers matching one of these expressions are written .
1113	Returns true if header name matches one of the regular expressions .
1114	This is a bit crappy as it uses the global commander variable . But whaeva .
1115	Convenience function to create new types of heads . It takes care of a bit of inheritance hassle .
1116	Proxies the given request to the given URL writing the result in the given response object .
1117	BigIq 5 . 0 license provider constructor
1118	List a private key by folder and name .
1119	Creates a Traffic Group on BigIP if the Traffic Group does not exist
1120	Handles becoming master .
1121	Get the count of running Autoscale process with actions of join or update .
1122	If the provider supports encryption initializes and stores keys .
1123	Gets the instance marked as master
1124	Checks that master instance has the most recent version of all the BIG - IP instances
1125	Checks that if there are external instances the master is one of them
1126	Gets the value from an Object s property using a provided Object property path . An empty property name in the path fetches all keys in the current Object .
1127	Checks status of iControl REST task
1128	BigIq 5 . 3 license provider constructor
1129	Encrypts data with a public key
1130	Return the last folder name in the path and the calling module s filename .
1131	Gets a license provider based on api type or version
1132	Force resets a user s password even if the oldPassword is not known .
1133	Removes the progress bar and busy cursor .
1134	Initializes the contents of the tabs . This sets the initial values of the input field and iframe in the Browser tab and the checkbox in the Summary tab .
1135	Calculates coverage statistics for the current source file .
1136	Selects a tab .
1137	Used by sortBy to compare transformed collection elements stable sorting them in ascending order .
1138	The base implementation of _ . flatten without support for callback shorthands or thisArg binding .
1139	Retrieves the value of a specified property from all elements in the collection .
1140	This method is like _ . reduce except that it iterates over elements of a collection from right to left .
1141	Retrieves a random element or n random elements from a collection .
1142	Creates a function that when called invokes func with the this binding of thisArg and prepends any additional bind arguments to those provided to the bound function .
1143	Binds methods of an object to the object itself overwriting the existing method . Method names may be specified as individual arguments or as arrays of method names . If no method names are provided all the function properties of object will be bound .
1144	Creates a function which accepts one or more arguments of func that when invoked either executes func returning its result if all func arguments have been provided or returns a function that accepts one or more of the remaining func arguments and so on . The arity of func can be specified if func . length is not sufficient .
1145	Creates a function that provides value to the wrapper function as its first argument . Additional arguments provided to the function are appended to those provided to the wrapper function . The wrapper is executed with the this binding of the created function .
1146	Adds function properties of a source object to the lodash function and chainable wrapper .
1147	Copy all the properties to the first argument from the following arguments . All the properties will be overwritten by the properties from the following arguments . Inherited properties are ignored .
1148	dx ... horizontal shift dy ... vertical shift blur ... blur color ... color
1149	amount ... the proportion of the conversion . A value of 1 is completely grayscale . A value of 0 leaves the input unchanged .
1150	amount ... the proportion of the conversion . A value of 0 is completely un - saturated . A value of 1 leaves the input unchanged .
1151	Note that scale as the only transformation does not combine with previous values .
1152	Get SVGRect that contains coordinates and dimension of the real bounding box i . e . after transformations are applied . If target is specified bounding box will be computed relatively to target element .
1153	Convert global point into the coordinate space of this element .
1154	Converts rectangular to polar coordinates . An origin can be specified otherwise it s 0
1155	Rotate point by angle around origin o .
1156	Move point on line starting from ref ending at me by distance distance .
1157	Find point on my boundary where line starting from my center ending in point p intersects me .
1158	Move and expand me .
1159	Find point on me where line from my center to point p intersects my boundary .
1160	Get open - ended Bezier Spline Control Points .
1161	Get all inbound and outbound links connected to the cell model .
1162	Disconnect links connected to the cell model .
1163	A convenient way to set nested attributes .
1164	Find the closest element that has the magnet attribute set to true . If there was not such an element found return the root element of the cell view .
1165	Construct a unique selector for the el element within this view . selector is being collected through the recursive call . No value for selector is expected when using this method .
1166	prototype . markup is rendered by default . Set the markup attribute on the model if the default markup is not desirable .
1167	A convenient way to set labels . Currently set values will be mixined with value if used as a setter .
1168	Returns a function observing changes on an end of the link . If a change happens and new end is a new model it stops listening on the previous one and starts listening to the new one .
1169	This method ads a new vertex to the vertices array of . connection . This method uses a heuristic to find the index at which the new vertex should be placed at assuming the new vertex is somewhere on the path .
1170	Find a vertex in between the vertices p1 and p2 so that the route between those vertices is orthogonal . Prefer going the direction determined by preferredDirection .
1171	Find a view for a model cell . cell can also be a string representing a model id .
1172	Find all views at given point
1173	Find all views in given area
1174	iterates throught each command stops on first invalid command .
1175	check whether the command is not against any rule
1176	Get the value of the attribute at path based on the options . defaultValue and options . valueRegExp if present .
1177	Parse the input value based on the input type . Override this method if you need your own specific parsing .
1178	Finds the next edge with the minimum slack .
1179	Propagate cut values up the tree .
1180	Redirect edges so that target is the root of its subtree .
1181	Constructs a new Set with an optional set of initialKeys .
1182	Helper to create a new canvas .
1183	Leaflet v0 . 7 backwards compatibility
1184	Used by exports . module . create s returned function to create new gith objects that hold settings and emit events
1185	Build the webpack configuration
1186	Creates image data from HTML image
1187	Reads image source and returns imageData as only callback parameter
1188	opts standardized to work like levelup api
1189	Updates the given element s innerHTML based on the time it represents .
1190	Closure to make this a little shorter
1191	works for activities and activityobjects
1192	The methods below are non - standard and invented by me . Sharing a boundary start - to - end or end - to - start does not count as intersection .
1193	Removal of a single range
1194	Check whether a given object exists in an array
1195	Replaces the original text nodes with the newly auto - linked dom tree
1196	Iterates over all childs of the element recreates them appends them into a document fragment which later replaces the entire body content
1197	Callback for when the iframe has finished loading
1198	Insert html at the caret position and move the cursor after the inserted html
1199	Wraps current selection with the given node
1200	Normalizes nodes after applying a CSS class to a Range .
1201	Get the current command s value
1202	Check whether given node is a text node and whether it s empty
1203	Returns previous sibling node that is not a blank text node
1204	Returns next sibling node that is not a blank text node
1205	Removes line breaks before and after the given node
1206	Execute native query command and if necessary modify the inserted node s className
1207	Takes the attributes of the elementToChange and inserts them in their corresponding dialog input fields
1208	Show the dialog element
1209	Prepare html parser logic - Observes for paste and drop
1210	Convert the given parameters to an Array of name - value pairs .
1211	Convert the given parameters to a map from name to value .
1212	Construct the value of the Authorization header for an HTTP request .
1213	Correct the time using a parameter from the URL from which the last script was loaded .
1214	Add a signature to the message .
1215	Set the key string for signing .
1216	Instantiate a SignatureMethod for the given method name .
1217	Create a subclass of OAuth . SignatureMethod with the given getSignature function .
1218	When I say view the crowd say selector
1219	Tries various vendor prefixes and returns the first supported property .
1220	Sets multiple style properties at once .
1221	Fills in default values .
1222	Returns the absolute page - offset of the given element .
1223	Splits the string into an array of values trimming each value . An empty array is returned for nulls or empty strings
1224	filters mouse events so an event is fired only if the mouse moved .
1225	A simple implementation of a thunk
1226	Checks if the formatter function should be used .
1227	Default tokenizer . This function uses breaks the input on substring match of any string from the opts . tokenSeparators array and uses opts . createSearchChoice to create the choice object . Both of those two options have to be defined in order for the tokenizer to work .
1228	Creates a new class
1229	Monitor the original element for changes and update select2 accordingly abstract
1230	Performs the opening of the dropdown abstract
1231	Initialzie a new SubEmitterSocket .
1232	Initialzie a new PubEmitterSocket .
1233	Convert str to a RegExp .
1234	Initialize a new ReqSocket .
1235	A generic AST node
1236	returns the node
1237	reads a custom token
1238	Unescape special chars
1239	Handles the dereferencing
1240	Reads an encapsed string
1241	check if matching a HEREDOC state
1242	check if its a DOC end sequence
1243	Reads an IF statement
1244	Reads a constant declaration
1245	Read member flags
1246	Reads a variable
1247	resolves a static call
1248	Initialise a new parser instance with the specified options
1249	Reads a single line comment
1250	Reads a short form of tokens
1251	Reads a list of variables declarations
1252	Find the filename of a chunk which matches either the id or path provided .
1253	Find an ancestor of a chunk . Return the distance from the target or - 1 if not found .
1254	Find the closest common parent chunk from a list . Since closure - compiler requires a chunk tree to have a single root there will always be a common parent .
1255	set animation callback as a method
1256	Using var to avoid Unsupported phi use of variable deoptimization in Chrome 56
1257	This function associates a component object with a DOM element by calling the components render method assigning an . element property on the object and also returning the element . It also assigns a virtualNode property based on the return value of the render method . This will be used later by performElementUpdate to diff the new results of render with the previous results when updating the component s element . Finally this function also associates the component with a refs object which is populated with references to elements based on ref properties on nodes of the virtual - dom tree . Before calling into virtual - dom to create the DOM tree it pushes this refs object to a shared stack so it can be accessed by hooks during the creation of individual elements .
1258	Synchronsly updates the DOM element associated with a component object . . This method assumes the presence of . element and . virtualNode properties on the component which are assigned in the initialize function . It calls render on the component to obtain the desired state of the DOM then diff s it with the previous state and patch es the element based on the resulting diff . During the patch operation it pushes the component s refs object to a shared stack so that references to DOM elements can be updated . If update is called during the invocation of updateSync the requests are processed synchronously as well . We track whether this is the case by incrementing and decrementing syncUpdatesInProgressCounter around the call . For now etch does not allow the root tag of the render method to change between invocations because we want to preserve a one - to - one relationship between component objects and DOM elements for simplicity .
1259	Removes the component s associated element and calls destroy on any child components . Normally this function is asynchronous and will perform the destruction on the next animation frame . If called as the result of another update or destruction it calls destroy on child components synchronously . If called as the result of destroying a component higher in the DOM the element is not removed to avoid redundant DOM manipulation . Returns a promise that resolves when the destruction is completed .
1260	A synchronous version of destroy . Note that we track whether destroy calls are in progress and only remove the element if we are not a nested call .
1261	Translate back to hex and turn back into UUID format with dashes
1262	Cleans the search filter .
1263	Filters the symbol nodes in the API sidebar by the given search string .
1264	Toggles the hamburger menu for the navbar list .
1265	gets a click event handler for either scope filter buttons or kind filter buttons .
1266	Factory function that creates a closure scope around a Thenable - callback . Returns a function that can be passed to a Thenable that will resume a Context lookup once the Thenable resolves with new data adding that new data to the lookup stack .
1267	Cleans the given symbol name .
1268	Returns an array of n different variants of the input string str . The variants are computed by randomly rotating one random character .
1269	Suites of benchmarks consist of a name and the set of benchmarks in addition to the reference timing that the final score will be based on . This way all scores are relative to a reference run and higher scores implies better performance .
1270	Run the setup the actual benchmark and the tear down in three separate steps to allow the framework to yield between any of the steps .
1271	const STATE_ERROR = 3 ;
1272	Data structures .
1273	Parse functions .
1274	ES6 21 . 2 . 5 . 3 .
1275	Set the public key fields N and e from hex strings
1276	Set the private key fields N e and d from hex strings
1277	Returns an intersection of locales and service supported locales . Parameter locales is treated as a priority list .
1278	Adds property to an object if the value is not undefined . Sets configurable descriptor to false .
1279	Adds property to an object if the value is not undefined . Sets all descriptors to true .
1280	Returns a string that matches LDML representation of the options object .
1281	Returns object that matches LDML representation of the date .
1282	Returns actual formatted date or fails if date parameter is invalid .
1283	Find ACPI PCI device bus slot and function
1284	Abstract superclass for constraints having two possible output variables .
1285	only applies to vectors
1286	Appends the arguments to the end of the array and returns the new length of the array . See ECMA - 262 section 15 . 4 . 4 . 7 .
1287	Executes the function once for each element present in the array until it finds one where callback returns true .
1288	ES6 draft 03 - 17 - 15 section 22 . 1 . 3 . 3
1289	ES6 draft 07 - 15 - 13 section 15 . 4 . 3 . 23
1290	ES6 draft 07 - 15 - 13 section 15 . 4 . 3 . 24
1291	ES2016 draft section 22 . 1 . 3 . 11
1292	ES6 7 . 3 . 9
1293	21 . 1 . 5 . 1 CreateStringIterator Abstract Operation
1294	Returns the mirror for a specified value or object .
1295	ECMA - 262 section 15 . 5 . 4 . 6
1296	Core functionality .
1297	Utility for debugger
1298	Recursively collects all newly compiled functions that are going into business and should have link to the actual script updated .
1299	Returns function that restores breakpoints .
1300	From array of function infos that is implicitly a tree creates an actual tree of functions in script .
1301	A recursive function that processes internals of a function and all its inner functions . Iterator chunk_it initially points to a chunk that is below function start .
1302	Finds all SharedFunctionInfos that corresponds to compile info in old version of the script .
1303	An object describing function compilation details . Its index fields apply to indexes inside array that stores these objects .
1304	Compares a function scope heap structure old and new version whether it changed or not . Returns explanation if they differ .
1305	Creates JSON description for a change tree .
1306	Create a new break point object and add it to the list of break points .
1307	Object representing a script break point . The script is referenced by its script name or script id and the break point is represented as line and column .
1308	Function called from runtime when a new script is compiled to set any script break points set in this script .
1309	Convert an array to its debugger protocol representation . It will convert each array element to a protocol value .
1310	Convert a value to its debugger protocol representation .
1311	The Richards benchmark simulates the task dispatcher of an operating system .
1312	A scheduler can be used to schedule a set of tasks based on their relative priorities . Scheduling is done by maintaining a list of task control blocks which holds tasks and the data queue they are processing .
1313	A task control block manages a task and the queue of work packages associated with it .
1314	An idle task doesn t do any work itself but cycles control between the two device tasks .
1315	A task that manipulates work packets .
1316	A simple package of data that is manipulated by the tasks . The exact layout of the payload data carried by a packet is not importaint and neither is the nature of the work performed on packets by the tasks .
1317	Internal function that does a C call using a function not an identifier
1318	maps url to audio data
1319	Retrieves the main module package . json information .
1320	if source is multisource
1321	path resolver taking in account file structure
1322	Checks whether two states are N - equivalent i . e . whether they go to the same set on a symbol .
1323	Checks whether states go to the same set .
1324	Checks if a range is included either in 0 - 9 a - z or A - Z
1325	Extracts ranges from the range string .
1326	Checks class range
1327	Creates a character node .
1328	Checks the flags are valid and that we don t duplicate flags .
1329	Parses patterns like \ 1 \ 2 etc . either as a backreference to a group or a deciaml char code .
1330	Validates Unicode group name .
1331	Creates an AST node with a location .
1332	Creates location node .
1333	Checks if a node is a meta char from the set \ d \ w \ s \ D \ W \ S
1334	Does an actual AST traversal using visitor pattern and calling set of callbacks .
1335	Alteration factory .
1336	Disjunction factory .
1337	Helper gen function calls node type handler .
1338	\ ] \\ \ ^ \ -
1339	Flattens a nested disjunction node to a list .
1340	Installs a compatible password hashing function .
1341	Uninstalls a password hashing function previously installed .
1342	Selects manually which password hashing function to use . You can call hash and verify on the object returned .
1343	Returns the name of the algorithm that has generated the hash string .
1344	Determines whether or not the hash provided matches the hash generated for the given password choosing the right algorithm based on the identifier contained in the hash .
1345	Simply removes all unwanted props in order to avoid react unkown prop warning
1346	Gets the current list of possible servers in the local networks .
1347	Pings and individual server to update the arp table .
1348	Parses arp scan data into a useable collection .
1349	Parses a single row of arp data .
1350	player event handlers
1351	username and accesskey or password
1352	This class scrolls a page from the top to the bottom once . The page is scrolled down by a single scroll gesture .
1353	Use MockHttpRequest in demos
1354	sync returns version
1355	returns a promise with available new versions
1356	serialize function values recursively
1357	convert xml to json
1358	gets all the items together in a merged array
1359	get the executable name
1360	download a binary file
1361	execute the binary executable to generate the certificates
1362	delete a folder and the file inside it
1363	Recursively copies given object into a new object . Helper method for merge
1364	This request is to remove tags from an alert in Opsgenie .
1365	This request is to add details as custom properties to an alert in Opsgenie .
1366	This request is to execute a custom action on an alert in Opsgenie .
1367	This request is to list logs of an alert in Opsgenie .
1368	This request is to update a saved search for searching alerts in Opsgenie .
1369	function minificate js css and html files
1370	Processing of files
1371	Merge default options with overwrites and returns new object
1372	parse Forwarded header
1373	eslint - disable - next - line consistent - return
1374	If there is no locale hierarchy infer that the default locale is the master or the first locale if there is no default . This is a bc gesture master locales are a best practice
1375	Early versions did not have this index and thus could violate the uniqueness of the guid . locale pair under rare race conditions . If the index fails resolve the duplicates and try again
1376	Recursively replace all occurrences of the ids in this locale found in the given doc with their new ids per idsToNew . This prevents _id conflicts on insert even though old data is still in the database under other locale names
1377	There are cases where a suitable ancestor in the tree cannot be found or a few docs are missing due to race conditions . To mop these up we make a penultimate pass that considers every unique workflowGuid preferring the locale with the most docs as a basis but falling back if necessary to any in which it exists . And in the final pass we use an aggregation query to find absolutely every last workflowGuid that does not have every locale .
1378	Due to join projections we often do not know the guids of the related docs yet and even sometimes the type as well
1379	Turn the HTTP style headers into AWS Object params
1380	create a new Publisher
1381	Constructor for ZarinPal object .
1382	helpful script for deferred promise
1383	Parses the teraslice client endpoint responses into an array used to generate tables in command line output .
1384	Display teraslice responses in a table
1385	Creates clusterState by iterating over all k8s pods with the label app = teraslice
1386	Creates k8s deployment that executes Teraslice workers for specified Execution .
1387	This function will grab the chunk of data specified by the slice plus an extra margin if the slice does not end with the delimiter .
1388	safely stop the execution without setting the ex status to stopping or stopped
1389	encompasses all executions in either initialization or running statuses
1390	Given the k8s Pods API output generates the appropriate Teraslice cluster state
1391	set by initAPI
1392	designed to allocate additional workers not any future slicers
1393	serialize save requests .
1394	verify the current status to make sure it can be updated to the desired status
1395	join rooms before on connect to avoid race conditions
1396	This function takes the raw data and breaks it into records getting rid of anything preceding the first complete record if the data does not start with a complete record .
1397	No parsing leaving to reader or a downstream op .
1398	tsv is just a specific case of csv
1399	Methods on the transform stream controller object
1400	Abstract operations .
1401	Using reader and writer read all chunks from this and write them to dest - Backpressure must be enforced - Shutdown must stop all activity
1402	ReadableStream API exposed for controllers .
1403	A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state check .
1404	A client of ReadableStreamDefaultController may use these functions directly to bypass state check .
1405	A client of ReadableByteStreamController may use these functions directly to bypass state check .
1406	WritableStream API exposed for controllers .
1407	Abstract operations for the WritableStreamDefaultWriter .
1408	A client of WritableStreamDefaultWriter may use these functions directly to bypass state check .
1409	Abstract operations implementing interface required by the WritableStream .
1410	A client of WritableStreamDefaultController may use these functions directly to bypass state check .
1411	Pipes yielded data though each iterable in the pipeline
1412	Gets a list of URIs for classes that are required in load order
1413	Returns the classes required for the application
1414	Apply for type property
1415	Creates a dir
1416	Opens the analyser loads database etc
1417	Scans the source files for javascript class and resource references and calculates the dependency tree
1418	Find all classes
1419	Loads the database if available
1420	Reads the db . json if it exists
1421	Parses the db . json into db
1422	Called when a reference to a class is made
1423	Returns the CLDR data for a given locale
1424	Gets the translation for the locale and library caching teh result .
1425	Updates all translations to include all msgids found in code
1426	Detects the symbol type ie class package member etc
1427	Returns the library for a given classname supports private files
1428	Returns the classname
1429	Sets an environment value as being checked for
1430	Returns the version of Qooxdoo
1431	Returns the resource database filename
1432	Parses a JSDoc comment returns an object where the keys are the name of the JSDoc ( eg
1433	Returns the absolute path to the contrib . json file
1434	Returns the library list from the contrib file
1435	Returns the tag name of the given library in the given contrib repository if installed . Returns false if not installed .
1436	Returns the data of the given library if installed . Returns false if not installed .
1437	Returns the cache object retrieving it from a local file if necessary
1438	Saves the cache to a hidden local file
1439	Exports the cache to an external file . Note that the structure of the cache data can change any time . Do not build anything on it . You have been warned .
1440	Helper method that expands a dotted string into MemberExpression
1441	Loads the source transpiles and analyses the code storing the result in outputPath
1442	Pushes new meta data onto the stack - each meta represents a class being defined we operate a stack so that we can handle inner classes
1443	Pops the current meta off the stack optionally checking that the classname is correct
1444	Pushes a new scope on the stack
1445	Pops a scope from the stack
1446	Adds a variable declaration to the current scope ; if the symbol was previously unresolved it is removed from the unresolved list
1447	Tests whether there is a variable declaration accessible to the current scope ie including parent scope
1448	Adds a reference to a symbol ; unknown symbols are marked as unresolved
1449	Removes a reference from scope ; this should only really be used after scanning is complete
1450	Adds an ignored symbol
1451	Tests whether a symbol has already been marked as ignore
1452	Adds an environment check made by the class
1453	Adds a required class
1454	Adds a required asset
1455	Returns the absolute path to the class file
1456	Returns the path to the rewritten class file
1457	Performs a binary search on the host array .
1458	Deletes all generated and cache files
1459	Metalsmith Plugin that collates a list of pages that are to be included in the site navigation into the metadata along with their URLs .
1460	Metalsmith plugin that loads partials and adding them to the metadata . partials map . Each file is added with it s filename and if it is a . html filename is also added without the . html extension .
1461	Generates the site with Metalsmith
1462	Compiles SCSS into CSS
1463	Returns the yargs command data
1464	Reads the . po file but only if it has not been loaded or has changed
1465	Writes the . po file to a specific filename
1466	Returns the entry with the given msgid creating it if it does not exist
1467	Returns the path to the current library . If the current directory contains several libraries the first one found is returned .
1468	Returns the path to the current application depending on the current working directory . If a directory contains several applications the first one found is returned .
1469	Return the content of a json file in the library as an object .
1470	Returns the absolute path to the qooxdoo framework used by the current project
1471	Returns the absolute path to the qooxdoo framework used by the current project unless the user provided a CLI option qxpath in which case this value is returned .
1472	Given the path to a library folder returns the library version from its manifest
1473	Awaitable wrapper around child_process . spawn . Runs a command in a separate process . The output of the command is ignored . Throws when the exit code is not 0 .
1474	Awaitable wrapper around child_process . exec Executes a command and return its result wrapped in a Promise .
1475	Adds commands to Yargs
1476	Prints the message
1477	Decodes the message ID and arguments into a string to be presented in the output
1478	Decodes a marker into a String description
1479	Parses the command line and produces a normalised configuration ;
1480	Installs the command into yargs
1481	Resolves the target class instance from the type name ; accepts source or build or a class name
1482	Loads the cached database
1483	Scans a folder recursively looking for resource files
1484	Collects information about the assets listed in srcPaths ;
1485	Scan all libraries and add the namespace to globals
1486	Load library and add namespace to result
1487	Parses JSON string into an object
1488	Loads JSON data from a file and returns it as an object ; if the file does not exist then null is returned
1489	Saves JSON data to a file or erases the file if data is null
1490	Copies a file
1491	Returns the stats for a file or null if the file does not exist
1492	Deletes a file does nothing if the file does not exist
1493	Rotates files so that this file does not exist by renaming the existing file to have a . 1 appended and the . 1 to be renamed to . 2 etc up to length versions
1494	Deletes a file or directory ; directories are recursively removed
1495	Normalises the path and corrects the case of the path to match what is actually on the filing system
1496	Converts the value of the settings command line option to qx settings .
1497	Resizes columns based on the flexGrow property while respecting manually set widths
1498	Calculates the Total Flex Grow
1499	Forces the width of the columns to distribute equally but overflowing when nesc .
1500	The PDU contains the SNMP request or response fields and a list of VarBinds .
1501	Clear a pending packet when it times out or is successfully received .
1502	Convert a string formatted OID to an array leaving anything non - string alone .
1503	Fix any OIDs in the oid or oids objects that are passed as strings .
1504	Update targ with attributes from _defs . Any existing attributes on targ are untouched .
1505	Compare two OIDs returning - 1 0 or + 1 depending on the relation between oidA and oidB .
1506	This creates a new SNMP session .
1507	Helper to check whether oid in inside the tree rooted at root or not .
1508	Return a wrapped copy of the passed contents with the specified wrapper type . This is used for Sequence and other constructed types .
1509	Encode an OID . The first two number are encoded specially in the first octet then the rest are encoded as one octet per number unless the number exceeds 127 . If so it s encoded as several base - 127 octets with the high bit set to indicate continuation .
1510	Divide an integer into base - 256 bytes . Most significant byte first .
1511	to handle expiry of the oauth token
1512	exclude option could be used multiple times in this case the values are provided in an array
1513	Update the x0 y0 x1 and y1 for the sankeyCircular to allow space for any circular links
1514	Iteratively assign the depth for each node . Nodes are assigned the maximum depth of incoming neighbors plus one ; nodes with no incoming links are assigned depth zero while nodes with no outgoing links are assigned the maximum depth .
1515	sort links based on the distance between the source and tartget node columns if the same then use Y position of the source node
1516	check if link is self linking ie links a node to the same node
1517	Return the node from the collection that matches the provided ID or throw an error if no match
1518	Populate the sourceLinks and targetLinks for each node . Also if the source and target are not objects assume they are indices .
1519	Return the angle between a straight line between the source and target of the link and the vertical plane of the node
1520	Check if two circular links potentially overlap
1521	Return the number of circular links for node not including self linking links
1522	Check if a circular link is the only circular link for both its source and target node
1523	check if two nodes overlap
1524	Make an API request
1525	Make a public API request
1526	Make a private API request
1527	Spawn a child process .
1528	Spawn a child process with the canceller function .
1529	Creates an instance of CasStrategy .
1530	Start a CAS PGT callback server . PGT stands for proxy granting ticket .
1531	Manually compiles the element fixing the recursion loop .
1532	Compiles and re - adds the contents
1533	Finds the the import path from parent node_modules .
1534	Creates a new instance of sandbox from the options that have been provided
1535	Class extending methods
1536	Object class methods implemented as instance methods
1537	Basic array internal methods
1538	Alphanumeric collation helpers
1539	Date argument helpers
1540	Date parsing helpers
1541	weeksSince won t work here as the result needs to be floored not rounded .
1542	Date formatting helpers
1543	Date comparison helpers
1544	Allows one to fetch a list of dependencies required by the bundle
1545	Foscam Client SDK
1546	Recursively places a point into the octree .
1547	Recursively finds a point in the octree and fetches the associated data .
1548	Recursively moves an existing point to a new position .
1549	Recursively finds points that are inside the specified radius around a given position .
1550	Recursively collects octants that lie inside the specified region .
1551	Recursively fetches all octants with the specified depth level .
1552	Finds the entry plane of the first octant that a ray travels through .
1553	Finds the next octant that intersects with the ray based on the exit plane of the current one .
1554	Finds all octants that intersect with the given ray .
1555	Create a capture context similar to sync but without the global state .
1556	Return a promise that resolves to the same value as the given promise . If it takes more than the specified delay to do so the returned promise instead rejects with a timeout error .
1557	Wait for the given EventEmitter to emit the given event . Optionally reject the promise if an error event occurs while waiting .
1558	Promisify the given function .
1559	Promisify the given name on the given object and create a copy of the object .
1560	Promisify the given names on the given object and create a copy of the object .
1561	Promisify all functions on the given object .
1562	Undoes patchPromise .
1563	Wrap the asCallback function with a check that ensures the callback is never called twice .
1564	Calls the specified callback with the result of the promise .
1565	Return sum of each prop in arr .
1566	traverse file if it is a directory otherwise setup the watcher
1567	watch file for changes
1568	Simple watcher used by the end - user . It only checks the data files and will launch a server on the build folder . It ignores the templates and CSS files changes .
1569	Complex watcher to develop the CSS and templates of this project . Will check the data files the templates AND the CSS .
1570	Find all files in a directory structure .
1571	Clone an element outside the screen to safely get its height then destroy it .
1572	Get an absolute page url from its location in the build process .
1573	Create thumbnails . For each provided images generate a low - res jpg thumbnail . Even for gif . We don t check if the format of the images is valid since the check is already done when constructing the images object .
1574	Create a template object from a template of the assets folder . Use the type to determine which template must be selected .
1575	Get the path to the corresponding template in the assets folder .
1576	Add all the required partials .
1577	If a thumbnail exists return it . Otherwise return the base image .
1578	Helper to create a relation object .
1579	Add css and any mandatory files specified to the build directory
1580	Is a file qualifying to be a data file? ie . data . xml . We don t check the content here just the name .
1581	Start watching files and assets .
1582	Checks if value is an empty object collection map or set .
1583	Initializes an object clone based on its toStringTag .
1584	Compiles TypeScript file returns js file path
1585	Converts from a number like 15 to a hex string like F
1586	Clear all the styles
1587	Creates an array of numbers ranging from low to high
1588	Converts a code into an ansi token type
1589	If streaming then the stack is sticky
1590	Construct a new file .
1591	Create a message with reason at position . When an error is passed in as reason copies the stack .
1592	appName may be null if config defines only 1 app
1593	Returns only whitelisted and custom config options
1594	Generates conflice - free id
1595	Represents a route
1596	Helper for creating visitors . Take an object of node name to handler mappings returns an object with a visit method that can be called
1597	unshift a new chunk
1598	updates current indentation spaces depending on current indentation level
1599	extract cli options
1600	runs a . ram script
1601	executes eval command
1602	executes compile command
1603	compile a the provided file containig RamdaScript code and save the resulting JavaScript code if the destiny path is omitted the JavaScript code will be saved adjacent to the RamdaScript source file
1604	makes a directory path in the filesystem
1605	reads from stdin and execute a callback cb passing the the content as param
1606	whether a node is and identifier and its content is R
1607	transform RamdaScript source to chunks
1608	convert chunks to source map chunks array of chunks cfg sourcemap config
1609	parses the RamdaScript code
1610	write CommonJS stub
1611	write IIFE stub
1612	write each used Ramda function as if R is in the global scope
1613	We use this as a keep - alive . Maybe other implementations do too?
1614	Send a batch of files in sequence . The session is left open afterward which allows for more files to be sent if desired .
1615	Remove octet values from the given array that ZMODEM always ignores . This will mutate the given array .
1616	Like Array . prototype . indexOf but searches for a subarray rather than just a particular value .
1617	analytics helper functions
1618	Parses the status for a wpa network interface .
1619	Parses the result for a wpa command over an interface .
1620	Parses the results of a scan_result request .
1621	Parses the status for a scan_results request .
1622	Parses the status for a single network interface .
1623	Parses the status for all network interfaces .
1624	Recursively expand options into lines with a prefix .
1625	Parses the status for a single wireless network interface .
1626	Parses all scanned wireless network cells .
1627	how each item in a column should be rendered
1628	Find first element that tests true starting with the element itself and traversing up through its ancestors
1629	Add one or more classnames to an element
1630	Remove a class from an element
1631	Check if element has a class
1632	Return all next siblings
1633	Return all prev siblings
1634	transform rest country data for example
1635	new object function for unsupport classList
1636	define classList object
1637	return boolen - check if key has in object
1638	return number - counting key of object
1639	return number - check element class
1640	start capturing a session
1641	finish capturing a session
1642	get the latest capture info from the server
1643	remove capture info from the server
1644	utility function for XHR
1645	update with new capture data and re - render
1646	render the data
1647	change the paper and label sizes to suit the capture
1648	draw scale markings appropriate for the capture
1649	change the zoom level and re - render
1650	draw a horizontal line from the time offsets start to end with attrs . If start or end isn t set use the left and right margins respectively . y_adj can be used to adjust y .
1651	draw a line at when from y as far as len pixels with attrs .
1652	save the cursor location for a named value
1653	given a time return the corresponding x value for paper
1654	Gets the list of all the pids of the system through the wmic command .
1655	Get the list of children and grandchildren pids of the given PID .
1656	Get the list of children pids of the given pid .
1657	Gets the list of all the pids of the system .
1658	Spawn a binary and read its stdout .
1659	Gets the list of all the pids of the system through the ps command .
1660	Shares the same signature as express . js listen method because it passes arguments to it
1661	removes a socket listener from liveQuery and also destroys the whole liveQuery if no more listeners are present
1662	create a neweable function object .
1663	functions for use in build steps
1664	Build options . pages
1665	function for adding vendor prefixes
1666	These methods call into JNEXT . vibration which handles the communication through the JNEXT plugin to vibration_js . cpp Request vibration function
1667	methods to start and stop scanning
1668	These methods call into JNEXT . PasswordCrypto which handles the communication through the JNEXT plugin to PasswordCrypto_js . cpp
1669	Update DOM on a Received Event
1670	These methods call into JNEXT . GSECrypto which handles the communication through the JNEXT plugin to gseCrypto_js . cpp
1671	These methods call into preventsleepJNEXT . js which handles the communication through the JNEXT plugin to preventsleep_js . cpp
1672	These methods call into JNEXT . SimpleBtSppPlugin which handles the communication through the JNEXT plugin to simplebtsppplugin_js . cpp
1673	These methods call into vibrationJNEXT . js which handles the communication through the JNEXT plugin to vibration_js . cpp
1674	These methods call into JNEXT . SimpleXpBeaconPlugin which handles the communication through the JNEXT plugin to simpleXpbeaconplugin_js . cpp
1675	These methods call into JNEXT . mongoose which handles the communication through the JNEXT plugin to mongoose_js . cpp
1676	These methods call into JNEXT . UPnP which handles the communication through the JNEXT plugin to upnp_js . cpp
1677	Produces extract function with internal state initialized
1678	Tokenize some html content to return tokens of text
1679	Convert a list of tokens to some suggestions
1680	Apply a test on tokens
1681	Parse input file
1682	avoids unintentional localization of unrelated strings
1683	Generate the nonce using react - native - securerandom
1684	Compares two arrays for equality .
1685	Destroys a layout - node
1686	Get the next render - node
1687	Get the previous render - node
1688	Resolve id into a context - node .
1689	Set the node content
1690	Helper function that recursively discovers the configured size for a given renderNode .
1691	Helper function for getting the property value .
1692	Helper function to enumerate all the renderables in the datasource
1693	Calculates the actual in - use direction based on the given direction and supported capabilities of the layout - function .
1694	Helper function for finding the view - sequence node at the given position .
1695	Called whenever the user presses the mouse button on the scrollview
1696	Called whenever the user starts moving the scroll - view using touch gestures .
1697	Called whenever the user releases his fingers and the touch gesture has completed . This will set the new position and if the user used a flick gesture give the scroll - offset particle a velocity and momentum into a certain direction .
1698	Called whenever the user is scrolling the view using either a mouse scroll wheel or a track - pad .
1699	Updates the scroll offset particle .
1700	Get the in - use scroll - offset .
1701	Snaps to a page when pagination is enabled .
1702	Normalizes the view - sequence node so that the view - sequence is near to 0 .
1703	Get the first or last visible item in the view .
1704	Helper function that goes to a view - sequence either by scrolling or immediately without any scrolling animation .
1705	Helper function that scrolls the view towards a view - sequence node .
1706	Moves to the next node in the viewSequence .
1707	Inner render function of the Group
1708	Helper function for setting the pull - to - refresh status .
1709	Stacks the renderables on top of each other with a z - translation of this . options . zIndexOffset .
1710	Creates the view - stack layout .
1711	Gets the spec from a spec .
1712	Gets the transferable delegate for the given id .
1713	Begins visual transfer or renderables from the previous item to the new item .
1714	Called whenever the view has been shown and the transferable animations should be ended . This returns the renderables to their original views .
1715	Starts a show or hide animation .
1716	Starts the view animation .
1717	Starts the show animation whenever init has completed .
1718	Halts a item at a given frame . The frame is provided as a percentage of the whole transition .
1719	Waits for the animation to start .
1720	Starts the hide animation .
1721	Sets the options for an item .
1722	Updates the state .
1723	Base component class
1724	Gets the selected date from all the scroll - wheels .
1725	Sets up the overal layout
1726	Called whenever an item is clicked causes the scrollwheel to scroll to that item .
1727	Creates the overlay LayoutController
1728	Helper function that is called whenever a new item is selected
1729	Sets the listeners .
1730	Updates the view - container with the selected view .
1731	Helper function to resolving the size of a node .
1732	Font - layout
1733	Removes dependencies that exists in the package . json for the extension in question
1734	Encode a buffer as a base58 - check encoded string
1735	Make a reduced version of the package . json file that is more appropriate for distribution .
1736	Load a tile with full fetchOptions .
1737	Load a vector tile with full fetchOptions This is only used when the Authorization header has been set in the fetchOptions .
1738	Create a vector source based on a Mapbox GL styles definition .
1739	Hydrate a layer group Normalizes all the ref layers in a group .
1740	Increments metadata object version numbers .
1741	Move a layer in the layers list .
1742	Move a group relative to another group .
1743	Creates a new state with the data for a source changed to the contents of data .
1744	Need the moveSlide function from bookmark reducer Need setView function from map reducer
1745	Handy all around function for adding a random set of points to the map .
1746	from ethereumjs - util
1747	decode bytecode data from output names and types
1748	create an encoded method signature from an ABI object
1749	encode method ABI object with values in an array output bytecode
1750	Decode a specific log item with a specific event abi
1751	Create a decoder for all events defined in an abi . It returns a function which is called on an array of log entries such as received from getLogs or getTransactionReceipt and parses any matching log entries
1752	Applies SVGO on the SVG file in order to optimize its contents and remove unnecessary attributes for the sprite . Adds the SVG to the given sprite which will then be processed by the plugin . Generates SVG metadata to be passed to JavaScript and CSS files so that the symbols can be rendered .
1753	List all queues
1754	Delete all data of a queue
1755	Get a queue by name
1756	Get a job by id
1757	Add a job
1758	Remove a job by id
1759	Get the total number of jobs of type
1760	Fetch a number of jobs of certain type
1761	Initialize redis client
1762	Get a redis multi interface
1763	Internationalization and Localization
1764	this = Interface instance
1765	accepts a readable Stream instance and makes it emit keypress events
1766	moves the cursor to the x and y coordinate on the given stream
1767	moves the cursor relative to its current location
1768	try to make it a compute no matter what . This is useful for ~ operator .
1769	Lazily lookup the context only if it s needed .
1770	DOM safeString or the insertSymbol can opt - out of updating as text
1771	!steal - remove - end
1772	this is called with the ast ... we are going to use that to our advantage .
1773	Adds a subsection .
1774	Given a type description object return legible string description
1775	given tree - like description of component api return markdown table header of table described by HEADER
1776	accept output from react - docgen create READMEs
1777	Triggers a flush of any pending events observations etc and calls you back after they have been processed .
1778	Merges initial options into WCT s global configuration .
1779	Expands a URL that may or may not be relative to base .
1780	Finds the directory that a loaded script is hosted on .
1781	Draws an arc for the favicon status relative to the total number of tests .
1782	Loads suites of tests supporting both . js and . html files .
1783	Loads all . js sources requested by the current suite .
1784	Kicks off a mocha run waiting for frameworks to load if necessary .
1785	Yeah hideous but this allows us to be loaded before Mocha which is handy .
1786	Loads all environment scripts ... synchronously ... after us .
1787	Hook the environment to pick up on global errors .
1788	Registers an extension that extends the global Mocha implementation with new helper methods . These helper methods will be added to the window when tests run for both BDD and TDD interfaces .
1789	I see trouble ahead ...
1790	Load tasks from gulpfiles specified by the file pattern .
1791	Execute the protractor engine
1792	Update the webDriver connector
1793	Update and start the webDriver connector
1794	A callback function called once protractor is ready and available and before the specs are executed You can specify a file containing code to run by setting onPrepare to the filename string .
1795	A process is running remotely on the Tessel and data is piped in over USB
1796	A wrapper on the Node Writable Stream to encapsulate stdin & control stream functionality
1797	A wrapper on the Node Readable Stream to encapsulate stdout & stderr stream functionality
1798	Accesses tessels in closure
1799	Trims method and dynamic params
1800	Wrapper for chart . js Allows configuring chart js using the provider
1801	split a string based on a delimiter except when preceded by \
1802	gets expression coordinates
1803	substitutes all occurrences based in the it object
1804	Finds views by CSS3 selectors in view tree .
1805	Shortcut access to builder selector and Collection constructor
1806	Handle all listener calls . Should be called with dom element as this
1807	Sets an attribute on all views or gets the value of the attribute on the first view
1808	Scroll the parent so row at position gets into view
1809	store original version function so we can instance override _update in throttle and debounce and then revert back
1810	Array of the the rows selected
1811	Convenience wrapper around document . createElement Creates dom element with given tagName cssText and innerHTML
1812	client rect adjusted to window scroll
1813	apply an icon to a button
1814	apply a loading state to a button
1815	bind all registered events to the model
1816	unbind all registered events from the model
1817	Return a callback fundtion that will trigger an event on this when executed with the provided parameters
1818	A simple receiver for Skipper that writes Upstreams to S3 to the configured bucket at the configured path .
1819	Accept protocol with or without a colon
1820	const SWAMPS_BLUR = 0 . 017 ;
1821	Get promised request
1822	Prettify StyleStats data .
1823	Parses a macro string argument
1824	PARSER Process a tag attribute
1825	Equivalent of typeof but with special handling for array and regexp .
1826	default_headers Generate default headers
1827	Get the actual version of tago api
1828	Get a token of a device by its name
1829	Helper to make the main thread wait for the children to finish before deciding on its own error code .
1830	Send this resource request asynchronously .
1831	Array of arrays in .. Returns the length of the longest one
1832	lazy load a script
1833	lazy load a stylesheet
1834	Store the warning message
1835	Utility for handling errors
1836	Utilty to build response callbacks
1837	30 mins Cloud Monitoring Client .
1838	Nagios Client .
1839	Hopefully newrelic retained backwards compatibility since the code here was most likely written for v1 of their api NewRelic Client .
1840	PagerDuty Client .
1841	Stack Constructor .
1842	Utility function for rendering responses
1843	Render an error page
1844	Build a callback that renders on success or errors on failure
1845	Render the Login page
1846	Handle Login attempts redirect on success render Login with error on failure
1847	Render the main overview page
1848	Render a region view with a list of deployments
1849	Render a view of a single deployment with the log
1850	Jenkins Client .
1851	Use this function to find one viewmodel .
1852	Use this function to extend this repository with the appropriate collectionName and perhaps other stuff .
1853	A method to easily add functions to the OOP wrapper .
1854	Helper method that just executes passed function but with all important arguments like require and _
1855	The essential function that expands Emmet abbreviation
1856	Log message into console if it exists
1857	Adds passed node as child or creates new child
1858	Creates a deep copy of current node
1859	Returns list of attributes for current node
1860	Returns or sets attribute value
1861	Returns string representation of current node
1862	Returns latest and deepest child of current tree
1863	Parses abbreviation into a tree
1864	Locates output placeholders inside text
1865	Insert pasted content into correct positions of parsed node
1866	creates token objects and pushes them to a list
1867	call the appropriate handler based on the first character in a token suspect
1868	Returns newline character at specified position in content
1869	Tokenizes CSS source
1870	Returns newline character
1871	Returns list of paddings that should be used to align passed string
1872	Indents text with padding
1873	Removes padding at the beginning of each text s line
1874	Narrows down text range adjusting selection to non - space characters
1875	Creates new range object instance
1876	Adds function handler
1877	Removes handler from list
1878	Returns actual section data merged from both system and user data
1879	Recursively searches for a snippet definition inside syntax section . Definition is searched inside snippets and abbreviations subsections
1880	Performs fuzzy search of snippet definition
1881	Returns action name associated with menu item title
1882	Returns profile by its name . If profile wasn t found returns plain profile
1883	Captures context XHTML element from editor under current caret position . This node can be used as a helper for abbreviation extraction
1884	Common method for detecting output profile
1885	Check if current caret position is inside &lt ; style&gt ; tag
1886	Check if current caret position is inside style attribute of HTML element
1887	Test if current element contains block - level children
1888	Encodes data using base64 algorithm
1889	Decodes string using MIME base64 algorithm
1890	Creates new tag matcher session
1891	Upgrades tabstops in output node in order to prevent naming conflicts
1892	Creates new preference item with default value
1893	Returns preference value
1894	Returns comma - separated preference value as array of values
1895	Returns comma and colon - separated preference value as dictionary
1896	Apply filters for final output tree
1897	Composes list of filters that should be applied to a tree based on passed data
1898	Replace substring of tag s source
1899	Returns attribute object
1900	Returns all children by name or indexes
1901	Returns or updates element value . If such element doesn t exists it will be created automatically and added at the end of child list .
1902	Remove child element
1903	Sets or gets container name
1904	Returns element that belongs to specified position
1905	Sets of gets element value
1906	Sets of gets element name
1907	Removes whitespace tokens from the array ends
1908	Helper function that searches for CSS property value range next to iterator s current position
1909	Finds parts of complex CSS value
1910	Returns ranges of complex value parts
1911	Extracts single CSS selector definition from source code
1912	Adds new attribute
1913	Search for abbreviation in editor from current caret position
1914	Wraps passed text with abbreviation . Text will be placed inside last expanded element
1915	Toggle HTML comment on current selection or tag
1916	Simple CSS commenting
1917	Generic comment toggling routine
1918	Remove comment markers from string
1919	Creates possible selection ranges for HTML tag
1920	Returns ranges of class names in class attribute value
1921	Makes all possible selection ranges for specified CSS property
1922	Tries to find matched CSS property and nearest range for selection
1923	Find and select HTML tag pair
1924	Returns regexp that should match reflected CSS property names
1925	Decodes base64 string back to file .
1926	Updates image size of CSS property
1927	Returns image dimensions for source
1928	Check if provided snippet contains only one CSS property and value .
1929	Normalizes abbreviated value to final CSS one
1930	Search for a list of supported prefixes for CSS property . This list is used to generate all - prefixed snippet
1931	Helper function that parses comma - separated list of elements into array
1932	Expands abbreviation into a snippet
1933	Split snippet into a CSS property - value pair
1934	Parses linear gradient definition
1935	Fills - out implied positions in color - stops . This function is useful for old Webkit gradient definitions
1936	Returns textual version of direction expressed in degrees
1937	Returns list of CSS properties with gradient
1938	Search for gradient definition inside CSS property value
1939	Tries to expand gradient outside CSS value
1940	Search for gradient definition inside CSS value under cursor
1941	Parses gradient definition
1942	Produces linear gradient definition used in early Webkit implementations
1943	Returns string representation of parsed gradient
1944	Adds new element into collection
1945	Removes element name from specified collection
1946	Processes class name
1947	Get indentation for given node
1948	Check if we should add line breaks inside inline element
1949	Creates HAML attributes string from tag according to profile settings
1950	Creates HTML attributes string from tag according to profile settings
1951	Adds new language words for Lorem Ipsum generator
1952	called once done of is there was a transmission error
1953	merge send data with authorization data remove all undefined values
1954	return an array containing all the missing required properties
1955	send an error for each missing properties
1956	Create a new GCM sender .
1957	function to append childrens on a parent
1958	Only for MBR
1959	Processes the provided template replacing variable placeholders with the values of the variables and evaluating all conditions .
1960	Replaces all occurrences of the specified variable in the provided template with its value .
1961	Processes the if and if - else conditions in the template .
1962	Processes the conditions within the provided template using the provided condition matcher regexp .
1963	Evaluates the provided JavaScript condition expression . The function uses eval so frequent calls to it may impede performance .
1964	Generates a cache key identifying the provided HTTP request and simillar requests that may share the same page content .
1965	Get statistics on the sales of Minecraft .
1966	Invalidates access tokens of a given Mojang account .
1967	Gets a list of abbreviated game profiles from the list of profile names .
1968	A special service that returns a profile s name skin URL and cape URL .
1969	Uploads a file as a logged - in user s in - game skin .
1970	Gets a logged - in user s private Mojang account information .
1971	Invalidate an access token .
1972	Returns a list of SHA1 hashes used to check server addresses against when the client tries to connect .
1973	Returns status of various Mojang services in a more helpful format .
1974	Gets all name changes for a given player s profile UUID .
1975	Authenticates a user with their Mojang credentials .
1976	Checks if an access token is suitable for use with a Minecraft server .
1977	Gets an abbreviated game profile at a given timestamp for an IGN name .
1978	Sets a logged - in user s in - game skin to an online image .
1979	Delegates a given property to the related controller ( or specified controller if controllerName is defined . This is useful so that properties are available to use on the controller .
1980	Return compiled command message
1981	Check if buffer is valid Smart Bus command
1982	Return message sender IP address
1983	Parse bus configuration from connection string with following format
1984	Reduces the list of descendants to only DOM nodes . Then it will splice in the React components for any composite components .
1985	there is no sense to put padding to the expression text since it will be lost while evaluating
1986	Target mouseover event listener
1987	Target mouseout event listener
1988	Give back focus from an iframe to parent page
1989	Calls blurCallback for every handler with over = true on window blur
1990	Return a function for the given JS code that returns .
1991	Parse the command - line options and arguments into an object .
1992	Process all input from stdin .
1993	Left - over partial line from last chunk . Get the PIDs to dtrace .
1994	Process all input from the given log file .
1995	Sends test results back to the master test running process .
1996	Assembles test results from the worker processes and outputs the results to the console .
1997	Finds the closest parent that matches a selector .
1998	Delegates event to a selector .
1999	Finds closest match and invokes callback .
2000	Adds an event listener to a HTML element and returns a remove listener function .
2001	Add an event listener to a list of HTML elements and returns a remove listener function .
2002	Add an event listener to a selector and returns a remove listener function .
2003	Helper function to retrieve attribute value .
2004	Loads external assets lets you track their progress and lets you access the loaded data .
2005	FontLoader detects when web fonts specified in the fontFamiliesArray array were loaded and rendered . Then it notifies the specified delegate object via fontLoaded and fontsLoaded methods when specific or all fonts were loaded respectively . The use of this functions implies that the insertion of specified web fonts into the document is done elsewhere .
2006	SizeWatcher delegate method
2007	SizeWatcher observes size of an element and notifies when its size is changed . It doesn t use any timeouts to check the element size when change in size occurs a callback method immediately invoked .
2008	The settings for a type of particle .
2009	Center an entity on a given point .
2010	Choose a random point inside the bounding rectangle of an entity .
2011	Make an invisible canvas buffer and draw on it .
2012	Make a horizonally - flipped copy of a buffer or image .
2013	Make a vertically - flipped copy of a buffer or image .
2014	Make a copy of a buffer that is rotated 90 degrees clockwise .
2015	A function that is called when save data has finished being retrieved .
2016	A function that is called when save data has finished being stored .
2017	Plays audio tracks looping sounds and manages volume . This implementation uses the Web Audio API .
2018	Loads all plugins .
2019	Start all plugins .
2020	Stop all plugins .
2021	Apply plugin customatisation on server . Then get all installed app modules . Expect that a start function is available then run the app server on given port . Ports are expected to be available .
2022	Remove disabled mark from config file for given app or plugin .
2023	Mark given app or plugin as disabled . It won t be activated or started in that case .
2024	Stop all running applications .
2025	Stops application server its apps and its plugins reload everyone then restart everyone
2026	Remove app from config and its source from node module folder .
2027	Remove plugin from config and its source from node module folder .
2028	Install a full suite of application and plugins listed in given distro .
2029	Display given distro plugins and apps .
2030	Save a wallet to a file .
2031	Open a wallet by file name .
2032	Generate a change address from a Mnemonic of a private key .
2033	Returns an array of UTXO objects . These objects contain the metadata needed to optimize the selection of a UTXO for spending .
2034	Initialize config instance
2035	Load config file
2036	Save config file to disk .
2037	Create config file if it doesn t exist
2038	Copy given dependency to app folder to avoid apps to fetch and rebuild it every time it s required as dependency . Most dependencies are common and can be reused .
2039	Add a new application to the configuration file . The configuration file is written in JSON . It adds an entry to the apps field . Name display name version and description are required .
2040	Remove given application from the configuration file . The configuration file is written in JSON .
2041	Add a new plugin to the configuration file . The configuration file is written in JSON . It adds an entry to the plugins field . Name display name version and description are required .
2042	Remove given plugin from the configuration file .
2043	Remove from given app or plugin the disabled field .
2044	Prepare plugins to be sent as json file to the web UI .
2045	Prepare apps to be sent as json file to the web UI .
2046	Link given app source and dependencies from local file system .
2047	Remove application source and dependencies using NPM lib .
2048	Fetch application or plugin manifest from an url or a path
2049	postMessage - sending messages out of the module .
2050	importScripts - Loading code into the module .
2051	helper function to sort an array of pitches from lowest to highest
2052	Method recursively iterates over items and adds isActive and hasActiveChild fields
2053	Returns true if user is allowed to see page
2054	registers a toolbar such that it can be linked to editors
2055	retrieve toolbars by editor name largely used by testing suites only
2056	functions for updating the toolbar buttons display
2057	update a tool on all toolbars
2058	update a tool on a specific toolbar
2059	reset a tool on a specific toolbar to it s default starting value
2060	removes a tool from all toolbars and it s definition
2061	toolkey toolDefinition are required . If group is not specified will pick the last group if index isnt defined will append to group
2062	adds a Tool but only to one toolbar not all
2063	recursive function that returns an array of angular . elements that have the passed attribute set on them
2064	Adds a listener callback to a DOM element which is fired on a specified event . Callback is sent the event object and the element that triggered the event
2065	Removes a listener callback from a DOM element which is fired on a specified event .
2066	helper function for _ . addTime and _ . subtractTime
2067	Determines which language definition to use and returns it . With no parameters it will return the global language . If you pass in a language key such as en it will return the definition for en so long as en has already been loaded using moment . lang .
2068	format date using native date object
2069	function to convert string input to date
2070	date from string and format string
2071	date from iso format
2072	Loads a processor
2073	Read & parse a JSON file
2074	Is Sauce configured for this context?
2075	This will shut down the tunnel in a nice way
2076	Start the Sauce Connector . Returns childProcess object .
2077	Parse the response type
2078	We . js plugin Class constructor
2079	build a file or a directory
2080	We . js theme Class constructor
2081	Parse one record associations for JSON format to change association model object to association model id
2082	modified by bachi
2083	Plugin manager load valid and store avaible plugins
2084	Get project static configs
2085	Normalize a port into a number string or false .
2086	Event listener for HTTP server listening event .
2087	Converts one date string to dateTime
2088	old we . js is plugin function to check is one npm module is plugin
2089	install non - conflicting modules as low in the tree as possible .
2090	Recursively list objects .
2091	Create a function simulated class allow multiple inheritance
2092	find method with given name from base classes
2093	check whether mixin is in inherited chain of child class
2094	When creating use _stat to save the zero - size new file info into the cache and create an empty local file .
2095	A wrapper around gulp - rename to support dirnamePrefix .
2096	We can t use self . put here since we need to force the use of the old _fhandle and _cachefile ; update the db directly .
2097	See if we have the object cached and try to evict it
2098	called with a directory entry as the arg
2099	When we come up we need to check each of the cached objects to see if the object is stale . If we have the local file cached then we keep our local copy as long as the local file is not expired otherwise we just discard it . We don t try to check manta for each object since that would make the server startup time unacceptably long when we have a lot of cached objects . We assume that this function is never called for dirty objects .
2100	Validates the mongo object ID
2101	Find one entry based on a condition
2102	Delete an entry from the database
2103	module . exports = njsq ;
2104	Initialize the Business Logic model
2105	Returns the directory which contains all the assets based on the directory from where the app . were launched .
2106	Get the user record from the database and validate password
2107	Delete All tokens of a user
2108	Delete All tokens of a client
2109	Generate the the authorization value
2110	checks if model file exists requires it and returns it .
2111	If the middleware function does declare receiving the next callback assume that it s synchronous and invoke next ourselves
2112	The middleware function does include the next callback so only resolve the Promise when it s called . If it s never called the middleware stack completion will stall
2113	Returns a Koa middleware function that varies its async logic based on if the given middleware function declares at least 3 parameters i . e . includes the next callback function
2114	Converts a number - word into an ordinal number - word .
2115	Returns the permission granted value .
2116	Displays the web notification and returning a hide notification function .
2117	Returns an object with the show notification input .
2118	Instantiate a new Okta API Groups helper with the given API token
2119	Instantiate a new Okta API Sessions helper with the given API token
2120	Instantiate a new Okta API session with the given API token
2121	Constructs an object that reflects the structure of an Okta Group Object
2122	Handle the various of event listener calls .
2123	Given a pointer ptr to a null - terminated UTF8 - encoded string in the given array that contains uint8 values returns a copy of that string as a Javascript String object .
2124	Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array EXCLUDING the null terminator byte .
2125	Creates an object that reflects the structure of an Okta User Object
2126	Constructs an object that reflects the structure of an Okta Credentials Object If you don t want to set a pw or recovery question just pass in null or empty string
2127	POST and PUT requests are mostly identical .
2128	Constructs an object that reflects the structure of an App Model
2129	Constructs an object that reflects the structure of an App User Model
2130	Constructs an object that reflects the structure of an App Group Model
2131	Takes errors and normalizes them
2132	Calculates the severity of a eslint . linter . verify result
2133	Uses the content of each file in a given tree and runs eslint validation on it .
2134	Normalizes and tries to get a numeric value . This is used for options that support both Boolean and Number values .
2135	useful to not query offsetWidth twice
2136	Class for dimension change detection .
2137	Wraps the given function so that the history log is saved when it is called and then the given function is run
2138	test object is passed here when it passes the test setup or takedown . handles printing the result and updating the objects status .
2139	test object is passed here when it fails the test setup or takedown . handles printing the result and updating the objects status .
2140	Prepare json formatted status for each share
2141	Checks whether a string contains a template expression
2142	Process a tag attribute
2143	makes the entry the freshEnd of the LRU linked list
2144	bidirectionally links two entries of the LRU linked list
2145	Set a normalized attribute on the element in a way such that all directives can share the attribute . This function properly handles boolean attributes .
2146	Given a node with a directive - start it collects all of the siblings until it finds directive - end .
2147	When the element is replaced with HTML template then the new attributes on the template need to be merged with the existing attributes in the DOM . The desired effect is to have both of the attributes present .
2148	This is a special jqLite . replaceWith which can replace items which have no parents provided that the containing jqLite collection is provided .
2149	Encode path using encodeUriSegment ignoring forward slashes
2150	Detect nodes which could depend on non - shallow state of objects
2151	the implementation is in angular . bootstrap
2152	Determine if two URLs share the same origin .
2153	Returns the current document base URL .
2154	Format a number into a string
2155	shallow copy over values from src that are not already specified on dst
2156	even though we only pause keyframe animations here the pause flag will still happen when transitions are used . Only the transition will not be paused since that is not possible . If the animation ends when paused then it will not complete until unpaused or cancelled .
2157	we use 600 here to ensure that the directive is caught before others
2158	we only require this for validation sake
2159	This function will load locale and then set the global locale . If no arguments are passed in it will simply return the current global locale key .
2160	date from iso format or fallback
2161	This function allows you to set a threshold for relative time strings
2162	Disables scroll around the passed parent element .
2163	Check for valid opts and set some sane defaults
2164	Find the top of an item relative to the content element and also the height .
2165	Controller for the Toast interim elements .
2166	Calculates the dropdown s position and applies the new styles to the menu element
2167	Makes sure that the menu doesn t go off of the screen on either side .
2168	Gathers all of the elements needed for this controller
2169	Handles changes to the selected item .
2170	Handles changes to the searchText property .
2171	Handles keyboard input .
2172	Returns the display value for an item .
2173	Makes sure that the focused element is within view .
2174	Controller for the MdChips component . Responsible for adding to and removing from the list of chips marking chips as selected and binding to the models of various input components .
2175	Change handlers Toggles stretch tabs class and updates inkbar when tab stretching changes
2176	Apply ctrl . offsetLeft to the paging element when it changes
2177	When pagination is on this makes sure the selected index is in view .
2178	Determines if pagination is necessary to display the tabs within the available space .
2179	Forces the pagination to move the focused tab into view .
2180	Repositions the ink bar to the selected tab .
2181	constructor with defaults
2182	D3 Update function
2183	Format the output message
2184	Set default options based on arguments .
2185	Optimized internal two - arity curry function .
2186	Optimized internal one - arity curry function .
2187	Copies an object .
2188	Performs left - to - right function composition . The leftmost function may have any arity ; the remaining functions must be unary .
2189	Performs left - to - right composition of one or more Promise - returning functions . The leftmost function may have any arity ; the remaining functions must be unary .
2190	private _uniqContentEquals function . That function is checking equality of 2 iterator contents with 2 assumptions - iterators lengths are the same - iterators values are unique
2191	Assume edges are sorted lexicographically
2192	A partial convex hull fragment made of two unimonotone polygons
2193	An event in the sweep line procedure
2194	Use stdio as an input stream
2195	recursion function for key - value aggregation 32766 bytes is the maximum length for a field
2196	Creates a shallow copy of an object an array or a primitive
2197	Pushes all the cookies from the service to the browser and verifies if all cookies were stored .
2198	!!! This is an undocumented private service !!!
2199	Pass validity so that behaviour can be mocked easier .
2200	Unsure what this is all about .
2201	Simplify constants in the integral
2202	Helper function that runs the main loop for the integrator . It scans over the rules until one of them produces an integral or until no more rules are left .
2203	Method to check wether file exists and warn if not .
2204	Parses attribute string .
2205	Helper method to apply indent
2206	Helper to either find values from JSON or inline values
2207	Handle _if attributes in inline arguments
2208	Handle _render attributes in inline arguments
2209	Handle _foreach attributes in inline arguments
2210	Handle _bake attributes in inline arguments
2211	Handle _process attributes in inline arguments
2212	extract bake sections . For inline - bake it searches for matching closing tags and returns inline content and other information
2213	Recursivly search for bake - tags and create one file .
2214	Run process function if processor - function is defined
2215	This would create an infinite loop if a and b could be equal but the list we operate on only has unique values .
2216	Check node .
2217	Check one value .
2218	Check if node is collapsable .
2219	Render notifications in queue .
2220	Adds flash method to req object and renders all notifications found in req . session
2221	Find the framework directory lookup order - specify framework path - get framework name from - use egg by default
2222	Try to get framework dir path If can t find any framework try to find egg dir path
2223	used to autoInject Services in the Controller
2224	SetterObservable s call a function when set . Their getter is backed up by an observation .
2225	This is an observable that is like settable but passed a resolve function that can resolve the value of this observable late .
2226	Loads graph from dot string .
2227	Create the Tracer
2228	pipe all the streams together
2229	Creates a new temporary credentials object .
2230	Create a new service object with a configuration object
2231	Gets the signer class for a given request
2232	Adds one method for each operation described in the api configuration
2233	Aborts a request emitting the error and complete events .
2234	Enumerates over individual items of a request paging the responses if necessary .
2235	Converts the request object into a readable stream that can be read from or piped into a writable stream .
2236	Waits for a given state on a service object
2237	Checks if the terminal expected success state has been met
2238	Checks if the terminal expected error state has been met
2239	Creates a new SharedIniFileCredentials object .
2240	Retrieves a Cognito ID loading from cache if it was already retrieved on this device .
2241	Finds the appropriate block or bucket for the given IP to be inserted in . Another way
2242	Get a DataContext for the built - in CanvasRenderingContext2D .
2243	Resolves arguments for RecordingContext helpers . You can either specify a div & selector to find the canvas or omit this if there s only one canvas being recorded .
2244	A context which determines the data at a particular location .
2245	The string that needs to be matched is escaped
2246	Gets the value for scope - enum rule of commitlint config .
2247	Gets the commitlint config converted from a cz - customizable config .
2248	Reads and gets the cz - customizable config from a path .
2249	Gets the value for type - enum rule of commitlint config .
2250	Create effect from code . For colors set lightColor true to bright them up
2251	Apply effect on both side of the string
2252	Clear line until last new line white character
2253	render this . options . entries
2254	This action type will be dispatched by the history actions below . If you re writing a middleware to watch for navigation events be sure to look for actions of this type .
2255	Get raw data and uncompress the TicketData
2256	Returns string value of the output
2257	Single rest clients that contains user users projects and orgs clients
2258	Subscribe the given Elm app ports to ports from the Elm LocalStorage ports module .
2259	Public function run .
2260	Public function fetch .
2261	Public function map .
2262	do not let this socket s reference block node . js from exiting
2263	utility function to have Object . create on all browsers
2264	Convert an existing class to be used with the ring . js class system .
2265	return the i th name form ; add it if it doesn t exist
2266	Internal utility functions . This differs from utils . js in that it contains functions which are specific to FamilySearch or need access to a client instance .
2267	Serialize an object into a string of query parameters . This does not return the beginning ? .
2268	Break apart a query string into an object
2269	return true if all corresponding object properties match
2270	Lifts feedback loop that operates on a subset of state and emits embeddable events to the parent feedback loop .
2271	The system simulation will be started upon subscription and stopped after subscription is disposed .
2272	Creates Observable transformation from configuration .
2273	Get all element services
2274	Wrap critical Flow exception into default Error json format
2275	Create Scope Query We dont pass complete context because we expect specific behaviour
2276	Get List of Items
2277	When concatenating multiple source map each one need to have a specific source name otherwize it will the last source will erase the previous ones .
2278	Process the babel options to adapt the options to avoid some issue after transformation .
2279	Helper method to get a value by searching for it by priority
2280	Handle the actual HTTP request
2281	Get the parameters from the steamObj passed in or Steam instance
2282	Add some easy references to the new method
2283	Builds the method and add references
2284	Retrieve all Steam WebAPI http methods and add to our class prototype
2285	return used element
2286	get cache flickr photos json
2287	get image size
2288	Checks if an element has a given class
2289	Helper function for creating custom events
2290	Helper function for triggering custom events
2291	Processes an individual gloss element
2292	Make url to Steam Store from Params object
2293	Sets model . state to expose the serialized state .
2294	Tracks a property if it is not already tracked .
2295	Returns a random date
2296	Return a random price based on the previous price and volatility
2297	Insert a random incident into a collection
2298	getDatetimeUnit - determine the unit of time for padding the axis
2299	Gets the rendered output of a template
2300	Gets the processed filepath of a dynamic filepath
2301	Creates file resources based on another file resource
2302	inspect string for lookups that satisfy the above regexp
2303	recursively expand a string until it doesn t contain any template strings
2304	recursively expand an array until it doesn t contain any template strings
2305	recursively expand an object resolving its template strings
2306	set value to object by keypath
2307	Covert HTML entities
2308	Computed all expression and get concated result
2309	Finds all File instances in formData and creates a new File instance whose storage is forced to be a Blob instead of being backed by a file on disk . That works around a bug in Chrome where File instances with has_backing_file flag cannot be sent over a process boundary when site isolation is on .
2310	The main window object s message event callback function .
2311	Handles a progress event being proxied back from the iframe page .
2312	Emits the load event on the xhr .
2313	Emits the error event on the xhr .
2314	compile scoped directives
2315	Call method and catch error then log by console . log
2316	Loads the modules associated to each filter and returns an array of middlewares .
2317	Load resources configuration loading its pre and postfilters modules .
2318	Load providers configuration loading its pre and postfilters modules .
2319	Load a configuration returning and object with prefilters postfilters and providers middlewares ready to be used .
2320	Creates a new Currencies instance
2321	Merge command line options with configuration file
2322	get the window object of an element
2323	create new input type manager called by the Manager constructor
2324	handle input events
2325	extend the data with some usable properties like scale rotate velocity etc
2326	handle mouse and touch events
2327	this method is called on each input cycle and provides the preventing of the browser behavior
2328	Recursively find a tree item
2329	Find the ID of the first parent element .
2330	List the records for the given datasetClient
2331	List the applied changes since the last sync loop for the given client
2332	List the pending changes for the given client that are still waiting to be processed
2333	We have some pending changes sent in by the client and waiting in the queue . They are not processed yet so the backend or our localDataset don t have those changes . We don t know if those changes will be applied or not . But they are already applied on the client which means if we compute the delta as it is those changes will be reverted . To avoid that we will remove those changes from both the client and the localDataset so that the client will keep them for now .
2334	Find out the differences between the clientRecords and the serverRecords
2335	Sync the data records for the given client
2336	Compute the max min current average values from the records
2337	Initialise cloud data sync service for specified dataset .
2338	Stop cloud data sync for the specified dataset_id
2339	Stop cloud data sync service for ALL datasets and reset . This should really only used by tests .
2340	Defines a handler function for deleting a collision from the collisions list . Should be called after the dataset is initialised .
2341	The dataset client record object
2342	Remove the given datasetClients
2343	Remove the datasetClient that matches the given datasetClientId and also remove the references of the datasetClient from the records .
2344	Read the dataset client from db
2345	Update the dataset client
2346	Create an index on the given collection
2347	Create all the indexes on the collections for a given dataset
2348	Compute the diff between the 2 objects based on the hash value
2349	to reduce the number of db operations we try to compute only the records that need to be changed here .
2350	list the currently managed dataset clients
2351	remove the given datasetClients from the storage . Each datasetclient should have at least the id field
2352	update the given dataset client
2353	Create the give dataset if it doesn t no exist or update the existing one . Should return the datasetClient instance in the callback
2354	update the given dataset client with the given records
2355	Read the given datasetclient record and its assoicated records
2356	The acknowledgement object
2357	List all the updates that match the given search criteria
2358	find the delete the given sync update
2359	Save the given sync update
2360	List the updates that match the given list criteria
2361	Represent a dataset client that is managed by sync framework .
2362	Invoke the Sync Server .
2363	convert the given array to an object use the uid field of each item as the key
2364	A scheduled job that will run to check the status of the datasets that are managed by the sync framework .
2365	make sure each dataset client is marked to be scheduled
2366	Helper function to insert some documents to the given db and collection
2367	Save data to the cache
2368	Read data from cache
2369	Delete data from cache
2370	Perform the sync operation
2371	Create the given pending change in the backend . It will always create the record in the backend .
2372	Delete the given pending change from the backend . It will only delete the record if the hash value of the pre record matches the hash value of the record from backend . Otherwise the change is either already applied or a collision will be generated .
2373	apply the given pending change to the backend using the dataHandlers
2374	construct a new queue that is backed by mongodb .
2375	Check if there s already a TTL index for the deleted field . If there is and the TTL value is different delete it so it can be recreated by the mongodb - queue module
2376	Can be used to check the request parameters or perform authentication checks
2377	Add the given items to the given queue . For each item also add the given extraParams .
2378	Reformat the give processedUpdates array to an object format that is expected by the sync client
2379	Remove all the records in updatesInRequest from updatesInDb if they exist
2380	Process the sync request . It will - validate the request body via the requestInterceptor - check if the dataset client is stopped for sync - create or update the dataset client - process acknowledgements push each of them to the ackQueue - process pending changes push each of them to the pendingQueue - list any processed updates for the given client
2381	Constructor for DatasetClientsCleaner .
2382	if request contains invalid args the invocation framework will provide error in callback no validation done here
2383	Check if an element is in the list
2384	Add elements to the list
2385	Remove all the elements in another collection
2386	Split the list into two lists
2387	Returns a list with the duplicated values removed
2388	Returns a new list with each value mapped through a transformation
2389	Returns a new list with the occurrences that passes the test
2390	Returns a new list with the values sorted
2391	Helper to use Function . prototype . call and prepend this to arguments
2392	Koa Nunjucks Class
2393	Returns an array of registers associated with a given CPU arch .
2394	Parses out the Utils . headers of a crash report . The Utils . headers are the bulk of the meta information at the top of a crash report .
2395	Converts an input JSON report to an Apple style crash report using the internal parses in sequence .
2396	Finds a crashed thread by iterating all threads and checking whether they ve crashed . If they have we short circuit and return the thread . Otherwise we return the crashed_thread entry .
2397	Parses out the CPU registers dump from the crash . This is reused internally and so you can pass a custom thread to work against as needed .
2398	Parses out the extra information available against the crash . this includes any referenced objects application statistics and diagnoses .
2399	Parses out the exception section of a Crash report .
2400	Allows for runtime setting of log levels . Can be called at anytime to adjust log levels .
2401	Parses out the reason for why the error occurred . We take this from the error sub - object unless a user exception is provided and if so we use that .
2402	lookup connect . stack if there is a fn with before or after properties and move it at right place
2403	Transport is separated into a separate function because it can be overrided by the lamda - optimizer tool to use NodeJS functions instead .
2404	Converts decimal values in the range 0 - 1 to hexadecimal values between 00 and FF .
2405	Adds Knockout s additional array mutation functions to the array
2406	Gets or creates a subscribable that fires after each array mutation
2407	Listens for array mutations and when they happen cause the observable to fire notifications . This is used to make model properties of type array fire notifications when the array changes . Returns a subscribable that can later be disposed .
2408	Given an observable that underlies a model property watch for any array value that might be assigned as the property value and hook into its change events
2409	Deletes the backup directory .
2410	Inlines the given files .
2411	Gathers files that will be modified .
2412	Validates a given configuration .
2413	Loads the configuration .
2414	Reads the given file .
2415	Parses the file for import statements .
2416	Reads the contents of the imported files .
2417	Replaces the affected import statements with the actual file contents .
2418	Applies the changes by overwriting the original file .
2419	forwardSHT implements the forward SHT on data defined over the sphere
2420	inverseSHT implements the inverse SHT from SH coefficients
2421	convertCart2Sph converts arrays of cartesian vectors to spherical coordinates
2422	convertSph2Cart converts arrays of spherical coordinates to cartesian
2423	computeRealSH computes real spherical harmonics up to order N
2424	recurseLegendrePoly computes associated Legendre functions recursively
2425	pinv_svd computes the pseudo - inverse using SVD
2426	pinv_direct computes the left pseudo - inverse
2427	yawPitchRoll2Rzyx computes the rotation matrix from ZY X rotation angles
2428	Sifts down a node .
2429	Computes which child is the smallest according to a comparison function .
2430	Sifts up a node .
2431	Runs a command in a shell and buffers the output .
2432	Sub - queries in select clause
2433	Specifies a single - valued association to another entity class that has many - to - one multiplicity .
2434	Specifies a many - valued association with one - to - many multiplicity .
2435	Annotates entities .
2436	Annotates tables .
2437	Trigger a callback when an element is resized
2438	Returns a working plan for the current iteration of the event loop
2439	Check to make sure the tile passes the checks i . e . it is allowed to be in a cluster
2440	Returns a cache string by an object
2441	body cipher encode
2442	body cipher decode
2443	Accepts a raw XLSX file and options that determine how copytext should process it .
2444	Validates and normalizes the options passed to process .
2445	Returns true if the specified value is an array or like an array
2446	Returns true if the specified value is an iterator
2447	Returns true if the specified value is a stream
2448	Returns the current type of an object
2449	Returns a new object with the same type as source
2450	Returns true if the specified object is one of JS data structures
2451	Returns true if a prototype of the specified object can be extended
2452	babel async function
2453	Grabs the links of all movies and dramas including the given query
2454	Wrap async function to standard express function
2455	Register cache interface
2456	Facebook OAuth2 object make various requests the the graphAPI
2457	Creates a RingBuffer instance .
2458	Create a new spy object .
2459	Create a Logger instance .
2460	Create a Logger and set json configuration to true if it has not been defined .
2461	The Folder model module .
2462	Sets values to model
2463	Newly created Cream initializer inside of the container
2464	DI register method
2465	DI remove method
2466	Reduce a stream of data into a single value .
2467	Apply hooks on a message in reduce fashion . Hooks may return a new message . If it s not the case the previous message is used for the next reduce step .
2468	compose two predicates
2469	return metalsmith ware for carrying out the given replacement on files for which the given fileFilter returns true
2470	Generate a paragraph of Lorem ipsum text
2471	returns true if src or href matches any of the patterns defined with options . ignorePatterns
2472	Render activities . activities - Array with activities highlight - True to highlight added activities
2473	Returns a group with the top verbs . activities - All activities count - How many verbs to show Returns a list of top verbs plus other
2474	Filters and returns only activities that should show based on selected filter .
2475	Do a standard call on the VLC API .
2476	Transform function for adding paths
2477	finds the first row with the most columns
2478	a case insensitive match
2479	isSsh Checks if an input value is a ssh url or not .
2480	Run npm install .
2481	Creates sinon matchers on the SinonExpect . SinonAssertions prototype . This could also be done on including the file but I prefer keeping it in a method .
2482	ID of next movie
2483	user event handlers
2484	Internal helper to delete a low level key and then if the top - level is empty get that one too .
2485	SocketTransport is a class which maintains an active connection to a WebSocket server and performs reconnection whenever needed . It also notifies the user of the socket about disconnects and allows sending and receiving messages mimicking the native WebSocket API .
2486	A Commander is a layer over a JSON - RPC 2 . 0 Client which controls automatic retries of method calls .
2487	calculates the font size on each li element according to their data - weight attribut
2488	updates the starting position for paged navigation and then rebuilds the graph based on the selected page
2489	take a breath so that pending repaints get some cpu time before the upload starts
2490	The AppClient is a high - level JSON - RPC client with support for method retries and reconnecting .
2491	Number of bytes on the buffer . Writes am IEEE 754 compliant number into a buffer .
2492	Reads the information inside a buffer an returns it as a string .
2493	Converts an IEEE 754 number into a hex representation of it .
2494	Converts an IEEE 754 compliant hexadecimal string into a JavaScript number .
2495	deal with focus
2496	Returns a copy of the object with Functions removed .
2497	bind the proxy events to the current app .
2498	unbind the proxy events from the current app
2499	Given a verb and a String path will return either a route object or false if a matching route can be found within the current defined set .
2500	loads a template and then interpolates it for each item in the data array . If a callback is passed it will call the callback with each item in the array _after_ interpolation
2501	Triggers events on app within the current context .
2502	this function is available in the view for rendering partials
2503	FIXME semicolons inside of for
2504	Project the token type that will exists after the given char is typed and use it to determine whether it would cause the start of a string token .
2505	resolve paths and get path dir file ext
2506	check if folder or file exists if not create it
2507	sync version of existsOrCreate
2508	Unwatching all files and folders
2509	very simple write repeater when gets error try repeat after 500ms but max 5 times
2510	very simple read repeater when gets error try repeat after 500ms but max 5 times
2511	get resolved file info & stats
2512	helper - create ancestors list from path
2513	helper - extract name from fileId
2514	helper - extract file extension from file name
2515	helper - sumarize file info
2516	helper - get only direct children of directory
2517	comparing old dir children and new dir children - executed on change event
2518	Adds a job to the read batch and schedules a new frame if need be .
2519	Adds a job to the write batch and schedules a new frame if need be .
2520	Extend this FastDom with some custom functionality .
2521	Runs queued read and write tasks .
2522	Create a new Knob instance .
2523	Generates a value between 0 - 1 given the current pointer position in relation to the Knob s position and triggers output .
2524	Sets context value
2525	add previous siblings
2526	this is a hack to have some selective components from bootstrap overriden without copying the whole bootstrap . scss with all its
2527	turn stream into buffer
2528	Bucks chain constructor .
2529	opt . type opt . id opt . tardy opt . tardy_timeout
2530	for ES6 notation
2531	Gets the chain instance from storage
2532	Gets the chain data from storage by chain id
2533	Gets the chain context value from storage
2534	Create a new MultiButton instance .
2535	Create an image from srcFiles with name destImage and pass coordinates to callback .
2536	Checks if path exists on object .
2537	The base implementation of _ . set .
2538	Contributes additional methods to a constructor
2539	Checks if value is classified as a String primitive or object .
2540	A specialized version of _ . includes for arrays without support for specifying an index to search from .
2541	The base implementation of _ . indexOf without fromIndex bounds checks .
2542	Gets the number of placeholder occurrences in array .
2543	Creates a function that wraps func to continue currying .
2544	Inserts wrapper details in a comment at the top of the source body .
2545	Converts value to a finite number .
2546	Converts value to a number .
2547	Creates an array of the enumerable property names of the array - like value .
2548	Used by _ . defaults to customize its _ . assignIn use .
2549	The base implementation of _ . rest which doesn t validate or coerce arguments .
2550	Checks if value is a valid array - like index .
2551	Checks if the given arguments are from an iteratee call .
2552	A specialized version of baseGetTag which ignores Symbol . toStringTag values .
2553	The base implementation of getTag without fallbacks for buggy environments .
2554	Removes key and its value from the hash .
2555	Sets the map key to value .
2556	Casts value to a path array if it s not one .
2557	Gets the value at path of object . If the resolved value is undefined the defaultValue is returned in its place .
2558	Generates JUnit XML for the given spec run . Allows the test results to be used in java based CI systems like CruiseControl and Hudson .
2559	Appends all the library functions to this instance for static use .
2560	Adds the library methods from the primitive object prototypes .
2561	Allow users to overwrite the handle on a per instance basis ...
2562	Returns the libp library ...
2563	Removes the library methods from the primitive object prototypes .
2564	Retrieves the last item from the thisPointerStack and invokes the provided callback with it .
2565	Create a new Button instance .
2566	Used in Object . setPrototypeOf polyfill only
2567	IE doesn t allow Object . keys on primitive types ...
2568	Camelizes all of the provided string arguments .
2569	Decamelizes all of the provided string arguments .
2570	Returns all the characters found in one string but not the other .
2571	Returns only the characters common to both strings
2572	Repeat a string times times .
2573	Right trims a string . Same as String . trim but only for the end of a string .
2574	Left trims a string . Same as String . trim but only for the beginning of a string .
2575	Returns a string in Title Case .
2576	Splices a string much like an array .
2577	Return a truncated string with ellipses .
2578	Shuffles a string
2579	Reverses a string .
2580	Strips the trailing slashes from a string .
2581	Pads a string with delim characters to the specified length . If the length is less than the string length the string will be truncated .
2582	Adjusts a string to fit within the confines of width without breaking words .
2583	Moves a date forward daysInTheFuture days .
2584	Moves a date forward monthsInTheFuture months .
2585	Moves a date forward yearsInTheFuture years .
2586	Returns the date in the yyyy - mm - dd format .
2587	Returns the string representation of a number with placeholders added .
2588	Formats a number in money notation .
2589	Recursively computes the factorial of the number n .
2590	Determines is the given numbers are integers
2591	Recursively computes n choose k .
2592	Pads a number with preceeding zeros .
2593	Inherit the prototype methods from one constructor into another . Mostly borrowed directly from Node . js
2594	Computes the union between the current array and all the array objects passed in . That is the set of unique objects present in all of the arrays .
2595	Returns the items common to all arrays .
2596	Rotates the array left the specified number of times . This is useful if trying to create a circular queue .
2597	Removes duplicates from the current array . This is a destructive action and will modify the array in place .
2598	Gets an array of unique items from the current array .
2599	Sorts the array in ascending order . This is a destructive action and will modify the array in place .
2600	Sorts the array in descending order . This is a destructive action and will modify the array in place .
2601	Computes the frequencies for each item in all of arguments .
2602	Creates a shallow copy of item .
2603	Returns the number of occurences of what
2604	Returns the object s keys .
2605	Determines if an object can be converted to a number .
2606	Converts an object to a number .
2607	True if the objects passed in are all arguments objects false otherwise .
2608	Convers an object to an integer if possible .
2609	Returns a random array item random object property random character in a string or random digit in a number .
2610	Invokes the callback f for every property the object contains . If the callback returns true the loop is broken and false is returned ; otherwise true is returned .
2611	Returns the first n elements of an object . If the object is an array and only one items is retrieved that item will be returned rather than an array .
2612	Returns the last n elements of an object . If the object is an array and only one items is retrieved that item will be returned rather than an array .
2613	If the last item in the object is a function it will be returned . Otherwise an empty function will be returned . Useful for ensuring that a callback can always be invoked without checking if the argument is a function over and over .
2614	Filters an array or object using only the types allowed . That is if the item in the array is of a type listed in the arguments then it will be added to the filtered array . In this case array is a valid type .
2615	Filters an object by keys using the given predicate function .
2616	Returns the maximum item in the object .
2617	Returns the key of the item with the highest value in the object .
2618	Returns the minimum item in the object .
2619	Returns the key of the item with the lowest value in the object .
2620	Tests whether or not the object has a method called method .
2621	Same as Object . j . implements excepct with a hasOwnProperty check .
2622	Create a new Joystick instance .
2623	Create a new DOMWidget instance
2624	use CSS to position element element of widget
2625	See if two arrays contain the same elements
2626	async Series queue constructor
2627	async Parallel queue constructor
2628	Create a new Menu instance .
2629	Generate option elements for menu . Removes previously appended elements .
2630	Create a new MultiSlider instance .
2631	Generates a value between 0 - 1 given the current pointer position in relation to the MultiSlider s position and triggers output .
2632	Get all matches of a regex in a string as an array
2633	Setup before each test
2634	Test a promise for failure
2635	Test a promise for success
2636	Look for a test asset and if it exists copy it to the test context at the given location .
2637	Define cascading props in objects in namespace separated by dot if props are on lower level it will create empty object
2638	Returns false if a file is not being tracked . Will ignore mtime unless strict is truthy .
2639	Create a new CanvasWidget instance
2640	Create a the canvas element used by the widget and set some default CSS values .
2641	Convert a official map into correct attribute names
2642	returns the index value of the entities connected to the entity
2643	from js = > to html
2644	not really disposable no way to get an instance with a different database too expensive to open new connection for each test but this will still work as intended for single thread tests .
2645	What is the requestQueue ?
2646	Create a new Slider instance .
2647	Generates a value between 0 - 1 given the current pointer position in relation to the Slider s position and triggers output .
2648	rename jobCompleted - > storeDone
2649	Function handshake that test if the connection with the Warehouse micro - service is available
2650	return a pivot data for a dataset
2651	Sendpulse API initialization
2652	Get email template by id
2653	Update Variables for an email address in an address book
2654	Add new phones to address book with variables
2655	Get information about phone from the address book
2656	Update phones variables from the address book
2657	Add phones to blacklist
2658	Remove phones from blacklist
2659	Create new sms campaign
2660	Send sms by some phones
2661	Get list of campaigns
2662	Get information about sms campaign
2663	Cancel sms campaign
2664	Get cost sms campaign
2665	Remove sms campaign
2666	A forEach that will work with a NodeList and generic Arrays
2667	Emit an event from the tree view
2668	Renders the tree view in the DOM
2669	Test whether a package name is acceptable for use as an android project . Returns a promise fulfilled if the package name is acceptable ; rejected otherwise .
2670	Test whether a project name is acceptable for use as an android class . Returns a promise fulfilled if the project name is acceptable ; rejected otherwise .
2671	This method parses the xml file provided .
2672	Creates a new Config object .
2673	Captures a specific stream and invokes the specified callback with the text written to the stream instead . It returns a function that can be used to restore the captured stream .
2674	The default message handler for both the Shell and Control sockets . This dispatches the message to the appropriate message handler based on the type of the message .
2675	Runs the session by creating the sockets and sets up message handlers .
2676	Implements the %inspect command This command can be used to inspect a variable or expression within the shell .
2677	Adds a message to the queue
2678	Implements the %%text command . This command can be used to initialize a string variable containing a span of literal text . The text does not have to be specified as a string i . e . quoted and escaped .
2679	Implements the %%json command . This command can be used to initialize a variable containing a plain old javascript object parsed from JSON text .
2680	Creates the global objects variables that serves as the initial state managed by the shell .
2681	The Shell object to manage configuration shell functionality and session state .
2682	Creates and initializes a Shell object .
2683	Implements the %module command that can be used to install a specific named module using npm . The module gets installed into node_modules within the path specified in configuration .
2684	Implements the %modules command that can be used to list the names of installed modules .
2685	Initializes the shell with module related functionality . - The required and installed modules are tracked and an implementation of a shell - scoped require is created . - The %module and %modules commands are also registered with the shell .
2686	Helper method to create a message object from its independent pieces .
2687	Creates a kernel info response message .
2688	Creates an error execution reply message .
2689	Creates a success execution reply message .
2690	Create a completions list reply message
2691	Creates a display data message for sending results of an execution .
2692	Helper to read in a message from incoming message data .
2693	Helper to write out a message to as outgoing message data .
2694	Implements the %%html command . This command simply converts the specified text into an object that is rendered as HTML .
2695	Implements the %%script command . This command can be used to execute script on the client instead of on the server .
2696	Handles the kernel info request to produce a kernel info response .
2697	Creates the message handlers associated with the kernel session .
2698	Add TOC functionality
2699	The main method which parses input arguments creates a Shell providing evaluation functionality and the Session object to handle the kernel protocol .
2700	A helper function to compute a signature using an hmac object .
2701	Creates a signer given the specified schema and key .
2702	Create Error objects with their trace suppressed . This is useful for generating error message responses within the shell .
2703	Implements the %extension command that can be used to install a specific named module as a shell extension using npm .
2704	Implements the %extensions command that can be used to list the names of loaded extensions .
2705	Initializes the shell with extensions related functionality .
2706	Get type of destination path
2707	Searches for a file with a specified name starting with dir and going all the way up either until it finds the file or hits the root .
2708	Similar to readStr . iso but will check for a null - terminator determining the end of the string . The returned string will be of _at most_ length octets
2709	Similar to readStr . ucs but will check for a null - terminator determining the end of the string . The returned string will be of _at most_ length octets
2710	Mailto Constructor .
2711	Returns an hyperlinkable representation of the form values .
2712	Returns the filtered values of a form .
2713	Returns an aggregated object of form values .
2714	Returns a GET - like serialisation string of the form values .
2715	Registers the x - div HTMLElement
2716	Bug checking function that will throw an error whenever the condition sent to it is evaluated to false Processes the message and outputs the correct message if the condition is false . Otherwise it outputs null .
2717	Constructor for the Naive Bayes learner . It takes a list of strings which represent the different groups of strings to train on followed by an array of possible classes .
2718	Set up structure of the datastore .
2719	Return the index of the maximum value in the array .
2720	This is terribly named . Process the array of strings into an array of arrays of words with them stemmed etc .
2721	Add to the count of classes seen . Instantiate a new object to hold the classes and counts if it has not been seen yet .
2722	initialize Winston logging mechanism from file
2723	Logtown debug wrapper
2724	Log helper .
2725	Send log message to all available wrappers
2726	Prepare stats . Currently only maxIdLength supported in core can be extended in custom plugin .
2727	Create new logger instance
2728	Get logger that exits or create new one
2729	Add global configs
2730	Add plugin function . Plugin function must return array with log argument values .
2731	pre - insert - memCacheCounterAdvanced
2732	pre - find - memCacheCounterAdvanced
2733	post - findObject - memCacheCounterAdvanced pre - save - memCacheCounterAdvanced
2734	post - save - memCacheCounterAdvanced pre - saveObject - memCacheCounterAdvanced
2735	post - updateConfig - memCacheCounterAdvanced pre - update - memCacheCounterAdvanced
2736	post - removeConfig - memCacheCounterAdvanced pre - remove - memCacheCounterAdvanced
2737	post - updateConfig - memCacheCounterBasic pre - update - memCacheCounterBasic
2738	post - save - mongoCounterBasic pre - saveObject - mongoCounterBasic
2739	Adds type handler
2740	~~~~~~~ Error handling ~~~~~~~~~
2741	First gather all Endpoint parameters post - order walk
2742	JavaScript which enables editing of this module s content belongs here .
2743	could not be found logic
2744	post - authentication - customAuthHeader
2745	Attempt to update code on the fly fall back to a hard reload .
2746	Display template complete message .
2747	Intercepts the write and end methods of the given writable stream and buffers the values written to them instead . When the stream ends the buffered value is returned and the original write and end methods are restored .
2748	Fix dis shit
2749	Cleans up webpack error messages .
2750	Wraps arrays and functions into instance of UniversalBot Ensure that given bot has connector otherwise inject TestConnector
2751	Low - level block serializer
2752	Low - level span serializer
2753	Low - level list serializer
2754	Low - level list item serializer
2755	Renderer of an actual block of type block . Confusing we know .
2756	Serializer that recursively calls itself producing a hyperscript tree of spans
2757	Called once when component is attached . Generally for initial setup .
2758	Called on each scene tick .
2759	Resolve object paths in variables and assigns the returned result from datamodel path
2760	Creates the autoplay plugin .
2761	Buffer all files before parsing them to livingcss .
2762	Function Two . Example function logs hello and currect context .
2763	Next function . Calls the next middleware in chain .
2764	Function One . Example function logs hello and currect context . Contains some syncronous code that will execute seperately .
2765	Function Two . Example function logs hello and currect context . This function is syncronous .
2766	Function Three . Example function logs hello and currect context .
2767	Function Two . Example function logs hello and currect context . Calls a new nested chain .
2768	Render compiled twig template
2769	returns true if we are to write to terminal
2770	gets upper - left of a 4x4 matrix into a 3x3 of vectors
2771	Apply a function to all values .
2772	Check requirements . Returns result of modulo 97 applied to the String input rawValue .
2773	Messages repository maintainers by submitting an issue .
2774	shim atom . packages . serialize in < = 1 . 6
2775	shim atom . serialize in < = 1 . 6
2776	splits a string on whitespaces and removes duplicate values
2777	visits a set of nodes to be parsed and recursively visits its children currentItem if provided contains the current microdata context
2778	parses a microdata item out of an itemscope DOM node
2779	extracts and normalizes a url attribute value of a node
2780	extracts the property value out of an itemprop DOM node
2781	Process specified wildcard glob patterns or filenames against a callback excluding and uniquing files in the result set .
2782	Messages are sent to the parent by appending them to the tempfile .
2783	Error handlers .
2784	Performs static type checking enables dynamic type checks .
2785	native json support
2786	A shorthand function for getting a localized date
2787	A shorthand function for getting a localized date and time
2788	cross - browser way of getting element s style property
2789	Determine is the slug field value changed
2790	Show if list . filtered == true and this . filtered == true
2791	Check if route should be authorized and return route setting
2792	Consumes content inside round braces . Mostly used to skip ; token inside expressions since in LESS it is also used to separate function arguments
2793	Returns a map with baseQuery s keys converted to underscore_case .
2794	Builds the find all WHERE clause query param map by taking into consideration request . query parameters .
2795	Adds a single WHERE clause to an existing base clause for a single request . query parameter .
2796	Builds the find by id WHERE clause query param map by taking into consideration config . baseQuery .
2797	Deletes any properties from the entity which in the schema are marked as Empty .
2798	Initializes the models from the config provided to make them usable with the exported crud function .
2799	Initializes bookshelfModel s toJSON functionality to convert all date properties as defined in bookshelfModel . schema .
2800	Initializes every empty number property of a payload as defined in the schema provided with 0 .
2801	Applies simple to - date conversion for every date property of a payload as defined in the schema provided .
2802	Copies the value of the foreign keys as defined in baseQuery provided by request . params to the request . payload model .
2803	Converts the error object provided into the specified validation constraint violation error message format .
2804	But when cons is created it s overloaded with lazy ones Force tail to whnf .
2805	Check if the specified element has no end tag
2806	Construct the log watcher .
2807	Load image on canvas
2808	apply the binding
2809	Static helper fuction factory
2810	Compares HTML code but beautifies it before the comparison .
2811	Compares JavaScript code but beautifies it before the comparison .
2812	Compares two objects .
2813	checks if the window has passed the sticky line
2814	This will move to service file
2815	Returns all the paths that exist under the given path
2816	deeply freeze an object to make it fully immutable
2817	Create model class with a subscribable interface .
2818	Binary search tree iterator
2819	Initializes the xhr - instance based on the config - params . This method is the standard way of doing xhr - requests without processing streams .
2820	Adds the headers - object to xhr - headers .
2821	Stringifies an object into one string with every pair separated by &
2822	Extracts an object based on the querystring . The object s values will be String - types .
2823	Aborts all running io - requests
2824	Invokes the function from a Grunt configuration module with a single argument - the grunt object .
2825	helper we can call
2826	recursively print an environment .
2827	Generate a file path from properties on the given object .
2828	Enhanced component system Component class It binds dynamic data to HTML element .
2829	Sets a template of the component .
2830	Private function - updates model
2831	Clone template nodes at the specified position . If ommited template is cloned at the end .
2832	currently only works if from > to
2833	BaseImporter psuedo class to be extended
2834	array for use in recursion Factory function for generating next tick Always returns a function though passed an undefined nextSchema the returned function will be empty
2835	Load a formatter
2836	Creates the output dir
2837	Calculate the SHA - 1 of an array of big - endian words and a bit length
2838	Observer is a subscribable which watches a function and each time some variable in it changes it is called again and its return value is passed to subscribers .
2839	Return package info for addons
2840	get project issueType versions and components
2841	Given the path for an image in the local file system returns a data URI string representing the data in that image file .
2842	Implementation of through interface .
2843	Gefine a template function that builds a list of links from the given list of short descriptions
2844	Subscribe for changes of a property or the whole object
2845	Unsubscribe for changes of a property or the whole object
2846	Notifiy subscribers for changes
2847	Builds a row group from input parameters
2848	Async function to add stats to each db .
2849	Gets all but the first element of array .
2850	The base implementation of _ . pick without support for individual property identifiers .
2851	A specialized version of baseAggregator for arrays .
2852	Creates a function that wraps func to invoke it with optional this binding of thisArg partial application and currying .
2853	The base implementation of methods like _ . xor without support for iteratee shorthands that accepts an array of arrays to inspect .
2854	The base implementation of _ . mean and _ . meanBy without support for iteratee shorthands .
2855	The base implementation of _ . isTypedArray without Node . js optimizations .
2856	The base implementation of _ . unset .
2857	The base implementation of _ . pullAt without support for individual indexes or capturing the removed elements .
2858	Checks if value is an Error EvalError RangeError ReferenceError SyntaxError TypeError or URIError object .
2859	Creates a function that either curries or invokes func with optional this binding and partially applied arguments .
2860	This method is like _ . forIn except that it iterates over properties of object in the opposite order .
2861	The base implementation of _ . pickBy without support for iteratee shorthands .
2862	this should be re - implemented as a class
2863	Get an instance of IndexField . Unknown field works as text searchable field if it works without domain .
2864	table is array of rows where row is array of cells cell is array of spans
2865	Build up a hash of the all plugin aliases keyed by plugin name with the value being an array of aliases . This hash will contain an entry for every installed plugin .
2866	Build up a hash of disabled plugin instances keyed by alias with the value being whether it s disabled or not This hash will contain an entry for every installed plugin .
2867	Build up a hash of plugin instance execution order overrides . This hash will only container an entry for instances that should run in a particular order . All other instances will be ordered by their natural ordering .
2868	Generates a ticket on Qlik Sense QRS Api . If the targetId is not correct then the ticket will redirect to the hub
2869	Exports a cube
2870	Creates a list box on a field or on a dimension
2871	rotate to desired gray using entry sequence
2872	calculate direction at each iteration
2873	general nth root - ing
2874	Hilbert conversions Returns Hilbert index of given cardinal point
2875	Returns cardinal point given Hilbert index
2876	Extends default console reporter options
2877	We need a named function to check whether this is previously added . Bec . since this is a multi task this handler will get added every time .
2878	compass task works at multi threads .
2879	Returns an array with the range of pages to be displayed according to the params passed
2880	Show Tasks from a Plugin along with Description .
2881	Run shell command
2882	Read Yaml File into Object
2883	Write Yaml string to File
2884	create middleware for handling shader files
2885	create module for the loaded shader
2886	Convert mysql format to standard javascript object
2887	Create a value csv for a DQL query key = > optional overrides the keys in the dictionary
2888	Starting point for predicate evaluation parentKey = > if set look for comparators and apply them to the parent key
2889	Recursively parse a predicate calculus and build a SQL query
2890	Cast waterline types into SQL data types
2891	Return whether this criteria is valid as an object inside of an attribute
2892	Process Icon Templates
2893	Build font icons from SVG files and optionally make scss and demo templates .
2894	Inject CSRF token via POST body
2895	Inject CSRF token via query param .
2896	Resolves the path to the user s home directory .
2897	OK Fired when a model is unregistered typically when the server is killed . Useful for tearing - down remaining open connections etc .
2898	Raw Query Interface OK
2899	Drop any relations
2900	Add a column to a table - NO USADO
2901	Update one or more models in the collection - PENDIENTE
2902	Delete one or more models from the collection - PENDIENTE
2903	Prints one or more strings in red to stderr .
2904	Prints one or more strings to stdout . Catches unwanted EPIPE error .
2905	Stop the process with an error message .
2906	Parse the command - line options .
2907	Initializes a new instance of the CompositeError class .
2908	How to handle incoming requests
2909	Kills the new process and its sub processes .
2910	In general keep in mind that the stack - based nature of this visitor is reverse - polish - notation form . I . e . in a sequence of calls to walk or invoke they ll actually get visited in LIFO order .
2911	bad behavior when set fails in non - strict mode
2912	always returns a TVar ; not a proxied obj
2913	Construct a new instance .
2914	Constructor a transaction object .
2915	Launches a new process with the given command . This is almost same as child_process . spawn .
2916	Apply a formatting function
2917	Custom Error Type
2918	Return a function to turn a file object into a JSON - like data object
2919	Read templates from a gulp stream
2920	Indicate that there will be no more incoming templates
2921	Read single template from a file using the given file name
2922	Process one input file may return a promise or throw an exception
2923	Choose template for the given template name ; returns a promise
2924	Obtain template name from data allowing for nested attributes
2925	Set a value for a path in a json - like structure
2926	Get a value from a path in a json - like structure
2927	Wrap the original event handler .
2928	Convert a float value to a percentage
2929	Round a decimal value
2930	Generate random between min and max
2931	Flow class .
2932	Future class .
2933	Simplified API to just return a single token using defaults
2934	Finds the first index based on a regex match
2935	Finds the last index based on a regex match
2936	Creates an array of lines split by line breaks
2937	Handles wrapping format strings around a selection
2938	Handles inserting a snippet at the end of a selection
2939	Register and append the DOM elements needed and set the event listeners
2940	converts a ddb object into a js object
2941	converts a js object into a ddb object
2942	Deep clone an object
2943	Deep merge one object to another
2944	get contents to display on a page
2945	Get the vhost data of the request for RegExp
2946	for saving packages info to state
2947	for loading models
2948	makes list of pages for main or subsite
2949	build a list of all roles and inherits
2950	for making screen capture image of site
2951	Takes a function with args and returns a curried version of it
2952	Sets the date or time to the start of the specified increment
2953	get theme inheritance
2954	currently only redis cache store is supported
2955	for getting data
2956	for setting data
2957	for setting volatile data with an expiration date
2958	for deleting data
2959	adds function to bypass certain condition of request
2960	for making context to pass to acl checker
2961	add common details to email message
2962	to verify recaptcha
2963	copy files to dest directory
2964	create the real dest path with intermediate dirs
2965	remove files at dest path
2966	reference to the unbound value of this
2967	class instance constructor
2968	functions for correcting responsive sizes in bootstrap subgrids determine size wanted based on size in
2969	determine size of outer element
2970	Gulp Recursive Concat .
2971	The middleware to check if the request contains at least one roles enabled to fullfill the requesting resource
2972	Create InSicht instance
2973	Get user detail from accessToken
2974	render string into array of js code and js src
2975	TripCase API client constructor Requires an email and password in options
2976	Compute the product of an upper triangular matrix with a vector
2977	order is important
2978	load admin functions for site apps
2979	Sanitizes a string by replacing all hazardous LaTeX symbols with their descriptive names .
2980	Similar to _ . result but it passes additional arguments when the property is a method
2981	load user details into variable
2982	setup meta data
2983	Solve Ax = b where A is upper triangular
2984	makes column from model for datatable Component
2985	load data from model for datatable Component
2986	save posted data for Form Component from model
2987	get infomation about a model
2988	eval and other code call this to run a model method then cb
2989	get theme options to embed fields
2990	determine if contents for a page already exist
2991	make server bundles
2992	Sets the status of the filter and fires the appropriate events .
2993	Initializes the plugin by setting up the drag tracker
2994	private utils function hmac sign
2995	sign abstract method
2996	hamc verify signature
2997	rsa verify signature
2998	abstract verify signature method
2999	Returns the type of value .
3000	Adds dynamic properties to an object .
3001	Sets the type of the tool . Allows the icon to be changed .
3002	Lockable uses its headerCt to gather column state
3003	Produce a token object . The token inherits from a syntax symbol .
3004	Produce the next token . It looks for programming errors .
3005	HTML parsing .
3006	Updates the internal ghost DataView by ensuring it is rendered and contains the correct records
3007	Event handlers {{{ 1
3008	Attempt to retrieve the set value for the given key .
3009	Function for returning foldermap . map object to callback
3010	var opened = false
3011	Get the file status code
3012	Get files from the dir filtered with pattern
3013	Implementation for being able to extract the key from an object if only a single argument is passed .
3014	Remove an item from the hash .
3015	Executes the specified function once for each item in the hash . Returning false from the function will cease iteration .
3016	Performs a shallow copy on this hash .
3017	Get the arguments of the current AST node
3018	Get the two arguments of the current AST node
3019	Peeks the next token ensuring that there is no line terminator before it . This is done by checking the preceding characters for new lines .
3020	return constructor function that will generate a custom model view instance based on the parent model view class
3021	CI Build Tools
3022	Creates the grid from HTML table element .
3023	Compute the Hamming Weight of a word .
3024	Returns the highest set bit in a word .
3025	Event Handlers {{{ 1
3026	Takes in a start duration and a multiplier and returns a new Duration . Rounds using Math . round
3027	Ensures that both start and end have values where the other has values . For example if start has minutes but end does not this function will initialize minutes in end .
3028	Ensures that date has its proeprties initialized based on what the duration has . For example if date does not have minutes and duration does this will initialize minutes in the date .
3029	Returns an object representing a date optionally normalizing to UTC time .
3030	A GedcomX Range . It will place a Singel date at this . start and this . end as well as a Duration at this . duration .
3031	Called by the flash plugin once it s installed and open for business .
3032	Called by the flash plugin once the state of one of the active connections changes .
3033	Initiate the request .
3034	Called by send or once flash is loaded to actually send the bytes .
3035	Updates readyState and notifies listeners .
3036	Parses data returned from flash once a connection is done .
3037	Called on match or
3038	Called on match \
3039	this is just to make JSHint stop complaining about casing
3040	Toggles the element s visibility or display depending on visibility mode .
3041	Skips text nodes that only contain whitespace since they aren t semantically important .
3042	Creates a new list item after the current selection s list item parent
3043	fix the cursor position to ensure it is correct in IE
3044	Define our stdin listener
3045	Convert a string UUID to binary format .
3046	3 - byte chars
3047	Get a promise for this deferred If obj is provided the promise aspect is added to the object
3048	Creates new LoadMask .
3049	Changes the data store bound to this LoadMask .
3050	in case all methods actually ran synchronously .
3051	Add events that will trigger the state to be saved . If the first argument is an array each element of that array is the name of a state event . Otherwise each argument passed to this method is the name of a state event .
3052	Initializes the state of the object upon construction .
3053	Conditionally saves a single property from this object to the given state object . The idea is to only save state which has changed from the initial state so that current software settings do not override future software settings . Only those values that are user - changed state should be saved .
3054	Gathers additional named properties of the instance and adds their current values to the passed state object .
3055	Destroys this stateful object .
3056	Starts this object . If this object is already started nothing happens .
3057	Stops this object . If this object is not started nothing happens .
3058	Called on the program root and on every statemenet
3059	Called on every comment to parse
3060	Parses an example line
3061	Match specific identifier name
3062	Enables this ActionColumn s action at the specified index .
3063	Disables this ActionColumn s action at the specified index .
3064	Sets the read only state of this field .
3065	Set the current error state
3066	Gets the first sorter from the sorters collection excluding any groupers that may be in place
3067	Generates a preview for a format
3068	Exception type for HTTP errors
3069	Use a custom QuickTip instance separate from the main QuickTips singleton so that we can give it a custom frame style . Responds to errorqtip rather than the qtip property .
3070	must defer to wait for browser to be ready
3071	Toggles the editor between standard and source edit mode .
3072	Triggers a toolbar update by reading the markup state of the current selection in the editor .
3073	Compiles the plain text into a form descriptor .
3074	Creates a control of specified type .
3075	Composes an ID for the control item .
3076	Emits HTML tag attributes from specified object .
3077	Controls are recognized after the initial set of Rho blocks before the generic emitParagraph .
3078	Group controls are checkboxGroup and radioGroup which share the same semantics almost entirely .
3079	Sortable groups enable users to specify correct ordering for items .
3080	Associative groups enable users to drag select items into correct categories .
3081	Span - level controls are recognized after the initial set of Rho inline elements just before the generic emitNormal method .
3082	The text input with default is mostly the same as text input but has default value at the beginning .
3083	Select menus are enclosed in parentheses with each item is enclosed curly braces .
3084	Generates prompt and solution markup by applying modifications to template markup .
3085	Convenience method for setting the status text and icon to special values that are pre - configured to indicate a busy state usually for loading or processing activities .
3086	attempt to send another obj in the stream at the end
3087	Find front most window
3088	Destroys this object .
3089	Mark fields in this form invalid in bulk .
3090	Set values for fields in this form in bulk .
3091	Clears all invalid field messages in this form .
3092	helpers Get the info of the repository on dir sync
3093	Get list of directories dir from asynchronously
3094	Get list of directories dir from synchronously
3095	Define if dir is a Epm repository
3096	Triggered by a NodeInterface s bubbled expand event .
3097	Collects child nodes to remove into the passed toRemove array . When available all descendant nodes are pushed into that array using recursion .
3098	Triggered by a NodeInterface s bubbled collapse event .
3099	Compiles the files in filenames along with any associated modules into a single js file in proper module dependency order .
3100	The simplest representation of a date .
3101	This method returns the configuration object for the Quick Start toolbar . A derived class can override this method call the base version to build the config and then modify the returned object before returning it .
3102	takes the rel for the each
3103	function makeReallyGenericSyncOpGenericGetChangesBetween ( find the union of the changed versions for the input parameters use that to reduce the number of comparisons necessary
3104	Queue up the given task using the given key as an identifier .
3105	Create a new instance of Iterator
3106	Returns a generator of the doms of the given tag name .
3107	private methods for detecting datatypes
3108	Methods to handle lines
3109	Clears positioning back to the default when the document was loaded .
3110	Gets the local CSS X position for the element
3111	Gets the local CSS X and Y position for the element
3112	Gets the local CSS Y position for the element
3113	Initializes positioning on this element . If a desired position is not passed it will make the the element positioned relative IF it is not already positioned .
3114	Sets the element s position and size in one shot . If animation is true then width height x and y will be animated concurrently .
3115	Sets the element s left and top positions directly using CSS style
3116	Focuses a node in the view .
3117	Makes the given card active . Makes it the visible card in the TabPanel s CardLayout and highlights the Tab .
3118	Returns the item that is currently active inside this TabPanel .
3119	even though we provide a default sync handle we include the ability to create them for the purposes of proxying .
3120	This method gets executed each time the editor needs to resize .
3121	Create a new instance of LoaderType
3122	Change the key for an existing item in the collection . If the old key does not exist this is a no - op .
3123	Adds all elements of an Array or an Object to the collection .
3124	Executes the specified function once for every item in the collection . The function should return a boolean value . Returning false from the function will stop the iteration .
3125	Private multi insert implementation .
3126	Remove an item from the collection .
3127	Remove all items in the collection . Can also be used to remove only the items in the passed array .
3128	Returns true if the collection contains the passed Object as an item .
3129	Collects all of the values of the given property and returns their sum
3130	Collects unique values of a particular property in this MixedCollection
3131	Creates a shallow copy of this collection
3132	Converts the JSON data object to an img node .
3133	Get type item by extension class clsid or mime type .
3134	Adds the flash player
3135	Add a new binding to this KeyMap .
3136	Remove a binding from this KeyMap .
3137	Process a particular binding and fire the handler if necessary .
3138	Check if the modifiers on the event match those on the binding
3139	Shorthand for adding a single key listener .
3140	Enables this KeyMap
3141	Disable this KeyMap
3142	Destroys the KeyMap instance and removes all handlers .
3143	Flushes any pending writes to the DOM by calling each ContextItem in the flushQueue .
3144	Removes the ContextItem for an element from the cache and from the parent s children array .
3145	Performs one layout cycle by calling each layout in the layout queue .
3146	Runs one layout as part of a cycle .
3147	Set the size of a component element or composite or an array of components or elements .
3148	Sets the model associated with this proxy . This will only usually be called by a Store
3149	Sets the Proxy s Reader by string config object or Reader instance
3150	Sets the Proxy s Writer by string config object or Writer instance
3151	Determine the file to write the current log file to
3152	Generates a function that will perform logic required to update a log file with a new log entry .
3153	Read a log file with the given name
3154	Delete a log file with the given name
3155	Stubbatti class represents a stub server instance .
3156	Print to text to stdout
3157	Create a new setting .
3158	Retrieve a list of the known settings and their values
3159	Utility to load settings from an object
3160	Utility to grab all the settings and export them into an object
3161	A combined status is the worser of the provided statuses
3162	Default ArgumentProvider that is used if no ArgumentProvider is provided by the command s sender .
3163	Executes the command and ensures request . done is called on the request in case it s not marked to be done already or async .
3164	Called after <!
3165	Called on match <
3166	Called on match &zc -
3167	test utility for requesting the server
3168	del . js
3169	Destroys all records stored in the proxy and removes all keys and values used to support the proxy from the storage object .
3170	Set version number for the given package name .
3171	Create a closure for deprecated code .
3172	Sets the options based on an object .
3173	This is called by build . js to add options to the commander command line library .
3174	Adds a feature option . This also adds a view from the parseOption and the transformOption to the underlying value .
3175	Initializes this Field mixin on the current instance . Components using this mixin should call this method during their own initialization process .
3176	the one and only public function of this module . It takes any string and munges it according to the options . By default it uses a random encoding .
3177	Private plugin internal methods
3178	Finishes the render operation of the trigger Button .
3179	Perform a manual resize and fires the resize event .
3180	Formats a date given the supplied format string .
3181	Get the numeric day number of the year adjusted for leap year .
3182	Maintains compatibility with old static and prototype window . Date methods .
3183	Read TLS options from filesystem synchronously . Paths are read from CLI options or environment variables .
3184	Read TLS options from filesystem asynchronously . Paths are read from CLI options or environment variables .
3185	Read long - option value from CLI arguments .
3186	Applies animation to the Ext . fx . target
3187	Calculate the min and max values for this series s xField .
3188	Sets the title of the header .
3189	Sets the CSS class that provides the icon image for this header . This method will replace any existing icon class if one has already been set .
3190	Sets the image path that provides the icon image for this header . This method will replace any existing icon if one has already been set .
3191	Sets glyph that provides the icon image for this header . This method will replace any existing glyph if one has already been set .
3192	Handler for the checkchange event from an check item in this menu
3193	Check if the value is - a type
3194	Find a morph for the passed arguments
3195	Generate code for a jump out of a finally block .
3196	If path is directory read their children and push more onto paths This is the recursive operation that creates more file in the pipeline
3197	If path is file verify against globs
3198	A extends B
3199	Function for creating a clone of an object
3200	Function for appending path . sep to the end of string if necessary
3201	Function for replacing paramteres in a string with variables
3202	Function for wraping callback to handle errors
3203	Example 1 . Writing an iterator over an array
3204	Sets filter values by values specified into fo .
3205	A GedcomX Date . This will parse the passed in string and return the appropriate GedcomX Date object .
3206	private - used by TabPanel too . Works out the next tab to activate when one tab is closed .
3207	Initializes the global QuickTips instance and prepare any quick tips .
3208	Sets references to elements inside the component .
3209	Removes items in the childEls array based on the return value of a supplied test function . The function is called with a entry in childEls and if the test function return true that entry is removed . If false that entry is kept .
3210	This function sorts an array by multiple fields .
3211	Split a string using a separator only if this separator isn t beetween brackets
3212	Determine the next token
3213	Parse base items
3214	produces one or two changes that succinctly describe the changes to the text
3215	binds the store to the selModel .
3216	Selects all records in the view .
3217	Provides differentiation of logic between MULTI SIMPLE and SINGLE selection modes . Requires that an event be passed so that we can know if user held ctrl or shift .
3218	Private Called after a new record has been navigated to by a keystroke . Event is passed so that shift and ctrl can be handled .
3219	fire selection change as long as true is not passed into maybeFireSelectionChange
3220	Returns true if the specified row is selected .
3221	prune records from the SelectionModel if they were selected at the time they were removed .
3222	Deploy rules for a database project .
3223	Run a sequence once the previous sequence for that project id ends .
3224	Override to put the RTL class onto the innerCt so that columns can have a rule which switches float direction
3225	Inherit docs from MixedCollection
3226	Hides all sprites . If true is passed then a redraw will be forced for each sprite .
3227	Shows all sprites . If true is passed then a redraw will be forced for each sprite .
3228	Force redraw of all sprites .
3229	Sets style for all sprites .
3230	Adds class to all sprites .
3231	Removes class from all sprites .
3232	Destroys this CompositeSprite .
3233	to be deprecated in 4 . 2
3234	Custom implementation of walkCells which only goes up and down .
3235	attributes . js
3236	Private . Determine if there are any columns with a locked configuration option
3237	Update the view when a header moves
3238	Gets left hand side marker for header resizing .
3239	Creates the Element and DOM for the clear button
3240	Returns true iff the browser supports CSS 3 transitions
3241	If config option clearOnEscape is true then add a key listener that will clear this field
3242	Repositions the clear button element based on the textfield . inputEl element
3243	Checks if the field we are attached to currently has a scrollbar
3244	Checks config options and current mouse status to determine if the clear button should be visible .
3245	Called after any event that may influence the clear button visibility .
3246	Produce an error warning .
3247	All properties including accessors
3248	tail recursive helper without sanity checks
3249	Private methods HTML - > BBCode in PunBB dialect
3250	BBCode - > HTML from PunBB dialect
3251	Performs the calculations for a region on a specified axis .
3252	Finishes the calculations on an axis . This basically just assigns the remaining space to the center region .
3253	Finishes by setting the positions on the child items .
3254	A gedcomX Duration
3255	Get and return the value of the filter .
3256	Set the value of this menu and fires the update event .
3257	Ensures a default value when current is undefined .
3258	Checks if value is number like .
3259	Converts type to a boolean .
3260	Converts type to an array .
3261	Camelize string ignore dot notation strings when strict .
3262	Expand argument string into an array respecting space between special characters .
3263	Expands options arguments into multiple singular arguments .
3264	Checks if flag is that of negation .
3265	Checks if an argument contains variadic characters .
3266	Checks if an argument is variadic and also contains required tokens .
3267	Strips a flag of all tokens .
3268	Strips negate chars from flag .
3269	Strips variadic chars from flag .
3270	Strips all tokens from string .
3271	Highlight the given series item .
3272	Un - highlight any existing highlights
3273	Tests whether the passed Component matches the selector string .
3274	Get a new vinyl - file for the given path with given options . If already a vinyl - file just return it .
3275	Create a new vinyl - file for the given path with given options .
3276	Get vinyl - files for each of the given file paths .
3277	Resolve the path for the given module - id .
3278	Get all the require paths for a given file .
3279	Filter - out any files that are already loaded .
3280	Get all files and their dependencies on given path .
3281	Get input file and its dependencies .
3282	Push Vinyl files into object stream .
3283	Create a async - resolver from the given options and return as promise - wrapped function .
3284	Parse the src options adding defaults .
3285	Move to the previous page has the same effect as clicking the previous button .
3286	Move to the next page has the same effect as clicking the next button .
3287	Move to the last page has the same effect as clicking the last button .
3288	Refresh the current page has the same effect as clicking the refresh button .
3289	Borrow another class members to the prototype of this class .
3290	Set options defaults that are used for batter tasks
3291	Helper function to get the plugins for which we will look for tasks
3292	Whip up tasks by adding them to gulpkl
3293	Try to run model method
3294	Abort a request . If the request parameter is not specified all open requests will be aborted .
3295	Handle a successful response
3296	Create the script tag given the specified url params and options . The options parameter is passed to allow an override to access it .
3297	Might be selected cells on reload
3298	this nasty hack is here to work around some WebKit selection bugs .
3299	Fixes an issue on Gecko where it s impossible to place the caret behind a table This fix will force a paragraph element after the table but only when the forced_root_block setting is enabled
3300	Used when calculating total locked column width in processColumns Use shrinkwrapping of child columns if no top level width .
3301	going from unlocked section to locked Locks the activeHeader as determined by which menu is open OR a header as specified .
3302	we want to totally override the reconfigure behaviour here since we re creating 2 sub - grids
3303	defaultTransformer takes arguments from a bunyan WritableStream s write method and formats output in a standard way that can be interpreted by parent process .
3304	Sometimes calling the toString of an object generates an error so we catch it here
3305	internal function for the clickable Elements
3306	Function to help sort the arrays
3307	The function used by forEach method
3308	Extract the current and expected type based on the input type object
3309	Check if return tag type is void or undefined
3310	Check if the jsdoc comment is present or not .
3311	One of a known set of options
3312	A we don t know right now but hope to soon .
3313	A set of objects of the same type
3314	Promote the current value in any list of predictions and add it if there are none .
3315	A Hint that arose as a result of a Conversion
3316	We record where in the input string an argument comes so we can report errors against those string positions . We publish a change event when - ever the text changes
3317	See notes on events in Assignment . We might need to hook changes here into a CliRequisition so they appear of the command line .
3318	Provide some documentation for a command .
3319	When the command changes we need to keep a bunch of stuff in sync
3320	Assignments have an order so we need to store them in an array . But we also need named access ...
3321	Collect the statuses from the Assignments . The hints returned are sorted by severity
3322	Extract the names and values of all the assignments and return as an object .
3323	Access the arguments as an array .
3324	Extract a canonical version of the input
3325	A class to handle the simplest UI implementation
3326	We need to see the output of the latest command entered
3327	To be called on window resize or any time we want to align the elements with the input box .
3328	Ensure that TAB isn t handled by the browser
3329	The main keyboard processing loop
3330	Actually parse the input and make sure we re all up to date
3331	Markup an array of Status values with spans
3332	Update the input element to reflect the changed argument
3333	Adds a row to the CLI output display
3334	A double click on an invocation line in the console executes the command
3335	Process a single iteration of a loop
3336	regexp must not have capturing parentheses regexps are ordered - > the first match is used
3337	This function is called by keyBinding .
3338	Private get readable fields fom model
3339	Call the DropZone constructor using the View s scrolling element only after the grid has been rendered .
3340	On Node enter see if it is valid for us to drop the field on that type of column .
3341	Process the drop event if we have previously ascertained that a drop is OK .
3342	Creates a stylesheet from a text blob of rules . These rules will be wrapped in a STYLE tag and appended to the HEAD of the document .
3343	Removes a style or link tag by id
3344	Dynamically swaps an existing stylesheet reference for a new one
3345	Gets all css rules for the document
3346	Creates a rule .
3347	recursive function to clone an object . If a non object parameter is passed in that parameter is returned and no recursion occurs .
3348	Fired by the root node .
3349	Sorter function for sorting records in index order
3350	Defines the layout which extends this view . Layouts are defined in modules located in the html5 subdirectory of the entry kind directory .
3351	Create multipart parser to parse given request
3352	Sort arguments so that app . cli . process executes commands in the order specified .
3353	Creates and returns the tree panel to be used as this field s picker .
3354	repaints the tree view
3355	Aligns the picker to the input element
3356	Handles a keypress event on the picker element
3357	Changes the selection to a given record and closes the picker
3358	Runs when the picker is expanded . Selects the appropriate tree node based on the value of the input element and focuses the picker so that keyboard navigation will work .
3359	Sets the specified value into the field
3360	for now we will only support string and arrays
3361	Set the sorting direction for this sorter .
3362	Toggles the sorting direction for this sorter .
3363	Update the sort function for this sorter .
3364	A GedcomX Recurring Date .
3365	Send file at path with the given options to the iopa context .
3366	This method will setup the storage engine . If the browser has support for it .
3367	This method will store the current contents in the the storage engine .
3368	This method will restore the contents from the storage engine back to the editor .
3369	Removes the currently stored draft .
3370	Internal unload handler will be called before the page is unloaded
3371	wrapper for await compatible code
3372	Saves the state of all active filters
3373	Changes the data store bound to this view and refreshes it .
3374	Update the styles for the header row based on the active filters
3375	Method factory that generates a record validator for the filters active at the time of invokation .
3376	Adds a filter to the collection and observes it for state change .
3377	Adds filters to the collection .
3378	Returns an Array of the currently active filters .
3379	Removes filter related query parameters from the provided object .
3380	Start editing the specified grid at the specified position .
3381	An approximate GedcomX Date . Inherits from Simple .
3382	Uploads a form using a hidden iframe .
3383	Detects whether the form is intended to be used for an upload .
3384	Template method for overriding url
3385	Template method for overriding params
3386	Determines whether this object has a request outstanding .
3387	Aborts an active request .
3388	Aborts all active requests
3389	Fires when the state of the xhr changes
3390	To be called when the request has come back from the server
3391	Checks if the response status was successful
3392	Creates the exception object
3393	Injects a vbscript tag containing a getIEByteArray method for reading binary data from an xhr response in IE8 and below .
3394	Return the number of days in a month taking leapyear into account .
3395	Initialize values for calculations .
3396	Calculate the current timestamp if needed otherwise return the last cached one .
3397	Increase or reset sequence counter and recalculate prefix when needed .
3398	Assert a configurable value .
3399	15 . 2 . 4 . 4
3400	15 . 2 . 4 . 7 PromiseOfStartLoadPartwayThrough absorbed into calling functions 15 . 2 . 4 . 7 . 1
3401	15 . 2 . 5 . 2 . 3
3402	15 . 2 . 5 . 2 . 5
3403	15 . 2 . 5 . 4
3404	custom declarative linking function
3405	Attach events to view
3406	Group by the header the user has clicked on .
3407	Prunes the grouped header from the header container
3408	Gets the related menu item for a dataIndex
3409	This function executes the process handlers and inserts the contents force_rich overrides plain text mode set by user important for pasting with execCommand
3410	This function grabs the contents from the clipboard by adding a hidden div and placing the caret inside it and after the browser paste is done it grabs that contents and processes that
3411	Various post process items .
3412	Inserts the specified contents at the caret position .
3413	This method will open the old style paste dialogs . Some users might want the old behavior but still use the new cleanup engine .
3414	Local scope manager
3415	If in the list of ignored paths don t instrument just coffeeify . We do this here instead of in coffee - coverage as coffee - coverage works on the file system . Since we are getting piped the files we bypass coffee - coverage s filesystem code .
3416	Add the header checkbox to the header row
3417	Toggle the ui header between checked and unchecked state .
3418	Toggle between selecting all and deselecting all when clicking on a checkbox header .
3419	Retrieve a configuration to be used in a HeaderContainer . This should be used when injectCheckbox is set to false .
3420	Get the selected records from the specified list .
3421	Synchronizes the submit value with the current state of the toStore
3422	This method returns the configuration object for the Desktop object . A derived class can override this method call the base version to build the config and then modify the returned object before returning it .
3423	This method returns the configuration object for the Start Button . A derived class can override this method call the base version to build the config and then modify the returned object before returning it .
3424	This method returns the configuration object for the TaskBar . A derived class can override this method call the base version to build the config and then modify the returned object before returning it .
3425	changes before lastEditId will already be known to the client
3426	Iterates an array or an iterable value and invoke the given callback function for each item .
3427	Returns a new array with unique items
3428	Returns the first item in the array which elicits a true return value from the passed selection function .
3429	Removes the specified item from the array if it exists
3430	Merge multiple arrays into one with unique items .
3431	Merge multiple arrays into one with unique items that exist in all of the arrays .
3432	Perform a set difference A - B by subtracting all items in array B from array A .
3433	at least IE6 uses arguments . length for variadic signature
3434	Recursively flattens into 1 - d Array . Injects Arrays inline .
3435	Returns the minimum value in the Array .
3436	Calculates the sum of all items in the given array .
3437	Pushes new items onto the end of an Array .
3438	Returns the element given is XPath - like description .
3439	This method is called after an event has been played to prepare for the next event .
3440	This method is called when a keyframe is reached . This will fire the keyframe event . If the keyframe has been handled true is returned . Otherwise false is returned .
3441	Returns the noneditable parent or null if there is a editable before it or if it wasn t found
3442	Removes any caret container except the one we might be in
3443	Modifies the selection to include contentEditable false elements or insert caret containers
3444	Converts configured regexps to noneditable span items
3445	Create a root logger with the name given by name . The object returned from this function is a root logger . The design is that each service component or library will use a single root logger object that s initialised a single time .
3446	In order to ease the transition from using the debug module for logging to using this library we have a function that allows the root logger to expose an api similar to the debug module . The first returned function takes a name to use as the debug name and returns a function which accepts log messages . The log messages can use util . format formatting to produce desired output .
3447	private == > used by Fx
3448	Set the opacity of the element
3449	Sets up event handlers to add and remove a css class when the mouse is over this element
3450	Public {{{ 1
3451	on mousedown show editor
3452	Builds pdepend command
3453	File class Because of toString = this . name it can be used interchangeably as a string key and also as the object represented by that
3454	Removes the sprite and clears all listeners .
3455	Parser context object
3456	Join multiple Express plugins into one
3457	Setup member handlers
3458	Returns true if file or directory should be ignored
3459	The official source - map requires a define function that matches the CommonJS module specification . Since it only uses a subset of that functionality we cheat here and only provide that minimum subset .
3460	Get nested namespace by property .
3461	Initialize the API
3462	Create a handler function for a direct call .
3463	Run any callbacks related to the transaction .
3464	React to the ajax request being completed
3465	Get transaction from XHR options
3466	Configure a direct request
3467	Gets the Ajax call info for a transaction
3468	Add a new transaction to the queue
3469	Combine any buffered requests and send them off
3470	Creates an lookup table map object for the specified option or the default value
3471	Adds custom non HTML elements to the schema
3472	Returns the content editable state of a node
3473	Execute callback when script is loaded
3474	Handler that takes a native event and sends it out to a dispatcher like onKeyDown
3475	Override unlink command
3476	Override list commands to fix WebKit bug
3477	Override justify commands
3478	Removes the caret container for the specified node or all on the current document
3479	Checks if the parent caret container node isn t empty if that is the case it will remove the bogus state on all children that isn t empty
3480	Renders empty block on IE
3481	Moves the caret to a suitable position within the root for example in the first non pure whitespace text node or before an image
3482	Creates a new block element by cloning the current one or creating a new one if the name is specified This function will also copy any text formatting from the parent block and add it to the new one
3483	Wraps any text nodes or inline elements in the specified forced root block name
3484	Walks the parent block to the right and look for BR elements
3485	Inserts a BR element if the forced_root_block option is set to false or empty string
3486	Generates unique ids . If the element already has an id it is unchanged
3487	Execute a callback function in a particular scope . If no function is passed the call is ignored .
3488	Copies a set of named properties fom the source object to the destination object .
3489	Attempts to destroy and then remove a set of named properties of the passed object .
3490	Invokes a method on each item in an Array .
3491	Zips N sets together .
3492	Reports a given indent violation and properly pluralizes the message
3493	Responsible for fixing the indentation issue fix
3494	Get node indent
3495	Checks node is the first in its own start line . By default it looks by start line .
3496	Checks node is the first argument of its parent .
3497	Check indent for node
3498	Check indent for nodes list
3499	Check last node line indent this detects that block closed correctly
3500	Check first node line indent is correct
3501	Returns the VariableDeclarator based on the current node if not present then return null
3502	Check indent for function block content
3503	Checks if the given node starts and ends on the same line
3504	Check to see if the first element inside an array is an object and on the same line as the node If the node is not an array then it will return false .
3505	Check indent for array block content or object block content
3506	Check if the node or node body is a BlockStatement or not
3507	Check indentation for blocks
3508	Check indentation for variable declarations
3509	Returns the expected indentation for the case statement
3510	Create and save a factory found by type .
3511	Define a factory .
3512	Create multiple records at once .
3513	Test if size has a unit otherwise appends the passed unit string or the default for this Element .
3514	Retrieves the document height
3515	Doubly linked list implementation making use of dummy nodes for the sake of simplicity .
3516	Create a new instance of LoaderCache
3517	Register an iterator function of the given type . Types typically represent a kind of flow - control like sync promise stream async etc .
3518	Register a loader . The first argument is the name of the loader to register .
3519	Compose the actual load function from a loader stack .
3520	Makes the given group active
3521	Returns the value that would be included in a standard form submit for this field .
3522	Compile ES6 source code with Traceur .
3523	In normal mode it returns the value with protected regexp characters . In regular expression mode it returns the raw value except if the regexp is invalid .
3524	Finds all strings that matches the searched value in each grid cells .
3525	Selects the previous row containing a match .
3526	Creates a constructor that has nothing extra in its scope chain .
3527	Creates new Layer .
3528	make some assumptions about the returning call
3529	Read and parse the config for a locally installed analyser
3530	build the container system - the system definition cdef - contianer definition block out - ouput stream cb - complete callback
3531	start the container on the target target - target to deploy to system - the target system defintinion cdef - the contianer definition container - the container as defined in the system topology out - ouput stream cb - complete callback
3532	Validate the arguments that are given to catchAndMatch . Return an Error when one of these arguments is not of an expected type .
3533	Invoke a function expecting an error to be thrown . If an error is not thrown call cb with an error and return a rejected Promise .
3534	Helper function to run shell commands .
3535	Registers a listener of the specified message . Whenever the specified message is sent the specified callBack function will be invoked passing the parameters specified in the send invocation
3536	ImageDimensions constructor .
3537	What the client responds with when the connect message is sent . Called by the connect haqndler in the exports . events handler
3538	Cache implementation for CouchDB
3539	get a simple copy of an object
3540	Wiretree Wiretree constructor Creates new tree
3541	Return a Rollup configuration for a pkg with env and target .
3542	Normally this was intended Internal only . Field is required if have required constraint without false value
3543	create new XMLHttpRequest
3544	Composes one or more functions into a new one .
3545	Curries a function and only executes the function when the arity reaches the .
3546	Replaces found placeholder values and appends any left over args to resulting array .
3547	Returns the class name of an object from it s class string .
3548	For each for array like objects .
3549	Check if value is of one of the passed in types .
3550	Checks to see if passed in argument is empty .
3551	Implodes a Set Array or SjlSet passed in .
3552	Searches an object for namespace string .
3553	Copy the enumerable properties of p to o and return o . If o and p have a property by the same name o s property is overwritten .
3554	Extends first object passed in with all other object passed in after . First param could be a boolean indicating whether or not to perform a deep extend . Last param could also be a boolean indicating whether to use legacy setters if they are available on the receiving object .
3555	Normalized the parameters required for defineSubClassPure and defineSubClass to operate .
3556	Adds extend and extendWith static methods to the passed in constructor for having easy extensibility via said methods ; I . e . passed in constructor will now be extendable via added methods .
3557	Same as defineSubClass with out side - effect of extend method and toString method .
3558	Same as sjl . throwErrorIfEmptyOrNotType but named shorter .
3559	Returns value if it is set and of type else returns defaultValue
3560	Sets an enumerable property on obj as not configurable and not writable .
3561	Sets namespace string on obj and makes namespace configurable (
3562	Used when composing a function that needs to operate on the first character found and needs to return the original string with the modified character within it .
3563	Extracts a boolean from the beginning or ending of an array depending on startOrEndBln .
3564	A strict version of sjl . extend ; I . e . only merges on properties existing on obj1 .
3565	Sets any value on config by key or namespace key .
3566	Returns the current value that pointer is pointing to .
3567	Iterates through all elements in iterator .
3568	Deletes a value from Set .
3569	Deletes an entry in the SjlMap .
3570	Sets a key - value pair in this instance .
3571	Add all the object s instance s own property key - value pairs to this instance .
3572	Shallow to json method .
3573	Returns the next iterator result for item at own pointer s current position .
3574	Returns a key - value es6 compliant iterator .
3575	Allows you to loop through priority items in priority list . Same function signature as Array . prorotype . forEach .
3576	Returns an iterator for values in this priority list .
3577	Sets an item onto Map at passed in priority . If no priority is passed in value is set at internally incremented priority .
3578	Ensures priority returned is a number or increments it s internal priority counter and returns it .
3579	Used internally to get value either raw or wrapped as specified by the wrapItems flag .
3580	Uses EC2 . describeSecurity groups to check the existence of the security group . If the response comes back successful doesSecurityGroupExist is resolved with True . If an operational error occurs in the underlying ec2 client call the error is inspected to see if it is an InvalidGroup . NotFound error . This means the security group is not present so doesSecurityGroupExist is resolved with false . All other errors are propagated along via a rejection .
3581	Uses AutoScaling . describeAutoScalingGroups to check existence of the auto scaling group . If the list of AutoScalingGroups returned is empty doesAutoScalingGroupExist is resolved as False if it s not empty it is resolved as True .
3582	Builds the correct set of params depending on whether or not the identifier is an instanceId or a name .
3583	Takes an identifier either an InstanceId or Name Tag and returns whether the instance exists in any state . The second instanceState allows specification of the state the machine is in . Will also return false if an error is thrown when given an invalid or non existent instance ID .
3584	The client constructor
3585	Generic handler for API client method
3586	Create a websocket client and set it off at the server
3587	Convert XML to JSON
3588	Uses AutoScaling . describeLaunchConfigurations to check existence of the launch configuration . If the list of LaunchConfigurations returned is empty doesLaunchConfigurationExist is resolved as False if it s not empty it is resolved as True .
3589	Initialize our queue .
3590	filter all none . kju files out of the array .
3591	Read file and process it .
3592	ramdom hash generator
3593	detect if is a wiretree plugin or a module
3594	get argument function names
3595	async plugin declaration
3596	The ARController is the main object for doing AR marker detection with JSARToolKit .
3597	ARCameraParam is used for loading AR camera parameters for use with ARController . Use by passing in an URL and a callback function .
3598	Our package member list to markdown - fragments readable stream . It reads our srcs directory and outputs a markdown - fragments friendly list of all the packages and members in said directory .
3599	Uses the ELB . describeLoadBalancers method to check the existence of a load balancer . If the list of LoadBalancerDescriptions returned by the request is empty doesLoadBalancerExist is resolved as False if it s not empty it is resolved as True .
3600	Lint a set of files
3601	Build the unit test suite for running tests in the browser
3602	Pauses execution until RETURN is pressed
3603	errors is a hash of name - > errors
3604	Draws a line
3605	Draws a point
3606	Gets a random number using a seed
3607	Iterates over the body a certain amount of times
3608	Emits the output of the decoder as named events .
3609	Free memory of mappedVars on the Python server side .
3610	Draws text either at a point or inside a rectangle
3611	Should we consider using the operating system s synchronization or exclusivity utilities instead of our own locks?
3612	Given a list of cultsRegistry checks whether any component would respond to the given event and if so executes the event handler defined in the component .
3613	Creates a block with the specified definition
3614	Get a buffer for an entry .
3615	Get a database buffer .
3616	Get the buffer for a key .
3617	Get an expiry buffer .
3618	Get a string key buffer .
3619	Get a list buffer .
3620	Get a zset buffer .
3621	Get a buffer from an array of strings .
3622	Get a buffer from an object .
3623	Get a string buffer .
3624	Concatenate a buffer with length encoding .
3625	Get a buffer with the length encoding .
3626	Modifies the DRAWTEXT font
3627	Instantiate an instance of the GoogleCheckout MerchantCalculations prototype
3628	Get the value of a configuration parameter that might use templates
3629	Get the value of a json object at a given path
3630	Work around IE 9 bug where it always returns false when not attached to another DOM node . Check if the bug exists in this browser
3631	Return a workaround function to fix the bug . Note that this will slow down matching but only if the bug exists in this browser .
3632	calls a method called allow in our options that will perform any access checking
3633	calls a method called clean in our options that will perform any cleaning on the object being acted upon . If we re doing a create then it gets cleaned before going into the DB If we re doing an update then it gets cleaned before the response is sent
3634	Runs a query to get our result then cleans the result calls an optional found method if it exists in the options
3635	refresh the current route
3636	starts routing urls
3637	Refreshes the route
3638	Get value by key
3639	Get value by key the value must be exist otherwise the process will exit .
3640	Get string value by key the value must be exist otherwise the process will exit .
3641	Get integer value by key the value must be exist otherwise the process will exit .
3642	Get object value by key the value must be exist otherwise the process will exit .
3643	Get file path by key the value must be exist otherwise the process will exit .
3644	Get directory path by key the value must be exist otherwise the process will exit .
3645	Get URL by key the value must be exist otherwise the process will exit .
3646	Represents a variable
3647	returns the XHR function or equivalent for use with ajax memoizes the function for faster repeated use
3648	duck typing to determine if something is or isn t a future
3649	Given an Error object return a formatted Array based on Chrome s stack string .
3650	Given an Error object return a formatted Array based on IE s stack string .
3651	Opera 7 . x - 9 . 2x only!
3652	Get source code from given URL if in the same domain .
3653	the synchronous part of emitting
3654	the prototype of objects used to write tests and contain the results of tests
3655	removes an item from an array
3656	type - either count or assert
3657	returns the line column and filename mapped from a source map appropriately handles cases where some information is missing
3658	gets the actual lines of the call if multiLineSearch is true it finds
3659	takes an exception and returns a future exception that has a stacktrace with sourcemapped tracelines
3660	Component will receive date locale and localeUtils props
3661	Creates a transform stream that will delay passing values through according to the given interval .
3662	Remove a path from an object
3663	retrieve a single entity by uuid or unique name
3664	query with attributes - returns an array of entities limit is optional
3665	searches for a record with criteria creates it with criteria if not found
3666	utility methods clones hash and adds type for usergrid context
3667	Class is optional . if omitted a Class object will be created and returned . type is optional . if omitted constructor name is used as the usergrid type .
3668	Saves a sprite to a file
3669	Wraps an iterable factory inside a class that allows it to be repeatedly iterated without state same as how Arrays work
3670	Forward events of the specified type from source emitter to target .
3671	Parses a Block Statement .
3672	Parses statements until a block end is found .
3673	Parses a semicolon or applies automatic semicolon insertion .
3674	Reads a pixel at a certain location
3675	Function returns string in ?q1 = v1&q2 = v2 format from passed config key - value pairs
3676	initializes the API
3677	Pipe the output of this writer to a file .
3678	monkey patch findPath to handle fake directories better
3679	run js as if it were a module at path
3680	t - and th - when they are the second letter become dh -
3681	Get a configuration based on options .
3682	Decorate one configuration object with values from another .
3683	Set a non - enumerable property value .
3684	The shared instance copier based on provided callback .
3685	Copies data from one object to another .
3686	Copies data from one set to another .
3687	Copies data from one map to another .
3688	Copies data from one item to another . Designed to a be a generic copy interface where possible .
3689	Creates a deep clone of the provided source .
3690	Internal method for comparing the equivalence of objects or object - like items .
3691	Compares the equality of two items .
3692	Generic interface for looping over an iterable and executing a provided method for each item .
3693	Internal method determining which type to utilize for a provided value when using extend .
3694	Internal method determining whether or not the provided arguments can be smashed or extended together based on types .
3695	Internal extend call . Performance abstraction to bypass all the argument shenanigans as we know we will only be extending two items at a time internally .
3696	Extends the properties on the provided arguments into the original item . Any properties on the tail arguments will not overwrite any properties on the first argument unless they are null or undefined and any non primitive references will be shallow .
3697	Internal smash call . Performance abstraction to bypass all the argument shenanigans as we know we will only be smashing two items at a time internally .
3698	Smashes the properties on the provided arguments into the first argument . Any properties on the tail arguments will overwrite any existing properties on the first argument .
3699	Represents a file
3700	Wraps error into a SystemError
3701	Get the time difference between two timestrings .
3702	Get the time difference between two datestrings .
3703	Get total elapsed seconds minutes and hours between two epoch times .
3704	Inputs a line from the user
3705	Draws a piechart
3706	Yield all items in every iterable returned by the mapper when applied to every item in the source iterable
3707	Skip items in an iterable until the passed predicate fails then yioeld all items in the iterable
3708	Skip items in an iterable until the passed predicate matches then yioeld all items in the iterable
3709	Play items from a set skipping ones that do not change
3710	Play the given Iterable ordered by a given key or itself
3711	Play the given Iterable and then it N more times
3712	Play the given Iterable in a random order
3713	Decompress compressed string data
3714	Draws a custom shape
3715	Dynamic menu activation
3716	Fix sidebar position
3717	Synchronize sidebar scroll
3718	Iterate over declarations executing a callback function for each matched dependency .
3719	Creates a valid path to the unit in the namespace .
3720	Copy unit declaration and its dependencies .
3721	Iterate over settings . unit executing a pickUnit function for each item .
3722	Create unit in namespace .
3723	The generated JS files corresponding to the Dart files are also dependent on this codebase . As an example an earlier version fixed up some source map refs . Another version introduced some bootstrap code etc . We make the SHA we use dependendant on our codebase by salting it with the SHA for our sourcecode .
3724	Checks if AST node is BEM . decl or BEM . DOM . decl call .
3725	Constructs a bem entity description from first argument of BEM . DOM . decl
3726	Returns a value of property by name from given object literal AST node
3727	Returns a key value of a property expression
3728	Adds bem entity description to a doclet . This method is called after doclet has been constructed but before it sent to template . Its required because automatically inserted
3729	Returns true if passed AST node is a static methods declaration of BEM . DOM . decl
3730	Returns true if BEM . DOM . decl AST node has static methods declaration .
3731	Extracts arguments and defined target for the require function
3732	Finds the next one of the items
3733	Finds the last one of the items
3734	Finds the next one of the items outside of the given positions
3735	Finds the last one of the items outside of the given positions
3736	Finds the next index of the item outside of the given positions
3737	Finds the last index of the item outside of the given positions
3738	Splits data into an array by the separator except if in the exclude regions
3739	Finds if the index is inside one of the items Items should be in the same format as returned from util . findPositions
3740	Finds if data ends with str
3741	Pads a string
3742	Shallowly clones the object into the source object
3743	append the request path .
3744	Inputs and executes the next line
3745	Initializes the file system
3746	Saves the filesystem
3747	av s main function is a getter - setter - combo it expects a default value and a validation function the validation function should return the validated value or throw an exception it shouldn t return false for non - validating values
3748	our getter - setter - combo including validation
3749	Declares one or more arrays
3750	Generates description for a bem entity by merging doclets descriptions from all levels
3751	Generates docs for a method .
3752	Generates doc for method or event parameter
3753	Generates docs for a property .
3754	Executes the body if the condition is true
3755	Constructs the log function .
3756	Copy properties from an object to another object where properties with function values will be invoked in the context of the provider and properties with non - function values are just copied .
3757	This finder strategy tries to identify inclusions in source code by using regexes . This approach may be hackish but works well in most situations . The only limitations are connected to regexes being mostly stateless . For example it may not be a great idea to parse HTML with regexes .
3758	Synchronous file writer .
3759	Write an object to the file synchronously .
3760	Write a buffer synchronously to the file and flush to disk .
3761	Write the crc checksum to the file .
3762	Represents a tree that can be executed
3763	Executes the abstract syntax tree
3764	Initialize MarkLogicStore with the given options .
3765	Make a string with jspm vendors .
3766	Portable Object . create that is not a shim and drops the verbose property descriptor syntax .
3767	Copy properties from source to target .
3768	Yield the original sequence unmodified
3769	Reduce the items in an iterable down to a single instance of initial type yielding each step of the reduction
3770	Take only the first item in an iterable sequence
3771	Skip items in an iterable until the passed predicate matches then yield all items in the iterable
3772	Yields the passed iterables at the end of the current iterable
3773	Play unique items from a set
3774	Play the given AsyncIterable ordered by a given key or itself
3775	Play the given AsyncIterable in reverse order
3776	Play the given AsyncIterable and then it N more times
3777	Play the given AsyncIterable and then play back that AsyncIterable in reverse
3778	Returns a promise of the count of items returned by evaluating the provided iterable
3779	Returns a promise of true if evaluating the iterable gives any items false otherwise
3780	Closes a file in a pointer
3781	A block parser
3782	Shifts data from the stack
3783	Compile a value and append to generated code
3784	Draws a sprite
3785	string . max Maximum length of the string
3786	HELP FUNCTIONS format string from array source
3787	Check new model before registration
3788	check for required fields recursively
3789	check for extra fields and match recursively
3790	Show information of registered models . All registered models are stored in . registeredModels If params . displayEverything is true module will show additional info
3791	Check if entity pass modelName s validation
3792	Get one random example for type
3793	Sleeps for a certain amount of seconds
3794	Reads file and compiles it with compiler . Data is cached
3795	error handler for failure promises
3796	find the Person by name
3797	add a dog
3798	Draws a filled or stroked circle
3799	Instantiate an instance of the GoogleCheckout Polling prototype
3800	Draws a filled or stroked triangle
3801	this function will be called within processWraps and processInserts
3802	Service constructor .
3803	This class finds and resolves all the dependencies within a set of source files . In order to do so finders and resolvers strategies are used and the results are collected .
3804	Draws a filled or stroked rounded rectangle
3805	allocate a new cons
3806	insert value into a list after node .
3807	gets all model files and adds them to swagger it will then add those to swagger as the proper resource
3808	Represents a set of arguments to a command call
3809	Opens a file in a pointer
3810	A resolving strategy that supports CommonJS style requires as seen in Node . js and Browserify .
3811	Iterates over the commands body until the condition is true
3812	Read a file and pipe it to this decoder .
3813	Initialize is fired first thing when the hook is loaded
3814	Curry the policy chains into the appropriate controller functions
3815	Build normalized hook - internal representation of policy mapping by performing a non - destructive parse of sails . config . policies
3816	Bind a route directly to a policy
3817	Represents a function call
3818	Loads a sprite from a file
3819	Add a new route entry that s been parsed .
3820	Handles binding the fields of an object into a URL .
3821	Handles binding a regular boring route = > controller combination on the provided app .
3822	Handles binding a particular folder to be served statically by Express .
3823	Binds the loaded routes against the passed app .
3824	Returns an array of objects encapsulating the routes to be configured .
3825	Generate the various routes represented by a wildcard controller entry .
3826	Reads a config file from disk skipping empty lines and commented ones .
3827	Given an action and an optional set of parameters returns the URL to be used .
3828	. text and . html is after for gzip
3829	Parses BASIC code and returns an abstract syntax tree
3830	Represents a command call
3831	This class implements a basic approach to path resolution that aims at being as flexible as possible .
3832	convert internal data object to Array
3833	add a snapshot to data
3834	convert data and emit value event
3835	add child to data buffer and emit value
3836	add children to data buffer and emit value
3837	function for opening a modal inject this method to the root model
3838	Sets the draw color of the canvas
3839	this . silent
3840	Outputs or formats and outputs a string
3841	Copies the properties of an object to the exports
3842	Get the character at a given index
3843	Replace all instances in a string that match a given string or regular expression
3844	Represents some form of expression to find a value
3845	Remove first line if empty and remove comment lines
3846	Radar specific functions .
3847	Populate an array of all the labels by interpolating the string .
3848	may be used later
3849	Sets the color of text
3850	publishing is async
3851	An object that provides modification and reading of the current execution context as well as the ability to execute an AST in the context
3852	Sets the array item at a certain index including multiple dimensions
3853	Gets the array item at a certain index including multiple dimensions
3854	Creates an array with the specified lengths of dimensions
3855	Gather text content and parse values
3856	Process a new header creating a new section
3857	Throw a syntax error in the current position
3858	Append the current line to the last block with the given type or create a new one
3859	Shortcut to - dom . on
3860	Removing element from DOM
3861	Adding element back to DOM
3862	Insert element to the end of parent childs
3863	Insert element to the before of specific child by index
3864	Changing position in nodeList
3865	Adding text in to node
3866	Setting Attribute in to node
3867	Getting Attribute in to node
3868	Removing Attribute from node
3869	Setting css style in to node
3870	Getting css style from node
3871	Removing css style from node
3872	Adding class in to node
3873	checking if className exists in node
3874	Remove class from node
3875	Setting Getting value to input element
3876	Adding DOM Event in to Element
3877	Remove Dom Element from Dom
3878	executes when element attached to Dom
3879	Match the maybe calling just if there is a value and nothing if not and return the following value
3880	Return a maybe with the current value if any mapped to a new Maybe
3881	Return the current maybe if it has a value that matches the predicate else return an empty
3882	Return either the current maybe or the maybe provided if the current maybe is empty
3883	Checks the current URL to see if it has changed and if it has calls loadUrl normalizing across the hidden iframe .
3884	Attempt to load the current URL fragment .
