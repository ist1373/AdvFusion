0	Get admin role
1	Get user .
2	Remove menu item .
3	Translate categories .
4	Get the highest order item .
5	Creates a unique name .
6	Handle a breadcrumb .
7	Update table .
8	Update the table .
9	Get renamed columns diffs .
10	Returns the renamed diff .
11	Get renamed columns .
12	Get renamed indexes .
13	Get thumbnail image .
14	Get thumbnail .
15	Check if user is editable .
16	Get a list of dimers .
17	Prepare menu translations .
18	Save the model to the database .
19	Check if a user is read .
20	Create a new breadcrumb .
21	Store a new breadcrumb .
22	Edit a table .
23	Update data type .
24	Delete a data type .
25	Add a relationship .
26	Get the relationship field .
27	Handle the password .
28	Store a table .
29	Edit database .
30	Update the database .
31	Show the database .
32	Delete a table .
33	Returns the URL for the current sort order .
34	Display a menu .
35	Returns true if the model is translatable .
36	Get translations .
37	Returns translated attribute value .
38	Scope a query to the query .
39	Save translations .
40	Describe a table .
41	Handle a breadcrumb .
42	Add storage link to storage .
43	Register console commands .
44	Removes the data from the database .
45	Delete the breadcrumbs .
46	Orders the data type .
47	Get relation relations .
48	Resolve relations .
49	Add soft delete .
50	Validate the given data .
51	Get fields with validation rules
52	Verify an ID token .
53	Retrieve certificates from a URL .
54	Retrieves the signed signon certificates .
55	Set phpsec constants .
56	Fetch access token with given code .
57	Fetch the access token with the given credentials .
58	Fetch access token with refresh token
59	Authorize the authorization .
60	Check if the access token is expired .
61	Verify the id token .
62	Add a new scope
63	Execute a request .
64	Set auth config
65	Create OAuth2 service
66	Returns the allowed retries for the given code .
67	Get next chunk .
68	Parse HTTP response .
69	Get data type
70	Combines a list of variables .
71	Get the value of the given value .
72	Execute a request .
73	Decode HTTP response .
74	Map array types to array
75	Convert the model to a simple object
76	Get a simple value from an array .
77	Returns the mapped name for the given key .
78	Check if an array is associative array
79	Creates a new auth handler .
80	Find the config file .
81	Define core constants .
82	Sets the state of the statement .
83	Called when the database is dead .
84	Get all queries .
85	Register global globals
86	Get all options
87	Add an option
88	Delete an option
89	Add a placeholder .
90	Set default namespace .
91	Set default controller
92	Set default method
93	Discover routes .
94	Set default placeholder .
95	Get route routes .
96	Get route options
97	Add routes to collection .
98	Add a redirect .
99	Check if a route is a redirect .
100	Get redirect code .
101	Add a route to the collection .
102	Add options to route collection
103	Registers the given environment .
104	Reverse route .
105	Determine the current subdomain .
106	Reset routes .
107	Handle error handler .
108	Shutdown the error handler .
109	Determine the view for the given exception .
110	Render an exception .
111	Collect variables from a Throwable .
112	Determine the status code for the given exception .
113	Describe the number of bytes .
114	Highlight a file .
115	Checks if the given value is an alpha space .
116	Check if a string matches a regular expression
117	Validate email address
118	Validate email addresses .
119	Check if a URL is valid
120	Check if date is valid
121	Creates a new error message .
122	Check if the card number is valid
123	Checks if the given number is valid .
124	Move file to destination .
125	Move the Escaper to the file .
126	Move the kint to kint .
127	Start session .
128	Configure session length .
129	Initialize session variables .
130	Set session data
131	Get user data
132	Push data into the collection .
133	Removes a key from the session
134	Set flash data
135	Get flash data
136	Mark as flash data
137	Get flash keys
138	Set temporary data
139	Get temporary data from session
140	Mark a session as temporary data
141	Removes a temporary variable .
142	Get temporary keys
143	Set session cookie
144	Check if the given key is valid .
145	Guess the type of the given extension .
146	Guess the extension from a type .
147	Redirect to a given URI .
148	Redirects a route .
149	Redirect to the previous page .
150	Set a message with the given key .
151	Run the given URI .
152	Initialize the request .
153	Enable a filter .
154	Get arguments by key .
155	Format object .
156	Send logs to the response .
157	Detect the locale .
158	Set the locale .
159	Checks if the request is secure .
160	Get the response body
161	Fetch a GET request
162	Get post data
163	Get POST GET request
164	Get a GET request
165	Get the cookie value .
166	Get all files .
167	Get a single file .
168	Detect URI .
169	Detect the path .
170	Gets the negotiation type .
171	Parse request URI .
172	Build the DSN .
173	Returns a Formatter for the given mime type .
174	Checks if the request is valid .
175	Handle the honeypot .
176	Resize image
177	Crop the image
178	Get image version
179	Get resource path
180	Add a foreign key .
181	Drop a foreign key .
182	Set the unsigned field attribute .
183	Set the default field default value .
184	Process primary keys .
185	Processes foreign keys .
186	Set the locale .
187	Get the translation of a given line .
188	Format a message .
189	Loads a file .
190	Add base URI .
191	Add an image source
192	Add media source
193	Add manifest to manifest .
194	Add an object s source
195	Add a plugin type .
196	Add a sandbox .
197	Add a script to the script .
198	Adds a style source to the report .
199	Add an option .
200	Generate nonce .
201	Build headers .
202	Get title .
203	Collects all log messages .
204	Prepare params
205	Determine the class for the given library .
206	Get result as array
207	Get custom result object
208	Get result array
209	Get result object
210	Get a single row
211	Get a custom row object for a given class
212	Get a single row from the result array .
213	Get a row object from the result object
214	Set row data
215	Get first row
216	Get last row
217	Get next row
218	Get an unbuffered row .
219	Determine if the acceptable header matches the acceptable parameters .
220	Match parameters .
221	Run command .
222	Show the header
223	Display links .
224	Generate links .
225	Store the current page .
226	Set path .
227	Get page count
228	Get current page
229	Returns true if the group has more items .
230	Get last page .
231	Get page URI .
232	Get the next page URI .
233	Get the previous page URI .
234	Get the per page per page
235	Get the details of a pagination group .
236	Ensure the group has been created .
237	Returns the number of years .
238	Returns the number of months in the current time .
239	Returns the number of weeks .
240	Returns the difference between the current time .
241	Returns the hours of the current time .
242	Get the amount of minutes .
243	Returns the difference between the current time .
244	Humanize time .
245	Load database connection .
246	Loads a Forge instance
247	Check if a property has changed .
248	Maps a property to a property .
249	Mutate date .
250	Cast value to json
251	Checks if the given alias is discovered .
252	Find all records .
253	Get the first row .
254	Save data to database
255	Convert a class to an array
256	Insert data into database
257	Inserts a set of records .
258	Get the builder .
259	Check if the data is protected
260	Remove validation rules .
261	Get validation rules .
262	Count all results .
263	Set authentication .
264	Set form parameters
265	Parse request options .
266	Get the HTTP method .
267	Send a request to the server .
268	Apply request headers .
269	Set response headers .
270	Send an HTTP request .
271	Updates the migration .
272	Find migrations .
273	Check the migrations .
274	Get history history
275	Get migration name .
276	Get version number
277	Add a new migration .
278	Removes a migration .
279	Ensure the table exists .
280	Check if value is valid
281	Set request data
282	Set a rule .
283	Get rule group group .
284	Set rule group .
285	Load rule sets .
286	Set error .
287	Get error message .
288	Split a string into an array of rules .
289	Resets the validation rules .
290	Convert array to XML
291	Clean file names .
292	Set URI .
293	Get user info
294	Get query string
295	Returns the URI of the URI .
296	Set a new segment .
297	Creates a URI string .
298	Set the authority .
299	Set the scheme .
300	Set the port .
301	Set path .
302	Refresh path
303	Set the query string .
304	Decode a string .
305	Add a query .
306	Keep query parameters
307	Filters a path .
308	Extract parts from parts .
309	Resolve relative URI .
310	Merge two paths .
311	Remove dot segments .
312	Appends a value to the list .
313	Prepend value
314	Get the previous URI .
315	Get the next URI .
316	Get the first page .
317	Get the last page .
318	Get current URI .
319	Starts a timer .
320	Stop timer .
321	Get elapsed time .
322	Get all timers .
323	Add a table alias .
324	Execute a SQL query
325	Execute a simple query
326	Create a new table .
327	Prepare a SQL query .
328	Escape identifiers .
329	Call a function .
330	List tables .
331	Check if a table exists .
332	Check if a field exists .
333	Get field data for a table
334	Get index data .
335	Get foreign key data .
336	Get the value of an environment variable .
337	Register all registered properties .
338	Get item from cache
339	Write data to file
340	Get file info
341	Get file info
342	Initialize the kernel .
343	Run the application .
344	Handle request .
345	Start benchmark .
346	Get response object
347	Force secure access .
348	Displays the page cache .
349	Saves the response .
350	Generate cache name .
351	Display performance metrics .
352	Try to find the route .
353	Start the controller .
354	Creates a controller .
355	Run controller .
356	Gather the output of the response .
357	Store the previous URL .
358	Sets the request method .
359	Get the handler for the given configuration .
360	Create alias from table .
361	Adds a WHERE clause to the query .
362	Add a WHERE clause
363	Generate a LIKE statement .
364	Start the query .
365	End group end
366	Set the offset of the query .
367	Set the value of a key .
368	Compile the query .
369	Compile the final query .
370	Count all rows
371	Count all results
372	Insert a batch into a table
373	Compile the query .
374	Compile the update statement .
375	Compile a delete statement .
376	Decrement a value
377	Compile the query .
378	Compile WHERE clause .
379	Compile the query .
380	Compile the ORDER BY clause .
381	Get the operator for a string .
382	Renders the metrics .
383	Collect the data from the given collectors .
384	Collect variables .
385	Round to the given number .
386	Copies the image to the specified path .
387	Get image properties
388	Release lock .
389	Attach honeypot .
390	Prepare template .
391	Fetch an object
392	Make a list of columns .
393	Clear all rows
394	Set the results from the database .
395	Set data from array
396	Sets the path to the directory .
397	Get error string .
398	Store the uploaded file .
399	Checks if the file is a valid size .
400	Check if a file is an image
401	Check if a file is in a file
402	Determine if the file is maxdims
403	Fetch global variables .
404	Populate global globals .
405	Run migration .
406	Create data from a table .
407	Run the table .
408	Modify column .
409	Create table .
410	Copy the data to the database .
411	Format fields .
412	Format keys .
413	Drop all indexes .
414	Set CSRF cookie
415	Get CSRF hash
416	Returns a new instance of the current timezone .
417	Parse a datetime string .
418	Creates a new Time instance .
419	Creates a new Carbon instance .
420	Creates a new Date instance .
421	Create a new instance from a date .
422	Create a new instance from a timezone .
423	Create a new Time instance .
424	Create a Time object from a datetime .
425	Creates a Time object from a timestamp .
426	Creates a Time instance from a date time .
427	Returns a DateTime instance .
428	Get the age of the cache .
429	Determine if the current time is daylight savings .
430	Sets the month .
431	Sets the day .
432	Sets the minute value .
433	Sets the seconds value .
434	Set the value .
435	Set timestamp .
436	Checks if the given time is equal .
437	Returns true if the current time is equal to the given timezone .
438	Converts a time object to a UTC object .
439	Gets JS Matcher for JS .
440	Get css matcher .
441	Converts a string to UTF - 8 .
442	Convert string to UTF - 8 .
443	Get file by name .
444	Create an uploaded file object .
445	Get the value of a dot notation .
446	Sets the binary file .
447	Sets the file path .
448	Get the content length .
449	Set the content type .
450	Get download file name
451	Get content disposition .
452	Build headers .
453	Send the request body .
454	Send body by file path
455	Removes the given method .
456	Run command .
457	Create command list .
458	Get a database connection .
459	Get aeder instance .
460	Determine if a namespace is a namespace .
461	Add a closure .
462	Run all tests .
463	Get the report
464	Set query string
465	Get the query string .
466	Get the start time .
467	Returns the duration .
468	Set error code
469	Swaps the prefix with the given prefix .
470	Compile the bindings .
471	Load helpers .
472	Register the classmap .
473	Add a namespace .
474	Get namespace by prefix
475	Require a file .
476	Sanitize filename
477	Discover composer namespaces .
478	Modify a date
479	Returns an excerpt of text .
480	Sanitize value .
481	Resolve nested variables .
482	Sets the database name .
483	Execute a query
484	Prepare a SQL query .
485	Returns the error message .
486	Execute a SQL query
487	Get all field names for a table
488	Get the cache instance .
489	Get CLI Request
490	Create a CURL request
491	Creates a honeypot instance .
492	Get a language instance
493	Get logger instance .
494	Returns a negotiator instance .
495	Returns a parser instance .
496	Create an incoming request .
497	Get response instance .
498	Create a redirect response .
499	Returns a router instance .
500	Get a security instance .
501	Get a URI instance .
502	Creates a validation instance .
503	Display commands .
504	Pad title .
505	Get CSV from Result
506	Get XML from Result
507	Call the command .
508	Run a seeder .
509	Check if value is in list
510	Returns true if the string is less than the given string .
511	Check if the given fields are required .
512	Checks if the given fields are required .
513	Validate request segments .
514	Set the directory .
515	Set request params
516	Set default controller
517	Get the size of the file .
518	Move this file to another file .
519	Get destination file .
520	Collect all queries .
521	Format timeline data .
522	Locates a file .
523	Get classname from file
524	Search the given path .
525	Ensure path is valid
526	Find the class name from a path .
527	Locates a file .
528	Render a string .
529	Returns the excerpt of a string .
530	Set data .
531	Set variable value
532	Render a section .
533	Render a view .
534	Log performance data .
535	Create a new image with the given path .
536	Creates an image resource .
537	Resize the image .
538	Rotate image .
539	Flip the image .
540	Draws a text .
541	Reorient the image
542	Get EXIF data .
543	Resize the image .
544	Run the PHP code .
545	Render a template
546	Parses a variable into a single array
547	Extract noparse blocks from a template
548	Insert noparse blocks into template
549	Parse the conditionals .
550	Sets the delimiterers .
551	Replaces a single template with the given pattern .
552	Determine if the given key should be escaped .
553	Add a plugin .
554	Create an image
555	Get a header value .
556	Checks if a header exists .
557	Set a header .
558	Remove a header .
559	Set the protocol version .
560	Get header name .
561	Configure session ID .
562	Get the reason .
563	Set the link header .
564	Set content type .
565	Get the response body
566	Get the response body .
567	Format the body .
568	Set cache headers .
569	Sends the request to the client .
570	Send headers to the response .
571	Set a cookie
572	Checks if a cookie exists .
573	Get a cookie by name .
574	Delete a cookie
575	Send cookies .
576	Download a file .
577	Get a class
578	Creates a new instance of the class .
579	Get a shared instance
580	Get autoloader instance
581	Get file locator .
582	Reset all mocks .
583	Inject a mock
584	Discover services .
585	Get input from stdin
586	Prompt user input .
587	Validate a field
588	Print a string to stdout
589	Print an error .
590	Wait for a given number of seconds .
591	Colorize a text string .
592	Wrap a string .
593	Get option value
594	Compiles a table into a table .
595	Respond to the response .
596	Creates a response .
597	Respond to the response .
598	Respond to the response .
599	Asserts that the user is authorized .
600	Fail server error .
601	Handles the security verification .
602	Initialize all events .
603	Get list of listeners
604	Remove a listener
605	Is referrer?
606	Set the platform .
607	Set browser .
608	Set robots .
609	Set the mobile device .
610	Process attribute type .
611	Initialize the config .
612	Show QR code
613	Initializes the qrcode style .
614	Format html content .
615	Heartbeat heartbeat .
616	Handle a check sync
617	Log message .
618	Get uuid
619	Show qr code
620	Wait for login
621	Get login .
622	Save server .
623	Initialize the current session
624	After initialization .
625	Send status notification
626	Download a message .
627	Download a resource from a message .
628	Auto download a message
629	Check sync status
630	Sync synchronously .
631	Generate sync key
632	Log a message .
633	Log message .
634	Send a word .
635	Fetch all contacts
636	Store a list of members
637	Fetch group members
638	Store members .
639	Report an exception .
640	Throw fatal exception .
641	Validate key .
642	Splits a JWT string into an array .
643	Parse header .
644	Parses the claims .
645	Parses the given data .
646	Determine the language .
647	Get a list of matches from accepted languages .
648	Cache routes per locale
649	Build route cache file .
650	Register the bindings .
651	Register routes .
652	Sets the current locale .
653	Get URL from route name .
654	Returns the supported languages .
655	Gets the locale order order .
656	Get current locale direction
657	Get current locale .
658	Returns the locale for the current locale .
659	Check if given locale is supported
660	Get route name from given path .
661	Find translated route by path
662	Finds a route by url .
663	Creates a URL from a URI .
664	Normalize attributes .
665	Load the cached routes .
666	Returns the route path for the given locale .
667	Encode a message set .
668	Encode a produce partition .
669	Encode a Kafka topic .
670	Produce a topic pair .
671	Produce a partition pair .
672	Decode a message set .
673	Decode a message .
674	Creates a socket client .
675	Selects a stream of sockets .
676	Unpacks a byte array .
677	Check length of bytes
678	Checks if the system is little endian .
679	Get API version .
680	Get the API text for the API .
681	Register a before route .
682	Add a route to the route .
683	Mounts a route with the given path .
684	Get request method .
685	Get server base path
686	Add a route .
687	Returns the route for the given request .
688	Get current route .
689	Checks if the pattern matches the pattern .
690	Runs a filter
691	Get event .
692	Clear all events .
693	Runs the given filters .
694	Executes a callback .
695	Call function .
696	Invokes a method .
697	Initialize the request .
698	Returns the body of the request .
699	Get request method
700	Get proxy IP address .
701	Parse query string
702	Set status code
703	Set a header .
704	Sets the response headers .
705	Send the response .
706	Initialize the router .
707	Handle an error .
708	Handle exception .
709	Register a framework method .
710	Register a framework method .
711	Get the value of the variable .
712	Clears all variables .
713	Start the router .
714	Stop the response .
715	Register a route .
716	Halt code
717	Error handler .
718	Redirect to the given URL .
719	Output a JSON response .
720	Renders a jsonp response
721	Set the ETag header .
722	Set the last modified time .
723	Register a class .
724	Load a class .
725	Get an instance of the class .
726	Creates a new instance of a class
727	Load a class .
728	Add a directory
729	Fetch a file
730	Get template file .
731	Determines if the graph is cyclic .
732	Returns the average height of the graph .
733	Collapse an array of keys
734	Fetch all files in a given array .
735	Traverses the tree .
736	Get root nodes
737	Get the list of installed packages installed in the repository .
738	Advances the progress bar .
739	Determines if the stream is an ASCII terminal .
740	Process the missing parameters .
741	Processes a token .
742	Initialize phpcs file .
743	Add a fixable message .
744	Merges a custom array into an array .
745	Get the last pointer of the stack .
746	Checks if a variable is an assignment .
747	Check if a token is a namespace .
748	Checks if the given stack pointer is sanitized .
749	Check if the given stack pointer is casted .
750	Get array of array access keys .
751	Get array access key .
752	Checks if the stack is a comparison .
753	Checks if the stack is in an array .
754	Get the type of the use type .
755	Extract variables from a string .
756	Checks if a function call is a function call .
757	Get the number of parameters of a function call .
758	Get the value of a function call .
759	Find an array of open brackets .
760	Determine the name of the namespace .
761	Get namespace name .
762	Check if a class is a class constant .
763	Check if a class property is a class property .
764	Check if the scope is valid .
765	Prepare regular expression .
766	Transform a string .
767	Transform a string into a complex string .
768	Get the groups .
769	Process an arbitrary token .
770	Processes a parameter declaration .
771	Retrieve the mispellings from the stack .
772	Called when a page is reached
773	Set config data
774	Get tab width .
775	Process a global variable statement .
776	Add an error .
777	Setup groups .
778	Determine if a token is targetted .
779	Checks if the token matches the given token .
780	Process a variable variable .
781	Checks if a variable is prefixed .
782	Validate prefixes .
783	Record the prefix of a glob .
784	Setup groups .
785	Validate alignment items .
786	Checks if a variable is a local data stream .
787	Process a variable in a string .
788	Merges the whitelist whitelist .
789	Check if token is ignored .
790	Get indentation size .
791	Get indentation string .
792	Add an array alignment error .
793	Fix alignment error .
794	Checks if the given token is valid .
795	Compare two strings .
796	Checks the text .
797	Checks if the given token is targetted .
798	Checks if the token matches the given token .
799	Get namespace name .
800	Registers the tokens .
801	Executes the given queue .
802	Reserve a message .
803	Close the connection .
804	Validate namespace .
805	Push a job .
806	Listen for events
807	Execute the process .
808	Handle a message .
809	Run the queue .
810	Reserve the queue .
811	Move reserved_atrs to reserved_time .
812	Before push event
813	Delete the queue .
814	Run the worker .
815	Handle a message .
816	Initialize the process .
817	Checks if the process is continue .
818	Reserve the queue .
819	Delete a job
820	Parses the current node .
821	Parse getElements
822	Parses an XML tree .
823	Read the text from the stream .
824	Parses the current element .
825	Parse attributes .
826	Returns the deserializer for the given element name .
827	Push a context to the stack .
828	Removes the context from the stack .
829	Creates a new writer .
830	Parses a XML string .
831	Parses the given input .
832	Write a value to the document .
833	Map a value to a value object .
834	Write a value object to the map .
835	Parse a Clark notation string .
836	Deserialize an XML object .
837	Deserialize a XML document .
838	Start an XML element .
839	Write a new element
840	Write an array of attributes .
841	Writes an attribute .
842	Get model relations .
843	Validate job name .
844	Validate command .
845	Create a shell job .
846	Creates a new scope and retrieves the scope of the scope .
847	Finish the progress .
848	Get current span .
849	Convert a TraceContext to a Span .
850	Start recording .
851	Set the name of the trace .
852	An annotated value .
853	Set remote endpoint
854	Generate new token
855	Get the value from storage .
856	Get the last key pair .
857	Enforces the storage limit .
858	Creates a sanitizer .
859	Set the attributes of the tag .
860	Get attribute value .
861	Process default entity .
862	Process the default menu item .
863	Returns the type name for a given type .
864	Get the form options for the given property .
865	Initialize the entity .
866	Handles autocomplete action .
867	List all entities .
868	Edit entity .
869	Displays an entity .
870	Create new entity .
871	Deletes the entity .
872	Search for entities .
873	Handles batch action .
874	Update entity property .
875	Find all entities .
876	Creates a list query builder .
877	Find entities by entity class .
878	Create search query builder .
879	Creates a form builder .
880	Get form options
881	Create entity form .
882	Creates a delete form .
883	Redirect to Backend homepage .
884	Finds the controller for the given entity .
885	Normalize menu config .
886	Get entity configuration .
887	Check if action is enabled .
888	Get action configuration .
889	Translate a message to the translator .
890	Creates a PagerPager instance .
891	Process the configuration .
892	Initialize the request .
893	Find the current item .
894	Get the attributes normalizer .
895	Process entity properties .
896	Get default actions .
897	Handle errors .
898	Find entities by entity .
899	Process config files .
900	Normalize entity config .
901	Get unique entity name .
902	Normalize view config .
903	Merges the form config .
904	Creates a query builder .
905	Checks if the given field is Doctrine association .
906	Process field config .
907	Get excluded field names .
908	Filter fields .
909	Run a command .
910	Deletes an ordinal row .
911	Determine if the given statement is present .
912	Check if the given statement is valid .
913	Reads the length of a MySQL message .
914	Build a progress bar .
915	Log a BulkException .
916	Returns an array of types .
917	Get index configuration .
918	Get all registered providers .
919	Returns a list of registered providers .
920	Get provider by index .
921	Sets sorting .
922	Build the index mapping .
923	Build the index template mapping .
924	Build type mapping .
925	Fixes properties .
926	Log a query .
927	Transform an object into an Elasticsearch document .
928	Returns the total number of hits .
929	Get elasticsearch results .
930	Delete template indexes .
931	Get the index .
932	Get persister .
933	Populate index .
934	Refresh index .
935	Transform an object into a document .
936	Transform nested objects into a single document .
937	Normalize value
938	Transform object to document .
939	Get entity query builder
940	Get index template .
941	Resets all indexes .
942	Reset an index .
943	Reset index type .
944	Sets the alias for the given index .
945	Loads the indexer .
946	Loads the type persistence integration .
947	Loads the elasticsearch transformer .
948	Loads the object persistence .
949	Loads a type provider .
950	Loads a listener .
951	Get Doctrine events for the given type .
952	Loads the typefinder .
953	Loads the index manager .
954	Loads the index template manager .
955	Loads the driver .
956	Loads the serializer .
957	Create the default manager alias .
958	Get dynamic template node .
959	Returns a tree node .
960	Get the id node .
961	Get the source node .
962	Get routing node .
963	Get the parent node .
964	Gets the configuration node .
965	Adds the indexes section .
966	Add index templates .
967	Transform Elasticsearch objects into Doctrine objects .
968	Check if an object is indexable .
969	Builds a callback for the given type .
970	Build an expression callback .
971	Get the initialised callback .
972	Get expression variable name
973	Set root name .
974	Switches an alias .
975	Build an alias request .
976	Clean up an existing index .
977	Close index .
978	Get the alias for a given alias .
979	Log a query .
980	Post persistence event .
981	Called when the object is updated .
982	Called when the object is removed .
983	Persist scheduled objects .
984	Schedule the schedule for the given object .
985	Check if object is indexable .
986	Get repository by name
987	Transform an object into a Document object .
988	Returns the repository for the given type .
989	Create a new Hashids .
990	Register the factory factory .
991	Verify that the hash is valid .
992	Creates a Guzzle client .
993	Add a cookie
994	Add cookie headers .
995	Clear expired cookies .
996	Returns the hash of a cookie .
997	Add a header .
998	Parse HTTP headers .
999	Handle the request .
1000	Sets the options .
1001	Get client nonce
1002	Returns the SHA1 hash .
1003	Get HA2 header
1004	Returns the HTTP header .
1005	Get the response .
1006	Get the qop option .
1007	Returns the hash of the given value .
1008	Parse authentication info .
1009	Parses a string value pair .
1010	Parse the HTTP authentication header .
1011	Set the algorithm .
1012	Set HTTP method .
1013	Unquote a string
1014	Add new parameters
1015	Convert headers to Buzz headers
1016	Converts a list of headers into a PSR headers .
1017	Send a request to the queue .
1018	Send a request to the queue .
1019	Execute the request .
1020	Initializes a multi - level multi - request .
1021	Clean up the queue .
1022	Checks if the request matches the given request .
1023	Checks if the cache is expired .
1024	Checks if the cookie matches the given domain .
1025	Checks if the path matches the given path .
1026	Set the cookie header .
1027	Release a curl .
1028	Prepare the request .
1029	Sets the options from the request .
1030	Send a request .
1031	Record a request .
1032	Create image .
1033	Add a cover file
1034	Add a tag to the list
1035	Create PDF .
1036	Ensure that input is a URL or file .
1037	Creates a Guzzle client .
1038	Create the middleware stack .
1039	Creates a request .
1040	Sends a request to the client .
1041	Generate request options .
1042	Send a request to the client .
1043	Throws an exception if the response failed .
1044	Adds a post parameter to the request .
1045	Add metadata headers .
1046	Adds the location header to the response .
1047	Validate properties .
1048	Get property value
1049	Set property value
1050	Sets a property .
1051	Add a property .
1052	Check if the table is valid
1053	Create a GetTableResult
1054	Compute signature .
1055	Get authorization header .
1056	Computes canonicalized headers .
1057	Computes canonicalized resource for a table .
1058	Computes canonicalized resource .
1059	Converts this object to an XML string .
1060	Sets the signed identifier .
1061	Add a signed identifier .
1062	Remove a signed identifier .
1063	Set all operations .
1064	Adds a batch operation .
1065	Adds an entity to the batch .
1066	Adds a delete entity .
1067	Creates a copy of a copy file .
1068	Create a message from a list of PeekMessages .
1069	Create a QueueMessage from the PeekMessages .
1070	Create a new QueueMessage from a response .
1071	Initializes the settings .
1072	Returns the storage account for the given proxy URI .
1073	Get the dev storage account .
1074	Get service endpoint endpoint .
1075	Create storage service settings .
1076	Creates a connection from a connection string .
1077	Creates a StorageService instance from a token string .
1078	Encode MIME multipart multipart .
1079	Decodes a MIME multipart request .
1080	Create a list of shares .
1081	Set the shares .
1082	Retry the request .
1083	Creates a new filter .
1084	Applies the OR operator to the filter .
1085	Applies the comparison to the comparison .
1086	Applies the comparison to the comparison .
1087	Applies a GE filter to a range .
1088	Applies the comparison operator to the right .
1089	Applies the less than to the left .
1090	Applies the LEFT operator to the left .
1091	Sets the location .
1092	Unserializes a serialized JSON string .
1093	Create a PeekMessagesResult instance .
1094	Creates a GetEntityResult from the given body .
1095	Creates an array of operation contexts .
1096	Get operation context .
1097	Create MIME request body .
1098	Constructs a delete entity context .
1099	Constructor for PutOrMergeEntityContext
1100	Constructs an insert entity context .
1101	Get entity path .
1102	Perform an update operation .
1103	Adds a query parameter to the query parameter .
1104	Encode an array of values .
1105	Query tables .
1106	Create a new table .
1107	Create a new table .
1108	Get a table .
1109	Get a single table .
1110	Delete a table .
1111	Delete a table .
1112	Performs a query on a table .
1113	Insert or merge an entity .
1114	Insert or merge an entity .
1115	Insert or replace an entity .
1116	Insert an entity into the table .
1117	Update an entity .
1118	Update an entity .
1119	Merges an entity into a table .
1120	Merges an entity into a table .
1121	Delete an entity .
1122	Delete an entity .
1123	Gets an entity .
1124	Get an entity from a table .
1125	Execute a batch operation .
1126	Batch batch operation .
1127	Creates a list of directories and returns the result .
1128	Sets the directories .
1129	Sets the files .
1130	Create a new Directory .
1131	Create an update entity .
1132	Sets the query parameters .
1133	Set the status codes .
1134	Remove a header .
1135	Add a new history entry .
1136	Append new entry to file
1137	Creates a query result .
1138	Creates a new QueueResult instance .
1139	Sets the queue messages .
1140	Initializes the connection strings .
1141	Check if hostname is valid
1142	Check if a URI is valid
1143	Checks if a method exists .
1144	Validate a date string .
1145	Check if a key exists .
1146	Returns a string representation of the range .
1147	List all queues .
1148	Clear messages from a queue .
1149	Create a new message .
1150	Create a new message .
1151	Create a queue .
1152	Create a queue .
1153	Delete a message .
1154	Delete a message .
1155	Delete a queue .
1156	Deletes a queue .
1157	Get the metadata for a queue .
1158	Get the metadata for a queue .
1159	List messages in a queue .
1160	Lists messages from a queue .
1161	Peek messages from a queue .
1162	Peek messages from queue .
1163	Generates an account shared access token .
1164	Validate a signed service .
1165	Validate the signed resource type .
1166	Validate signed permissions .
1167	Validate a signed protocol .
1168	Validate string with given array
1169	Generate canonical resource .
1170	Parse error message .
1171	Get request ID
1172	Get date .
1173	Set the middlewares .
1174	Validate middleware .
1175	Parse a connection string .
1176	Create an exception .
1177	Extracts the key .
1178	Extracts a string from a string .
1179	Skip operator .
1180	Create a shareACL instance .
1181	Process the request .
1182	Add a setting to a setting
1183	Registers a setting .
1184	Checks if the given settings matches the provided settings .
1185	Sets the next row key .
1186	Sets the next partition key .
1187	Process the given type .
1188	Validate an EdmValue .
1189	Serialize value .
1190	Serialize query value .
1191	Unserialize query value .
1192	Create a ServiceProperties object .
1193	Get the Corses array
1194	Initialize environment variables .
1195	Parse table entries .
1196	Serialize an entity .
1197	Parse the response body .
1198	Sets the start date .
1199	Validate permission .
1200	Creates a path to a directory .
1201	Get share properties .
1202	Sets share properties .
1203	List shares .
1204	Creates a share .
1205	Create a share .
1206	Delete a share .
1207	Get share properties .
1208	Set share properties .
1209	Set share properties .
1210	Get share metadata .
1211	Set share metadata .
1212	Set share metadata .
1213	Set share ACL .
1214	Sets a share ACL .
1215	Gets the list of directories and files and files .
1216	List all directories and files in a share .
1217	Create a directory .
1218	Create a new directory .
1219	Delete a directory .
1220	Get directory properties .
1221	Get the properties of a directory .
1222	Get the metadata of a directory .
1223	Sets the metadata of a directory .
1224	Create a file .
1225	Creates a file .
1226	Delete a file .
1227	Deletes a file .
1228	Get a file .
1229	Gets a file .
1230	Get file properties .
1231	Get file properties .
1232	Set file properties .
1233	Sets file properties .
1234	Get file metadata .
1235	Set file metadata .
1236	Set file metadata .
1237	Sets a file range .
1238	Sets a file range .
1239	Creates a file from a content .
1240	Creates a file from the given content .
1241	Clears a file range .
1242	Clear file range .
1243	List file range .
1244	List file range .
1245	Abort a copy .
1246	Abort a copy of a copy .
1247	Sets the operation type .
1248	Adds a parameter to the batch operation .
1249	Constructs a list of responses from the given body .
1250	Compares the content of the response .
1251	Create a batch result .
1252	Gets the attributes of an object .
1253	Serialize an array .
1254	Creates an instance from a parsed response .
1255	Get service properties .
1256	Set service properties .
1257	Sets service properties .
1258	Get service stats .
1259	Create a list of QueuesResult objects .
1260	Sets all queues .
1261	Get secondary endpoint from primary endpoint
1262	Serialize an array
1263	Convert an object to a boolean
1264	Converts a date into a DateTime object .
1265	Converts a date to an iso date .
1266	Convert a value to a DateTime object
1267	Converts a number to a decimal number .
1268	Checks if the given content is zero .
1269	Append a string to a string .
1270	Checks if the request is sent to the server .
1271	Extracts the location from headers .
1272	Calculates the MD5 hash of a content .
1273	Validate resource type .
1274	Create a new update message .
1275	Create a new connection .
1276	Creates a retry decision for the given type .
1277	Determine if the given status code is valid .
1278	Adds an optional parameter to the query parameters .
1279	Adds an optional header .
1280	Creates a new GetFileResult instance .
1281	Serialize headers .
1282	Serialize request exception .
1283	Create a new QueueResultResult instance
1284	Creates an INSERT entity .
1285	Creates a QueryResultResult .
1286	Format headers .
1287	Create a File .
1288	Apply the middlewares .
1289	Get the list of available includes .
1290	Call include method .
1291	Resolve scope included in scope
1292	Set error message
1293	Set data .
1294	Set the serializer .
1295	Get the output .
1296	Set the resource .
1297	Set the cursor .
1298	Set the paginator .
1299	Add relations to the query .
1300	Remove relations from the collection .
1301	Add a set of fields .
1302	Sets the serializer .
1303	Transform the resource .
1304	Prepare relations .
1305	Loads the relationships .
1306	Render paginator .
1307	Convert a cursor to an array .
1308	Merges the included data into an array .
1309	Bind a transformable to a resource key .
1310	Resolve the given data .
1311	Resolve transformable item
1312	Resolve transformer .
1313	Render exception .
1314	Create an error message .
1315	Convert resource to array
1316	Parse options .
1317	Parse fieldsets .
1318	Parses the given fields .
1319	Resolve child include
1320	Register an error message .
1321	Resolve error message
1322	Clean the parameters .
1323	Binds a transformer to the transformer .
1324	Resolve data from data .
1325	Resolve transformer .
1326	Register Laravel bindings .
1327	Register lumen bindings .
1328	Decorate a response factory .
1329	Register serializer bindings .
1330	Register the error bindings .
1331	Register factory bindings .
1332	Register transformer bindings .
1333	Register transformer bindings .
1334	Boot the application .
1335	Set collection .
1336	Format an error .
1337	Get the relations .
1338	Get the default relations .
1339	Extract the relations from the given array .
1340	Extract child relations .
1341	Wrap nested relations .
1342	Apply query constraints .
1343	Resolve query constraint .
1344	Resolve a relation .
1345	Get transformers .
1346	Get resource .
1347	Include resource .
1348	Include resource from model .
1349	Checks if the resource is cached .
1350	Make a resource instance .
1351	Make a resource from a resource .
1352	Instantiate a resource .
1353	Checks if the given data is a collection .
1354	Resolve resource key .
1355	Registers a decorator .
1356	Respond to the response .
1357	Normalize data .
1358	Normalizes a relation .
1359	Transforms data to the response .
1360	Converts an exception to an exception .
1361	Convert the default exception .
1362	Render a response .
1363	Creates a transform builder .
1364	Configure the terminal .
1365	Add items to the list
1366	Sets the selected items .
1367	Select first item
1368	Add a custom control mapping .
1369	Remove custom control control mapping .
1370	Displays the terminal .
1371	Returns the selected item .
1372	Executes the selected item .
1373	Redraw the terminal .
1374	Draws the menu .
1375	Draws a menu item .
1376	Closes the menu .
1377	Set the default selection .
1378	Checks if the given index is selected .
1379	Sets the selected item index .
1380	Returns the selected item .
1381	Wrap a string into a string .
1382	Generate the colour set code
1383	Calculate content width
1384	Gets the right hand padding .
1385	Set border width
1386	Display the menu .
1387	Calculates the coordinates of the menu .
1388	Prints empty row
1389	Write text to terminal .
1390	Sets the text .
1391	Calculate the art length
1392	Display menu .
1393	Get a connection .
1394	Make a connection .
1395	Get the Elasticsearch connection configuration .
1396	Compress the request body .
1397	Checks if the given key exists .
1398	Add arguments to the command .
1399	Set arguments .
1400	Set options .
1401	Add rules .
1402	Returns a string representation of the options .
1403	Returns an array of options
1404	Returns the JSON representation of the options .
1405	Returns an XML representation of the options .
1406	Get a specific option
1407	Get usage message
1408	Sets an alias mapping .
1409	Set the help map .
1410	Parse command line arguments
1411	Parse short option list
1412	Parse single option
1413	Add rules to rules mode
1414	Add rules to zend_options
1415	Get OAuth header .
1416	Returns the base URL for the given URI .
1417	Prepare HTTP method .
1418	Set the OAuth nonce
1419	Append OAuth parts to query parameters
1420	Get the query string
1421	Creates a client .
1422	Get the log destination location .
1423	Logs the service request .
1424	Check if the given entity is allowed .
1425	Prepare reflection .
1426	Returns the XML representation of this object .
1427	Copies a file to the public directory .
1428	Cast a property to a string .
1429	Reads the configuration from a file .
1430	Initializes the API entities .
1431	Populate json - only entities
1432	Initialize OAuth settings .
1433	Initialize request and compression format
1434	Initialize service base url
1435	Get entity by key
1436	Check if a string is valid
1437	Verify the export directory .
1438	Load webhooks class names .
1439	Checks if the given class name is valid .
1440	Get the options .
1441	Validate URN
1442	Add a function .
1443	Set the class .
1444	Set the object .
1445	Returns a list of all functions .
1446	Set persistence mode .
1447	Get SOAP server .
1448	Handles the request .
1449	Remove a fault exception
1450	Create a soap fault .
1451	Handle PHP errors .
1452	Get OAuth2 Access Token
1453	Returns the authorization code for the authorization code .
1454	Refresh OAuth2 Access Token
1455	Migrate an OAuth2 API .
1456	Parses the OAuth2 access token from the response .
1457	Check if the token is empty
1458	Generate authorization header .
1459	Constructs a refresh token header .
1460	Check result .
1461	Returns the error message for the given error code .
1462	Convert an object into an array
1463	Serialize a customer .
1464	Remove null properties
1465	Add a complex type
1466	Get the XML representation of the WSDL .
1467	Add bindings
1468	Add port type
1469	Add the types for the class
1470	Add binding operations
1471	Add port operations
1472	Checks if the given type is a local type .
1473	Add services .
1474	Get target namespace
1475	Get the namespace namespaces .
1476	Save the classes to a directory
1477	Loads an XML document into an XML document .
1478	Get XML document .
1479	Save PHP files .
1480	Convert an XML namespace to PHP
1481	Set the baseURL
1482	Gets the refresh token validation period .
1483	Gets the value of the access token .
1484	Get refresh token
1485	Get access token
1486	Update access token .
1487	Get the post body from an arbitrary entity
1488	Create a PHP object from an XML string
1489	Parse an array of response objects .
1490	Set an option
1491	Get the version of the CURL
1492	Handle an exception .
1493	Verify variable type .
1494	Generate the names of an object .
1495	Complete property .
1496	Unmarshal a XML string into a class .
1497	Get serializer
1498	Get the compressor .
1499	Get RequestLogger
1500	Adds a type to the composite type map .
1501	Get default strategy
1502	Returns the strategy for the given type .
1503	Add a complex type .
1504	Create reflection class
1505	Populate property comments
1506	Creates an instance of the given instance .
1507	Process property values .
1508	Create a new instance
1509	Checks if the given entity is a valid object .
1510	Process property value .
1511	Get entity from model .
1512	Update service context settings
1513	Setup the rest handler
1514	Sets the log location .
1515	Sets the minor version .
1516	Disable logging .
1517	Enable logging .
1518	Set client name
1519	Configure the service
1520	Configure OAuth2 login helper
1521	Update OAuth2 token
1522	Setup serializer .
1523	Update an entity
1524	Add an entity .
1525	Delete an entity
1526	Upload an image
1527	Send email
1528	Perform a query .
1529	Append pagination info .
1530	Find all entities
1531	Calls CDC method .
1532	Execute object serializer
1533	Get POST request .
1534	Get request parameters .
1535	Fix tax service payload
1536	Get file name for PDF
1537	Check if an entity is allowed
1538	Creates a new batch .
1539	Convert a date string to a timestamp
1540	Checks if the given timestamp is valid .
1541	Verifies that the given value is changed .
1542	Get company info
1543	Returns an array of QuickBooksOnlineAPI entities
1544	Get access token from array
1545	Get refresh token from array
1546	Get the redirect URL .
1547	Save the contents of a file
1548	Generate file name .
1549	Generate error message from OAuthException
1550	Parse the response body
1551	Check if the error body is in standard format
1552	Sets the response as a response .
1553	Parses the response to an intuit response .
1554	Set fault handler
1555	Set headers .
1556	Set the content type .
1557	Set intuit tid
1558	Get App Menu
1559	Reconnect the connection
1560	Sets the URI of the request .
1561	Set the custom type strategy
1562	Add a binding operation .
1563	Add a documentation document .
1564	Add types to the document
1565	Add a type .
1566	Dumps the XML to a file .
1567	Adds the schema to the schema .
1568	Creates a new OAuth object from the passed array .
1569	Check if OAuth is valid
1570	Get the base URL
1571	Use this API to use the XML configuration .
1572	Sets the JSON representation of the request .
1573	Disable logging .
1574	Set the log location
1575	Update OAuth2 Access Token
1576	Get class properties .
1577	Get the result .
1578	Set Uri
1579	Returns the URI of the request .
1580	Get request URI without parameters
1581	Set the complex type strategy
1582	Set a class .
1583	Add a function
1584	Dump the WSDL file .
1585	Update the service context .
1586	Sends a request to the server .
1587	Perform OAuth1 API call .
1588	Get OAuth1 Authorization header .
1589	Perform OAuth2 API call
1590	Get OAuth2 Authorization header .
1591	Log a request to the log .
1592	Log a request to the log .
1593	Parses a string into a DOM document .
1594	Reset the compressor and serializer .
1595	Get the destination URL for the request .
1596	Append the minor version to the request URI .
1597	Determine HTTP method .
1598	Parse a URL .
1599	Get the accept content type .
1600	Convert query string into array
1601	Verify that the payload is valid
1602	Encrypt Payload by token
1603	Retrieve an IntuitBatchBatchResponse
1604	Remove a batch item
1605	Convert an array of exceptions to a message and code
1606	Generate an exception if the fault fails .
1607	Get options
1608	Sets the request style .
1609	Set the encoding method .
1610	Set proxy port
1611	Sets the SSL certificate .
1612	Set stream context
1613	Sets the user agent .
1614	Do a request
1615	Initialize soap client object
1616	Add a SOAP input header .
1617	Get all functions
1618	Returns a list of all available types
1619	Get the type name for a singular type .
1620	Add an element to the XML schema .
1621	Prepare the XML .
1622	Add binding operations .
1623	Add port operations
1624	Create a reference element
1625	Create a complex element with complex type
1626	Create a simple simple element .
1627	Resolve a short namespace .
1628	Parse doc comments
1629	Check if array is associative array
1630	Get Webhooks Event
1631	Verifies that the token is valid .
1632	Checks if a key is in a complex list
1633	Get a helper method .
1634	Creates a new IPPReferenceType based on the given array .
1635	Get IPPid object
1636	Merge object values
1637	Get cURL headers
1638	Set SSL options
1639	Converts a header array into a list of headers
1640	Add a warning .
1641	Resolve from input .
1642	Set name attribute
1643	Scope by name .
1644	Boot the model .
1645	Add tags to model
1646	Remove tags from the model .
1647	Add a tag .
1648	Remove a tag .
1649	Checks if a tag has a given tag .
1650	Scope all tags with the given tags .
1651	Scope the query .
1652	Remove all tags from the query .
1653	Scope the query on the query .
1654	Rename tag .
1655	Get the popular tags .
1656	Get the name of the related pivot key .
1657	Get qualified foreign key name .
1658	Creates a new taggable .
1659	Build an array of tags .
1660	Get tag model keys .
1661	Get tag list .
1662	Get tag array
1663	Get all tags .
1664	Get all tags in the table .
1665	Rename tags .
1666	Get the qualified table name .
1667	Get the qualified table name .
1668	Save a compound parameter data
1669	Builds a URL to a URL .
1670	Get a single parameter payload
1671	Get the payload payload payload
1672	Add an index to the index .
1673	Get the debug response
1674	Get the endpoint endpoint .
1675	Send a hit .
1676	Get HTTP client options
1677	Get the prepared url .
1678	Check if required parameters are required
1679	Set the action action to the given parameter .
1680	Set a single parameter .
1681	Adds an item to the collection .
1682	Gets a single parameter .
1683	Returns the index of the given method arguments .
1684	Get the full parameter class name .
1685	Performs a POST request .
1686	Parse options .
1687	Returns a list of available items .
1688	Add a supported card .
1689	Sets the year parameter .
1690	Validate the card .
1691	Returns the number of digits with the given mask .
1692	Get the brand number .
1693	Get track by pattern
1694	Get the first name of the first name .
1695	Sets the billing name .
1696	Set the shipping name .
1697	Returns the birthday date .
1698	Sets the birth day .
1699	Initialize the request .
1700	Sets a parameter .
1701	Set the credit card
1702	Get the amount .
1703	Set the Money object
1704	Set currency .
1705	Get the numeric code for the currency .
1706	Returns the number of decimal places .
1707	Formats a currency .
1708	Replace all items .
1709	Validates the response .
1710	Convert a string to camelCase
1711	Validates the given number of digits .
1712	Get the short name of a gateway class .
1713	Get gateway class name .
1714	Get fixed query builder .
1715	Returns the parent metadata for the given property .
1716	Get a Pager instance .
1717	Get parent alias .
1718	Add a new resource
1719	Find a resource by ID
1720	Authenticate a user
1721	Set the ID of the application .
1722	Set credit card information
1723	Get Credit CardInfo
1724	Creates a new resource .
1725	Find an entity by ID
1726	Set signature .
1727	Send an error message
1728	Logs the user login hook .
1729	Check if a path is repeatable .
1730	Check if a path exists
1731	Reorder paths .
1732	Call function .
1733	Call static method .
1734	Find a customer by name
1735	Set the class application ID .
1736	Get BillAddress
1737	Set the shipment method ID
1738	Set payment method ID
1739	Generate field schema .
1740	Get the child node at the given path .
1741	Adds a child node at the given path .
1742	Returns all children of this node .
1743	Remove an attribute
1744	Converts a node to XML
1745	Returns the contents of this XML .
1746	Converts a node to array
1747	Save XML to a file .
1748	Saves the root object to a file .
1749	Cast a string to a string
1750	Decode UTF - 8 characters .
1751	Parse a DSN string .
1752	Extract request ID from XML
1753	Parse request ID .
1754	Checks if the given CIDR is valid .
1755	Creates a new user .
1756	Disable a user .
1757	Generate unique hash
1758	Checks if a QuickBooks ID exists .
1759	Initialize the database .
1760	Check if the database is initialized
1761	Returns a list of all available objects .
1762	List all actions .
1763	Escape a string
1764	Configure the QR code
1765	Configure Quickbooks
1766	Add a customer request
1767	Add customer response
1768	catchall errors
1769	Queue processing .
1770	Recursively enqueue a user .
1771	Dequeue a user .
1772	Queues a queue left to the user .
1773	Queue a report
1774	Queue a ticket .
1775	Log an error message .
1776	Retrieves an error from the driver .
1777	Resolve a ticket .
1778	Check if a ticket is authenticated
1779	Logout a user .
1780	Create a new user
1781	Initialize the driver .
1782	Check if the driver is initialized
1783	Log a message .
1784	Call a hook .
1785	Connect to OAuth
1786	Default defaults .
1787	Handle recurring events .
1788	Extracts the list of identifiers from the XML .
1789	Extract status code from XML
1790	Extract status message from XML
1791	Call Mapped function .
1792	Call the given hook .
1793	Handle an error .
1794	Enqueue an action
1795	Find item by name
1796	Check if the string starts with the given string
1797	Execute a SQL query
1798	Extract the contents of a tag .
1799	Extract tag attributes from a tag
1800	Encode a string .
1801	Decodes a string .
1802	Check if a user exists .
1803	Loads an OAuth client .
1804	Handle an OAuth request .
1805	Get widget menu
1806	Convert XML schema to SQL definition
1807	Transforms a query
1808	Set a value to an object
1809	Get a value from the object
1810	Set full name .
1811	Set a boolean value .
1812	Set date type
1813	Get date type
1814	Removes an item from the collection .
1815	Get the schema for the given request .
1816	Creates a QBook object
1817	Initialize database tables .
1818	Add a new resource .
1819	Get the name .
1820	Set the name of the first name .
1821	Returns the default values for the given config .
1822	Get the status of a user .
1823	Delete a resource
1824	Read a value from a string
1825	Loads a XML file .
1826	Parse the XML file
1827	Converts a request to a query .
1828	Error handler .
1829	Resolve a ticket .
1830	Write a config value
1831	Read a config value from the database
1832	Create a new user
1833	Get user username
1834	Attempt to authenticate a user
1835	Check if a ticket is authorized .
1836	Log an error message .
1837	Recursively requeue a queue
1838	Recursively dequeue a user
1839	Queue queue queue
1840	Queue queue processing
1841	Returns the number of rows in the queue .
1842	Check if a ticket is processed
1843	Log a message .
1844	Execute a SQL query
1845	Get all fields of a table
1846	Select records from a table
1847	Update an object
1848	Enqueue a user .
1849	Run a recurring queue .
1850	Returns the size of the queue .
1851	Get address
1852	Authenticate the user .
1853	Find a single component by its realm ID
1854	Delete a resource .
1855	Send CURL request
1856	Sign on the server
1857	Generate a transaction ID
1858	Refund a credit card
1859	Initialize the queue .
1860	Factory method for creating a new adapter
1861	Default defaults .
1862	Set headers
1863	Show the index
1864	Creates a new request factory
1865	Handles the HTTP request .
1866	Recursively walk the data
1867	Perform a charge .
1868	Get a charge
1869	Get a Payment
1870	Refunds a transaction
1871	Store a credit card
1872	Create a new credit card from a token
1873	Get a credit card
1874	Get a list of cards
1875	Delete a card
1876	Handle errors .
1877	Perform an HTTP request .
1878	Map to QuickBooks ID
1879	Map to an application ID
1880	Add a request to the API call
1881	Filters a list of actions .
1882	Check if required version is required
1883	Creates a list of listDeletedQueryRequest
1884	List deleted query response
1885	Handles a transaction request .
1886	Creates a transaction response .
1887	Creates a new salesReceipt request
1888	Add a job type
1889	Build a filter
1890	Flush all caches in a group .
1891	Flush all tags in the cache .
1892	Finds the given name .
1893	Run the command .
1894	Checks if the given extension key exists .
1895	Checks if the given extension file exists .
1896	Loads the extension for the given extension key .
1897	Loads the tables for the given extension key .
1898	Checks if the given options are valid .
1899	Execute scheduled tasks .
1900	Execute a single task .
1901	Migrate the given statements .
1902	Lock the backend .
1903	Unlock the backend .
1904	Create admin command .
1905	Returns a list of available upgrades .
1906	Generate package states .
1907	Fix folder structure .
1908	Executes the extension setup command .
1909	Executes an action with the given action name .
1910	Creates a new instance of the plugin .
1911	Create a new instance of typo3 command .
1912	Creates a new instance of the PHP script .
1913	Executes a command .
1914	Handle an exception .
1915	Create an upgrade wizard .
1916	Wrap a string to a string .
1917	Execute a request .
1918	Make absolute url .
1919	Check extension constraints .
1920	List all wizards .
1921	Run upgrade wizard .
1922	Executes all upgrades .
1923	Executes a subprocess command .
1924	Check extension compatibility
1925	Setup the extension .
1926	Get the structure .
1927	Get extension structure .
1928	Creates the structure of the extension structure .
1929	Generate XML for a class .
1930	Add attributes to the XML element
1931	Add an XML document .
1932	Resolve command method name .
1933	Map request arguments to controller arguments .
1934	Call command method .
1935	Creates a default logger .
1936	Get short description .
1937	Parse the definitions .
1938	Returns the synopsis .
1939	Removes a step by its identifier .
1940	Invokes all steps .
1941	Invokes the given step .
1942	Setup extension .
1943	Setup the active extension .
1944	Remove inactive packages .
1945	List available extensions .
1946	Flush database cache tables .
1947	Handle errors .
1948	Register the installer script .
1949	Select a single choice .
1950	Ask a question .
1951	Ask confirmation .
1952	Ask hidden response
1953	Ask and validate a question
1954	Ask hidden response
1955	Describes the application .
1956	Writes a log record .
1957	Returns the number of performed updates .
1958	Adds a list of updates to the current schema .
1959	Add errors .
1960	Remove a configuration from the system .
1961	Show the current configuration .
1962	Show the active configuration .
1963	Show local configuration .
1964	Set the value of a file .
1965	Called when installing a script .
1966	Adds a flash message .
1967	Copy a file to a target path
1968	Generate XSD schema .
1969	Initializes the package manager .
1970	Override the original implementation
1971	Registers an extension .
1972	Set a local configuration value .
1973	Convert value to target type
1974	Get the type of a file
1975	Checks if the given type is convertable
1976	Check if a command is available .
1977	Configures the command definition .
1978	Executes the command .
1979	Ensure required environment variables are required .
1980	Initializes the compatibility layer .
1981	Runs the command .
1982	Render exception .
1983	Outputs an exception .
1984	Output the trace .
1985	Returns the full filename for the given file name .
1986	Displays an error message .
1987	Import MySQL database .
1988	Execute a subprocess .
1989	Render the schema result .
1990	Render the imported static data .
1991	Update schema .
1992	Builds the sequence for the given run level .
1993	Builds a sequence with the given identifier .
1994	Build the basic runtime configuration .
1995	Flush all caches .
1996	Flush all caches .
1997	List available cache groups .
1998	Hydrate the dictionary .
1999	Trace the dictionary .
2000	Returns the number of files in the given path .
2001	Convert data to JSON
2002	Returns the description of the transaction .
2003	Get the token
2004	Check if the token is valid .
2005	Set start time
2006	Sets the end time .
2007	Get all available issues
2008	Run the scan .
2009	Normalizes a path .
2010	Exit with error
2011	Divide a comma separated list of tokens .
2012	Trims whitespace .
2013	Call function usage checker .
2014	Add a new record .
2015	Checks if the current user can be enabled .
2016	Get windows terminal size
2017	Attempts to find the autoload for an identifier .
2018	Locates a file by name .
2019	Locates a function by name .
2020	Opens a file .
2021	Get file stat
2022	Compile a constant .
2023	Compile a class constant .
2024	Compute the reflections .
2025	Checks if the given line number contains the given line number .
2026	Returns an array of all class names .
2027	Create a property from a class name .
2028	Creates a property from an instance .
2029	Returns a list of string types .
2030	Find reflections of the given type .
2031	Find reflection by identifier .
2032	Creates a new instance from a class name .
2033	Creates a reflection instance from an instance of a class instance .
2034	Creates a new reflection parameter from a closure .
2035	Checks if the node is null .
2036	Returns the type of the node .
2037	Set new parameter type .
2038	Returns a list of all the functions .
2039	Creates a method from a class name .
2040	Creates a method from an instance .
2041	Returns the prototype of the method .
2042	Checks if this method is a constructor .
2043	Export a class name .
2044	Creates a new instance of a class .
2045	Returns all methods of the class .
2046	Returns a list of all registered methods .
2047	Checks if a method exists .
2048	Get constant value .
2049	Get the constructor .
2050	Get all properties of this class .
2051	Get the parent class .
2052	Get the parent class names .
2053	Returns a list of trait traits .
2054	Returns the class for the named node .
2055	Checks if the given object is an instance of the class .
2056	Checks if the given class is a subclass of the given class .
2057	Checks if the given interface is implemented .
2058	Determine if the class is instantiable .
2059	Checks if the object is a cloneable .
2060	Returns the hierarchy hierarchy hierarchy hierarchy .
2061	Set static property value .
2062	Set the final state of the class .
2063	Removes a method by its name .
2064	Add a method .
2065	Add a property .
2066	Remove a property .
2067	Checks if the given reflection is a valid reflection .
2068	Returns a string representation of an instance .
2069	Creates a reflection class from an object .
2070	Get runtime properties .
2071	Creates a property node from the given instance .
2072	Populate a function abstract .
2073	Sets whether the node is optional .
2074	Returns the number of required parameters .
2075	Returns a list of parameters .
2076	Get a parameter by name .
2077	Determine if the parameter is variadic .
2078	Set the return type .
2079	Get body code
2080	Get the return statements as an array .
2081	Locate identifiers by type .
2082	Creates a new instance from a node .
2083	Returns the value of the constant .
2084	Get the modifiers of the property .
2085	Generate documentation .
2086	Formats the HTML doc .
2087	Extract the properties from the graph .
2088	Extracts the cardinality of a property .
2089	Checks if a type is an enum .
2090	Create a map of properties for a given type .
2091	Convert a namespace to a directory .
2092	Fixes the given files .
2093	Check if a relation exists .
2094	Extracts the cardinality of a given id .
2095	Get the URL for a property .
2096	Convert field to PHP type
2097	Get relation name .
2098	Finish the file .
2099	Flush the buffer .
2100	Add a new item .
2101	Add a single language item .
2102	Add a multi language item .
2103	Get the list of urls for the given file .
2104	Sets the gzip .
2105	Add a sitemap .
2106	Write data to file .
2107	Finish the file .
2108	Finish compression .
2109	Sets the expiration date .
2110	Set the key params .
2111	Sets the subkey parameters .
2112	Returns the usage string for the given usage .
2113	Get user id
2114	Parses a string .
2115	Check if the process is running
2116	Terminate the process .
2117	Parse the operation .
2118	Handle error message .
2119	Get error code .
2120	Set the value of the request .
2121	Add bad passphrase exception .
2122	Returns pinphrase for given key .
2123	Returns the hash algorithm name .
2124	Sets whether the user can sign .
2125	Set whether or not the user can encrypt .
2126	Parse a string .
2127	Parse date string
2128	Delete a public key .
2129	Get the fingerprint of a key .
2130	Encrypt data .
2131	Encrypt a file
2132	Encrypts the given data .
2133	Encrypt a file
2134	Decrypts encrypted data
2135	Decrypts a file
2136	Sign a file .
2137	Add a decrypt key
2138	Add encrypt key
2139	Add sign key
2140	Add a key to the array
2141	Import a key
2142	Export a key
2143	Decrypts and verifies the data .
2144	Prepare input data
2145	Prepare output file .
2146	Get private keys
2147	Send a command
2148	Reset the command .
2149	Runs the command .
2150	Set the operation .
2151	Sets the PIN entry .
2152	Get the version information .
2153	Get process data .
2154	Set process data
2155	Closes the subprocess .
2156	Closes the agent launch process .
2157	Close the pipe .
2158	Close the agent .
2159	Find a binary executable .
2160	Get pin entry
2161	Print debug information .
2162	Get primary key .
2163	Checks if the key is valid .
2164	Determine if the key can be encrypted .
2165	Sets the log file .
2166	Log a message .
2167	Connect to the pinentry
2168	Parses a command line .
2169	Initialize the pin entry .
2170	Disconnects the stream .
2171	Sends a set of PIN
2172	Send the current pin
2173	Send a GET command
2174	Get the data for a word .
2175	Get the word wrapped in a string .
2176	Send data to stdout
2177	Builds messages from translations .
2178	Set comment before header
2179	Add multiple lines to the array
2180	Get theme data .
2181	Extract translations from file
2182	Get the file comment .
2183	Set default headers .
2184	Get data from a file
2185	Get headers from a string .
2186	Resolves a call expression .
2187	Checks if the given comment is precedes .
2188	Calculates the score of a file .
2189	Checks if the given directory matches the given matchers .
2190	Get files from a directory
2191	Convert source file to json
2192	Build the json files for the given mapping .
2193	Remove JS strings from source file
2194	Mark a list of updates .
2195	Mark all updates .
2196	Set success by hook .
2197	Check if the list points are updated
2198	Check if the list points are updated
2199	Save progress information .
2200	Render the Droopler .
2201	Generate hash from database
2202	Checks if the given configuration name is valid .
2203	Import config file
2204	Import configs
2205	Install modules .
2206	Check the link for a link .
2207	Check if a link is active .
2208	Go to home .
2209	Get a file .
2210	Get items from data
2211	Get total count from data
2212	Prepare string for comparison
2213	Set the data
2214	Resolve the type .
2215	Resolve options .
2216	Render grid
2217	Render grid cell
2218	Get grid filter .
2219	Render grid column operator .
2220	Checks if the given template exists .
2221	Walk the SELECT statement .
2222	Set the source .
2223	Determines if the request is ready to be ready .
2224	Process request data .
2225	Process a mass action .
2226	Process an export
2227	Process filters .
2228	Process session data .
2229	Prepare the query
2230	Set session data
2231	Get a column by id
2232	Checks if a given column exists .
2233	Sets columns order .
2234	Add mass action .
2235	Add a tweak .
2236	Get Tweaks .
2237	Get a Tweak .
2238	Get Tweaks group by group
2239	Add a row action .
2240	Sets the template to use .
2241	Add export .
2242	Get route url
2243	Sets the filters .
2244	Set limits .
2245	Get page count
2246	Sets the maximum number of results .
2247	Check if the title section is visible .
2248	Check if filter section is visible .
2249	Check if the page is visible .
2250	Lazy show columns .
2251	Hide columns .
2252	Get grid response
2253	Get raw data
2254	Get session filters .
2255	Get a filter by id
2256	Check if a filter has a filter .
2257	Initializes the query builder .
2258	Render a cell
2259	Determine if the view is visible .
2260	Sets the order .
2261	Sets the size of the column .
2262	Sets the data .
2263	Returns the data for this query .
2264	Set the alignment .
2265	Get operators .
2266	Add a column .
2267	Sets the columns order .
2268	Add route parameters
2269	Get route parameters mapping .
2270	Render a row
2271	Add a new type .
2272	Add a column
2273	Set the container .
2274	Get response content .
2275	Get grid data
2276	Get flat grid data
2277	Set template .
2278	Get a parameter .
2279	Returns a list of actions to render .
2280	Clear all items .
2281	Add a cart item
2282	Removes an item from the collection .
2283	Returns an array of items .
2284	Login a user .
2285	Get user profile .
2286	Retrieve the remember user .
2287	Login callback .
2288	Returns the length of a string .
2289	Splits a string into a string .
2290	Converts a string to lowercase .
2291	Converts a string to upper case .
2292	Creates a new mock instance .
2293	Register a listener for a test .
2294	Defines a function mocks base method
2295	Display language flag .
2296	Get country .
2297	Get the code for the given name .
2298	Get language code .
2299	Get locale name
2300	Set the locale .
2301	Redirect to page .
2302	Redirect to current locale .
2303	Set locale .
2304	Returns the index of the elements in the collection .
2305	Removes an element from the collection .
2306	Take a collection of elements from the collection .
2307	Set auth login
2308	Set oauth token
2309	Send a message
2310	Connect to SMTP
2311	Start tls .
2312	Auth login .
2313	Auth OAuth Bearer
2314	Authenticate XOAuth2
2315	Parses the recipient to the user .
2316	Parses data .
2317	Execute a quit command .
2318	Get the code from the SMTP server .
2319	Set the email address .
2320	Set fake from email
2321	Find the file for the given class .
2322	Find a file .
2323	Load class collection .
2324	Fix namespace declarations .
2325	Writes a cache file to the cache .
2326	Returns an ordered list of classes .
2327	Add prefixes .
2328	Add a prefix to the list of paths .
2329	Finds the file for the given class .
2330	Parses the given text .
2331	Detect block type .
2332	Parse a block .
2333	Get inline markers .
2334	Prepare inline markers .
2335	Parse inline text .
2336	Parses an emph strong text .
2337	Identify HTML tag .
2338	Consume HTML tags .
2339	Determine if the given line is a valid code .
2340	Determine if the header is a header .
2341	Parse the headline .
2342	Replace escape characters
2343	Parse a link .
2344	Parse an image .
2345	Parse inline code .
2346	Consume the given lines .
2347	Determine if the given line is a line .
2348	Renders a list .
2349	Consumes a quote .
2350	Consumes a reference line .
2351	Renders a header block .
2352	Parse a markdown string .
2353	Determine if a table is a table .
2354	Consume a table .
2355	Render table .
2356	Parse a markdown tag .
2357	Checks if the subject is equal .
2358	Creates a new element .
2359	Creates a new element with the given text .
2360	Validate images .
2361	Check if value is empty
2362	Check if the given property key is illegal .
2363	Creates an exporter .
2364	Adds a value to the property group .
2365	Validate an XML document .
2366	Add a new name .
2367	Add a summary .
2368	Add a description .
2369	Add price .
2370	Add a bonus .
2371	Add salesFrequency .
2372	Add a date added to the user .
2373	Add a sort .
2374	Validate value
2375	Get a hook .
2376	Sets a hook .
2377	Set a hook .
2378	Remove a hook .
2379	Count the number of commits .
2380	Gets the reference bag .
2381	Get a commit .
2382	Get a tree object
2383	Get a Blob object .
2384	Get the log .
2385	Get the size of the repository .
2386	Executes a shell command .
2387	Get the description of the repository .
2388	Run a command .
2389	Clones the repository .
2390	Get the parents of this commit .
2391	Get short message .
2392	Get all branches in the repository .
2393	Initialize repository .
2394	Check if a remote repository is valid
2395	Clone repository .
2396	Clone a branch to a given branch .
2397	Clone repository .
2398	Gets the group of lines .
2399	Returns a list of lines .
2400	Get a reference .
2401	Get all branches .
2402	Get local branches .
2403	Get remote branches
2404	Get file content .
2405	Get the mimetype .
2406	Returns an array representation of the diff .
2407	Parses the given text .
2408	Write a SQL query to the database .
2409	Write column name .
2410	Create an array of columns .
2411	Creates a new column .
2412	Creates a new table .
2413	Returns the SQL representation of this query .
2414	Boot the cacheable model .
2415	Store cache key .
2416	Get cache keys
2417	Flush cache keys .
2418	Clears the cache .
2419	Reset cache config
2420	Generate cache key .
2421	Cache query .
2422	Validate HppRequest
2423	Validate response .
2424	Add auto - settle flag
2425	Set the returnTss flag
2426	Add a validation flag to the card .
2427	Add dcc enable flag
2428	Add card storage
2429	Set offer save card
2430	Set payerExists
2431	Set hpp version
2432	Generate default values
2433	Encode the payment .
2434	Decodes the account data .
2435	Encode the request .
2436	Decode the request .
2437	Get field config rules .
2438	Unpacks a deferred result .
2439	Defines a deferred value .
2440	Convert cursor to key
2441	Convert cursor to offset
2442	Compiles a list of nodes .
2443	Create request data
2444	Get all sentences
2445	Splits text into sentences
2446	Detect language .
2447	Get language codes
2448	Get the defaults for this table .
2449	Cache a row .
2450	Get a row from cache .
2451	Checks if an offset exists .
2452	Get a row .
2453	Set the value of a row .
2454	Unset an offset .
2455	Get the join field .
2456	Delete the model .
2457	Get class name .
2458	Set config value
2459	Get field factory .
2460	Execute a query .
2461	Execute a callable .
2462	Begin a transaction .
2463	Check if data is valid
2464	Checks if a value is set .
2465	Set new values
2466	Delete the model .
2467	Relation of rows
2468	Relate a row from another table .
2469	Unassociates all related tables .
2470	Get a select from a table .
2471	Returns the value for the given name .
2472	Sets the limits .
2473	Sets the metric rules .
2474	Sets the producer destinations .
2475	Set consumer destinations .
2476	Set advices .
2477	Sets the endpoints .
2478	Sets the logs .
2479	Sets the metrics .
2480	The field violations .
2481	Sets the operation operations .
2482	The role view .
2483	Sets the included permissions .
2484	Sets the stage launch stage .
2485	Set consumer destinations .
2486	Set the extensions .
2487	Sets the provider credentials .
2488	Sets the requested requests .
2489	Sets the value of the provided variable .
2490	Sets the bounds of the bounding box .
2491	Set the role .
2492	Sets the subpages .
2493	Sets the key types .
2494	Sets the recipients .
2495	The stack entries .
2496	Set producer destinations .
2497	Set consumer destinations .
2498	Sets the required requirements .
2499	Gets the bindings .
2500	The metric costs .
2501	The list of pages .
2502	Sets the action action .
2503	Sets the source files .
2504	The keys of the service account .
2505	Gets the accounts .
2506	Set custom roles support .
2507	Set policy delta .
2508	Sets the exemplars of the distribution .
2509	Sets the features .
2510	Sets the property s properties .
2511	Gets the violated violations .
2512	Sets the private key type .
2513	Sets the key algorithm .
2514	Sets the details of the details .
2515	Gets the binding delta value .
2516	The public key type .
2517	Sets the roles .
2518	Sets the system parameters .
2519	Get cache file .
2520	Checks if the given conditions are valid .
2521	Check if a file exists
2522	Sets the contents of a file .
2523	Get cache data from cache
2524	Get or create a cache file
2525	Check if the user is installed .
2526	Install the WordPress plugin .
2527	Convert multisite install .
2528	Install multiple sites .
2529	Show the version .
2530	Get core checksums .
2531	Update the database .
2532	Get the download URL for the given version .
2533	Get list of available updates .
2534	Download a package .
2535	Updates the current version .
2536	Build a table .
2537	Displays the header .
2538	Move meta box .
2539	Get post type
2540	Get title .
2541	Render meta box .
2542	Setup meta box .
2543	Get meta data
2544	Sets the file name .
2545	Setup meta data
2546	Returns true if the current page is disabled .
2547	Factory method for creating a property
2548	Get a child property .
2549	Get option value
2550	Get post id
2551	Generate a unique identifier .
2552	Get the slug for a property .
2553	Checks if a slug matches the given slug .
2554	Prepare value
2555	Render the conditional condition .
2556	Set an option
2557	Set a setting .
2558	Setup properties .
2559	Setup options .
2560	Sets the slug for the given options .
2561	Setup settings settings .
2562	Updates the form fields .
2563	Save an attachment .
2564	Check if a post type exists
2565	Get property value
2566	Formats a value .
2567	Get property .
2568	Load a value from a property .
2569	Factory method for creating a new instance .
2570	Get property value
2571	Check if the current user can be rendered .
2572	Renders the row .
2573	Render hidden field
2574	Render the label .
2575	Renders the row .
2576	Render the rules .
2577	Get the value of the post .
2578	Decode a property .
2579	Get post data
2580	Get a list of keys and value pairs .
2581	Prepare post data
2582	Prepare property data
2583	Convert a string to a string
2584	Delete a cache
2585	Get the function name for the post .
2586	Get the value for a given slug .
2587	Update an existing value
2588	Update cache data
2589	Get revisions between two revisions .
2590	Add hidden meta boxes .
2591	Load the post type .
2592	Returns a redirect to the post .
2593	Check if post type is setup
2594	Rename a post .
2595	Get field slug .
2596	Get the source .
2597	Sets the source code
2598	Setup rule .
2599	Initialize admin .
2600	Adds the body classes to the admin .
2601	Render the edit form .
2602	Get the entry type .
2603	Add the meta tags for the plugin .
2604	Update the front page .
2605	Add a link query to the WordPress page .
2606	Get a list of templates for a given ID .
2607	Prepare the value for a property .
2608	Save properties .
2609	Get metabox .
2610	Save a post to a post .
2611	Update post data
2612	Update meta data
2613	Save meta boxes
2614	Save a revision .
2615	Save properties .
2616	Restores a post revision .
2617	Check if post_id is valid
2618	Displays the given rules .
2619	Determine if the given rule is enabled .
2620	Get rule slug
2621	Prepare a list of rules
2622	Check if the current user is allowed .
2623	Get the body classes .
2624	Returns a list of child types .
2625	Get the labels .
2626	Get the list of supported post types .
2627	Remove post type support .
2628	Remove meta boxes
2629	Sets the post_post_title field .
2630	Setup post types
2631	Setup page templates .
2632	Add mce buttons .
2633	Remove mce buttons .
2634	Get row results
2635	Load a value from a given value .
2636	Prepare property properties .
2637	Prepare a property for a property .
2638	Removes rows from a row .
2639	Render the json template .
2640	Renders the row header .
2641	Render repeater rows .
2642	Registers the options .
2643	Get the value for the given key .
2644	Prepare the response .
2645	Get the value of the user .
2646	Get the list of users .
2647	Initialize the plugin .
2648	Load the translations .
2649	Loads the files .
2650	Deactivate plugin .
2651	Check if the item is a string
2652	Prepare properties .
2653	Get the file associated with the given value .
2654	Get file value
2655	Update file value
2656	Bind an identifier to the container .
2657	Call a closure .
2658	Get class prefix .
2659	Check if a class is a singleton .
2660	Get a singleton instance .
2661	Removes an item from the cache .
2662	Overridden to override custom labels
2663	Add page items .
2664	Add post types to the menu
2665	Render the page view
2666	Autoload class .
2667	Get the list of registered sidebar items
2668	Get the labels for the post type .
2669	Parse arguments .
2670	Parse post type arguments
2671	Parse term arguments .
2672	Get query arguments .
2673	Get query result
2674	Add help tabs .
2675	Add box .
2676	Register the parent class .
2677	Convert properties to properties
2678	Get body classes
2679	Get all boxes
2680	Get property by slug
2681	Get all properties of this box .
2682	Merges multiple boxes
2683	Setup the plugin .
2684	Starts a tab .
2685	Load a value from a post .
2686	Prepare a link array
2687	Update the value of a link .
2688	Check if taxonomy is allowed
2689	Displays the edit form .
2690	Prepare post data .
2691	Prepare post data
2692	Register the post type .
2693	Get format arguments .
2694	Render a file .
2695	Get option value
2696	Convert a value to a property
2697	Get the value of a rule .
2698	Get the deep value of a field .
2699	Get the value of a rule
2700	Checks if the given rule is equal .
2701	Checks if the given rule is equal .
2702	Checks if the given rule is greater than the given value .
2703	Checks if a given rule is in a valid value .
2704	Checks if the given rule matches the given rule .
2705	Extracts between two values .
2706	Checks if a rule is between two values .
2707	Checks if a rule is between two values .
2708	Get sort option
2709	Get sort options
2710	Get a list of posts .
2711	Sort an array of values
2712	Update the value of a post .
2713	Get meta type value .
2714	List entry types .
2715	Returns the HTML for the tabs .
2716	Returns a unique identifier for the given key .
2717	Get a layout by its slug .
2718	Loads the value of a property .
2719	Prepare layout properties .
2720	Render the layout input .
2721	Render the repeater row .
2722	Add form fields .
2723	Prepare taxonomy types .
2724	Setup taxonomy hooks .
2725	Generate AJAX URL
2726	Handles AJAX request .
2727	Get entry type
2728	Get posts .
2729	Get property
2730	Get a list of properties
2731	Get rule result
2732	Get shortcode
2733	Get terms .
2734	Get the properties of a term .
2735	Rename a term .
2736	Set the column type columns .
2737	Sets the column type for the post type .
2738	Set the sortable columns .
2739	Prepare posts for posts
2740	Restrict page types .
2741	Format a value .
2742	Get taxonomy labels
2743	Get a list of terms .
2744	Get term value .
2745	Prepare a value .
2746	Search for a user
2747	Get historical data .
2748	Get a single quote
2749	Get exchange rate
2750	Get exchange rates .
2751	Fetches a list of quotes .
2752	Get the attributes for the header
2753	Render cell .
2754	Render appends .
2755	Get all images
2756	Set the parameters of the request .
2757	Set default values
2758	Get the value of the model .
2759	Create a group .
2760	Wrap content .
2761	Wrap a group .
2762	Add class to options
2763	Register routes .
2764	Register assets routes .
2765	Register auth routes .
2766	Add a test case .
2767	Get the process with the given status .
2768	Build the output tree .
2769	Optimize the tree .
2770	Count all statuses
2771	Count the results of the process .
2772	Fails all the dependencies of a given class .
2773	Get the dependency tree of the given class .
2774	Output the output .
2775	Output the error output .
2776	Initialize the server .
2777	Get the version .
2778	Get file URL .
2779	Download file .
2780	Select a select by text
2781	Save legacy data to file
2782	Save data .
2783	Loads a legacy type .
2784	Load legacy data from a legacy file .
2785	Check if the server is accessible .
2786	Check if the server is a Selenium server .
2787	Get the cloud service
2788	Guess the port .
2789	Detect cloud service by status
2790	Builds the process .
2791	Get excluded groups .
2792	Take a screenshot .
2793	Get snapshot URL .
2794	Instantiates all registered listeners .
2795	Get file path .
2796	Quote xpath attribute .
2797	Computes the optimal distance between two nodes .
2798	Cast value to guessed data type .
2799	Check the process timeout .
2800	Resolve the result .
2801	Get the executors .
2802	Setup ci capabilities .
2803	Set custom configuration options
2804	Get configuration values .
2805	Dequeues the queued processes .
2806	Flush process output .
2807	Get favorites .
2808	Count the summary of the scenario
2809	Update summary table
2810	Move the summary table .
2811	Update button buttons
2812	Add a favorite .
2813	Remove favorites .
2814	Toggle a user .
2815	Check if user is favorites .
2816	Fetches favorites by user .
2817	Get the permissions .
2818	Inserts the translation files into the database .
2819	Create view files .
2820	Create migration .
2821	Create events .
2822	Generate a file .
2823	Get the stub path .
2824	Check the namespace .
2825	Check if a table exists
2826	Connect to a random server
2827	Set all redis
2828	Select a redis server
2829	Sets a redis server .
2830	Call Redis command
2831	Set current database
2832	Deletes the given keys .
2833	Sets a value in the cache .
2834	Check if a key exists
2835	Type of a key
2836	Expire a key
2837	Flush all keys
2838	Execute multi - items
2839	Get database size
2840	Add a function to the exec list
2841	Dispatch event .
2842	Add a timing event .
2843	Replaces the configuration placeholder with the given event name .
2844	Merge the configuration tags .
2845	Dispatch memory usage .
2846	Dispatch request time .
2847	Creates a new instance from a console event .
2848	Parse SRID .
2849	Parse geometry .
2850	Parse a point .
2851	Get coordinate .
2852	Parse a list of points .
2853	Parse a list of point lists .
2854	Parse multi polygon .
2855	Parse a geometry collection .
2856	Match a token .
2857	Parses an error .
2858	Create response parts .
2859	Get request time
2860	Create API client
2861	Send a command
2862	Returns the redirect url .
2863	Check for render options
2864	Render a path .
2865	Render a base64 image
2866	Finds a page by selector .
2867	Find elements within a page .
2868	Set attribute value .
2869	Key event handler .
2870	Select an option .
2871	Set debug mode
2872	Set proxy .
2873	Get the network traffic .
2874	Get all cookies
2875	Set a cookie
2876	Get javascript errors
2877	Returns the error message .
2878	Compile a route .
2879	Compiles a route variable .
2880	Create a TrieNode .
2881	Flush text buffer .
2882	Lex a number .
2883	Lexuation of punctuation .
2884	Lex a quoted string .
2885	Lex text character .
2886	Lexes a variable name .
2887	Add a route
2888	Get the named route .
2889	Create a trie node .
2890	Normalizes a name .
2891	Checks if the token is a valid token .
2892	Get current token .
2893	Returns the next token .
2894	Next token .
2895	Returns the next token .
2896	Add a child node .
2897	Add a child node .
2898	Get all children of this node .
2899	Add a literal child node .
2900	Add a variable child node .
2901	Build all routes .
2902	Add a route group .
2903	Creates a route builder .
2904	Apply group attributes .
2905	Apply group constraints .
2906	Apply group middleware .
2907	Applies group route template templates .
2908	Register rule factories .
2909	Get match candidates for a node .
2910	Build a route .
2911	Add a method to the route .
2912	Add a new attribute
2913	Add multiple attributes .
2914	Add multiple constraints .
2915	Add multiple middleware bindings .
2916	Add a middleware .
2917	Parse punctuation .
2918	Parse text .
2919	Parse tokens .
2920	Parse a variable .
2921	Parse a variable rule .
2922	Checks if the segment value matches the given segment value .
2923	Adds a group to the router .
2924	Add a route .
2925	Dispatch routes .
2926	Checks if the request method matches the request method .
2927	Checks if the route is valid .
2928	Checks if the route URI matches the route URI .
2929	Run a route .
2930	Parse method parameters .
2931	Converts a route to a regex .
2932	Generate a regex parameter .
2933	Add a route .
2934	Define a route .
2935	Returns the URL for the given route name .
2936	Prepare the request .
2937	Get uri .
2938	Validate API response .
2939	Validate the response .
2940	Validate API response
2941	Get provider by name .
2942	Handle the request .
2943	Get details about a specific IP address .
2944	Format details object .
2945	Get IPinfo details
2946	Sets a value to the cache .
2947	Manage the cache .
2948	Perform a POST request .
2949	Generate HTML code .
2950	Applies a filter to a route .
2951	Parse path .
2952	Checks if a variable is a variable .
2953	Cache variable cache control
2954	Sets the map tree .
2955	Get redirect url
2956	Check middleware .
2957	Run a request .
2958	Initialize database connection
2959	Check if headers are valid
2960	Get header value
2961	Insert a new record into the database
2962	Get DI params
2963	Set a singleton instance
2964	Get a singleton instance
2965	Register an abstract class .
2966	Get an instance of a class
2967	Get an instance with the given class name .
2968	Runs the given class .
2969	Run the request .
2970	Initialize the database .
2971	Add a pipe .
2972	Initialize Redis client
2973	Subscribe to a channel .
2974	Subscribe to a callback .
2975	Reset the table
2976	Wrap prepare SQL query
2977	Execute the query
2978	Bind parameters to PDO
2979	Wrap a table .
2980	Wrap a row
2981	Creates a condition .
2982	Store build attributes
2983	Replace build attributes
2984	Build a sub - builder .
2985	Select a SELECT clause
2986	Add a WHERE clause
2987	Add OR WHERE condition
2988	Add a WHERE clause
2989	Adds a WHERE clause .
2990	Add a WHERE clause .
2991	Add a where clause .
2992	Adds a condition to the query .
2993	Add a WHERE clause
2994	Group by field
2995	Adds a WHERE clause .
2996	Adds a WHERE clause .
2997	Sets the ORDER BY clause .
2998	Adds a join to the table .
2999	Adds a builder to the table .
3000	Perform pagination .
3001	Execute query
3002	Returns the result of the query
3003	Get a list of fields
3004	Execute a SQL query
3005	Prepare a SQL statement .
3006	Begin a transaction .
3007	Handle an exception .
3008	Generate a random id
3009	Generate a random ID .
3010	Generate a random number
3011	Normalize a DSN string .
3012	Create a DQL query .
3013	Execute a query .
3014	Begin a transaction
3015	Commits a transaction .
3016	Rollback a transaction .
3017	Get last insert ID
3018	Reset a tag
3019	Consume the given SQL code .
3020	Escape the given value .
3021	Render the template
3022	Get debug query
3023	Get the result of the query
3024	Get a single cell
3025	Returns the first row of the query .
3026	Set the table .
3027	Add a WHERE clause .
3028	Render a condition .
3029	Add a group .
3030	Set the value of a field .
3031	Add an option .
3032	Sets the order .
3033	Set the mode .
3034	Limit the limit
3035	Parse a string .
3036	Fetches the end of a string .
3037	Creates a message .
3038	Checks if a string starts with a given string
3039	Fetches environment variables .
3040	Checks if the variable is a parameter expression .
3041	Fetch a variable expression .
3042	Returns the symbol symbol for the given variable name .
3043	Split a variable name into an array .
3044	Parse a variable parameter .
3045	Assign a variable to the default value .
3046	Checks if a variable exists .
3047	Get a variable .
3048	Parse a key .
3049	Parse content .
3050	Parses raw lines .
3051	Parse a line
3052	Parse export line
3053	Parse the key value .
3054	Returns the content of the content .
3055	Start a task .
3056	Start a workflow .
3057	Finds a workflow .
3058	Get the timestamp of the buffer .
3059	Get class properties .
3060	Configure sitemap .
3061	Fixes the sitemap configuration .
3062	Add a new source .
3063	Handles a block event .
3064	Get root menu .
3065	Get fonts .
3066	Get icon map
3067	Get font CSS
3068	Encrypts and encrypts a password
3069	Upgrade a legacy version .
3070	Executes the command .
3071	Writes the credentials .
3072	Get config array
3073	Checks if the current URI is filtered .
3074	Register commands .
3075	Find all templates .
3076	Find all templates in a bundle .
3077	Executes a command .
3078	Returns a new instance of this string .
3079	Sanitize a string
3080	Replace the first occurrence of the string .
3081	Replace the last occurrence of the string .
3082	Creates a new possessive .
3083	Get a segment from a string .
3084	Returns true if the collection contains a given value .
3085	Encrypts the hash
3086	Decrypt the response
3087	Encrypt a plain text
3088	Decrypts an encrypted text
3089	Encrypts and encrypts the hash .
3090	Decrypt a response .
3091	Encrypts the payment hash
3092	Add a range .
3093	Add a modifier .
3094	Add a range .
3095	Add raw content .
3096	Add a file .
3097	Adds an iterator to the collection .
3098	Deserialize a LinkedCRS object .
3099	Set optional arguments .
3100	Creates a new instance of the given value .
3101	Create a new instance of a property .
3102	Deserialize a CRS object .
3103	Get config path .
3104	Get application namespace .
3105	Loads the cache provider .
3106	Creates a master node .
3107	Get the native balance .
3108	Get native balance stroops .
3109	Get the balance value for a given asset .
3110	Get the balance of an asset .
3111	Get the balance of a given asset .
3112	Returns the hexumum of the given entropy bytes .
3113	Converts a bitstring into a hex string .
3114	Convert mnemonic to entropy bytes
3115	Authorizes a trustline .
3116	Revoke a trustline .
3117	Returns the XDR representation of this message .
3118	Converts a value into a byte array .
3119	Returns a string representation of an XDR encoding .
3120	Get unique hashes .
3121	Check if a account exists .
3122	Set the authentication flag .
3123	Set AuthRevocable .
3124	Get the public key of the public key .
3125	Convert an opaque string into an opaque string .
3126	Parses raw data .
3127	Sign a keypairs .
3128	Submit a transaction .
3129	Creates a new patch object from a text string .
3130	Converts patches to text
3131	Adds the text to the text .
3132	DeepCopy is an array of patches
3133	Calculate the bitap score .
3134	Returns an array of alphabetically .
3135	Returns a human - readable representation of changes .
3136	Returns a string representation of the change .
3137	Converts a delta into an array .
3138	Computes the levenshtein distance .
3139	Compute diffs between two strings .
3140	Compare two lines .
3141	Split text into two lines .
3142	Returns the common prefix between two strings .
3143	Returns the common suffix between two strings .
3144	Returns the distance between two strings .
3145	Determine if two text matches .
3146	Calculates the best match between two strings .
3147	Convert two lines to a string
3148	Get recipients for a notification .
3149	Get the version .
3150	Register pug compiler .
3151	Get the configuration .
3152	Constructs the plugin .
3153	Get the pug
3154	Get the cache path .
3155	Get a single option .
3156	Check if a file is expired .
3157	Extract the path .
3158	Get client instance
3159	Get B2BFamily
3160	Returns the hash of the given input .
3161	Resolve a file .
3162	Display a file .
3163	Extract extension options .
3164	Removes options from the renderer .
3165	Reset all options .
3166	Get renderer .
3167	Add a filter .
3168	Add a keyword .
3169	Executes the output directory .
3170	Runs the command .
3171	Get available methods .
3172	List available methods .
3173	Returns the errors for the given record .
3174	Get a list of meta objects
3175	Mark duplicates .
3176	Find a list of duplicates .
3177	Remove empty attributes .
3178	Process a record .
3179	Handle all releases .
3180	Get elapsed time .
3181	Read data from the command .
3182	Converts an array of arguments to a string .
3183	Validate arguments .
3184	Check if the command is supported .
3185	Register the autoload function .
3186	Unregisters the autoload function .
3187	Get rediska path
3188	Returns a list of connections by name .
3189	Get a connection by name .
3190	Get channels by connection
3191	Retrieves a configuration value from the database .
3192	Set config value
3193	Check if the Redis server is supported .
3194	Create a new queue
3195	Delete a queue
3196	Returns the number of items in the queue .
3197	Sends a message to the queue .
3198	Receive messages from queue
3199	Delete a message
3200	Returns the total elapsed time .
3201	Sets the value of a field .
3202	Set a value for a given field .
3203	Increment the value of a field .
3204	Removes a field from the hash
3205	Write data to Redisk
3206	Subscribe to a channel
3207	Publish a message
3208	Add message to buffer
3209	Check if Redis is supported .
3210	Called when an error occurs .
3211	Add a queue
3212	Remove a queue
3213	Get the queue cache
3214	Watch the given keys .
3215	Unwatch watcher .
3216	Add a command
3217	Creates a new post .
3218	List posts .
3219	Creates a new Logger instance .
3220	Add a value to the set
3221	Returns the length of the set by score .
3222	Get a set of items by score .
3223	Removes a set by score .
3224	Increments a score for a given value .
3225	Get sorted set by rank
3226	Removes items from the set .
3227	Returns the rank of a given value .
3228	Union a set of sets
3229	Intersects two sets
3230	Returns an array of results as an array .
3231	Creates a set of values from an array .
3232	Set name
3233	Get a connection by name .
3234	Returns all available connections .
3235	Set the connection .
3236	Subscribe to Redisk
3237	Get Redisk configuration .
3238	Set the key distributor
3239	Get the serializer
3240	Get a new Redisk instance .
3241	Get the name of a command .
3242	Execute the command .
3243	Add a command
3244	Write the command to the database .
3245	Set the response callback
3246	Transforms multi - bulk command .
3247	Append a value to the list
3248	Prepend a value
3249	Truncate a list
3250	Set a value in the list
3251	Inserts a value into the list .
3252	Inserts a value in the list
3253	Insert a value into the list
3254	Remove a value from the list
3255	Removes the item from the list
3256	Removes the item from the list
3257	Pop a list from the list
3258	Pop a list from the list
3259	Create a new Redisk instance from an array .
3260	Load data from Redisk
3261	Save data to Redisk
3262	Remove an item from Redisk
3263	Removes all IDs from the cache .
3264	Set the directive directives
3265	Returns a list of IDs that match the given tags .
3266	Returns the metadata for the given ID .
3267	Collect garbage collected from Redisk
3268	Add a value to the set
3269	Removes a value from the set .
3270	Move the item to the given set .
3271	Returns the intersection of the set .
3272	Creates a new set of sets
3273	Compares two sets
3274	Get Redisk instance
3275	Set a value
3276	Set a value to a redisk
3277	Sets a bit at the given offset .
3278	Get or set a value
3279	Displays a list of users .
3280	Lists the following users .
3281	Redirect to a user
3282	Move the record to the database .
3283	Sets the expire option .
3284	Get Redisk instance
3285	Set mode mode .
3286	Add a Rediska
3287	Get all registered instances
3288	Creates a Redisk instance from the given options .
3289	Increments the given subject .
3290	Reset a subject
3291	Get bucket name .
3292	Set multi - increment transaction part .
3293	Set the number of items in the transaction .
3294	Create a socket connection .
3295	Get the read buffer .
3296	Read data from Redis server
3297	Read data from Redis server .
3298	Set the read timeout .
3299	Returns the stream context .
3300	Read and throw an exception
3301	Validate a nonce .
3302	Declare a queue .
3303	Ack a message
3304	Nack a message .
3305	Get message properties .
3306	Start the daemon .
3307	Stop the daemon .
3308	Create a new instance of an incoming connection .
3309	Builds the handler .
3310	Handles synchronously send response .
3311	Returns an instance of the given connection .
3312	Nack a message .
3313	Close the connection .
3314	Consume a message .
3315	Replace the model .
3316	Qualify class name .
3317	Process the action .
3318	Create a new model .
3319	Convert data to json .
3320	Update model .
3321	Remove a model from the database .
3322	Checks if the given attribute is logged in .
3323	Render a document .
3324	Get the next string .
3325	Get all achievements for a given app .
3326	Close the connection .
3327	Receive a packet .
3328	Send data packet
3329	Get a reply from the master query
3330	Execute a command .
3331	Get the challenge
3332	Send RCONNECT command
3333	Connect to the server .
3334	Get all servers
3335	Fetch all items from the database
3336	Convert a community ID to Steam ID
3337	Convert Steam ID to community ID
3338	Resolve a vanity url .
3339	Fetch a list of users .
3340	Fetch all available games
3341	Fetch all the groups
3342	Get steam id .
3343	Get the recent playtime for a given app id .
3344	Get total playtime
3345	Fetch information from SteamCondenser
3346	Rotate the IP address
3347	Initialize socket
3348	Authenticates the RCON request .
3349	Connect to a socket .
3350	Creates a new instance of a class
3351	Returns an instance of the cached instance .
3352	Check if the cache is cached
3353	Calls the cache .
3354	Get cache IDs .
3355	Initializes the socket
3356	Attempt to authenticate the user .
3357	Close the socket .
3358	Read data from the socket .
3359	Selects a socket .
3360	Send data to the socket .
3361	Get all news items for a given app .
3362	Returns an array of all the classes that are equipped .
3363	Get member count
3364	Returns a list of members
3365	Fetch the members of a member .
3366	Fetch all members from the server
3367	Get GameItemSchema .
3368	Fetches the inventory .
3369	Returns a list of all available bots .
3370	Returns a list of golden words .
3371	Sets the API key .
3372	Queries Steam Web API .
3373	Send data packet
3374	Get player hash
3375	Handles the response for a request .
3376	Update the ping .
3377	Update the players .
3378	Add information about a player .
3379	Get leaderboard by id
3380	Returns the leaderboards for the given game name .
3381	Load the leaderboard .
3382	Returns the game leaderboard entry for the given steam id .
3383	Returns a list of entries for a given range .
3384	Loads the data from the request .
3385	Load data for a steam id
3386	Parses the game leaderboard .
3387	Creates a SteamGame object .
3388	Checks if the app is up to the given version .
3389	Get the number of players
3390	Get user stats
3391	Display a work order .
3392	Create a new event .
3393	Show an event .
3394	Update an event .
3395	Deletes an event .
3396	Show a work order .
3397	Edit a work order .
3398	Update a work order .
3399	Get take action .
3400	Add a part to the work order .
3401	Retrieves a product .
3402	Post a part to the inventory .
3403	Show a work request .
3404	Edit a work request .
3405	Update a work request .
3406	Deletes a work request .
3407	Scope the query to the given location .
3408	Store an event .
3409	Create a work order .
3410	Store an attachment .
3411	Show an attachment .
3412	Edit an attachment .
3413	Update an attachment .
3414	Destroy an attachment .
3415	Creates a form .
3416	Get icon attribute .
3417	Display the inventory .
3418	Show the inventory .
3419	Roll back a movement .
3420	Get the status of a status .
3421	GetRevisedPriority attribute .
3422	Close all sessions .
3423	Check if the user is in the current work order .
3424	Gets the start time label .
3425	Get the completion date label .
3426	Completes the status .
3427	Display a table .
3428	Create a form .
3429	Display priorities .
3430	Stores a request .
3431	Edit a priority .
3432	Update a priority .
3433	Scope stock query .
3434	Scope the query .
3435	Get current stock stock attribute
3436	Get the name of a metric .
3437	Get operator .
3438	Scope the query .
3439	Get full path attribute
3440	Display status .
3441	Store a status .
3442	Edit status .
3443	Update status .
3444	Create a new variant .
3445	Store a new item .
3446	Create a report .
3447	Store a report .
3448	Display a table .
3449	Table assigned work order .
3450	Display the sessions for a work order .
3451	Creates a form .
3452	Form a form comment .
3453	Handle upload .
3454	Display the assets table .
3455	Create a form .
3456	Display the inventory .
3457	Displays Inventory Inventory .
3458	Create a form .
3459	Display a navbar .
3460	Store an attachment .
3461	Update an attachment .
3462	Create a table .
3463	Get table history .
3464	Upload an image .
3465	Show an asset .
3466	Update an attachment .
3467	Display metrics .
3468	Store a metric .
3469	Edit a metric .
3470	Display assets .
3471	Store an asset .
3472	Edit asset .
3473	Update asset .
3474	Scope the query .
3475	Get the response .
3476	Get input value .
3477	Get select hierarchy
3478	Render the rendered node .
3479	Boot the view .
3480	Delete the attachment .
3481	Show the inventory .
3482	Create a new Inventory .
3483	Stores the inventory .
3484	Show the inventory .
3485	Edit the stock .
3486	Update Inventory stock .
3487	Destroy a stock .
3488	Display an asset .
3489	Create a new asset .
3490	Store a new meter .
3491	Show an asset .
3492	Edit an asset .
3493	Update a meter .
3494	Deletes a meter .
3495	Store a work order .
3496	Update a work order .
3497	Formats the started time .
3498	Returns the completed date of the entity .
3499	Display the work orders .
3500	Creates a form .
3501	Gets the hours in seconds .
3502	Get start date
3503	Returns the end date of the event .
3504	Returns the end time of the event .
3505	Format the frequency for a given event .
3506	Get the frequency of an event
3507	Returns the frequency for a given event
3508	View the tags .
3509	Stores the Inventory stock .
3510	Update stock .
3511	Deletes a stock .
3512	Display the work orders .
3513	Creates a form .
3514	Authenticate the user .
3515	Handle the user was authenticated .
3516	Handle LDAP user .
3517	Delete all movements .
3518	Restore all movements .
3519	Display a table .
3520	Create a form .
3521	Displays a table .
3522	Form submit form .
3523	Creates a form for the given inventory .
3524	Deletes an inventory item .
3525	Create a flash message .
3526	Create a work order .
3527	Store a work order .
3528	Display an event .
3529	Store an event .
3530	Show an event .
3531	Update an event .
3532	Delete an event .
3533	Scope the query .
3534	Create a form .
3535	Upload an asset .
3536	Show an asset .
3537	Update an attachment .
3538	Attach an asset .
3539	Remove a work order .
3540	Store a new work request .
3541	Delete an update .
3542	Show the stock inventory .
3543	Get take action .
3544	Handles a request .
3545	Displays a form .
3546	Perform a Put request .
3547	Display the work request .
3548	Edit a work request .
3549	Update a work request .
3550	Create a new category .
3551	Store a new category .
3552	Display a category .
3553	Update a category .
3554	Deletes a record .
3555	Display the work orders .
3556	Get the table per worker .
3557	Deletes all stocks .
3558	Restores the given Inventory .
3559	Display the inventory .
3560	Stores the inventory .
3561	Show inventory .
3562	Edit the inventory .
3563	Display the inventory table .
3564	Get the table movement .
3565	Creates a form .
3566	Generate navbar .
3567	Get the table of work orders .
3568	Table inventory .
3569	Show the navbar part .
3570	Display the work orders .
3571	Start a work order .
3572	End a work order .
3573	Get the change attribute .
3574	Store a note .
3575	Show a note .
3576	Update a note .
3577	Delete a note .
3578	Get last move .
3579	Get the last move .
3580	Get the quantity of the item .
3581	Displays a button for the given work order .
3582	Displays the buttons for the given work order .
3583	End a work order .
3584	Display the work request .
3585	Creates a form .
3586	Store a work order .
3587	Remove a worker .
3588	Generates a datalist .
3589	Generates a placeholder option .
3590	Get the appendage for the given method .
3591	Render a component .
3592	Get component data .
3593	Register blade directives .
3594	Open the model .
3595	Format label .
3596	Renders a reset button .
3597	Create a submit button .
3598	Get request parameter .
3599	Generates a link .
3600	Generates a link .
3601	Render a listing element .
3602	Generate HTML tags .
3603	Register the HTML builder .
3604	Register the form builder .
3605	Creates an HTML element .
3606	Generates a datetime input .
3607	Generates a file input .
3608	Remove XML first line from XML
3609	Loads the given locale .
3610	Parse the given locale .
3611	Get patterns for a word .
3612	Unify a locale .
3613	Tokenize a string
3614	Runs the given input .
3615	Set the options .
3616	Add a dictionary to the registry .
3617	Get the hyphenation pattern for a word .
3618	Set the filters .
3619	Add a filter .
3620	Set tokenizers .
3621	Add tokenizer .
3622	Creates a new instance of Options .
3623	Gets the text .
3624	Get the pattern .
3625	Set the options .
3626	Get the options .
3627	Add a dictionary .
3628	Add a filter .
3629	Add a tokenizer
3630	Get tokenizers .
3631	Get all dictionaries
3632	Get the filters .
3633	Convert a string to hyphenation .
3634	Get the hyhenation pattern .
3635	Get the pattern for a word .
3636	Set default home path
3637	Get the default home path .
3638	Set the home path .
3639	Creates a hyphenator instance .
3640	Autoloads the given class name .
3641	Replace tokens with new tokens .
3642	Get token by key
3643	Returns the merged pattern with the given quality .
3644	Get filter by key
3645	Filter tokens .
3646	Fetch an access token .
3647	Migrate orders .
3648	Migrate the order .
3649	Migrate shipping values
3650	Migrates the order calculation .
3651	Gets the list of available products .
3652	Require default pages .
3653	Make a payment
3654	Get gateway data
3655	Create a payment
3656	Complete payment .
3657	Check if the order is place
3658	Returns the name of the country .
3659	Set payment method
3660	Returns the selected payment method
3661	Send confirmation email
3662	Send an admin notification
3663	Send cancel notification
3664	Builds the URL for a Buyable item
3665	Redirect to cart page
3666	Show the shopping cart .
3667	Displays the cart .
3668	Returns a string representation of this field .
3669	Submit a form to the user .
3670	Applies the form to the user .
3671	Get a modifier
3672	Gets the unit price .
3673	Calculate the total total total total amount .
3674	Get unique data
3675	Called when the customer is written .
3676	Get ProductVariation
3677	Returns a string representation of this object .
3678	Get the address .
3679	Returns the cart form .
3680	Calculate the cost of the payment .
3681	Returns the weight of the product .
3682	Returns the total amount of items .
3683	Returns the total number of items .
3684	Saves the product attributes
3685	Get the viewer .
3686	Get the product .
3687	Updates the field s fields .
3688	Get a product by its attributes .
3689	Generate Variations from attributes .
3690	Deletes the current variation .
3691	Get component by type
3692	Get the form fields .
3693	Validate data .
3694	Get order data
3695	Set component data
3696	Get the dependant data for a component .
3697	Get current order
3698	Set current order
3699	Find or create an order
3700	Add a buyable item .
3701	Removes an item from the order .
3702	Remove an order item
3703	Set quantity of buyable item
3704	Update order item .
3705	Find a Buyable item .
3706	Get a Buyable item .
3707	Archive a session id
3708	Calculate the value of an incoming request .
3709	Formats a price field .
3710	Get image by filename
3711	Set the content
3712	Returns the list of countries .
3713	Get a single country
3714	Convert country code to name
3715	Returns the current shopping cart .
3716	Convert an array to an AttributeValue
3717	Get the dropdown field
3718	Gets the products showable
3719	Get all child categories
3720	Get all child categories .
3721	Gets the groups menu .
3722	Get the menu title
3723	Creates a new item edit form .
3724	Prints an invoice
3725	Returns the next step .
3726	Gets the list of order items .
3727	Get the edit form .
3728	Returns a subset of the fields of the given fields .
3729	Modify the subtotal amount .
3730	Setup steps .
3731	Called when the action is triggered .
3732	Is current step?
3733	Get action position .
3734	Find the link for the cart page
3735	Get Product Categories
3736	Trim the current value .
3737	Gets the fields for this page .
3738	Get category options
3739	Get category options
3740	Get category IDs
3741	Calculate the selling price .
3742	Returns the product image .
3743	Submit payment .
3744	Handles payment .
3745	Cancel an order .
3746	Get the cc fields for the given gateway .
3747	Add an order to the session .
3748	Get session IDs .
3749	Get order by ID
3750	Gets the actions form .
3751	Create a new Member
3752	Get Member by identifier
3753	After a member is logged .
3754	Get the list of past orders .
3755	Returns a hidden field for the item
3756	Get the list of existing addresses .
3757	Returns the list of fields for this order .
3758	Returns the default search context .
3759	Returns a list of order items .
3760	Calculates the total amount .
3761	Returns the modifier for the given class name .
3762	Calculate the total number of payments .
3763	Returns the link to the checkout page .
3764	Determine if the payment can pay for this payment .
3765	Determine if the user can delete this object .
3766	Returns true if the user can view the view .
3767	Get the name of the user .
3768	Get billing address .
3769	Generate a reference
3770	Called when the model is written .
3771	Called when the payment is deleted .
3772	Provides the list of available entities .
3773	Render the cart .
3774	Returns the editable items .
3775	Returns the URL of the page .
3776	Returns the URL for the given order .
3777	Browse the package .
3778	List installed packages .
3779	Get package path .
3780	Update composer packages .
3781	Uninstall a package .
3782	Get composer instance .
3783	Get the community packages .
3784	Get the package index .
3785	Show a list of packages .
3786	Get a package by its name .
3787	Get installed packages .
3788	Get installed package by name .
3789	Get package name and version .
3790	Get the composer json file path .
3791	Create the default composer json file .
3792	Get the raw version .
3793	Guess the version constraint .
3794	Parses the composer json file .
3795	Set the object .
3796	Load custom config .
3797	Delete all jobs
3798	Process all jobs .
3799	Add a job to the queue .
3800	Copies the job data to the Descriptor .
3801	Get next job .
3802	Check the status of a job .
3803	Check default jobs .
3804	Restarts a stalled job .
3805	Initialise a job .
3806	Check if the current time limit is reached .
3807	Checks if the current memory usage is greater than limit .
3808	Parses a string .
3809	Returns a filter for all jobs .
3810	Run the given queue .
3811	Process the queue queue .
3812	Queue a task
3813	Logs the status of a job .
3814	List all jobs
3815	Refresh the descriptor .
3816	Runs the given queue .
3817	Pause the job .
3818	Resume the job .
3819	Activate the job .
3820	Get the job directory .
3821	Clean up a job .
3822	Get the saved messages .
3823	Get last message
3824	Get job type string
3825	Get the value of the job type .
3826	Setup the site .
3827	Prepare the start of the site .
3828	Completes the urlset
3829	Runs the queue .
3830	Handle the action .
3831	Get the title of the publish items .
3832	Setup the current step .
3833	Process the page .
3834	Get the queue .
3835	Cast an ActiveRecord .
3836	Runs the command .
3837	Save the source map to the source file
3838	Write data to the file .
3839	Read data from memory
3840	Display the sidebar .
3841	List sidebar widgets .
3842	Add widget .
3843	Update widget options .
3844	Move widget .
3845	Deactivate a widget .
3846	Delete a widget
3847	Reset the sidebar .
3848	Validate the sidebar .
3849	Validate a sidebar widget .
3850	Get widget data .
3851	Move a sidebar widget .
3852	Get widget object
3853	Sanitize widget options
3854	Returns a random integer .
3855	Generate a random string
3856	Encode a string
3857	Decode a string
3858	Add a path to the generator .
3859	Remove a generator path .
3860	Get generator .
3861	Load generators .
3862	Show a form element .
3863	Set the content of this element .
3864	Open a form .
3865	Adds a prefix to the element .
3866	Adds a suffix to the element .
3867	Assemble addons .
3868	Sets the size of the element .
3869	Unscrub a message .
3870	Get the temperature .
3871	Get all nodes in the session
3872	Get all properties of a given path .
3873	Evaluate a template
3874	Write a set of keys
3875	Get the webdriver .
3876	Get the aperture value
3877	Get the author .
3878	Gets the header value .
3879	Get credit card
3880	Gets the source value .
3881	Get the job title
3882	Get ISO ISO
3883	Returns the focus distance .
3884	Get width
3885	Get the height of the image .
3886	Get title
3887	Get the caption
3888	Get copyright .
3889	Get keywords .
3890	Get Camera
3891	Get the horizontal resolution .
3892	Get the vertical resolution .
3893	Get the software software .
3894	Get the length of the image .
3895	Get the creation date .
3896	Get color space .
3897	Get the mime type .
3898	Get file size
3899	Get the orientation .
3900	Get GPS value
3901	Extracts the GPS coordinate from the given components .
3902	Set the tool path .
3903	Get tool path .
3904	Get the output of the given command .
3905	Hydrate an object
3906	Extract GPS coordinates .
3907	Get the mapper instance
3908	Returns the hydrator instance .
3909	Set options .
3910	Add a required section .
3911	Get image data
3912	Creates a new adapter .
3913	Generate prefix .
3914	Normalize configuration .
3915	Translate a list of strings .
3916	Runs the static build .
3917	Process the job data .
3918	Collects changes for the current site .
3919	Flushes the changes to the queue .
3920	Gets the garbage collected from the installed modules .
3921	Filter extensions by module
3922	Returns a list of all active modules .
3923	Get module settings
3924	Check if metadata is supported
3925	Check if a class exists .
3926	Check module versions
3927	Returns an array of extended classes .
3928	Check template blocks
3929	Check module settings
3930	Check module templates
3931	Checks if module controller is valid
3932	Check module files
3933	Check module events
3934	Parse module IDs .
3935	Parse shop configs
3936	Returns array of available modules
3937	Check if the application is enabled .
3938	Returns module object
3939	Returns module cache object
3940	Returns module installer object
3941	Fix the module .
3942	Clean up module classes
3943	Add templates to the config file
3944	Add module files
3945	Add module events
3946	Add module extensions
3947	Add a new module version
3948	Returns the difference between two arrays .
3949	Add module settings
3950	Set module controllers
3951	Add extension to module
3952	Returns list of available modules
3953	Render template
3954	Block block .
3955	Creates a new http transport .
3956	Returns the adapter for the given options .
3957	Returns a list of http transports .
3958	Sets the CA option and value of the CURL option .
3959	Get the response from the response .
3960	Check if redirects allowed
3961	Make an HTTP request .
3962	Make a HEAD request .
3963	Trace an HTTP request .
3964	Perform a PATCH request .
3965	Checks if a path matches a glob expression .
3966	Get extra parameter value by key
3967	Get combined filters .
3968	Activate the package .
3969	Checks if a glob expression matches a glob .
3970	Checks if a path matches a glob expression .
3971	Get shop source path
3972	Create installer .
3973	Install package .
3974	Update package .
3975	Copy shop source to target directory
3976	Copy the configuration file to the target directory
3977	Copy the setup files to the installation directory .
3978	Check if config file is not configured .
3979	Copies the files from the source directory .
3980	Get filtered files .
3981	Get absolute file path from installation .
3982	Update the package .
3983	Copy a package .
3984	Formats the package path .
3985	Parses a flat file system structure .
3986	Get flat file list .
3987	Copies a directory .
3988	Copy a file to another path .
3989	Generate models .
3990	Traverses a list of classes .
3991	Returns the JSON representation of this object .
3992	Add breadcrumb list
3993	Render the models .
3994	Sets HTML template by view .
3995	Generate HTML for HTML .
3996	Resolves a path .
3997	Checks if the expected values are expected .
3998	Checks if the given array exists .
3999	Asserts that the given status code is equal .
4000	Assert that content is content .
4001	Asserts that the given content type is a JSON document .
4002	Asserts that the given status code is valid .
4003	Assert that the given content is a single document .
4004	Asserts that the given content is an array of data .
4005	Asserts that the given content is in order .
4006	Asserts that the given content is fetched .
4007	Asserts that the given content is in order to be used .
4008	Assert that the given content is created .
4009	Assert that the given status code is empty .
4010	Asserts that the content of the content of the given content .
4011	Asserts that the given error status matches the given status .
4012	Assert that the given content has an exact status .
4013	Asserts that the given content is valid .
4014	Get the document .
4015	Checks the expected type .
4016	Assert that the content is exactly one of the content .
4017	Assert that the content is updated .
4018	Assert that the content is deleted .
4019	Assert that a resource is included in the document .
4020	Assert that the given hash is included in the document .
4021	Assert that the document is met .
4022	Asserts that the content of the document is met .
4023	Asserts that the document matches the given array .
4024	Asserts that the given status matches the given status code .
4025	Assert that the given document is a resource .
4026	Asserts that the given document is an identifier .
4027	Assert that the given document matches the given document .
4028	Assert that the given document is not equal .
4029	Asserts that the given document is a list of strings .
4030	Asserts that the given document matches the provided list .
4031	Assert that the given document is in order .
4032	Assert that the given document is in an array .
4033	Asserts that the given document contains identifiers .
4034	Asserts that the given document is in order .
4035	Assert that a list contains a resource .
4036	Asserts that the given list contains the given hash .
4037	Assert that a list contains a list of elements .
4038	Asserts that the given document contains a hash .
4039	Asserts that a document contains an error .
4040	Assert that the given document has an error .
4041	Assert that a document contains an error .
4042	Creates an instance from a string .
4043	Cast a document .
4044	Creates a new instance from a JSON string .
4045	Decode a JSON string .
4046	Get a value from the document .
4047	Check if the document has the given pointers .
4048	Assert that all members exist .
4049	Assert that all members exist in the collection .
4050	Checks if the expected value matches the expected value .
4051	Returns true if the given array matches the given array .
4052	Returns true if the value is a resource identifier .
4053	Sort an array .
4054	Checks if the given value is identifiable .
4055	Execute the request .
4056	Show a user .
4057	Reply a user .
4058	Set allowed types .
4059	Write messages to the buffer .
4060	Writes debug messages to debug .
4061	Add a message .
4062	Get the number of messages .
4063	Parse a single line from a single line
4064	Get all variables from a multi - line array
4065	Validate vars array
4066	Returns true if the collection contains all items
4067	Returns an iterator over the iterator .
4068	Merges two arrays .
4069	Convert the iterator to an array .
4070	Returns an array of keys .
4071	Returns an iterator that returns a new iterator .
4072	Returns an array of values .
4073	Recursively reduce the iterator .
4074	Converts multiple keys and values into a key .
4075	Group by strategy .
4076	Reduce the given iterable .
4077	Reduce a reduction .
4078	Dump the package .
4079	Get extra key
4080	Escape prefix .
4081	Parses a compact URI .
4082	Get term context from field type
4083	Persist the cache if necessary .
4084	Get the content for a given entity type .
4085	Normalizes field items .
4086	Deletes the backend .
4087	Creates a translation instance .
4088	Get the URL for the entity .
4089	Gets the types of the given types .
4090	Builds the backend .
4091	Fetch an item from the cache .
4092	Runs a string
4093	Print an error .
4094	Ask a question .
4095	Execute a row .
4096	Create a new record
4097	Override the values of the values .
4098	Insert data into database
4099	Extract primary key .
4100	Sets the current session .
4101	Copy stubs .
4102	Configure variables .
4103	Serializes additional data .
4104	Determine if the item is a swwatch type .
4105	Loads the swwatch type .
4106	Runs the command .
4107	Prepare the name of the database .
4108	Finds the attribute options for the given option .
4109	Find entity attribute by attribute set .
4110	Returns the attribute option value for the given entity type .
4111	Finds the attribute option by the given attribute id .
4112	Create database seeders folder
4113	Create seeder .
4114	Initializes an attribute option .
4115	Initialize database transaction
4116	Loads a catalog attribute .
4117	Set path .
4118	Add request parameters
4119	Send the request
4120	Execute the menu .
4121	Inject parameters from the request
4122	Find attribute by attribute code
4123	Deletes the serialized attribute .
4124	PreLoads the attribute id for the given attribute .
4125	Publish records .
4126	Assert that content contains content .
4127	Get response body
4128	Asserts that the given structure is valid .
4129	Runs the test suite .
4130	Get the Drupal root directory .
4131	Get the environment file path .
4132	Read environment file .
4133	Publish all bundles
4134	Load database seeds .
4135	Get entity type .
4136	Get entity type .
4137	Execute a HTTP request .
4138	Prepare URI .
4139	Checks if the given payload is acceptable .
4140	End a transaction .
4141	Set the application name .
4142	Set user attributes
4143	Start a transaction .
4144	Converts a URL to a URL .
4145	Prepare constructor arguments .
4146	Append exception suffix .
4147	Wrap an exception .
4148	Parse a CSV file .
4149	Load an attribute group by its id
4150	Returns all the eavAttributeGroupGroups for the given attribute set .
4151	Finds the EAV attribute group by the given entity type .
4152	Create lexer config .
4153	Returns the EAVAttributeOptionValue value for the given option .
4154	Create file resolver .
4155	Find all available core config data .
4156	Get system logger .
4157	Create a plugin instance
4158	Merge entity attributes .
4159	Creates a number converter .
4160	Cast value to value .
4161	Get entity type .
4162	Returns the attributes of the entity .
4163	Gets the eavinedUserDefinedAttributes .
4164	Get an attribute by its attribute code .
4165	Gets the categories with the resolved path .
4166	Gets the categories with the given store view .
4167	Get a header by name .
4168	Add a header
4169	Returns the attribute code mapped to the given attribute code .
4170	Deletes the subject directory .
4171	Register observer .
4172	Register a callback .
4173	Get callbacks by type
4174	Import a row .
4175	Prepare store view code
4176	Returns the store id .
4177	Returns the root category .
4178	Resolve original column name .
4179	Get original data .
4180	Checks if the row has the original data .
4181	Wrap exception .
4182	Append exception suffix .
4183	Get new file name
4184	Uploads a media file .
4185	Delete a file
4186	Find all entity entities .
4187	Finds entity by entity type
4188	Serializes an array into a string .
4189	Unserialize a CSV string
4190	Get target directory
4191	Creates an export config .
4192	Initializer .
4193	Unserialize an array of attributes .
4194	Serialize an array of attributes .
4195	Get prepared statement .
4196	Initialize the database .
4197	Parse additional attributes .
4198	Generate path .
4199	Resolve reference .
4200	Adds a value to the cache .
4201	Get a value from the cache .
4202	Flush the cache .
4203	Load an EAV attribute .
4204	Find all eavAttributeSets for the given entity type .
4205	Find eav attribute set by entity type
4206	Find eav attribute set by entity type
4207	Creates an export adapter .
4208	Quote a string
4209	Find all URLRewrites by entity type
4210	Returns all URLRewrites for a given entity type .
4211	Notify observers .
4212	Checks if the given row is consistent .
4213	Checks if a header value exists .
4214	Creates a subject instance .
4215	Creates a serializer .
4216	Find all eavAttributes for the given entity type .
4217	Finds all EAV attributes for the given option value .
4218	Returns all the EAV attributes for the given user .
4219	Returns all the EAV attributes for the given entity type .
4220	Find all eavAttributes for the given entity type .
4221	Find an EAV attribute by its value .
4222	Prepare observers .
4223	Resolve path .
4224	Creates a directory .
4225	Set an attribute .
4226	Increment counter .
4227	Merge attributes recursively .
4228	Creates a filesystem adapter .
4229	Find all categories by store view
4230	Find all root categories .
4231	Creates an emitter .
4232	Prepare listeners .
4233	Remove all files
4234	Get Swift Mailer
4235	Initializes the source directory .
4236	Load all files from the source directory .
4237	Gets the list of statements .
4238	Creates an import adapter .
4239	Prepare callbacks .
4240	Get global data
4241	Load a prepared statement .
4242	Create a date converter .
4243	Override an array of artefacts
4244	Append artefacts .
4245	Get artefacts by type
4246	Creates a new artefact from the given columns .
4247	Export data to target directory
4248	Returns all available link types .
4249	Find all image types .
4250	Convert a date to a string
4251	Convert number to decimal format
4252	Imports the subject configuration .
4253	Get pattern keys .
4254	Resolve pattern values .
4255	Resolve pattern value .
4256	Prepare the pattern .
4257	Prepare ok filename .
4258	Checks if the given filename is equal .
4259	Get all valid filenames .
4260	Checks if a filename matches the given filename .
4261	Clean up a file
4262	Find all available tax classes .
4263	Caches the EAV attribute options .
4264	Find all available store websites .
4265	Find all stores .
4266	Find all entities in the database .
4267	Finds all entities by entity id
4268	Returns all available customer groups .
4269	Get primary key name .
4270	Removes the row from the row
4271	Render a blade view .
4272	Register REST routes .
4273	Get collection params
4274	Sanitize end date
4275	Get a list of events
4276	Map event module data
4277	Define category translations
4278	Before saving the post .
4279	Saves the image .
4280	Saves the location of the post .
4281	Save additional locations .
4282	Saves the category categories .
4283	Save the group groups
4284	Saves the post tags .
4285	Save all occurences
4286	Save post translations
4287	Get event by id
4288	Check if tax_filter is valid
4289	Remove expired occurrences
4290	Remove deleted events
4291	Remove expired events .
4292	Filter taxonomies
4293	Delete empty taxonomies
4294	Render the location list
4295	Save location data
4296	Get revision manifest .
4297	Remove meta boxes
4298	Output meta data
4299	Converts an array into a string .
4300	Register post type .
4301	Add a table column .
4302	Get table columns .
4303	Get table sortable columns
4304	Render table column content
4305	Save a new term .
4306	Activate a new event filter .
4307	Remove empty value
4308	Get empty values .
4309	Remove empty meta
4310	Save the current post .
4311	Check if attachment exists
4312	Render form fields .
4313	Add event date arguments to WordPress .
4314	Filter the event filter
4315	Get a single event date
4316	Returns the next occurrence date for a given array .
4317	Returns the closest element in an array
4318	Get date parts
4319	Save draw points
4320	Enqueue an event .
4321	Enqueue frontend events .
4322	Format a short date
4323	Import events .
4324	Import publishing groups
4325	Check if the database table exists .
4326	Create database table .
4327	Check if event manager exists
4328	Request API request .
4329	Get event occurrences
4330	Get event meta data
4331	Converts a string to a string
4332	Get nearby locations
4333	Update a new instance
4334	Displays pagination pagination .
4335	Get all events
4336	Get module categories
4337	Returns an array of category categories .
4338	Get module groups
4339	Get module tags
4340	Returns a list of years for the given module .
4341	Displays an oauth request .
4342	Sanitize input array
4343	Get the event data
4344	Get user groups
4345	Update the group value
4346	Get event content .
4347	Get the event content for the event .
4348	Get custom content
4349	Register event categories .
4350	Register event tags .
4351	Register event groups .
4352	Add import buttons .
4353	Import events .
4354	Accepts a post or deny .
4355	Create tunnel .
4356	Verify tunnel .
4357	Run a command
4358	Set a signal handler .
4359	Handles signal handler .
4360	Run the process .
4361	Displays the edit action .
4362	Create a DcGeneral instance
4363	Build the widget .
4364	Render widget .
4365	Process input values .
4366	Process a property value .
4367	Hashes the value of the given property value .
4368	Handle delete action .
4369	Create a new Imagine object
4370	Configure Imagick settings .
4371	Sets the settings .
4372	Handle the build widget .
4373	Get widget class .
4374	Get the options for the widget .
4375	Updates the model .
4376	Enforce model relationships .
4377	Process form input .
4378	Handle prePersist event .
4379	Handle postPersist event .
4380	Translate a label
4381	Builds the field set .
4382	Handle submit .
4383	Returns the title of the model .
4384	Persist the model .
4385	Configure CAS client
4386	Parse the configuration .
4387	Configure CAS validation .
4388	Returns the value of an attribute .
4389	Checks if the given key exists .
4390	Logout a user .
4391	Set the status code .
4392	Get the key of the model
4393	Check if the current value is an integer .
4394	Get request fragment from url
4395	Add a container to the container
4396	Build the query .
4397	Wraps the query with a row counter .
4398	Get the fake model for the given query .
4399	Generates an activation link from a given key .
4400	Assign a user to a user
4401	Check if a key is valid
4402	Read the pagination info .
4403	Register templates .
4404	Register custom handlers .
4405	Handle authorization error .
4406	Handle validation errors .
4407	Handle an exception .
4408	Removes all items from the database .
4409	Get the list of components
4410	Attach event handlers .
4411	Make a request .
4412	Check if asset is available .
4413	sync to database
4414	Update expired packages .
4415	Create a new client .
4416	Get the URL for the given configuration .
4417	Get the port .
4418	Validate entity managers .
4419	Terminate a process .
4420	Lock a book .
4421	Unlock a book .
4422	Clone a book
4423	Build a parameter value from a filter url
4424	Builds the parameter filters .
4425	Returns a sorted array of sorted tables .
4426	Check if the database is configured
4427	Configure the database .
4428	Get all migrations .
4429	Run migration .
4430	Rollback migration .
4431	Resolve migration state .
4432	Get migration table .
4433	Render the given values .
4434	Mount indentation .
4435	Set primary keys .
4436	Create a table .
4437	Update the table .
4438	Drop the table .
4439	Rename table .
4440	Execute all operations .
4441	Get migration files .
4442	Creates a filename for the given name .
4443	Bootstrap application .
4444	Load the application .
4445	Load the initializer .
4446	Loads the argument resolver .
4447	Set mailtrap configuration
4448	Fetch inbox message
4449	Get Mailtrap Client
4450	Reboot the kernel .
4451	Resolve arguments .
4452	Open a file .
4453	Get a file stat
4454	Returns the stats for the given stream .
4455	Check if a file exists .
4456	Get the filename for a given stream .
4457	Release a file .
4458	Handle a command .
4459	Check if the node is empty
4460	Exports one or more methods .
4461	Handle a request .
4462	Call a procedure .
4463	Render the checkbox .
4464	Enables a server .
4465	Extract the types from a docstring
4466	Returns the list of available methods .
4467	Get the signature of a method .
4468	Get the help for a method .
4469	Perform a multicall request .
4470	Load a class .
4471	Get the current version
4472	Print the usage .
4473	Parses a boolean value .
4474	Parse a file .
4475	Parse command line arguments
4476	Run the command .
4477	Returns true if the given id is resolved .
4478	Get the XML writer .
4479	Finalize the writer .
4480	Creates an XML reader .
4481	Reads the current node .
4482	Reads a start tag .
4483	Reads a closing tag .
4484	Parses a text node .
4485	Check if the given value is valid
4486	Create a checkbox .
4487	Create a form field .
4488	Create a select field .
4489	Register all sections .
4490	Register a section .
4491	Register the fields for the section .
4492	Register settings .
4493	Displays the captcha .
4494	Get the JavaScript link .
4495	Displays multiple captcha attributes .
4496	Build the captcha code .
4497	Upload a file .
4498	Get a project .
4499	Get all projects .
4500	Create a new template .
4501	Get a single template .
4502	Get all available templates .
4503	Create a new Job .
4504	Get a job .
4505	Get jobs by template
4506	Get current user .
4507	Get the personal library for the user .
4508	Merge job values .
4509	Get the LDAP user .
4510	Set LDAP config definition .
4511	Check the LDAP error code .
4512	Set allowed types .
4513	Set ldap credentials if needed .
4514	Switch domain if needed
4515	Switches the domain to the given domain .
4516	Hide or throw an exception if not found .
4517	Get username password .
4518	Add the domain to the user .
4519	Transforms the value of the LDAP entity .
4520	Get ldap object properties .
4521	Set the LDAP object for a property .
4522	Set the ldap value for a property .
4523	Builds the service .
4524	Get the values for the given choices .
4525	Returns a list of LDAP objects matching the given values .
4526	Get all operations .
4527	Set the roles .
4528	Checks if a role has a group of roles
4529	Check if a group has a given attribute value .
4530	Log a log operation .
4531	Save media to storage .
4532	Update media by id
4533	Get media media .
4534	Remove media .
4535	Parse options
4536	Get file name
4537	Check if file exists
4538	Rename the filename
4539	Get the alt tag
4540	Get title
4541	Get the name of the media .
4542	Get the weight .
4543	Save the media .
4544	Remove existing media .
4545	Move file to storage .
4546	Clones the storage .
4547	Create a directory .
4548	Clone a media .
4549	Boot the configuration .
4550	Register svg .
4551	Register the directives .
4552	Get the configuration .
4553	Generate a SVG element
4554	Transforms an item variable to a response .
4555	Transform value to string
4556	Adds a variable to the output .
4557	Checks if the variable is a QTI file .
4558	Checks if the variable is a QTI file .
4559	Converts a value to a QTI datatype .
4560	Creates a new revision from an object .
4561	Recursive diff between two arrays
4562	Set IP address .
4563	Set language .
4564	Set the origin .
4565	Resolve the origin .
4566	Set timestamp .
4567	PreSave the request .
4568	Process the schedule .
4569	Pre - update event .
4570	Check if the route is unique
4571	Generate a unique slug .
4572	Sets the slug .
4573	Sets the creation date .
4574	Sets the last modification date .
4575	Set route options
4576	Set master instance .
4577	Get the list of children .
4578	Get the siblings of this node .
4579	Load object from source
4580	Load object from cache
4581	Add an object to the cache .
4582	Get category items
4583	Get slug pattern .
4584	Get slug prefix .
4585	Get slug suffix .
4586	Determine if the slug is editable .
4587	Set slug .
4588	Generate slug .
4589	Generate route pattern .
4590	Filter route token
4591	Generate route object .
4592	Get the URL for the translation .
4593	Get slugified slug .
4594	Finalize the slug .
4595	Deletes object routes .
4596	Creates a collection of route objects .
4597	Get all revisions .
4598	Sets the publish date .
4599	Sets the expiration date .
4600	Set the publish status .
4601	Get the publish date status .
4602	Displays the help page .
4603	Rewrite routes .
4604	Reset the current data .
4605	Get next item
4606	Browse the site .
4607	Displays the log page .
4608	View the logs
4609	Browse events .
4610	Returns a list of all items .
4611	Displays the page .
4612	Deletes the item .
4613	Restore the model .
4614	Sorts the model
4615	Checks if the item can be deleted .
4616	Get the title of the model
4617	Returns the index dropdown filters .
4618	Get post object
4619	Get item by id
4620	Redirect to the page
4621	Add an option
4622	Add multiple options
4623	Returns option value
4624	Handle a method call .
4625	Set batch status
4626	Sets the download id to the database .
4627	List admin controllers
4628	Find admin controllers .
4629	Load admin controllers .
4630	Loads the admin controller .
4631	Load admin class .
4632	Route request
4633	Loads a view file
4634	Load CSV data
4635	Load an inline view
4636	Loads a search object
4637	Returns the value at the given key .
4638	Loads a pagination object
4639	Loads a cell .
4640	Get user data
4641	Loads a date cell
4642	Load a date time cell
4643	Loads a boolean cell .
4644	Loads the settings table .
4645	Add a header button
4646	Display dynamic table .
4647	Saves navigation settings
4648	Execute the export
4649	Create data export source
4650	Format a row
4651	Add an action .
4652	Set admin data .
4653	Unset admin data
4654	Set admin data
4655	Clear admin data
4656	Get all log files
4657	Finds the config file .
4658	Loads the js assets .
4659	Loads the assets .
4660	Load libraries .
4661	Autoload autoloads all modules
4662	Sets the backwards compatibility .
4663	Get site settings
4664	Prepare whitelist .
4665	Extracts the fieldsets from the given settings .
4666	Get the source by slug
4667	Get format by slug
4668	Export data .
4669	Execute the execution of an exception .
4670	Add a new item
4671	Save changes to database
4672	Get all users .
4673	Returns the total number of users .
4674	Format object .
4675	Returns a copy of the model .
4676	Validate user input
4677	Get model class and id
4678	Format object .
4679	Set date string
4680	Add daily html
4681	Set start of week
4682	Print a debug message
4683	Submit a bonus
4684	Assign a task to a team
4685	Assigns an engagement .
4686	Get report by freelancer
4687	Get report by freelancer team
4688	Get report by freelancer company
4689	Get report details
4690	Retrieves information about a particular buyer .
4691	Get engagement engagements
4692	Get a specific engagement
4693	Get full url
4694	Get a list of offers
4695	Commits a contract
4696	Get information about a specific personal account
4697	Get all roles
4698	Get the roles for a specific user
4699	Invoke a new job
4700	Get company by agency agency
4701	Get data by company
4702	Get users in team
4703	Get a list of jobs
4704	Get a specific job
4705	Post a job
4706	Edit a job
4707	Delete a job
4708	Get user info
4709	Get a specific user
4710	Get task by type
4711	Get room details
4712	Get room by offer
4713	Get room by application
4714	Get room by contract
4715	Create a room
4716	Send a message to a room
4717	Update room settings .
4718	Update room metadata
4719	Get snapshot by contract
4720	Update a snapshot
4721	Delete a snapshot
4722	Get active Milestone
4723	Get all submissions for a milestone
4724	Create a new milestone
4725	Edit a milestone
4726	Delete a milestone
4727	Make a request
4728	Register the accountkit .
4729	Get content body
4730	Get account data .
4731	List contacts .
4732	Display a contact .
4733	Create a new contact .
4734	Edit a contact .
4735	Update a contact .
4736	Deletes a contact .
4737	Display a gadget .
4738	Get the field value .
4739	Check if a contact is viewed .
4740	Updates the given contact .
4741	Remove a contact .
4742	Display a contact .
4743	Parse HTML tag .
4744	Get the preview of the link .
4745	Get the preview of the link .
4746	Add parser .
4747	Remove a parser .
4748	Add default parser .
4749	Calculate contrast from hexadecimal
4750	Encode a path .
4751	Convert an interval to a string
4752	Called when a file is downloaded .
4753	Get the datetime data
4754	Returns an array of options .
4755	Get model relation .
4756	Adds a relationship to the query .
4757	Get client .
4758	Convert a string to a number
4759	Scope key value .
4760	Set the availability_at attribute .
4761	Get payload attribute .
4762	Converts a number of bytes to a human readable format .
4763	Get time offset
4764	Format a number of seconds .
4765	Truncate a long text .
4766	Add a permission to a topic .
4767	Confirm a subscription .
4768	Create a new topic
4769	Get topic attributes
4770	List subscriptions .
4771	List subscriptions for a topic .
4772	List topics .
4773	Publish a message to a topic .
4774	Remove a permission .
4775	Set topic attributes .
4776	Subscribe to a topic .
4777	Create a platform endpoint
4778	Publish a message to a device .
4779	Make a request
4780	Convert XML array to array
4781	Clear all tasks .
4782	Convert a priority value to a priority .
4783	Run the task .
4784	Customize settings .
4785	Get invitation .
4786	Create default settings .
4787	Creates a new coupon .
4788	Get a coupon .
4789	Get the coupon for a user
4790	Get team .
4791	Get team roles
4792	Update user profile .
4793	Validate user profile .
4794	Update the email address .
4795	Install the java script .
4796	Install environment variables .
4797	Subscribe a subscription .
4798	Change subscription plan .
4799	Update a card .
4800	Update extra billing info
4801	Cancel subscription .
4802	Resume a subscription .
4803	Download an invoice .
4804	Set price .
4805	Set currency symbol .
4806	Sets the trial days .
4807	Set the tier .
4808	Set the features .
4809	Get current user .
4810	Create a new user .
4811	Create new user .
4812	Create a default user .
4813	Create a subscription .
4814	Register a new user .
4815	Check if a token is valid
4816	Delete a user
4817	Show the dashboard .
4818	Invite user by email
4819	Remove a user by id .
4820	Send a team invitation .
4821	Accept a team invitation .
4822	Create a tab .
4823	Returns a list of all tabs .
4824	Register the resources .
4825	Register services .
4826	Send invoice .
4827	Handle invoice payment .
4828	Create a new team .
4829	Get all teams for a user .
4830	Get invitations for a user .
4831	Attach a user to a team .
4832	Find a plan .
4833	Returns a list of plans .
4834	Get current team .
4835	Check if this team belongs to this team .
4836	Get team role .
4837	Store a new team .
4838	Edit a team .
4839	Update team .
4840	Switch current team .
4841	Update team member .
4842	Remove a team member .
4843	Remove a team .
4844	Deletes a team .
4845	Call custom validation .
4846	Call custom update .
4847	Update the password .
4848	Enable two - factor authentication .
4849	Validate the authentication code .
4850	Disable two - factor authentication .
4851	Authenticate the user .
4852	Logout and redirect to the user .
4853	Post a token .
4854	Get the registration .
4855	Validate registration .
4856	Validate default registration .
4857	Validate the coupon code .
4858	Get logout .
4859	Flash a message
4860	Creates a new event .
4861	Register an exception .
4862	Export an exception .
4863	Import an exception .
4864	Normalize an event .
4865	Returns a WpHandlerWrapper for the given handler .
4866	Create a cached event .
4867	Checks if an event has been cached .
4868	Get a cached event .
4869	Remove event from cache
4870	Create a WpHandler wrapper .
4871	Export an exception .
4872	Import an exception .
4873	Remove a filter .
4874	Replace WordPress hook .
4875	Returns the number of tracked items .
4876	Clears the ref bag .
4877	Send message to pool .
4878	Remove a task from the queue .
4879	Bootstrap the application .
4880	Filters an array of arrays .
4881	Flatten an array of arrays .
4882	Converts an array of arrays into a Promise .
4883	Synchronize a function .
4884	Convert the result into an array .
4885	Sets the number of arguments .
4886	Run wp hook .
4887	Apply filters .
4888	Add a WpHook .
4889	Wrap a function result .
4890	Resume all streams .
4891	Stop the socket .
4892	Destroy all sockets .
4893	Get the socket for the given worker .
4894	Remove a worker socket .
4895	Prepare worker .
4896	Attach a method handler .
4897	Hash a callable .
4898	Write data to the stream .
4899	Creates a writable stream .
4900	Read data from socket .
4901	Handle writing data .
4902	Check socket errors .
4903	Remove read listener .
4904	Remove write listener .
4905	Decode a message .
4906	Attach a timer .
4907	Cancel the timer .
4908	Submit a thread to the queue .
4909	Submit a worker to the queue .
4910	Submit a task .
4911	Submit a task to the queue .
4912	Stop a worker .
4913	Remove a worker .
4914	Send message to worker
4915	Broadcast a message .
4916	Called when the worker is running .
4917	This method is called when the worker is running .
4918	Spawn a new worker
4919	Check if worker is alive .
4920	Check if a worker is shutdown .
4921	Handle a message .
4922	Handle socket close .
4923	Read bytes from the stream .
4924	Read a UUID from the stream .
4925	Read a list .
4926	Read a map .
4927	Read a varint .
4928	Read a decimal number .
4929	Register the bulk service .
4930	Boot the application .
4931	Send a message .
4932	Validate the response .
4933	Send bulk messages
4934	Get status for a batch
4935	Send a batch of messages
4936	Generate CSV string
4937	Send a message .
4938	Set message .
4939	Calculate the number of concat characters
4940	Parse a SMS recipient .
4941	Send a batch .
4942	Finds the dynamic data by the given filters .
4943	Counts the number of dynamic objects .
4944	Adds a filter to the query builder .
4945	Add search filter .
4946	Add date range filter .
4947	Get field value
4948	Returns an array of form fields
4949	Builds and returns a configuration object .
4950	Builds the configuration for the given type .
4951	Build admin mail configuration .
4952	Build the mail configuration for a dynamic template .
4953	Get a list of file fields for a dynamic attachment .
4954	Get the collection id for a dynamic collection .
4955	Get the email address from the dynamic field .
4956	Get email address
4957	Builds a form .
4958	Creates a dynamic form .
4959	Loads form entity entity .
4960	Returns the default values for the given form entity .
4961	Get the webspace key .
4962	Check if a password is valid
4963	Returns the password for the given type .
4964	Get the list of entries .
4965	Get field descriptors .
4966	Delete dynamic media .
4967	Get filters .
4968	Loads a form .
4969	Convert value to string
4970	Get media URLs .
4971	Gets the download url .
4972	Returns a list of choices .
4973	Get choice options
4974	Get form by id
4975	Handles a request .
4976	Returns the translation for the given locale .
4977	Get field by key
4978	Get all fields not in array
4979	Serialize the fields for the given locale .
4980	Displays a form .
4981	Displays a form .
4982	Handle form submit .
4983	Handle form submit .
4984	Displays a token .
4985	Get errors .
4986	Handle a form .
4987	Save form data .
4988	Upload media files .
4989	Map Media Ids
4990	Get media data .
4991	Get list of lists
4992	Get builder .
4993	Get block prefix .
4994	Creates a new collection .
4995	Loads the collection id .
4996	Get item width number
4997	Calculate the last width of the current item .
4998	Receives a PDO exception .
4999	Set the hostname .
5000	Set the unix socket .
5001	Set the memory memory .
5002	Sets the file path .
5003	Sets the database name .
5004	Sets the charset .
5005	Ensure connection is connected .
5006	Configure the connection .
5007	Execute a callback .
5008	Get all queues
5009	Get a specific queue
5010	Post a message .
5011	Send messages to a queue
5012	Get a message by id .
5013	Touch a message .
5014	Release a message .
5015	Add alerts to the queue
5016	Delete an alert .
5017	Delete a queue
5018	Update a queue
5019	Create a new queue
5020	Replace subscribers for a queue .
5021	Remove subscriber from queue
5022	Output JSON data .
5023	Outputs the given data .
5024	Generate a XML document .
5025	Output CSV data .
5026	Flatten an array .
5027	Executes the active cache .
5028	Format the stats .
5029	Format usage .
5030	Format uptime .
5031	Add a new server
5032	Add a list of servers
5033	Checks if a server is connected .
5034	Get a cached value .
5035	Sets a value in the cache .
5036	Delete a key
5037	Set the cache client
5038	Get a value from the cache .
5039	Delete a key
5040	Create an InvalidArgumentException .
5041	Populate builder .
5042	Set options .
5043	Set notification .
5044	Set payload data .
5045	Encode a CDATA string .
5046	Returns the URL for the given action .
5047	Get authentication URL .
5048	Gets the authentication URL .
5049	Get a simple authentication URL .
5050	Get HTTP authentication URL .
5051	Ensure channel parameter is set .
5052	Set product ID
5053	Get the list of similar attributes .
5054	Get the list of similar records .
5055	Write a string to the file .
5056	Autoload class
5057	Sets the target property .
5058	Trigger data import
5059	Trigger a suggestion .
5060	Apply mapping rules .
5061	Ensure channel parameter is set .
5062	Add required parameters .
5063	Add an appender to the pool .
5064	Get appenders .
5065	Log a trace message .
5066	Log debug message .
5067	Log a warning message .
5068	Log a message .
5069	Log an event .
5070	Log a message .
5071	Remove an appender .
5072	Get the effective level .
5073	Returns the logger instance .
5074	Get a logger instance .
5075	Reset configuration .
5076	Configure the configuration .
5077	Get configurator .
5078	Set the number of records .
5079	Add product IDs
5080	Get recommendations .
5081	Track click .
5082	Track cart tracking
5083	Track checkout .
5084	Track a track .
5085	Track login tracking .
5086	Set product IDs
5087	Get the comparable attributes .
5088	Get the comparison records
5089	Format the given event .
5090	Set boolean value .
5091	Set the value of the given property .
5092	Set file size
5093	Set property value
5094	Set a string value
5095	Returns the location information .
5096	Get the start time
5097	Get the time of the log .
5098	Get Request
5099	Get the tag cloud .
5100	Sets the word count .
5101	Add feedback .
5102	Set product numbers
5103	Add product numbers
5104	Set page ID
5105	Make the product campaign .
5106	Make a shopping cart .
5107	Get all campaigns
5108	Get raw products
5109	Add a converter .
5110	Returns a converter for the given word .
5111	Parse the modifiers .
5112	Set the logger root level .
5113	Add a renderer .
5114	Set default renderer
5115	Get a mapping by class name
5116	Get whitelist server parameters
5117	Load configuration file
5118	Parse the configuration file .
5119	Parse a logger .
5120	Parse appender .
5121	Parse the renderer .
5122	Append an event to syslog .
5123	Parse syslog option
5124	Parse syslog facility
5125	Parse syslog priority .
5126	Appends an event to the database .
5127	Format an exception .
5128	Close the collection .
5129	Configure logger .
5130	Create appender layout .
5131	Sets the id of the request .
5132	Get the follow search value .
5133	Add a new filter .
5134	Set the response .
5135	Set session id
5136	Checks if this logger is equal to another LoggerLevel .
5137	Get log level .
5138	Get the fatal log level .
5139	Get the error level .
5140	Get the log level .
5141	Get the logger level .
5142	Get the log level .
5143	Get the trace level .
5144	Get the level of the log level .
5145	Returns the level of the given argument .
5146	Get system property
5147	Convert value to logger level
5148	Convert value to string
5149	Substitute constants .
5150	Get a logger instance .
5151	Get request target
5152	Activate options .
5153	Format a log event .
5154	Add a new filter
5155	Checks if the given level is a higher level .
5156	Prints a warning message .
5157	Get suggestions .
5158	Returns the name of the factfinder class .
5159	Roll the oldest log file .
5160	Activate the logger .
5161	Appends an event to the database .
5162	Format the given event .
5163	Generates the URL for the given parameters .
5164	Returns the feedback for the given label .
5165	Get all pushed products
5166	Get active questions
5167	Get the advisor tree .
5168	Activates the options .
5169	Append a log event .
5170	Find a permission by its ID .
5171	Find a permission by its value .
5172	Render an item
5173	Setup layout .
5174	Get all users .
5175	Create a new user .
5176	Create a new user
5177	Activate a user .
5178	Show user information .
5179	Get all groups
5180	Update a group .
5181	Delete a user from a group .
5182	Add user in group
5183	Validate group
5184	Load the include files .
5185	Register the breadcrumbs .
5186	Get the dashboard .
5187	Post login .
5188	Get all permissions .
5189	Create a permission .
5190	Delete a permission .
5191	Paginate the page
5192	Authenticate a user .
5193	Generate a nonce .
5194	Checks if a flag is set .
5195	Get rule by flag
5196	Checks if a parameter is required .
5197	Check if a flag is required
5198	Check if a flag is optional .
5199	Parse the command line arguments .
5200	Check if a string is a param .
5201	Order parameters .
5202	Authenticate the request .
5203	Get report API
5204	Get permissions API .
5205	Get a company api .
5206	Get the OAuth API
5207	Make a request .
5208	Get all elements of a report suite .
5209	Get a list of metrics for a report .
5210	Retry a report .
5211	Get sleep seconds .
5212	Parse options array
5213	Get all images
5214	Get all images .
5215	Get a list of videos .
5216	Output a string to stdout
5217	Get table definition .
5218	Generate drop table .
5219	Get drop table data .
5220	Get the key definition .
5221	Get drop key .
5222	Returns a list of foreign keys .
5223	Drop foreign keys .
5224	Get column definition .
5225	Get primary key .
5226	Get table comment .
5227	Get schema type .
5228	Creates a column definition .
5229	List tables .
5230	Generate migration file .
5231	Create table .
5232	Drop table
5233	Generate a file .
5234	Print information about a table .
5235	Get parameters for a table
5236	Start printing a string
5237	Ends a string .
5238	Display the dump .
5239	Fetch the response
5240	Populate the response
5241	Sets the webservices URL .
5242	Gets a list of groups .
5243	Get group by DN
5244	Get all users .
5245	Get user by GUID .
5246	Get user by DN
5247	Get user by email address .
5248	Get user by username .
5249	Get username by email .
5250	Get LDAP group members .
5251	Update the LDAP group .
5252	Create a new LDAP user
5253	Create a new LDAP group
5254	Update LDAP user .
5255	Update LDAP groups for a member .
5256	Set the password .
5257	Delete LDAP member .
5258	Update the index .
5259	Connect to the server
5260	Disconnect the socket .
5261	Read string from socket
5262	Send string to socket
5263	Encode a string .
5264	Decodes a string .
5265	Read response from server
5266	Authenticate a user
5267	Called when the user is consistent .
5268	Creates a new LDAP user .
5269	Write this member to the owner .
5270	Get message from session .
5271	Displays the lost password form .
5272	Displays the password reset .
5273	Search for LDAP records .
5274	Get group by GUID .
5275	Change the password of the LDAP .
5276	Reset a password
5277	Moves a directory from the LDAP .
5278	Authenticate a user
5279	Attempt to authenticate a user .
5280	Handles the authentication form .
5281	Generate SP metadata
5282	Convert a hex string to a little endian
5283	Returns an array of rows
5284	Selects items from the index .
5285	Splits a hash into a hash .
5286	Create a new database instance .
5287	Get table definition
5288	Get all tables .
5289	Fixes indexes .
5290	Returns the index of the column
5291	Get a single row
5292	Build the index name .
5293	Encodes the given data .
5294	Generate a random key
5295	Get supported information .
5296	Generate a HMAC hash .
5297	Verify HMAC .
5298	Verify timestamp .
5299	Removes a string from a string .
5300	Push string to string
5301	Convert a string to a string .
5302	Get error message .
5303	Add an error message .
5304	Get the main message .
5305	Get the status of the response .
5306	Get the error message .
5307	Get all errors
5308	Check if a field is valid
5309	Parse a schema .
5310	Ensure that the given fieldnames are valid .
5311	Validate data
5312	Validate field .
5313	Validate an array
5314	Validate base64
5315	Validate boolean value .
5316	Validate datetime .
5317	Validate float value
5318	Validates an integer value .
5319	Validate an object
5320	Validate required fields
5321	Validate string
5322	Validate timestamp .
5323	Get all available addon information
5324	Bootstrap plugin .
5325	Get data from cache
5326	Get the class name for the given classname .
5327	Checks if an addon is enabled .
5328	Get information about an addon .
5329	Scan a directory recursively .
5330	Scan an addon .
5331	Scan the addons .
5332	Start an addon .
5333	Get headers .
5334	Call user function .
5335	Bind an event to an event .
5336	Binds a class to an event .
5337	Dump all handlers .
5338	Fire an event .
5339	Fires an event .
5340	Fire event handler .
5341	Check if a function exists
5342	Get event name .
5343	Get handler handlers
5344	Check if an event has been registered
5345	Checks if an object exists .
5346	Get the value of the driver .
5347	Set a value
5348	Splits a hash from a hash
5349	Set default path
5350	Get the value of a key
5351	Loads the config file .
5352	Save data to disk
5353	Returns all routes matching the given request .
5354	Add a route .
5355	Finalize the response .
5356	Check if an action exists .
5357	Returns an array of allowed methods .
5358	Determine if the request matches the given pattern .
5359	Checks if the given value matches the given value .
5360	Get current response
5361	Create a Response object
5362	Get content type .
5363	Set the content asset .
5364	Set the content type .
5365	Get HTTP status message
5366	Sets cookies .
5367	Set global cookies
5368	Set meta data
5369	Set the data
5370	Set headers .
5371	Get the global headers
5372	Normalize header name .
5373	Flush headers .
5374	Migrate table .
5375	Rename table .
5376	Drop index .
5377	Create a new index .
5378	Convert value to type
5379	Get primary key value .
5380	Get table names
5381	Creates a route .
5382	Set the conditions .
5383	Set the list of methods .
5384	Set the mapping .
5385	Get global mapping .
5386	Checks if a mapping is mapped .
5387	Get mapped data .
5388	Checks if the request matches the request .
5389	Set the pattern .
5390	Dispatch a callback .
5391	Converts a pattern to a regex .
5392	Execute a SQL query
5393	Build a select statement
5394	Renders a list of SQL statements .
5395	Build a insert statement
5396	Build an INSERT statement .
5397	Returns a string representation of a column definition .
5398	Returns a string representation of the index definition .
5399	Get column orders .
5400	Get formats from database
5401	Translate a row
5402	Verify the given password .
5403	Encode a 64 - bit integer .
5404	Get current request .
5405	Set default environment variables
5406	Get global environment variable .
5407	Parse server variables .
5408	Override environment variables
5409	Get environment variable
5410	Set environment variable
5411	Get headers .
5412	Get host and port
5413	Set extension .
5414	Set path extension
5415	Set full path .
5416	Set server port
5417	Get query parameter
5418	Set query parameter
5419	Get input value
5420	Get data from request
5421	Sets data for a given key .
5422	Get the url of the request .
5423	Set url .
5424	Convert a path to a URL .
5425	Split path .
5426	Reset the table .
5427	Add a column
5428	Get column definition
5429	Add primary key .
5430	Set table definition
5431	Set the table name .
5432	Add an index to the table .
5433	Display robots .
5434	Get a list of all pages
5435	Get resource by ID
5436	Validate the attributes
5437	Get attribute value .
5438	Set attribute values .
5439	Check if API method is supported
5440	Check required attributes .
5441	Check JUDO ID .
5442	Get summary message .
5443	Get model .
5444	Returns the summary of the error .
5445	Get a resource
5446	Perform a POST request .
5447	Coerces the attributes of this payment .
5448	Validate the data .
5449	Check if a key exists .
5450	Render notification .
5451	Add a notification
5452	Link a delivery .
5453	Convert a job to an array
5454	Convert a job to a Job object
5455	Free the queue .
5456	Free the datagram .
5457	Creates a DashboardChart instance .
5458	Handle a single item
5459	Sort a list of items
5460	Returns the link to the editor .
5461	Displays the detail form .
5462	Save the item to the dashboard .
5463	Get RSS items
5464	List recent edits .
5465	Update the Dashboard Dashboard .
5466	Returns the template name for this field .
5467	Returns the view for the current page
5468	Creates the link for this model .
5469	Returns the grid fields for the given page .
5470	Get the grid field .
5471	Get the tab for the current page
5472	Returns a list of all the items in the grid .
5473	Get grid fields for a page
5474	Get account data
5475	Clean error response
5476	Process a filter
5477	Creates a new account object from a JSON string .
5478	Creates a report object from a JSON string .
5479	Check if a key exists
5480	Fetch a token
5481	Get the url of the request
5482	Perform a POST request .
5483	Get variables .
5484	Perform HTTP request
5485	Make curl request
5486	Create a HTTP request
5487	Get recent files
5488	Duplicate the dashboard .
5489	Returns the template name for this model .
5490	Returns the view for the view .
5491	Get the model admin items .
5492	Get models for a panel
5493	Provides the permissions for the dashboard .
5494	Sort the dashboard .
5495	Set the default dashboard configuration .
5496	Apply all the dashboard settings to the dashboard .
5497	Renders the panel
5498	Delete the panel
5499	Configure the panel .
5500	Save configuration .
5501	Returns the icon for this section .
5502	Convert seconds to minutes
5503	Gets the API client .
5504	Returns the configuration for this dashboard .
5505	Check if the user is configured
5506	Get the path for this page .
5507	Get the chart title
5508	Read a floating point from the file .
5509	Read data from file .
5510	Convert a value to a hexadecimal
5511	Reads data from the buffer .
5512	Reads a signed signed value .
5513	Read data from the file .
5514	Reads a signed signed signed value .
5515	Read a 64 bit integer .
5516	Reads a signed signed signed value .
5517	Export a span .
5518	Get callback method .
5519	Parse robotsTxt file
5520	Extracts the list of lines from the given content .
5521	Builds a list of RegExpions .
5522	Get robots txt content
5523	Get the robotsTxt URL for the given URL .
5524	Initialize the crawler process .
5525	Set multi - processes
5526	Start child process loop .
5527	Check for abort .
5528	Create the working directory
5529	Get the process report
5530	Add link priority
5531	Set the follow mode
5532	Set the traffic limit
5533	Set working directory
5534	Sets the current page .
5535	Set connection timeout
5536	Set socket timeout
5537	Resume the given crawler .
5538	Sets the starting URL .
5539	Removes redirect urls from document info
5540	Checks if url matches rules
5541	Add a URL filter rule .
5542	Add URL filter rules .
5543	Mark the URL as follow .
5544	Check if the cache is in cache
5545	Get all URLs
5546	Add multiple URLs
5547	Start a benchmark .
5548	Stop the benchmark .
5549	Reset all benchmark results .
5550	Get all benchmark results
5551	Get the current microtime
5552	Open database connection .
5553	Calculate the hash of a URL .
5554	Get the priority of a URL
5555	Add a link priority
5556	Add link priority
5557	Add a document info
5558	Get the next document .
5559	Creates a new instance from a URL .
5560	Sets the source URL .
5561	Finds the redirect link in the header
5562	Add post data
5563	Update the crawler status
5564	Register a child process
5565	Get child pids
5566	Kill child processes .
5567	Get IP address
5568	Check if a URL is in cache
5569	Remove visitor .
5570	Traverse the expression .
5571	Filters a collection .
5572	Create a new method
5573	Format value .
5574	Formats an array of values .
5575	Writes configuration values to the configuration .
5576	Get a value from a variable .
5577	Checks if the engine is configured .
5578	Expands an array of nested arrays .
5579	Splits the conditions of a token .
5580	Checks if the given key matches the given token .
5581	Get cache value
5582	Set the Message instance
5583	Triggers the trace .
5584	Export a variable
5585	Listen for messages .
5586	Parse a message
5587	Get the file path .
5588	Load a plugin .
5589	Load plugin config .
5590	Load all plugins .
5591	Bootstrap plugin .
5592	Read a config file .
5593	Configure the given key .
5594	Read config from config
5595	Load module modules .
5596	Check plugins .
5597	Unload a module
5598	Load a module .
5599	Returns true if module has been loaded .
5600	Check if module is modified
5601	Returns the loaded module .
5602	Checks if a module exists .
5603	Sets a module .
5604	Get value from cache
5605	Set a value in the cache .
5606	Get multiple values .
5607	Set multiple values .
5608	Call a method
5609	Called when a profile is started .
5610	Returns the result of the return value .
5611	Get the profile key .
5612	Add all arguments to the command .
5613	Converts a command to an array of arguments .
5614	Evaluate command arguments .
5615	Set the expiration time .
5616	Set length .
5617	Read data from socket
5618	Send data to socket
5619	Check if a command can be executed .
5620	Set the protocol version .
5621	Process data .
5622	Get the last key .
5623	Prepare the connection .
5624	Execute the command .
5625	Read raw data from socket
5626	Reads a long value .
5627	Read a string .
5628	Read bytes from the stream .
5629	Read a record .
5630	Add bytes to the request .
5631	Unpack an integer into an integer .
5632	Reset data .
5633	Get the property s properties .
5634	Render a component .
5635	Returns a string of class names .
5636	Get all Issuers .
5637	Get all allowed products
5638	Process products .
5639	Create a new order .
5640	Create a new SepaOrder
5641	Create a new SofortOrder
5642	Create a payment order .
5643	Creates a new credit card .
5644	Creates a new payment order .
5645	Create a cash on delivery order
5646	Create a new KlarnaOrder
5647	Create a payment order .
5648	Create a new payment order
5649	Creates a new order after payment .
5650	Create a new order
5651	Get order by ID
5652	Post an order .
5653	Sets the captured status .
5654	Creates a new payment with the given issuer .
5655	Creates a new credit card .
5656	Creates a new payment with the given currency .
5657	Create a new PaymentMethod
5658	Create a new payment
5659	Create a new payment method
5660	Creates a new payment
5661	Create a payment method
5662	Create a new Transaction instance .
5663	Remove null values from an array
5664	Creates a new client .
5665	Get the endpoint for the given product .
5666	Check if value is valid
5667	Builds the request body .
5668	Execute payment .
5669	Capture a payment .
5670	Authorize a payment .
5671	Create a payment .
5672	Get access token .
5673	Build a Link .
5674	Build a capture .
5675	Build an amount from an array .
5676	Builds an array of URLs
5677	Build an access token .
5678	Build a list of transactions .
5679	Builds an array of transactions .
5680	Send a request to the client .
5681	Build a payment .
5682	Build a PaypalPaymentAuthorization .
5683	Build a Payer .
5684	Build payer data
5685	Build an authorization .
5686	Make sure a string is safe
5687	Make a safe string .
5688	Get form value .
5689	Check if a form mutator has a mutator .
5690	Get the reflection class .
5691	Generate a favicon .
5692	Generates a link .
5693	Renders a list of items .
5694	Renders a UL .
5695	Get model value attribute .
5696	Generates a text field .
5697	Creates a new email .
5698	Creates a phone input .
5699	Creates a form input .
5700	Generates a URL .
5701	Generates a new color .
5702	Determine if the given value is checked .
5703	Get the URL action .
5704	Get route action .
5705	Get controller action action .
5706	Insert a string at the given position .
5707	Search for a string
5708	Sets the value at the given index .
5709	Unset an offset .
5710	Fetch data from a resource .
5711	Parse a file .
5712	Get line count
5713	Unzip file .
5714	Get the size of a URL .
5715	Get files array
5716	Free the stream .
5717	Removes the next byte from the buffer .
5718	Sets the current position .
5719	Insert data into the iterator .
5720	Replace the data in the iterator .
5721	Removes the element from the iterator .
5722	Publish directory .
5723	Close the stream .
5724	Scope the admin1 table
5725	Add country info
5726	Scope a city .
5727	Scope country to country
5728	Scope search by feature .
5729	Create redirects .
5730	Checks if nodeUri is changed .
5731	Builds redirects .
5732	Creates a redirect from the given node .
5733	Remove a node redirect if it was removed .
5734	Checks if the given node is restricted by the current node .
5735	Check if the given node is restricted by the current node .
5736	Get hostnames .
5737	Get the URI builder .
5738	Loads the name of the url
5739	Validate a page .
5740	Render page pager
5741	Render label callback
5742	Initialize the plugin .
5743	Add the links to the plugin .
5744	Get the plugin version
5745	Get the remote version .
5746	Checks if the file type is valid .
5747	Check if a file type is a svg .
5748	Parses the contributors .
5749	Get plugin slug by path
5750	Get remote contributions
5751	Validate the file .
5752	Returns the loader for the given data
5753	Loads the content .
5754	Creates an array of options .
5755	Get allowed tags
5756	Get allowed protocols .
5757	Get allowed domains .
5758	Sanitize a domain .
5759	Sanitize attribute value
5760	Sanitize a URI string .
5761	Sanitize CSS URI
5762	Loads a SVG file .
5763	Strip comments .
5764	Replicates the flags of a resource .
5765	Make loaders .
5766	Prepare loaders
5767	Creates a list of loaders .
5768	Parse options .
5769	Make cache provider
5770	Make the path to the cache .
5771	Create the loader .
5772	Create variables .
5773	Load data from cache .
5774	Merges the given content .
5775	Get resource by name
5776	Creates a new prefix .
5777	Create a list of resources
5778	Add content to the parent .
5779	Get supported files in directory
5780	Merge parent content .
5781	Get a value from an array .
5782	Check if a key exists .
5783	Parse a value .
5784	Parse a value .
5785	Fetches variables matching a regular expression .
5786	Fetch a variable .
5787	Check if a variable exists .
5788	Performs the replacement of the given value .
5789	Export SVG document
5790	Remove all nodes from a DOM node
5791	Remove a node
5792	Set the base path .
5793	Make the file path .
5794	Search for resources .
5795	Parse content .
5796	Parses the imports .
5797	Import a resource into an array
5798	Create a resource provider
5799	Creates the import name from the given resource .
5800	Import a resource provider
5801	Check if a value is a boolean
5802	Get boolean value .
5803	Returns a list of mime aliases .
5804	Update filename extension .
5805	Check if the given mime type is an alias .
5806	Check if an alias is allowed .
5807	Loads the config file .
5808	Get supported files .
5809	Creates a list of resources .
5810	Check if the cache is cached
5811	Create a cache file .
5812	Sets the version of the asset .
5813	Reads the file contents .
5814	Send a REST request
5815	Set curl options
5816	Get a GET request
5817	PUT PUT request
5818	Delete a request
5819	Perform a POST request .
5820	Perform a HEAD request .
5821	Execute the request
5822	Install extension .
5823	Add a list of buckets
5824	Reads the contents of a resource .
5825	Writes the content to the server .
5826	Check if XML is valid
5827	Set up a range
5828	Gets the values for this element .
5829	Add values options to the element
5830	Add an aggregate element to the element
5831	Get params
5832	Retrieve search results .
5833	Retrieves the search results for a given key .
5834	Retrieves a key value .
5835	Highlight content .
5836	Get REST client
5837	Get a REST client
5838	Get admin client
5839	Get REST API
5840	Get database instance .
5841	Get options .
5842	Autoload a class
5843	Returns the XML representation of this query .
5844	Adds an option to the root node .
5845	Add an option to an option .
5846	Read configuration file
5847	Write the configuration to the database .
5848	Delete a query
5849	Set search options
5850	Reads a document .
5851	Write a document to the document .
5852	Delete a document
5853	Reads the metadata from the document .
5854	Write metadata to document
5855	Delete metadata
5856	Set file content
5857	Get file mime type
5858	Log a SOAP call .
5859	Decode SOAP reply
5860	Convert an associative array to an array
5861	Performs LDAP sync sync .
5862	Get phone names
5863	List all phones in a site
5864	Search a phone by name
5865	List phone phones
5866	Get phone by name
5867	Get directory numbers by name .
5868	Get device pool names
5869	Returns a list of all site names
5870	Get lines by site
5871	Returns a list of lines for a phone .
5872	Get all object types for a site
5873	Get object type by name
5874	Delete object type by UUID
5875	Add capabilities .
5876	Get the latitude
5877	Get the longitude .
5878	Get the body type
5879	Get error message
5880	Get URL string
5881	Create a REST API .
5882	Delete a resource
5883	Wait until the request is successful .
5884	Check if the API exists
5885	Get the element as an element .
5886	Add term options
5887	Add facet options .
5888	Add the fragment scope to the element
5889	Set file content
5890	Get result by URI
5891	Get result by index
5892	Get facet by name
5893	Add constraints .
5894	Returns an XML element as an XML element .
5895	Add preferred elements .
5896	Get the transform results as an element .
5897	Add multiple collections .
5898	Delete collection of collections
5899	Add permissions to the collection .
5900	Removes all permissions from the collection .
5901	Removes properties from the object .
5902	Get the metadata as XML .
5903	Loads the contents of an XML file .
5904	Enable an alias .
5905	Sets the container .
5906	Compares the fixture constraints .
5907	Compares two indexes .
5908	Compare two fields
5909	Get fixtures files
5910	Compares the fields of the fixture .
5911	Set the form
5912	Defines the horizontal form .
5913	Generates a label .
5914	Returns the error message .
5915	Render a group .
5916	Generates an action .
5917	Generates a link .
5918	Generates an alert .
5919	Generates a password .
5920	Generates a file input .
5921	Generates a link .
5922	Generates a secure link .
5923	Generates a link to a link .
5924	Generates a link action .
5925	Generates a link to email address .
5926	Creates an alert .
5927	Execute regular expression
5928	Get short message .
5929	Get the value of a given key .
5930	Sets a value in the cache .
5931	Remove basket from basket
5932	Clear all shop orders
5933	Update basket .
5934	Get literal value .
5935	Get literal type
5936	Get literal language .
5937	Creates a URI from a URI .
5938	Creates a literal string .
5939	Checks the MD5 request
5940	Builds the response .
5941	Initialize the tokenizer
5942	Tokenize input .
5943	Decode the given code .
5944	Encodes an ID .
5945	Creates a new instance of Factory .
5946	Creates a Statement with the given id .
5947	Returns a Statement with the given ID .
5948	Creates a Statement with the given ID .
5949	Creates a new statement with the given id .
5950	Create an option .
5951	Creates a StatementResult .
5952	Attach PDFTransformer .
5953	Initialize view helper .
5954	Gets the last file .
5955	Collect all files from the event .
5956	Clean layout .
5957	Attach view resolver
5958	Attach PDF transform .
5959	Resolve a PDF file .
5960	Registers an option .
5961	Get an option .
5962	Get activity profile document .
5963	Get agent profile document .
5964	Creates a state document document .
5965	Add a new behavior .
5966	Add a value to the bucket .
5967	Define default behavior .
5968	Set default value
5969	Executes the command .
5970	Create a new behavior .
5971	Set default behavior .
5972	Set the behavior .
5973	Start metrics .
5974	Stop metrics .
5975	Execute the strategy .
5976	Returns a new collection with the given step .
5977	Get first item from collection .
5978	Get last item .
5979	Returns the maximum value of the collection .
5980	Filter items by callback .
5981	Convert the collection to an array .
5982	Get array of items .
5983	Check if slug is enabled
5984	Parses feature map .
5985	Creates a new HashMap .
5986	Creates a new bucket .
5987	Set the map .
5988	Creates a builder for a feature .
5989	Set the bucket .
5990	Describe a list of tables .
5991	Describe a table .
5992	Create new tables .
5993	Create a new table .
5994	Create a list of fields
5995	Create a new field .
5996	Create a new relationship
5997	Create a relationship .
5998	Update tables .
5999	Update a table .
6000	Update fields of a table .
6001	Update a field .
6002	Updates a table .
6003	Updates a relationship .
6004	Delete tables .
6005	Delete a table .
6006	Set target length .
6007	Truncate a table .
6008	Get PagedResultResponse response .
6009	Rewind the next row
6010	Escape a value .
6011	Add an entry to the LDAP .
6012	Compare two LDAP objects
6013	Connect to LDAP server
6014	Controls a Paged result .
6015	Binds to the LDAP server .
6016	Gets an option .
6017	Modify an entry .
6018	Modify an LDAP entry .
6019	Modify an entry .
6020	Modify an LDAP entry .
6021	Modify a batch .
6022	Renames a DN .
6023	Sets a SASL binding .
6024	Performs LDAP search .
6025	Set a new option .
6026	Verify that the resource is valid .
6027	Adds a set to the collection .
6028	Compute the reference set .
6029	Computes the product .
6030	Get all resource names for a given type .
6031	Load a resource .
6032	Compare table names .
6033	Add a primary key .
6034	Create a new table .
6035	Bind value to statement
6036	Extract PDO type from PHP type
6037	Extracts the type of a column .
6038	Extract default value .
6039	Add data to the request .
6040	Generate query .
6041	Create a request .
6042	Execute a query .
6043	Set HTTP method
6044	Set the protocol protocol .
6045	Generate query string .
6046	Set aggregators array
6047	Sets the filters .
6048	Set post aggregators array
6049	Register the TinyMce
6050	Validate the parameters
6051	Returns the JSON string representation of this object
6052	Display Swagger UI .
6053	Prepare database .
6054	Checks if a given column exists .
6055	Get column type .
6056	Update a table .
6057	Drop a table .
6058	Drop all tables .
6059	Rename a table .
6060	Execute a SQL statement .
6061	Add an uploaded file to the attachment .
6062	Add a file to the attachment .
6063	Add raw data from raw data
6064	Add a file from a URL .
6065	Deletes the file .
6066	Get last modified file .
6067	Get unique name .
6068	Delete all thumbs
6069	Delete file .
6070	Delete empty directory
6071	Checks if a directory is empty .
6072	Check if file exists
6073	Get the thumbnail .
6074	Get thumb filename .
6075	Get default thumb options .
6076	Creates a thumb .
6077	Get the public path .
6078	Get temporary path
6079	Return the type of a column .
6080	Compile a time column .
6081	Compile a timestamp column .
6082	Called by curl
6083	Compiles JS code .
6084	Bootstrap application .
6085	Normalize url
6086	Add a route .
6087	Add a GET route .
6088	Add a POST route .
6089	Add a route .
6090	Add a patch .
6091	Add a delete route .
6092	Add options to the application .
6093	Add a HEAD request .
6094	Render the template .
6095	Get the source .
6096	Create a migration .
6097	Checks if migration exists .
6098	Get stub content .
6099	Get file path .
6100	Scope the query for the given CA .
6101	Get the scope for the given subject .
6102	Build an array expression .
6103	Get migration paths .
6104	Remove all compiled views .
6105	Set the parameters .
6106	Set headers .
6107	Set proxy proxy
6108	Set cookies .
6109	Set a cookie .
6110	Set options .
6111	Send request .
6112	Creates a request .
6113	Build the builder .
6114	Build table definition .
6115	Build command commands .
6116	Add an index .
6117	Add a float column
6118	Add double column
6119	Add a decimal column .
6120	Set the timestamp columns .
6121	Set Timable timestamps .
6122	Add morphs .
6123	Defines the morphable model .
6124	Add a new column .
6125	Create a reference name .
6126	Add value to array
6127	Collapse all values
6128	Get value from array
6129	Fetch value from array
6130	Remove a key from an array .
6131	Maps an array to an array .
6132	Splits a value into a pluck parameters .
6133	Compares two strings .
6134	Capitalize a string .
6135	Convert a string to upper case .
6136	Format a location .
6137	Registers the url
6138	Get composer command .
6139	Build request parameters
6140	Build headers .
6141	Build proxy .
6142	Build the headers .
6143	Register observer events .
6144	Register model event .
6145	Bootstrap nicer events .
6146	Flush event listeners .
6147	Creates a new location model query .
6148	Get location by identifier .
6149	Get location by slug .
6150	Add a message .
6151	Overlay a message .
6152	Clear all messages .
6153	Add a task .
6154	Register the application .
6155	Register prefix .
6156	Register the storage .
6157	Boot the module .
6158	Add a LIKE clause .
6159	Returns a list of dates .
6160	Find or create a new model .
6161	Get the user .
6162	Log out the user .
6163	Login user .
6164	Retrieve user by token .
6165	Retrieve user by credentials .
6166	Register the database .
6167	Register view profiler .
6168	Write migration .
6169	Get the list of events for the model .
6170	Dump an associative array
6171	Get the id of a variable
6172	Generate a hash of an array
6173	Check if a variable is recursion
6174	Checks if an object is recursion recursively
6175	Dump a variable .
6176	Main action .
6177	Describes a route .
6178	Add directories .
6179	Normalize class name
6180	Loads a mapped class .
6181	Require a class
6182	Load manifest .
6183	Write manifest .
6184	Load the translations from the given locale .
6185	Loads a translation file .
6186	Set query constraint .
6187	Parses the read data .
6188	Create a new query .
6189	Determine if the system supports color support
6190	Apply colors to the given text .
6191	Get migrations .
6192	Get migrations .
6193	Run the migrations .
6194	Run a migration .
6195	Get migrations for Rollback .
6196	Rollback migrations .
6197	Reset migrations .
6198	Reset migrations .
6199	Rolls a migration .
6200	Execute a migration .
6201	Get migration files .
6202	Clear loader .
6203	Add primary key .
6204	Add a column .
6205	Generate a timestamp column .
6206	Adds a soft deletable field .
6207	Add a column
6208	Defines column type .
6209	Check if the option exists .
6210	Checks if the parent is a parent .
6211	Filter the query .
6212	Returns the path attribute of this node .
6213	Register a Crypton .
6214	Main entry point .
6215	Rename table .
6216	Boot the model .
6217	Get slug key .
6218	Finds the slug for the given attribute .
6219	Execute a query .
6220	Execute a SQL statement .
6221	Describe columns .
6222	Fetch one or more rows .
6223	Fetch all rows in the database
6224	Insert data into table .
6225	Update a table .
6226	Delete a table .
6227	Limit SQL query .
6228	Check if a table exists .
6229	Check if a view exists .
6230	Create a table .
6231	Create a view .
6232	Drop a view .
6233	Adds a column to the table .
6234	Modifies a column .
6235	Drop column .
6236	Add an index .
6237	Drop an index .
6238	Add a primary key .
6239	Drop primary key .
6240	Adds a foreign key to the table .
6241	Drop a foreign key .
6242	Describe indexes .
6243	Describe references .
6244	Get table options .
6245	Get panel panel
6246	Adds a column to the database .
6247	Modifies a column .
6248	Drop column .
6249	Drop an index .
6250	Adds a primary key .
6251	Drop a foreign key .
6252	Create a new table .
6253	Create a new view .
6254	Drop a table .
6255	Drop a view .
6256	Binds the path to the container .
6257	Checks if the database exists .
6258	Register logger .
6259	Register the notifications .
6260	Get fillable attributes from array .
6261	Check if the given key is valid .
6262	Convert an amount to a currency
6263	Check if currency is active
6264	Get all currencies .
6265	Register module modules .
6266	Attach listener .
6267	Generate reset code .
6268	Complete reset password
6269	Check if a reset password is valid .
6270	Complete activation code .
6271	Ask the user to ask the user .
6272	Register currency .
6273	Route middleware .
6274	Register middleware .
6275	Get reflection class
6276	Set property value .
6277	Get the value of a property .
6278	Invokes a method .
6279	Saves data to the cache .
6280	Check if a key exists .
6281	Get user currency .
6282	Checks if two coordinates are equal .
6283	Render a block .
6284	Bind an event .
6285	Sort events sorted by name
6286	Unbind an event .
6287	Fire an event .
6288	Gets the DI container .
6289	Check if a header exists .
6290	Set headers .
6291	Build headers .
6292	Checks if two coordinates are ellipsoid
6293	Get detailed message .
6294	Main entry point .
6295	Register the session .
6296	Returns a DateTime instance .
6297	Prepare output file .
6298	Get the code of a file .
6299	Parse a file .
6300	Register services .
6301	Get node data
6302	Get the query for the given id .
6303	Adds a WHERE clause to the query .
6304	Filters the nodes of the given node .
6305	Get the descendants of the given id .
6306	Get the depth of the query .
6307	Returns a list of column names .
6308	Has children .
6309	Default order .
6310	Move a node to another node .
6311	Make a gap .
6312	Patches the columns of the query .
6313	Generate a column patch .
6314	Count errors .
6315	Fixes the tree .
6316	Rebuild the tree .
6317	Boot the model .
6318	Add purgeable attributes .
6319	Removes attributes from the model .
6320	Returns the original purge value for the given attribute .
6321	Get an item by key .
6322	Set an item in the collection .
6323	Removes an item from the collection .
6324	Save the contents of the collection .
6325	Loads the configuration file .
6326	Compile a function .
6327	Main entry point .
6328	Sets the request signature .
6329	Adds a header to the response
6330	Get rate limiter
6331	Update model attributes
6332	Log a migration .
6333	Create repository .
6334	Get the table .
6335	Get the database name .
6336	Set an attribute .
6337	Append an attribute to the attribute map .
6338	Sets the content of this element .
6339	Add a content element
6340	Register commands .
6341	Main entry point .
6342	Get SQL queries .
6343	Check if the given key has been exceeded .
6344	Returns the value of a given key .
6345	Returns the number of attempts for the given key .
6346	Removes a key from the cache .
6347	Returns the time for the given key .
6348	Main entry point .
6349	Register Native Filesystem .
6350	Swap service instance .
6351	Determine if the mock should be received .
6352	Create a new mock instance .
6353	Check if the instance is a mock instance .
6354	Resolve a facade instance .
6355	Process a select result .
6356	Process the select results .
6357	Parse template content .
6358	Process update .
6359	Attach events .
6360	Remove all events .
6361	Geocode query .
6362	reverse query
6363	Get the status of the migrations .
6364	Main action .
6365	Get http routes info
6366	Set curl options
6367	Get provider info
6368	Compile a file .
6369	Starts the process .
6370	Wait until timeout is reached .
6371	Stop the process .
6372	Close the process .
6373	Execute the process .
6374	Optimize memory .
6375	Generate the loader .
6376	Fill an object with the given key .
6377	Read a property from an object .
6378	Fetch value from object
6379	Get value from target object
6380	Set a value to an object
6381	Register the error handler .
6382	Handle an error .
6383	Handle errors .
6384	Resolve a migration file .
6385	Checks if the given level should be logged .
6386	Use the logger to use .
6387	Use daily files .
6388	Register the logger .
6389	Set up the database
6390	Logs SQL error message .
6391	Add a new item
6392	Get property value .
6393	Set property .
6394	Sets the properties of this object .
6395	Get original value
6396	Check if a property has a cast type .
6397	Get dirty values
6398	Render navbar header
6399	Add a dropdown menu item
6400	Add a button .
6401	Flushes messages to the log .
6402	Add a new item
6403	Add CSS style
6404	Get Gravatar url
6405	Set an item in the array
6406	Get the database connection
6407	Returns the current locale .
6408	Add url params
6409	Link a value to a link .
6410	Add row footer columns
6411	Include CSS file
6412	Get the current URL
6413	Build request data
6414	Returns a list of available languages .
6415	Returns the default locale for the given language .
6416	Set locale .
6417	Setup property .
6418	Get status messages
6419	List all countries .
6420	Add a new item .
6421	Sets the attribute name .
6422	Set the color of a string
6423	Get type color
6424	Get a GET request .
6425	Create a POST request .
6426	Perform a delete request .
6427	Get key from data
6428	Unset data value
6429	Reindex array by index by index by index .
6430	Draw the page part
6431	Set up the context
6432	Get the total number of items
6433	Check if element is empty
6434	Add slashes .
6435	Connect to database
6436	Convert an array into an INSERT table
6437	Prepare a query
6438	Sets the table .
6439	Add a slide
6440	Finalize the widget .
6441	Add a message to the logger .
6442	Add a status message
6443	Get the tag name .
6444	Get a tag property .
6445	Finalize the modal .
6446	Creates a new instance of the runner .
6447	Add AJAX AJAX tab
6448	Trace a request
6449	Attach an event to the observer .
6450	Attach an observer .
6451	Detach an observer .
6452	Removes all events for the given observer .
6453	Validate a pod .
6454	Get the connection .
6455	Get the driver .
6456	Generate a binding parameter .
6457	Normalise driver exceptions .
6458	Create database .
6459	Delete a database .
6460	Get database information .
6461	List all databases .
6462	Get database connection .
6463	Set the current connection
6464	Get toolbox .
6465	Sets the model formatter .
6466	Load a Pod .
6467	Create a graph .
6468	Rename a collection .
6469	Get information about an index .
6470	Load a Pod .
6471	Process a pod
6472	Convert array to pods
6473	Convert array to Pod
6474	Convert driver document to Pod
6475	Create a vertex .
6476	Create a new edge
6477	Create a new document
6478	Setup the model .
6479	Determine if the model was previously stored .
6480	Add a transaction command .
6481	Validate type
6482	Map a list of data to an array .
6483	Creates a crawler .
6484	Parse the url
6485	Parse an image .
6486	Parse the content of a node .
6487	Parse a date .
6488	Load a class .
6489	Start the coverage .
6490	Initialize config .
6491	Add a relationship to the model
6492	Get all edges in the graph
6493	Convert this object to a driver .
6494	Encode UTF - 8 .
6495	Create a collection .
6496	Delete collection .
6497	Rename a collection .
6498	Delete a collection .
6499	Get collection info
6500	Get statistics for a collection .
6501	Returns the count of the collection .
6502	Load a collection .
6503	Unloads a collection .
6504	Get information about an index .
6505	Get geo fields for a query
6506	Get a collection of a specific type .
6507	Get the collection name for the given type .
6508	Delete a user .
6509	Get user info
6510	Deletes an alias by namespace .
6511	List all registered functions .
6512	Get server version
6513	Get server info
6514	Get server time .
6515	Set a property
6516	Remove a property
6517	Get the value of a property
6518	Sets the document id .
6519	Sets the distance from the query .
6520	Reset meta data
6521	Convert this object to an array
6522	Returns a JSON representation of this object .
6523	Serialize the transaction .
6524	Convert this object to a driver .
6525	Load the data from the driver .
6526	Load data from array
6527	Handles the event .
6528	Sets the message to the Pod .
6529	Get the id of the pod .
6530	Sets the From property .
6531	Get the id of the pod .
6532	Convert this object to a driver
6533	Begin a transaction .
6534	Commits all operations .
6535	Clear transaction info
6536	Add a read collection
6537	Add a write collection
6538	Pause the transaction .
6539	Resume a transaction .
6540	Add a new command
6541	Search commands by action
6542	Generate a random id
6543	Creates a new graph .
6544	Delete a graph .
6545	Get information about a graph .
6546	Returns an array of edges for a given model .
6547	Get filters .
6548	Render the filter box
6549	Render all filters .
6550	Open the container .
6551	Close the container .
6552	Open the filter
6553	Close the form .
6554	Check if filter is active
6555	Create a filter button .
6556	Renders a reset button .
6557	Renders a BackToList button .
6558	Get persistent storage key .
6559	Check if the filter parameter is a filter parameter .
6560	Get fulltext search conditions .
6561	Flatten value options .
6562	Get list of filters
6563	Get redirect url from post data
6564	Add filter params
6565	Set default filters
6566	Build a prepared statement .
6567	Reduce all elements in the collection .
6568	Check if a type is valid
6569	Cast a type to an iterable .
6570	Register Bugsnag .
6571	Create a Guzzle client .
6572	Setup user detection .
6573	Setup the paths for the project .
6574	Add a stub .
6575	Stubs a stub .
6576	Creates a new pipeline with the given iterable .
6577	Set multiple keys .
6578	Returns an array with the given offset .
6579	Sorts the collection .
6580	Sets the given variables .
6581	Set a variable .
6582	Get the pathname of a page .
6583	Get script tag .
6584	Checks if a script list is allowed .
6585	Converts a string to a list
6586	Create a fake user .
6587	Get all layouts paths .
6588	Add global variables .
6589	Generate a new PageCollection .
6590	Sets the parameter value .
6591	Extracts the parameters from an XML element
6592	Run git command .
6593	Sort by date
6594	Remove an item
6595	Replace an item with the given id .
6596	Merge items from a feed .
6597	Auto slice of items
6598	Returns a list of conflicting users .
6599	Insert a record into the database .
6600	Write items to XML
6601	Set current position
6602	Reads all scheduled schedules .
6603	Sort by date
6604	Import data from config
6605	Set the data from the data .
6606	Sets the source directory .
6607	Sets the destination directory .
6608	Finds the layout for the given page .
6609	Returns the fallback layouts for a page .
6610	Parse the file .
6611	Get the current section .
6612	Get the permalink .
6613	Set the configuration .
6614	Build the build .
6615	Get the version file .
6616	Filter pages by variable
6617	Sort array by date
6618	Creates the URL for the site .
6619	Minify a file
6620	Convert a file to a CSS file .
6621	Read time .
6622	Generate a hash of a file
6623	Collect pages .
6624	Render a feed .
6625	Load a feed .
6626	Runs the given input .
6627	Check if the input is a valid type
6628	Scans all input inputs .
6629	Runs the given input .
6630	Save a schedule .
6631	Render a feed .
6632	Create item node .
6633	Get the author .
6634	Get the URL for the feed .
6635	Checks if the content of the given content is XML syntax .
6636	Collect taxonomies from pages .
6637	Create page pages
6638	Compile view files .
6639	Compile the views in the given path .
6640	Compile a single view file .
6641	Generate diff .
6642	Parse a diff .
6643	Boot the extension .
6644	Finish the application .
6645	Register active extensions .
6646	After bootstrapping .
6647	Registers the given providers .
6648	Write manifest file .
6649	Register a deferred service provider .
6650	Load queue service provider .
6651	Activate extension .
6652	Maps an extension to the memory .
6653	Register domain .
6654	Detect extensions .
6655	Get an option .
6656	Publish extension .
6657	Register extension .
6658	Get the route .
6659	Activate the extension .
6660	Refresh all available extensions .
6661	Reset extension .
6662	Check if the field is excluded .
6663	Create a new theme .
6664	Bootstrap the application .
6665	Bootstrap configuration .
6666	Bootstrap form .
6667	Bootstrap menu handler .
6668	Bootstrap sidebar placeholder .
6669	Bootstrap validation rules .
6670	Attach a listener to the application .
6671	Initialize the theme .
6672	Set theme .
6673	Boot the theme .
6674	Resolves theme .
6675	Get available theme paths .
6676	Get the autoload files .
6677	Validates the given theme .
6678	Returns a collection of available themes .
6679	Render a macro .
6680	Filters the given value .
6681	Verify status .
6682	Add a path .
6683	Detect extensions .
6684	Get manifest contents .
6685	Generate manifest config .
6686	Get composer lock data .
6687	Guess the extension name from manifest .
6688	Guess the extension path .
6689	Resolve extension namespace .
6690	Validate extension name .
6691	Register the viewfinder .
6692	Register theme .
6693	Detect themes .
6694	Set current theme .
6695	Set theme resolver .
6696	Register the extension .
6697	Register extension config manager .
6698	Register extension .
6699	Register the status checker .
6700	Execute a callback .
6701	Get the scheme .
6702	Set the URI to use .
6703	Get the domain domain .
6704	Get the group group .
6705	Checks if the path matches the given pattern .
6706	Get the prefix .
6707	Get the root URI .
6708	Get the base url .
6709	Resolve base url from root .
6710	Safely parse a string
6711	Validates the input string .
6712	Activate the application .
6713	Deactivates a manifest .
6714	Register extension providers .
6715	Register extension plugin .
6716	Boot the extension .
6717	Start the application .
6718	Fire event .
6719	Get autoload files .
6720	Loads the autoloader file .
6721	Process deprecated types .
6722	Start the application .
6723	Generate a log message .
6724	Generate the trace trace .
6725	Set alert message
6726	Spawn a daemon .
6727	Starts a process .
6728	Get the slug for this page .
6729	Called when the page is updated .
6730	Send headers to the session .
6731	Sets a cookie .
6732	Clear all cookies
6733	Parses an array of arguments
6734	Store uploaded files
6735	Removes arguments from the collection .
6736	Returns an array with regular expression .
6737	Removes all HTML entities .
6738	Returns an array of integers .
6739	Flushes all cache files .
6740	Combines the files .
6741	Connect to the server .
6742	Execute a command
6743	Check if the client is a client .
6744	Get IP address
6745	Creates a named pipe .
6746	Register a Deployer .
6747	Get the Deployer instance .
6748	Add a server .
6749	Set the list of servers .
6750	Get a registered server .
6751	Deploy a server .
6752	Get the options for this server .
6753	Processes an open token .
6754	Generate a slug for an action .
6755	Handles AJAX request .
6756	Trigger AJAX callback .
6757	Handle AJAX request
6758	Get a POST request .
6759	Generate a random hex string
6760	Starts the session .
6761	Clear all global variables
6762	Checks if a string is serialized .
6763	Handle a slug .
6764	Add a method .
6765	Update current session
6766	Clears the session .
6767	Verify that the session is valid
6768	Open a session
6769	Delete all sessions
6770	Match a route .
6771	Get data page
6772	Check if this page is a page .
6773	Load class metadata .
6774	Creates a condition .
6775	Initializes all plugins .
6776	Get all plugins .
6777	Load Twig templates .
6778	Set default language
6779	Check if token is valid
6780	Get the view
6781	Add javascript var var var
6782	Add a javascript file
6783	Add stylesheet
6784	Get file content
6785	Get content with template
6786	Get all scripts
6787	Get all CSS styles
6788	Get asset .
6789	Check if the given route is allowed .
6790	Get the access of the current role
6791	Get the roles chain .
6792	Get user language .
6793	Translate a choice .
6794	Returns the translation for the given locale .
6795	Get translations from a file
6796	Get translation for given id
6797	Returns the basic translation for the given ID .
6798	Generate a toggle command .
6799	Builds the commands for the given attribute .
6800	Builds the commands for the given attribute .
6801	Main action .
6802	Prepare the controller action
6803	Execute ACL .
6804	Execute auth .
6805	Resolve route
6806	Set the app libraries
6807	Get a library instance
6808	Creates the core and controller .
6809	Call a method and return the result
6810	Get the arguments for a function .
6811	Get role from token
6812	Get role from id
6813	Get current options
6814	Set bulk of input parameters
6815	Get the value of a variable
6816	Filter the value of a variable
6817	Open a connection .
6818	Close a connection .
6819	Execute SQL query
6820	Execute a query
6821	Execute a SQL query .
6822	Delete a SQL statement
6823	Update a SQL statement
6824	Log out the user .
6825	Sets the user id .
6826	Set the username .
6827	Sets the role id .
6828	Sets the role name .
6829	Validates the given value .
6830	Get installed plugins .
6831	Search plugin directories .
6832	Search plugin factory class .
6833	Checks if the given file implements the given file .
6834	Converts a closure to a string
6835	Execute a closure
6836	Executes a file .
6837	Run a command on Windows .
6838	Set the autoload file
6839	Check if the process is running
6840	Kill the process .
6841	Resets the log sections .
6842	Creates a new instance from a string .
6843	Get image driver
6844	Builds an image
6845	Get the width of the image .
6846	Get the height of the image .
6847	Format a binary string .
6848	Format a metric .
6849	Creates a new session .
6850	Initialize driver .
6851	Parse POST request .
6852	Generate URL .
6853	Get request parameter
6854	Get the default input definition .
6855	Register commands .
6856	Get model path .
6857	Add force command .
6858	Add model argument .
6859	Validate the model argument .
6860	Add table argument .
6861	Validate the table argument .
6862	Get model instance
6863	Generate a file .
6864	Handle the request .
6865	Returns true if the stream is seekable .
6866	Creates a parser with the given content type .
6867	Add a new parser .
6868	Add module argument .
6869	Add controller argument .
6870	Creates a new request .
6871	Create a server request .
6872	Creates a new stream .
6873	Creates a stream from a file .
6874	Creates a new uploaded file .
6875	Creates a URI from a string .
6876	Format a number .
6877	Format a number .
6878	Normalize bytes .
6879	Normalize precision .
6880	Returns a new instance with the given method name .
6881	Set Uri .
6882	Get target URI from URI
6883	Add a middleware to the stack .
6884	Returns the reason phrase for the given code .
6885	Get the messages .
6886	Get user from message .
6887	Get the extension of a file .
6888	Normalize filename .
6889	Get the contents of the stream .
6890	Fixes the site url .
6891	Fixes wp include folder
6892	Fixes network admin url
6893	Fix WordPress URLs .
6894	Initialize the plugin .
6895	Set wp folder name
6896	Convert url to full path
6897	Encode a path .
6898	Decode a path .
6899	Get contents of a directory
6900	Triggers the database .
6901	Logs a log message
6902	Write memory usage
6903	Log a time load
6904	Write log sections .
6905	Flip an array of files
6906	Set the uploaded file .
6907	Returns the hash of the uploaded file .
6908	Get the media type .
6909	Get query params
6910	Check if the request is AJAX request .
6911	Convert JSON to Document
6912	Creates an entity from an array .
6913	Get actions from array
6914	Get fields from array
6915	Get a list of links from an array .
6916	Send a request .
6917	Call the request .
6918	Prepares the request .
6919	Set the URL for the request .
6920	Set request headers
6921	Creates a response from the response .
6922	Splits the response body from the body .
6923	Parses a header string .
6924	Count total log type
6925	Display the profiler .
6926	Gathers all files in the log .
6927	Collect the data from the GET request
6928	Gathers the input data from the POST .
6929	Collect the session data from the session
6930	Get the microtime
6931	Returns a summary of a specific match key .
6932	Create uploaded files .
6933	Create uploaded file .
6934	Flip an array of files
6935	Merges two arrays .
6936	Process the request .
6937	Add a new menu .
6938	Edit model .
6939	Attempt to edit a model .
6940	Redirect to the edit page .
6941	Sets the order .
6942	Delete an object
6943	Get uploaded files .
6944	Returns a copy of the uploaded files .
6945	Check if uploaded files are valid
6946	Load headers .
6947	Returns a new request with the given name .
6948	Removes an attribute from the request .
6949	Check if the request is modified .
6950	Get a header value .
6951	Set status code .
6952	Process the middleware .
6953	Get mysql version
6954	Authenticate a user .
6955	Find all active users .
6956	Find all active users .
6957	Add a new user .
6958	Gets the option value .
6959	Set current language .
6960	Check if a container is encrypted
6961	Checks if the given string is encrypted .
6962	Dump the class .
6963	Export an array
6964	Preprocess all config classes
6965	Processes all config classes
6966	Creates a new token for the given token types .
6967	Creates a new container .
6968	Recover a record .
6969	Process new class extensions
6970	Process new config classes
6971	Process the config class
6972	Process a class
6973	Set definitions .
6974	Get a definition by name .
6975	Remove a definition .
6976	Set configuration classes .
6977	Generate the containers
6978	Dump all containers .
6979	Returns the inner value of the inner value .
6980	Set address .
6981	Send a notice .
6982	Call a method .
6983	Creates a response from an exception .
6984	Parse HTTP response .
6985	Send a request to the request .
6986	Wait for a subscriber message
6987	Send an action result .
6988	Format layout templates .
6989	Write a file to a file
6990	Returns the dashed name of the given value .
6991	Returns a slice of the slice .
6992	Get the indices of the given step .
6993	Get option value
6994	Validate values array
6995	Create an option .
6996	Declares the reply to the reply stack .
6997	Get the value of a property .
6998	Returns array of matchers .
6999	Compare two images
7000	Creates a new gif for the given image .
7001	Create a comparison image .
7002	Create a comparison image
7003	Add a POST route .
7004	Register a route
7005	Matches a given URL .
7006	Run the route .
7007	Redirect to a URL
7008	Parse route parameters .
7009	Get date from file
7010	Save image data
7011	Get a GET request .
7012	Perform a POST request .
7013	Set authentication header
7014	Get config value
7015	Validate configuration .
7016	Get the content of the text .
7017	Handle errors .
7018	Get dot extensions .
7019	Validate widget id
7020	Set cxense user id
7021	Get all documents
7022	Append a string to the current string .
7023	Prepend a string to the string .
7024	Check if the string matches the given pattern .
7025	Limit words .
7026	Generate a UUID
7027	Joins a string into a string .
7028	Converts this string to an HTML entity .
7029	Returns a copy of this string .
7030	Limit the string .
7031	Limit a string to a string .
7032	Convert the string to a container
7033	Encrypt a JWT .
7034	Creates a JWT from an encrypted string .
7035	Converts the value to a container .
7036	Generate a parser from a file .
7037	Set organization settings .
7038	Get all documents
7039	Sets the number of pages per page
7040	Sets the page number .
7041	Converts a value to an integer .
7042	Get searchable value .
7043	Get bool from string
7044	Get grammar .
7045	Create a gif command
7046	Creates a gif command .
7047	Lookup all tokens in the buffer .
7048	Formats the current value .
7049	Checks if a property exists .
7050	Get property by name
7051	Remove a property by name
7052	Checks if the given name exists .
7053	Get method by name
7054	Remove a method by name
7055	Parse meta file
7056	Run hooks .
7057	Load plugins .
7058	Setup routes .
7059	Get item by key .
7060	Set a value .
7061	Push a value to a key
7062	Search by value .
7063	Get keys by field by field .
7064	Returns an array of unique items .
7065	Returns an array of keys .
7066	Joins the collection .
7067	Join table by key
7068	Get a list of items by key .
7069	Splits the collection into chunks .
7070	Filters all items in the collection .
7071	Iterate over all items
7072	Merge items into this collection .
7073	Merge items with given key .
7074	Increase the items in the collection .
7075	Get random key
7076	Returns a random item .
7077	Returns a copy of this collection .
7078	Removes items from the collection .
7079	Remove a key from the collection .
7080	Reverse the collection .
7081	Returns a new collection with the given key .
7082	Remove an index from the collection .
7083	Restores the rest of the given index .
7084	Restore the rest after a key
7085	Returns the difference between items .
7086	Returns an array with the given key .
7087	Removes an item from the collection .
7088	Intersects the items in the collection .
7089	Add a condition to the query .
7090	Creates a new instance from a JSON string .
7091	Creates a container from a file .
7092	Creates a new instance from a serialized string .
7093	Creates a new instance from encrypted data .
7094	Creates an instance from a string .
7095	Get a where condition .
7096	Performs a recursive search on an array .
7097	Convert an iterator to an array .
7098	Get group by key .
7099	Filters an array of items .
7100	Recursively forget all items .
7101	Return unique items .
7102	Get an integer value .
7103	Add a new object
7104	Returns the option for the given value .
7105	Returns an array of excerpts .
7106	Fetch a key from an array .
7107	Remove keys from an array
7108	Get value from array
7109	Check if an array exists
7110	Set a value in an array
7111	Search array by value
7112	Render library .
7113	Determine if the given directory is allowed .
7114	Get new access token
7115	Sets the input id .
7116	Set the bounding box .
7117	Add a type .
7118	Remove a type .
7119	Returns the component restriction for a given type .
7120	Set component restrictions .
7121	Add a component restriction .
7122	Remove a component restriction .
7123	Sets the input attributes .
7124	Set the input attribute .
7125	identify image format
7126	Convert an image to an image
7127	Compress an image
7128	Compress a SVG file .
7129	Compress a PNG file .
7130	Decode data URL .
7131	Returns a string representation of the image .
7132	Convert file extension to format format
7133	Convert a format to an extension .
7134	Convert file extension to mime type
7135	Convert format to compression type
7136	Convert format to JPEG quality quality
7137	Set file extension .
7138	Change file extension
7139	Parse format arguments .
7140	Send a request to the server .
7141	Clean input data
7142	Returns the maximum number of files .
7143	Render a circle .
7144	Check if version is valid
7145	Check if version is valid .
7146	Checks if the given version is valid .
7147	Creates a new session
7148	Generate a form input .
7149	Verify that the token is valid .
7150	Creates a new Request from the given globals .
7151	Get form data
7152	Get form data .
7153	Get the response body
7154	Normalize an amp url .
7155	Render a map type .
7156	Returns the first name of the first email .
7157	Get the last part of a name .
7158	Converts a name to an acronym .
7159	Convert a name to a string
7160	Checks if the given string is HTML .
7161	Validate a UUID .
7162	Returns the shard id in the given UUID .
7163	Validate shard id .
7164	Returns the type id in the given UUID .
7165	Validate type ID .
7166	Returns the local id in the given UUID .
7167	Validate local id .
7168	Parse a UUID .
7169	Builds a unique identifier .
7170	Render a polyline .
7171	Set the center of the circle .
7172	Sets the latitude .
7173	Set the longitude .
7174	Sets the coordinate of the coordinate .
7175	Sets the control position .
7176	Sets the scale control control style .
7177	Returns the status of the geocoder status .
7178	Get a cached value from the cache .
7179	Returns the full path for the given key .
7180	Computes the SHA1 hash .
7181	Get a class
7182	Match a string against a string
7183	Get a template .
7184	Returns the strength of a password .
7185	Checks if the given hash is valid .
7186	Checks if the given hash exists .
7187	Checks if the given URL matches the given URL .
7188	Check the cache for a given url
7189	Checks the contents of a given URL .
7190	Cache the cache
7191	Calls memcache .
7192	Get the map
7193	Get map cache
7194	Check if a URL is local .
7195	Check if a variable is valid
7196	Convert a variable name to an acron symbol .
7197	Convert a string to a slug
7198	Convert a string to camelCase
7199	Render the given size .
7200	Checks if email is a role
7201	Parse the given value .
7202	Parse the headers .
7203	Parse the given value .
7204	Parse content type .
7205	Converts a string representation into a class name .
7206	Returns the difference between two numbers .
7207	Encode a base64 encoded string .
7208	Decodes a base64 encoded string .
7209	Create a new nonce
7210	Generate a form input .
7211	Verify a nonce .
7212	Set the origins .
7213	Returns a human readable string representation of the given time .
7214	Get all items in the collection .
7215	Render a marker .
7216	Build the json .
7217	Render a marker shape .
7218	Render a scale control control .
7219	Check if a slug is valid
7220	Checks if a slug is reserved .
7221	Convert slug to name
7222	Convert a slug to a string
7223	Sets the list of coordinates .
7224	Store the cache .
7225	Get all repositories .
7226	Parse file .
7227	Sets the variables of the template .
7228	Checks if the given file is a parent .
7229	Get parent variables .
7230	Get the template
7231	Get the options .
7232	Render a rotate control .
7233	Encode a value .
7234	Decodes HTML entities .
7235	Call the controller .
7236	Render a KML layer .
7237	Get a value from the cache .
7238	Sets a value in the cache .
7239	Delete a key from the database .
7240	Generate a unique key .
7241	Parses a primary key .
7242	Determine if the server is differ
7243	Add server connections .
7244	Render the HTML container .
7245	Renders the javascripts .
7246	Render autocomplete .
7247	Register the database .
7248	Close the request .
7249	Set gzipped output .
7250	Sets the location .
7251	Set stopover
7252	Returns the error message for the given error code .
7253	Set extension .
7254	Change file extension
7255	Checks if an option exists .
7256	Get an option .
7257	Set an option .
7258	Remove an option .
7259	Modify request attributes .
7260	Sets the zoom control style .
7261	Decodes a single ID .
7262	Set the results .
7263	Sets the response status .
7264	Check if string is valid
7265	Checks if the browser is engine .
7266	Normalize a string
7267	Get page url .
7268	Setter for avoidHighways
7269	Setter for avoidTolls .
7270	Sets the destinations .
7271	Add a new destination .
7272	Add an origin to the distance matrix .
7273	Sets the region of the distance matrix .
7274	Set the language language .
7275	Sets the travel mode .
7276	Sets the unit system .
7277	Get control positions
7278	Sets the response status .
7279	Render the overview .
7280	Render a bounding box .
7281	Render a bounding box .
7282	Print all statistics
7283	Set the markers
7284	Sets the helpers .
7285	Get a marker by name .
7286	Set extension helpers .
7287	Get extension helper .
7288	Remove extension helper .
7289	Render HTML container .
7290	Render stylesheet .
7291	Renders Javascripts .
7292	Render JS libraries .
7293	Renders the javascript before rendering .
7294	Renders the javascript after the map .
7295	Render JS container .
7296	Render JS container coordinates .
7297	Render JS container bounds .
7298	Render JS container points
7299	Render JS container sizes .
7300	Render JS container map .
7301	Renders a JavaScript container .
7302	Renders the encoded polyline .
7303	Renders the ground overlay .
7304	Render a map of polygons .
7305	Render the polyline polyline .
7306	Renders the rectangle rectangles .
7307	Render JS container info .
7308	Renders a map of marker images .
7309	Render a map of marker shapes .
7310	Render a map of marker markers .
7311	Render the kml layer .
7312	Render javascript event manager .
7313	Renders the JS container .
7314	Render map .
7315	Render map center
7316	Renders the bounds of a map .
7317	Computes the coordinates of the map .
7318	Computes the bounds of the map .
7319	Computes the points of the map .
7320	Computes the sizes of the map .
7321	Computes the image images .
7322	Computes the shapes of the map .
7323	Compute the info window for the map .
7324	Render map control controls
7325	Render map control .
7326	Generate a UUID
7327	Generate a UUID .
7328	Generate a UUID .
7329	Generate a unique identifier .
7330	Get package by name
7331	Iterate over all items
7332	Filter all items in the collection .
7333	Add a package .
7334	Sets the address .
7335	Set the coordinate .
7336	Set the bounding box .
7337	Sets the region .
7338	Set the language .
7339	Load a file .
7340	Get route .
7341	Parse a YAML value
7342	Sets the flags .
7343	Sort array by key
7344	Get request method .
7345	Get the scheme .
7346	Get the host name .
7347	Get the root host .
7348	Checks if the server is SSL
7349	Is localhost?
7350	Set location type .
7351	Converts a string to a regular expression .
7352	Gets the directions status .
7353	Loads the data from the request .
7354	Returns an array of properties .
7355	Returns an array of properties that are writable .
7356	Overload an array of properties .
7357	Open a URL .
7358	Set the anchor anchor .
7359	Set the origin of the marker image .
7360	Sets the scaled size .
7361	Sets the size of the image .
7362	Render info window
7363	Renders the open window .
7364	Render the info window .
7365	Register all providers .
7366	Get asset URL .
7367	Load routes .
7368	Checks if a function is available .
7369	Render the ground overlay .
7370	Emits the response .
7371	Set a value in the cache .
7372	Get a key from the cache .
7373	Remove a key from the cache .
7374	Remove a key from the cache .
7375	Add a value to the cache
7376	Unset cache by reference
7377	Unset cache by reference
7378	Render MapTypeControl
7379	Converts a value to a string
7380	Convert a value to a string
7381	Converts a value into a quoted string .
7382	Renders the map type .
7383	Sign a URL .
7384	Get a search term .
7385	Get shard id .
7386	Assigns a string to the database .
7387	Sets the travel mode .
7388	Sets the prefix of the asset .
7389	Selects a list of ISO3166 countries
7390	Generate dropdown items
7391	Render the street view .
7392	Normalize a string
7393	Check if a value matches a regular expression
7394	Normalize a string
7395	Renders special characters .
7396	Convert a URL to a URI pattern .
7397	Sets the width unit .
7398	Sets the height unit .
7399	Generate a random key generation .
7400	Checks if the given value is valid .
7401	Strips a query string .
7402	Parse query string .
7403	Build query string .
7404	Add a SHA256 signature
7405	Removes the SHA256 signature from the URL .
7406	Checks if the given URL is valid .
7407	Sets the coordinates of the marker .
7408	Add a polygon .
7409	Create a customer
7410	Update customer .
7411	Returns the amount of the given currency .
7412	Get scope entity by identifier
7413	Render a scale control .
7414	Generates the URL for the request .
7415	Build geocoder response .
7416	Build geocoder result .
7417	Build geocoder address components .
7418	Builds a geocoder address component .
7419	Build geocoder geometry .
7420	Processes a distance matrix .
7421	Generate a URL for a distance matrix .
7422	Parse response .
7423	Build a distance matrix response .
7424	Builds the distance matrix .
7425	Build the distance matrix .
7426	Build a distance matrix element .
7427	Render a point .
7428	Get the parameter strings from a string .
7429	Parse a list of parameters
7430	Get current headers
7431	Send a response to the response
7432	Send no cache
7433	Get the slug for the given status .
7434	Get status message .
7435	Sends a status header .
7436	Parse a header value .
7437	Remove tags from a string
7438	Register migrations .
7439	Register translations .
7440	Set pixel offset .
7441	Sets the opening event .
7442	Render panControl .
7443	Get all mouse events
7444	Sets the mapTypeIds .
7445	Add a map type id
7446	Set the map type control style
7447	Sets a cookie .
7448	Get cookie value
7449	Render DOM event .
7450	Renders a DOM event .
7451	Render an event .
7452	Render event once .
7453	Render animation .
7454	Render ZoomControl .
7455	Returns the maximum time limit .
7456	Check if slug is valid
7457	Get address components .
7458	Sets the address components .
7459	Set the partial match .
7460	Generates a URL for a given email .
7461	Set the center of the map .
7462	Checks if a map option exists .
7463	Set map options .
7464	Get a map option .
7465	Set a map option .
7466	Remove a map option .
7467	Checks if a stylesheet option exists .
7468	Sets the stylesheet options .
7469	Returns the stylesheet option .
7470	Sets the stylesheet option .
7471	Remove a stylesheet option .
7472	Set the map type
7473	Set the overview map .
7474	Set panControl .
7475	Set rotation control
7476	Set the scale control
7477	Set the street view control .
7478	Set ZoomControl
7479	Add a marker
7480	Add info window
7481	Add a polyline .
7482	Add an encoded polyline .
7483	Add a polygon
7484	Add a rectangle .
7485	Add a circle
7486	Add a ground overlay
7487	Sets the value of the cache .
7488	Deletes the cache .
7489	Setter for avoidHighways
7490	Setter for avoidTolls .
7491	Set the destination .
7492	Set optimize waypoints .
7493	Set the origin .
7494	Sets the routeAlternatives value .
7495	Sets the region .
7496	Sets the language language .
7497	Sets the travel mode .
7498	Sets the unit system .
7499	Set waypoints
7500	Add a waypoint
7501	Checks if the route is valid
7502	Create a POST request
7503	Log an issue .
7504	Log a review .
7505	Write log file to log file .
7506	Clean log event .
7507	Rotate log files .
7508	Get a response
7509	Parse the content .
7510	Build the document .
7511	Parse a section .
7512	Parses a YAML string .
7513	Get query variable
7514	Get the template
7515	Get a TwitterOAuth object
7516	Returns the hash of the remote hash .
7517	Converts a value to an ASCII string .
7518	Get the distance matrix status
7519	Strip leading whitespace .
7520	Set the steps .
7521	Route directions .
7522	Build directions response .
7523	Build directions routes .
7524	Build directions route .
7525	Builds a list of directions .
7526	Builds a DirectionsLeg object .
7527	Builds directions steps .
7528	Build directions step .
7529	Set the lightness of the image .
7530	Change the lightness of the image .
7531	Saturation saturation .
7532	Saturate the given percentage .
7533	Returns a new instance with the given color .
7534	Starts the session .
7535	Checks if the given version is valid .
7536	Checks if the given version is valid .
7537	Check if the given version is valid .
7538	Returns the date for the given version .
7539	Returns the time of the given version .
7540	Returns a new copy of this request .
7541	Returns a copy of the response .
7542	Creates a response with an error .
7543	Output the response .
7544	Set the list of legs .
7545	Set warnings .
7546	Sets the waypoint order .
7547	Render the zoom control style .
7548	Get metadata by key
7549	Issue an access token .
7550	Validate a resource
7551	Get access token .
7552	Add a string to a string
7553	Remove a value from a string
7554	Render google map .
7555	Set the list of elements .
7556	Render a control position .
7557	Get current IP address .
7558	Returns the region of the given IP .
7559	Get country country .
7560	Check if the request is AJAX
7561	Checks if the current request is an API .
7562	Get current action .
7563	Determine whether or not a given action is done .
7564	Subscribe a new user
7565	Get a member
7566	Update a user .
7567	Delete a user .
7568	Calculate the SHA1 of a string
7569	Adjusts the luminosity of a color
7570	Clean a hexadecimal string
7571	Given a merge array and merge it into an array .
7572	Create a new Request instance
7573	Create request body
7574	Make sure that the array is empty .
7575	Render a rectangle .
7576	Generate HTML element .
7577	Convert an array to a parent DOMElement .
7578	Render a marker .
7579	Get the license key .
7580	Get library libraries .
7581	Escape order .
7582	Serializes a Closure .
7583	Unserialize a string
7584	Serialize value to string
7585	Unserialize a value
7586	Render embedly markup .
7587	Get embedly cache from url
7588	Convert a string to an oembed .
7589	Render a polyline .
7590	Sets the bounding box .
7591	Sets the northEast boundary .
7592	Returns the center of this point .
7593	Convert a string to a number of bytes .
7594	Get the number of bytes for a given URL .
7595	Convert a string into a string .
7596	Render a coordinate .
7597	Render a marker image
7598	Parse the given XML string .
7599	Perform pluralize .
7600	Returns an instance of InvalidDistanceMatrixRequest .
7601	Parse a host name .
7602	Unparse a string .
7603	Set the marker position .
7604	Sets the animation animation .
7605	Sets the icon .
7606	Set the shadow .
7607	Set the shape of the marker .
7608	Get header id
7609	Get the first image URL .
7610	Converts a value to an HTML string .
7611	Set the bounding box .
7612	Get the message for the given slug .
7613	Get the messages for the given slug .
7614	Get the error data .
7615	Add an error message .
7616	Add a coordinate .
7617	Loads a HTML document .
7618	Minify CSS .
7619	Recursively indentation .
7620	Loads the organization .
7621	Creates a view model .
7622	Get organization entity .
7623	Create a view model .
7624	Add a blade asset .
7625	Reverse custom styles order
7626	Add a file to the index
7627	Add a script after a file .
7628	Add meta data
7629	Generate meta tags
7630	Get the controller .
7631	Load a file
7632	Create query builder .
7633	Process an email .
7634	Validate email address
7635	Load a user .
7636	Load the organization .
7637	Proxy method .
7638	Get the cursor cursor for the given organization .
7639	Find organizations by name .
7640	Finds a user by its id .
7641	Find an Employee by its id .
7642	Creates a new organization .
7643	Find a draft .
7644	Initialize the contact
7645	Checks if the user is an employee .
7646	Update the permissions .
7647	Sets the organization name .
7648	Set the permissions .
7649	Get image .
7650	Set the contact .
7651	Gets the employees .
7652	Get employee by user or id
7653	Get all employees by role
7654	Set creation options .
7655	Initialize the invitations
7656	Get formular formular
7657	Get the URI for the organization .
7658	Store an image .
7659	Extract properties from an object
7660	Hydrate a value .
7661	Checks if the user has permission .
7662	Configure the logo .
7663	Ensure the order number is correct
7664	Encrypts the given merchant order .
7665	Creates a merchantSignatureNotif signature
7666	Validates a notification .
7667	Signs a request
7668	Make a request .
7669	Get ticket articles
7670	Make a HTTP request .
7671	Create a POST request .
7672	Make a PUT request .
7673	Get tickets for a ticket
7674	Get the value for a given key .
7675	Fetches the object with the given ID .
7676	Fetches all objects
7677	Create a new object
7678	Update the object .
7679	Delete this object
7680	Returns the URL for the given method name .
7681	Retrieves a single object
7682	Add a new tag
7683	Search for objects
7684	Remove a tag
7685	Shardown memory .
7686	Read proxy type .
7687	Get connection info
7688	Loop through the server .
7689	Execute the request
7690	Iterate over all items
7691	Get data by id
7692	Returns a copy of this copy .
7693	Fetch API data
7694	Validates the given permissions .
7695	Sets a parameter .
7696	Add parameters to request .
7697	Execute a request
7698	Save photos .
7699	Starts a callback .
7700	Get access token
7701	Convert hits to an array .
7702	Search by query .
7703	Replaces all dots in a string .
7704	Replaces all dots in a string .
7705	Replace all dots in a string .
7706	Convert an integer formatter to malot notation
7707	Convert a malot formatter to an intl format .
7708	Add picker .
7709	Bind an Alexa request .
7710	Register middleware .
7711	Resume audio .
7712	Get Alexa Request
7713	Add the middleware middleware to the application .
7714	Checks if the given route matches the given route .
7715	Creates a new Alexa route .
7716	Get session value
7717	Update a slot .
7718	Get validators .
7719	Compile route .
7720	Get the certificate from the request .
7721	Prepare response data
7722	Send request to router .
7723	Get application middleware .
7724	Persist a certificate .
7725	Retrieve the certificate chain .
7726	Calculate file path .
7727	Set custom words .
7728	Capitalize a string .
7729	Normalize input string .
7730	Process string parts .
7731	Process first sentence words in a list .
7732	Process the last word .
7733	Process a word .
7734	Replace pattern with given pattern
7735	Get the name of a prof file
7736	Split a word into an array
7737	Check if a word is a salutation .
7738	Check if a word suffix is a line suffix
7739	Generate emoji constants .
7740	Stops a string .
7741	emojify a string
7742	Returns the first word in a string
7743	Check if the given thing is a string
7744	Get last word .
7745	Returns the lower case of a string .
7746	Generate Markdown markup .
7747	Read time from a string
7748	Generate smartypants .
7749	Gets the substring after a given separator .
7750	Returns the substring after the given separator .
7751	Returns the substring before the given string .
7752	Returns the substring before the given string .
7753	Titleize a string .
7754	Trims a string .
7755	Trims a string .
7756	Trims a string .
7757	Convert a string to a string .
7758	Converts a string to upper case .
7759	Generate a widont .
7760	Get a setting by name .
7761	Get image icon
7762	Get composer json .
7763	Display a blog .
7764	Show a post .
7765	Store a new tag .
7766	Edit tag .
7767	Update a tag .
7768	Delete a tag .
7769	Display the dashboard .
7770	Clear the cache .
7771	Handle download .
7772	Enable maintenance mode .
7773	Disable maintenance mode .
7774	Register config files .
7775	Register translations .
7776	Register views .
7777	Show the profile .
7778	Update a profile .
7779	Log a user .
7780	Get current version
7781	Get post fill data
7782	Enable extension .
7783	Disable extension .
7784	Uninstall extension .
7785	Migrate the extension .
7786	Get the bootstrappers .
7787	Sanitise input .
7788	Show the dashboard .
7789	Get fields from model .
7790	Get tag data .
7791	Get index data .
7792	Store a post .
7793	Update a post .
7794	Publish a theme .
7795	Publish theme views .
7796	Remove theme .
7797	Get the default theme .
7798	Get active state
7799	Get route middleware .
7800	Get the installed middleware .
7801	Get admin middleware .
7802	Get blog main path
7803	Get blog prefix
7804	Get admin prefix
7805	Get auth prefix .
7806	Get the password prefix .
7807	Show the search .
7808	Get the request data .
7809	Scan a file
7810	Multiscan file
7811	Scan a file
7812	Receive a response .
7813	Process a single file .
7814	Validate a file
7815	Sanitizes a file name .
7816	Delete a file
7817	Move uploaded file to destination .
7818	Get the list of themes .
7819	Get asset url
7820	Get asset version .
7821	Get the path to the theme .
7822	Make a directory .
7823	Create a file .
7824	Get asset path .
7825	Get template content
7826	Creates new Assets
7827	Fetch the translation of a message .
7828	Update a translation .
7829	Flag a translation .
7830	Create asset .
7831	Download all translations .
7832	Upload all translations .
7833	Sync all translations .
7834	Processes the messages .
7835	Copy values from parent config to project .
7836	Add a directive to the script .
7837	Returns the value of the directive .
7838	Search class map .
7839	Search prefixes .
7840	Called when a model is saved .
7841	Prepare the query .
7842	Handles the results of a query .
7843	Synchronously synchronizes new items .
7844	Synchronizes the items in the given collection .
7845	Find product item .
7846	Checks if the item is integrity .
7847	Build item data .
7848	Fill entity attributes
7849	Setup default criteria .
7850	Perform an action .
7851	Runs before the given action
7852	Validate the given action .
7853	Perform a query .
7854	Set the paginate
7855	Toggle exceptions .
7856	Apply the criteria to the query .
7857	Update an entity .
7858	Fetch a list of records .
7859	Find by key .
7860	Find by criteria
7861	Get all records by criteria
7862	Get collection by keys
7863	Get a list of objects
7864	Creates a new query query .
7865	Replaces the values of the values in the environment variable .
7866	Set view path
7867	Sends a file .
7868	Get the content type of a file .
7869	Map an exception to an exception .
7870	Sets an aspect .
7871	Sets the given pointcut definition .
7872	Returns the pointcut for a given point .
7873	Get candidate files for a class scan .
7874	Check if a file is scannable .
7875	Convert an error type to a string .
7876	Dispatch an action .
7877	Invokes an action .
7878	Checks if the socket is active .
7879	Get a bean definition .
7880	Search and replace properties .
7881	Get constructor values for constructor .
7882	Instantiates a bean definition .
7883	Instantiates a bean definition .
7884	Instantiates the given bean definition .
7885	Instantiates a bean definition .
7886	Create bean dependencies .
7887	Apply the aspect to the target class .
7888	Apply all aspects to the given bean definition .
7889	Apply all aspects to the given bean definition .
7890	Apply the aspect to the bean definition .
7891	Creates a bean .
7892	Setup init method .
7893	Inject non - setter method
7894	Inject a property in the bean
7895	Get a bean by name .
7896	Get the container instance .
7897	Fill a bean definition
7898	Caught signal handler .
7899	Load a class .
7900	Create a new child bean
7901	Populate classes per annotation
7902	Load an XML file .
7903	Loads the XML file .
7904	Close the connection .
7905	Open the socket .
7906	Free a peer .
7907	Create a new proxy class .
7908	Creates a parameter .
7909	Generate a method .
7910	Create a proxy class
7911	Load YAML file .
7912	Load YAML files .
7913	Initialize the client
7914	Open the connection .
7915	Get the cache from the given options .
7916	Processes a bean definition .
7917	Called before creation .
7918	After creation .
7919	Called by the given bean .
7920	Called after the given bean .
7921	Open log file .
7922	Returns the interceptors for the given method .
7923	Returns an array of exception interceptors .
7924	Call interceptors .
7925	Invoke exception .
7926	Invoke interceptors .
7927	Close the connection .
7928	Read data from socket
7929	Open a TCP connection .
7930	Add an array of objects
7931	Builds the URI for the given URI .
7932	Overwrites the config file .
7933	Resolve file path .
7934	Get the published dropdown list
7935	Finds a page by its alias .
7936	Builds a link .
7937	Update page .
7938	Register translations .
7939	Registers the JavaScript plugin .
7940	Returns the vote for the given object .
7941	Get the email address .
7942	Load user by username .
7943	Hydrate a user .
7944	Creates a new user .
7945	Set user password .
7946	Checks if user password is valid .
7947	Check if the user is logged in .
7948	Find user by criteria
7949	Finds all users by criteria .
7950	Creates a SQL query for the given criteria .
7951	Returns the number of records in the database .
7952	Insert a user .
7953	Update a user .
7954	Delete a user .
7955	Validate user .
7956	Clears the identity map .
7957	Login to the user .
7958	Initialize the signal handler .
7959	Reaper the worker .
7960	Wait for all workers .
7961	Get the result of the process .
7962	Get all processes
7963	Apply a function to the pool .
7964	Get the number of pending workers .
7965	Send data to socket
7966	Fetch data from socket
7967	Migrate user data
7968	Register a user .
7969	Confirm email confirmation .
7970	Displays the login action .
7971	Resend confirmation message .
7972	View user .
7973	Edit a user .
7974	Validate the user .
7975	Connect to the service .
7976	Get the priorities .
7977	Get the formatter .
7978	Format the response .
7979	Detect environment file .
7980	Get the type of the request .
7981	Creates a new Middleware instance .
7982	Run the router .
7983	Handle action .
7984	Returns the payload for the given input .
7985	Respond to responder
7986	Set status code .
7987	Get command from resource .
7988	Run before command .
7989	Get per page per page
7990	Add where clauses to query
7991	Register routes .
7992	Allow allowed methods
7993	Set the pattern .
7994	Returns an array of tokens .
7995	Returns the compiled regex .
7996	Get compiled variables .
7997	Checks if the request matches the request .
7998	Build variables .
7999	Dispatch the router .
8000	Generate a link .
8001	Compile the regular expression .
8002	Checks if the request matches the pattern .
8003	Generate a link .
8004	Tokenize a pattern .
8005	Tokenize a pattern .
8006	Tokenize a segment .
8007	Splits a pattern into segments .
8008	Compile a token .
8009	Convert scope options to scope .
8010	Bind a route .
8011	Registers a new route .
8012	Add a route to the router .
8013	Normalize request .
8014	Route request .
8015	Link a route .
8016	Clear all routes .
8017	Create JS code
8018	Get the file .
8019	Get access token
8020	List addressbooks .
8021	Get emails from a book
8022	Add email addresses .
8023	Get campaign cost
8024	Create a campaign
8025	Add a new sender
8026	Activate a new email .
8027	List subscriptions for a website .
8028	Set subscription state .
8029	Create a push task .
8030	Generate a unique name .
8031	Send a request to a website .
8032	Send a request to the API .
8033	Checks if the account is valid
8034	Decode a response string .
8035	Decode a URL encoded response string .
8036	Fetch emails from IMAP .
8037	Mark a message as processed .
8038	Returns the type of the mail .
8039	Performs an auto refund .
8040	Auto - apply an SSL certificate
8041	AutoReplace SSL certificate
8042	Called when the user is revoked .
8043	Collect SSL certificates
8044	Get DCVEM address list
8045	Send SSL checker
8046	Get WebHostReport
8047	Enter a DCV code .
8048	Create an exception .
8049	Generate HTML tag .
8050	Set the description .
8051	Reset the content .
8052	Register bindings .
8053	Generate an HTML string
8054	Add raw data .
8055	Prepare data .
8056	Check if a URL contains a URL
8057	Validate data .
8058	Fill the command with the given index .
8059	Fill the command .
8060	Add an index to the query
8061	Add a type to the query
8062	Set index settings
8063	Delete all documents .
8064	Create a new index .
8065	Update settings .
8066	Execute Raw Request
8067	Convert request to JSON
8068	Sets the sort .
8069	Set the facets .
8070	Compose the final query .
8071	Convert request parameters to array
8072	Add a node to the cluster
8073	Add a condition to the query .
8074	Delete a document .
8075	Set multiple documents .
8076	Execute the batch .
8077	Create a new request
8078	Create a POST request .
8079	Create a PUT request .
8080	Perform a DELETE request .
8081	Execute the request .
8082	Add options .
8083	Execute a request .
8084	Parses the nodes of the nodes .
8085	Adds a new document to the batch .
8086	Execute the batch .
8087	Finalize the current batch .
8088	Check current command .
8089	Get Gallery Album
8090	Initialize the album .
8091	Create a new album .
8092	Generate Album name
8093	Upload an album
8094	Deletes the picture .
8095	Get the size of the image to resize to resize .
8096	Add image styles
8097	Deletes a single version
8098	Save an album .
8099	Create extra images
8100	Set zebra image
8101	Prepare an image
8102	Configure the database .
8103	Configure the database .
8104	Create the config file .
8105	Check summaries for all operations .
8106	Generate PHP code
8107	Generates a link .
8108	Show a room
8109	Show photo message
8110	Loads javascript scripts .
8111	Delete a Picture
8112	Sort the picture
8113	List channel sections .
8114	Starts the worker .
8115	Stop the process .
8116	Kill the process .
8117	Send a payload
8118	Start the worker process
8119	Fork a process .
8120	Creates an authentication request .
8121	Parse SAML response .
8122	Get all binaries .
8123	Get the list of pending binaries .
8124	Update the installed binaries .
8125	Update a single binary .
8126	Start the Selenium process .
8127	Clean up all files
8128	Asserts that the SeleniumStandalium is running .
8129	Register binary binaries .
8130	Create a new binary instance .
8131	Check if an external URL is valid
8132	Get linux file name .
8133	Save the contents of the file .
8134	Emits a notification .
8135	Watch the download .
8136	Get the pre - update message .
8137	Get post message .
8138	Add a new pipe .
8139	Convert an item to a converted value .
8140	Convert a value to a value
8141	Writes an item .
8142	Get transport from request
8143	Validate password .
8144	Get the taxonomy .
8145	Check if the entity is valid .
8146	Get the description of the entity .
8147	Get environment variable
8148	Get client IP address .
8149	Get current URL
8150	Unparse query string
8151	Checks if the property is set .
8152	Lookup an address by address
8153	Determine the inclusion of a string .
8154	Runs the given value .
8155	Removes an item from an array .
8156	Returns an array of elements in an array .
8157	Update form read .
8158	Get field value .
8159	Get the item matching the given item UUID .
8160	Checks if an item matches the given item .
8161	Get a single item from the aggregate .
8162	Replace variables in a string
8163	Load configuration from JSON .
8164	Load configuration file .
8165	Sets the lat lng
8166	Get LatLng object
8167	Get error response .
8168	Redirect to form
8169	Creates a form aggregate .
8170	Remove item from form
8171	Check if the project is autoloadd .
8172	Get plugin classes .
8173	Get the name of the package .
8174	Guess the package name .
8175	Map the root package to a package .
8176	Write plugin config .
8177	Get the root package .
8178	Returns the install path for the given package .
8179	Initializes the install directory .
8180	Generate the meta palettes
8181	Get the meta palettes of a table .
8182	Creates a new context .
8183	Enter the theme context .
8184	Build the context config .
8185	Get color for given identifier .
8186	Rotate the color
8187	Convert HSV to RGB color
8188	Enter a context .
8189	Leave the current context .
8190	Switches the current context .
8191	Load config from bundle .
8192	Set config types .
8193	Returns the templates for the given data container .
8194	Generate a page picker
8195	Get all articles
8196	Get all modules
8197	Prepare the template .
8198	Parses the given buffer .
8199	Registers tagged services .
8200	Initialize environment .
8201	Initialize layout .
8202	Add a child element .
8203	Compile the input .
8204	Compile a node .
8205	Throw exception .
8206	Get PHP type .
8207	Get fileReflector
8208	Get the docblock for a given property .
8209	Returns the docblock for a given property .
8210	Gets the doc block from the given class .
8211	Get the PHP type and class name .
8212	Login to the user
8213	Initializes the client .
8214	Get login token
8215	Perform a search .
8216	Extract a value from an array of extractors .
8217	Get all tags
8218	Downloads the image .
8219	Get all wallpapers
8220	Download all images .
8221	Extract from mutator .
8222	Extract from accessor .
8223	Extracts the type from reflection .
8224	Check if a property is public
8225	Get accessor method .
8226	Get mutator method .
8227	Get property name .
8228	Loads the application .
8229	Create the application
8230	Set a value
8231	Sets a list of values
8232	Remove a section .
8233	Merges a section .
8234	Rename a value
8235	Renames a section .
8236	Read a file .
8237	Reads and merges the contents of a file .
8238	Merges the contents of an iniObject into an object .
8239	Convert a value to a string
8240	Set a value in the top level
8241	Sets the values of the current content .
8242	Returns all the values of the modifiers .
8243	Remove a value
8244	Remove a section .
8245	Set a value .
8246	Set a value on the master
8247	Set the values on the master
8248	Get value from master
8249	Get all values from the master
8250	Remove a value
8251	Removes a value from the master
8252	Check if a section is a section .
8253	Returns an array of values for a section
8254	Create a file loader .
8255	Get the class name for a short type .
8256	Create a cookie .
8257	Execute the config file .
8258	Determines the file .
8259	Choose the bundle .
8260	Write the configuration to the file .
8261	Creates a Dumper .
8262	Convert a string to a string
8263	Read session data .
8264	Get routes .
8265	Sort an array .
8266	Set the offset of the stream .
8267	Gather data .
8268	Write content to file
8269	Get the options reader .
8270	Run a route .
8271	Gather the middleware .
8272	Flatten an array .
8273	Load configuration files .
8274	Get a slice of the middleware .
8275	Parse stage string .
8276	Run a command .
8277	Sets the default values for a command .
8278	Get the PHP executable .
8279	Get the binary binary binary .
8280	Runs the command .
8281	Get the default input definition .
8282	Builds the tree of routes .
8283	Adds a route to the node tree .
8284	Gets the segment matcher .
8285	Creates a FilesystemManager instance .
8286	Create a new cache factory .
8287	Returns the total number of executed statements .
8288	Gets the memory usage .
8289	Profile a method call .
8290	Resolve the given alias .
8291	Checks if the pattern matches the given pattern .
8292	Creates a TwigEngine instance .
8293	Extend view factory .
8294	Extend the engine resolver .
8295	Creates a TwigEnvironment instance .
8296	Create Twig loader .
8297	Parses data .
8298	Creates a new rule .
8299	Creates a validator for the given rule .
8300	Creates a chainable validator .
8301	Parse a string .
8302	Parse parameters .
8303	Starts a web server .
8304	Stop the web server .
8305	Get the address of the process .
8306	Check if the process is running .
8307	Creates a process .
8308	Returns all registered listeners .
8309	Remove a listener from the pattern pattern .
8310	Checks if the subject contains wildcards .
8311	Add a listener pattern .
8312	Reads mandatory options .
8313	Build multi dimensional array .
8314	Get prepared response .
8315	Get the response .
8316	Get the displayer .
8317	Get filtered displayers .
8318	Gets the sort filter .
8319	Add lookups for a route .
8320	Add addresses to the swift .
8321	Create assetsRenderer .
8322	Register base collectors .
8323	Registers the collector .
8324	Extend event manager .
8325	Create session manager .
8326	Create route dispatcher .
8327	Creates a Router instance .
8328	Creates a UrlGenerator instance .
8329	Detect the console environment .
8330	Get the environment argument .
8331	Displays a JS file .
8332	Creates a Toml builder .
8333	Process an array of arrays .
8334	Get pretty metadata for a given entity .
8335	Get loader paths .
8336	Build the table rows .
8337	Get the Whoops instance .
8338	Add where clauses to route .
8339	Merge group attributes into route .
8340	Convert action to controller action .
8341	Prepend the namespace namespace .
8342	Get the prefix of a URI .
8343	Update the group stack .
8344	Creates a sanitizer instance .
8345	Add before bootstrapping callbacks
8346	Add after bootstrapping callbacks
8347	Bootstrap the given bootstraps .
8348	Call the bootstrap bootstrap .
8349	Generate session id .
8350	Merge new flash .
8351	Load session data .
8352	Read data from handler .
8353	Write the metadata to the handler .
8354	Resolve current page
8355	Sanitizes a query string .
8356	Extend event manager .
8357	Returns a list of files that match the given files .
8358	Get twig files .
8359	Validate a template
8360	Display details .
8361	Display twig files .
8362	Parse the middleware group .
8363	Check mandatory options .
8364	Get configuration dimensions .
8365	Validate options .
8366	Check deprecated options .
8367	Register a resource .
8368	Get resource URI .
8369	Get resource wildcard resource .
8370	Get resource prefix .
8371	Add resource destroy .
8372	Get a nested resource URI .
8373	Get resource action .
8374	Get resource route name .
8375	Slice through the container .
8376	Get the middleware middleware .
8377	Finds a list of file paths .
8378	Get IP address .
8379	Checks if the given IP address is valid .
8380	Get the first IP address from a header .
8381	Set the domain .
8382	Validate middleware .
8383	Validate middleware .
8384	Create translation manager .
8385	Creates a schedule .
8386	Get computed data .
8387	Creates a Swift mailer .
8388	Creates a Mailer instance .
8389	Set the global address .
8390	Create a tooltip group
8391	Create a tabular tab .
8392	Create a table .
8393	Create dropdown menu
8394	Create metrics .
8395	Clone a variable
8396	Get the cloner instance .
8397	Returns a HtmlDumper instance
8398	Append a PHP code to the output .
8399	Append a line .
8400	Add extensions .
8401	Sort middleware .
8402	Move middleware to the middleware .
8403	Create an aggregate driver .
8404	Create an emergency driver .
8405	Create a new Monolog instance .
8406	Create a new Monolog log .
8407	Create a syslog driver .
8408	Creates a Monolog driver .
8409	Create a slack web driver .
8410	Create a custom logger instance .
8411	Create a Monolog driver .
8412	Add processor to Monolog .
8413	Create a new ServerRequest instance .
8414	Returns the singular form of the given value .
8415	Match case insensitive .
8416	Connect to the local filesystem .
8417	Creates a console instance .
8418	Merges an array of values into a new array .
8419	Format group suffix .
8420	Check if the environment file exists .
8421	Set environment file path .
8422	Get the transport for the given transport .
8423	Create a Swift transport .
8424	Check if the given transport is registered .
8425	Creates a Swift transport .
8426	Creates a MailgunTransport instance .
8427	Creates a SparkPostTransport instance .
8428	Create a SesTransport .
8429	Creates a repository .
8430	Update the route tree .
8431	Register console events .
8432	Extend Twig Environment
8433	Register TwigioTwig extension .
8434	Returns all allowed HTTP methods .
8435	Add a route .
8436	Checks if the stream is a pipe .
8437	Add a mime type .
8438	Register a parser .
8439	Parse the payload .
8440	Returns a parser instance .
8441	Returns the format for the given payload .
8442	Set up the default configuration
8443	Get request duration .
8444	Stop a measure .
8445	Add a measure .
8446	Identify an exception .
8447	Generate a random UUID .
8448	Set headers .
8449	Validates the HTTP protocol version .
8450	Checks if an array contains only strings
8451	Filter header values .
8452	Get retry time .
8453	Get the Invoker instance .
8454	Create a new instance of a configuration value .
8455	Extend the cache item .
8456	Extend simple traceable cache .
8457	Get environment variable .
8458	Parse a parameter .
8459	Replace the data with the given parameter key .
8460	Create table .
8461	Get the PDO connection .
8462	Connect to PDO
8463	Get all files in a directory .
8464	Render HTML into HTML .
8465	Returns the last modified time for the given type .
8466	Run the callback .
8467	Remove the scheduled job .
8468	Extend the log manager .
8469	Extend the profiler instance .
8470	Imports a DOMDocument .
8471	Load a file from a file .
8472	Load a XML document .
8473	Converts a PHP value to a PHP string .
8474	Validate an XML document .
8475	Convert a string to a string
8476	Check if message is header
8477	Add references to the entry
8478	Process obsolete entry .
8479	Process the previous entry .
8480	Extract multiple lines from a single line .
8481	Extract headers .
8482	Check if a file is a file .
8483	Set the error status .
8484	Set the stream or file or file .
8485	Validate the stream .
8486	Mock a service .
8487	Parse a command expression .
8488	Parse an input token .
8489	Parse an input token .
8490	Extracts description from a token .
8491	Validates the cookie name .
8492	Validate cookie value .
8493	Set a value in the scope .
8494	Returns a list of email addresses .
8495	Create a MongoDB driver .
8496	Create a Redis cache driver .
8497	Create a PredisCachePool .
8498	Create a filesystem cache driver .
8499	Create a Memcached cache driver .
8500	Creates a Memcache driver .
8501	Get data collector .
8502	Compiles a route template .
8503	Create a router class template .
8504	Compiles the route tree .
8505	Compile route http method .
8506	Compile disallowed HTTP method .
8507	Compile the found route .
8508	Get DebugProcessor .
8509	Computes the count of errors .
8510	Group log levels .
8511	Get listener .
8512	Bind event to dispatcher .
8513	Unbinds all events .
8514	Creates a regex pattern .
8515	Returns the value of the given key .
8516	Set an item in the array .
8517	Process parameters .
8518	Process a parameter .
8519	Render the exception .
8520	Renders the editor .
8521	Render the trace .
8522	Returns the trace of the given exception .
8523	Returns an array of frames for the given exception .
8524	Format arguments .
8525	Gets the lines of a file .
8526	Get file contents .
8527	Normalize path name .
8528	Resolve a binding .
8529	Resolve a class .
8530	Resolve a method .
8531	Resolve a parameter .
8532	Resolve parameters .
8533	Get reflection method .
8534	Check if value is a function .
8535	Merges the parameters with the given parameters .
8536	Write the contents of a file .
8537	Writes the contents of a file .
8538	Update a stream .
8539	Decrypt a stream .
8540	Encrypt a file .
8541	Decrypt a string .
8542	Encrypt a string .
8543	Get stream from string
8544	Create transport factory .
8545	Creates a MailManager instance .
8546	Get the version number .
8547	Get the schema for the xliff version .
8548	Fixes the location of the XML file .
8549	Parse visibility .
8550	Sanitize the given data .
8551	Run global sanitizers .
8552	Sanitize a field .
8553	Execute sanitizer .
8554	Resolve callback .
8555	Resolve the given expression .
8556	Creates a string representing a string .
8557	Get the defaults for a callable .
8558	Asserts that a callable is valid .
8559	Checks if a callable is a static method .
8560	Create a cookie jar .
8561	Convert a value to an element .
8562	Add a node to the document .
8563	Add a collection node .
8564	Create the root element .
8565	Cast an object to a class .
8566	Get all registered listeners .
8567	Get all registered listeners .
8568	Validates that the same site is valid .
8569	Normalizes the expiration time .
8570	Normalize domain name .
8571	Normalize path .
8572	Get the timestamp .
8573	Starts a new callable .
8574	Applies the given translation .
8575	Extract helpers from a string .
8576	Apply filters .
8577	Log a translation .
8578	Collects messages .
8579	Display a list of files .
8580	Display json file info
8581	Get files from a file or directory .
8582	Get the input stream .
8583	Get directory iterator .
8584	Validates an event name .
8585	Convert a number to bytes .
8586	Convert a number to a number
8587	Get config from name
8588	Create a new instance .
8589	Add an extractor .
8590	Create alias loader .
8591	Get cache path .
8592	Push command to queue .
8593	Checks if a command is queued .
8594	Create session driver .
8595	Create the migration driver .
8596	Creates a session based on the given driver .
8597	Build session .
8598	Builds an encrypted session .
8599	Parse a route .
8600	Get first item from array
8601	Parse notes .
8602	Convert content to UTF - 8 charset
8603	Tag data .
8604	Create log manager .
8605	Confirm to production mode
8606	Get default confirmation callback .
8607	Inject the profiler .
8608	Collect data .
8609	Creates a template .
8610	Create a profile .
8611	Parse log level .
8612	Starts the session .
8613	Store current URL .
8614	Collect garbage collection .
8615	Adds a cookie to the response .
8616	Create a response view .
8617	Find a template .
8618	Normalize file name .
8619	Parse a view .
8620	Add content .
8621	Send a Swift message .
8622	Determine if the given message is sent .
8623	Create a new message .
8624	Build the message builder .
8625	Create a view .
8626	Handle a route .
8627	Prepare URI path .
8628	Generate route file .
8629	Generate a directory .
8630	Returns the path to the given file .
8631	Check if the given options are valid .
8632	Get parser .
8633	Get a file .
8634	Require a file .
8635	Create a symbolic link .
8636	Set all directories .
8637	Add a directory .
8638	Import a file .
8639	Add a MessageCatalogue
8640	Set a language fallback .
8641	Returns the translation for a given language .
8642	Add presenter .
8643	Check if there are more pages .
8644	Get display address .
8645	Find the front controller .
8646	Find hostname and port and port
8647	Find the best port .
8648	Escapes a string .
8649	Returns a sorted array of metrics .
8650	Create an append stream .
8651	Parse tokens .
8652	Searches for next token .
8653	Get the value from the token iterator .
8654	Creates a TraceablePDecorator .
8655	Decrypt the cookie .
8656	Encrypt the response .
8657	Create a new SetCookie instance .
8658	Register a command .
8659	Get the console instance
8660	Initialize project directories .
8661	Find the path for a named path .
8662	Get namespace path segments .
8663	Finds a view by name .
8664	Get the list of possible views .
8665	Get information about the event .
8666	Render the set cookie header .
8667	Extend twig environment .
8668	Get all messages .
8669	Add a message .
8670	Alias middleware .
8671	Get logs from a socket .
8672	Handle view exception .
8673	Get error exception .
8674	Get the cache path .
8675	Ensure statical proxy exists .
8676	Format statical proxy stub .
8677	Register Markdown engine .
8678	Clean export string
8679	Add tcomment to output
8680	Add references to output .
8681	Add flags to output .
8682	Add previous entry to output .
8683	Add msgid to output
8684	Add msgid to output format
8685	Add msgstr to output output
8686	Add headers to output
8687	Get pagination links .
8688	Creates a new adapter .
8689	Ensure the command is correct .
8690	Checks if the expression is due to the given expression .
8691	Run the command in foreground
8692	Run the command in background .
8693	Call before callbacks
8694	Call after callbacks .
8695	Calculates the time interval between start and end time .
8696	Checks if the given start time is within the given start time .
8697	Merges two matchers .
8698	Optimize matchers .
8699	Optimize segment matcher .
8700	Optimize matchers .
8701	Creates a HtmlDisplayer instance .
8702	Creates a ViewDisplayer instance .
8703	Creates a WhoopsPrettyDisplayer instance .
8704	Get number of recipients .
8705	Bootstrap all bootstraps .
8706	Handle the request .
8707	Render exception .
8708	Pipe request through middleware .
8709	Compile parameters .
8710	Sets the value of the binding .
8711	Get the invoker .
8712	Bind a plain value to a plain text .
8713	Bind service .
8714	Binds a singleton instance .
8715	Resolve a plain binding .
8716	Resolve a service .
8717	Resolve a singleton instance .
8718	Extend the resolved resolve .
8719	Get contextual binding format .
8720	Get the message ID from the response .
8721	Converts an array of emails to an array .
8722	Returns the MIME part of the given message .
8723	Get message payload .
8724	Process recipients .
8725	Process message parts .
8726	Process headers .
8727	Check the requirements .
8728	Get extension .
8729	Get a view .
8730	Checks if the string ends with the given needle .
8731	Render cookie header .
8732	Creates a list of cookies from a cookie string .
8733	Set the error .
8734	Set the exit code
8735	Converts a route to a URI .
8736	Prepare route path .
8737	Checks if route is required .
8738	Add port and port to Uri
8739	Replace route parameters .
8740	Replace the parameters with the given parameters .
8741	Add a query string .
8742	Get route query string .
8743	Parse a where expression .
8744	Get the middleware .
8745	Gather disabled middleware .
8746	Add a new cookie .
8747	Splits a cookie pair .
8748	Inject content type .
8749	Returns a string with words .
8750	Generate a random string
8751	Replaces the first substring with the given string .
8752	Replaces the last occurrence of a string .
8753	Replace the given string with the given position .
8754	Returns the verbosity for the given level .
8755	Runs the command .
8756	Call a command .
8757	Call a command .
8758	Get the argument .
8759	Get an option .
8760	Ask a question .
8761	Ask a question .
8762	Ask a choice .
8763	Render a table .
8764	Writes a string .
8765	Print an info message .
8766	Output a comment .
8767	Print a question .
8768	Print an error .
8769	Print a warning .
8770	Configure the fluent definition .
8771	Sets the parameters .
8772	Get the response ID from the response .
8773	Get recipients .
8774	Render template .
8775	Add a warning .
8776	Report an exception .
8777	Add transformer .
8778	Handle an error .
8779	Handle shutdown .
8780	Register exception handler .
8781	Register shutdown handler .
8782	Prepare an exception .
8783	Returns the transformed exception .
8784	Get log level .
8785	Determine if the given exception should be thrown .
8786	Register a Dumper .
8787	Dump data into a string
8788	Get a Dumper instance .
8789	Get the MIME entity string .
8790	Get the parameters for the given parameters .
8791	Convert code point to UTF - 8 .
8792	Register the busing dispatcher .
8793	Optimize the route tree .
8794	Extract the common parent node from two segments .
8795	Get the SQL for the query
8796	Try to open a file .
8797	Creates a stream for the given resource .
8798	Copy a stream to a string .
8799	Copies a stream to another stream .
8800	Reads a line from a stream .
8801	Set default path and domain .
8802	Get path and domain and domain .
8803	Get the pretty handler .
8804	Update the host header .
8805	Filter HTTP method .
8806	Creates a Uri instance from a string .
8807	Returns the path without extension .
8808	Changes the extension of the given path .
8809	Create cache manager .
8810	Checks if the mock instance is a mock
8811	Resolve a static proxy instance .
8812	Check if the instance is a mock
8813	Returns the name of the given command .
8814	Sets the response .
8815	Set content disposition .
8816	Set auto - modified header
8817	Creates a new cookie with the given value .
8818	Describes available commands .
8819	Describes a command .
8820	Get names sorted by name .
8821	Create a tab .
8822	Prepare request attributes .
8823	Prepare request headers .
8824	Prepare server params
8825	Get parsed body .
8826	Export value to string
8827	Creates an encrypted connection .
8828	Get cache config .
8829	Adapts the adapter .
8830	Parse a route pattern .
8831	Generate regular expression .
8832	Get the invoker .
8833	Check if an object exists .
8834	Get the target language from a file .
8835	Creates a connection to a variable .
8836	Create a DumpServer instance
8837	Check if a path exists .
8838	Get transformed path .
8839	Get the contents of a directory .
8840	Filter contents by type
8841	Determine if the token is a valid token .
8842	Adds a cookie to the response .
8843	Sanitize collected messages
8844	Compute count of messages .
8845	Get sorted messages .
8846	Adds a stream to the stream .
8847	Close all streams .
8848	Decode GIF image .
8849	Decode the extension .
8850	Decode image descriptor .
8851	Decode image data .
8852	Set order direction
8853	Gets the list of available items
8854	Load the pagination list
8855	Set all cities from an array
8856	Sets a list of PSTN networks from an array .
8857	Loads the IP addresses from the country .
8858	Loads all cities from the country
8859	Returns a list of all countries .
8860	Get a city by its ID
8861	Pad a block with padding
8862	Get all countries .
8863	Update all the networks .
8864	Updates a list of networks .
8865	Create a mapping
8866	Decode the delay .
8867	Check if the color is transparent .
8868	Decode proposal method .
8869	Get the size of the image .
8870	Get the offset
8871	Set the offset
8872	Gets the country .
8873	Convert this object to an array .
8874	Creates an object from an array .
8875	Creates a new instance from an array .
8876	Creates a new DID .
8877	Generate unique hash .
8878	Generate auth string
8879	Load the call history .
8880	Call a method
8881	Returns the frame with the given index .
8882	Add offset to the frame
8883	Add a size to the frame .
8884	Get the number of loops
8885	Determine if the color is a global color table .
8886	Returns the number of colors in the screen .
8887	Get the background color index .
8888	Add a new frame to the stack .
8889	Creates a new frame with the given property .
8890	Convert this object to an array
8891	Get all balances
8892	Get all balances
8893	Get all balances
8894	Change payment balance
8895	Synchronizes the prepaid balance .
8896	Set canvas size
8897	Set the canvas from a decoded image .
8898	Creates a frame from a GIF resource .
8899	Encode the screen .
8900	Builds the logical screen descriptor .
8901	Build NetSCAPE extension .
8902	Builds a frame .
8903	Builds the graphic control extension .
8904	Builds the image descriptor .
8905	Create a new DID number .
8906	Change autorenew flag
8907	Renew customer .
8908	Loads the details of the service .
8909	Updates the mapping .
8910	Generate unique hash .
8911	Checks if the IP is in a range .
8912	Get a parameter by name .
8913	Link a metadata service .
8914	Set meta data .
8915	Add meta data for a given service .
8916	Remove a service .
8917	Release a service .
8918	Get a service .
8919	Creates a service instance from the given factory .
8920	Resolve a service provider .
8921	Register a service provider .
8922	Bind a factory .
8923	Bind a service .
8924	Bind a service .
8925	Bind a factory .
8926	Get the type resolver type .
8927	Adds an argument to the service .
8928	Add arguments from array
8929	Resolve the arguments .
8930	Create a new instance .
8931	Sets the tokens .
8932	Get the current token .
8933	Get next token .
8934	Skip token of type
8935	Get the remaining tokens .
8936	Returns a list of tokens that match the given type .
8937	Gets a list of tokens from the current token .
8938	Errors an exception .
8939	Parse a child node .
8940	Parses the parser .
8941	Sets the container name .
8942	Add a service definition .
8943	Adds a service definition .
8944	Adds a service definition .
8945	Import namespace .
8946	Validate service builder string .
8947	Generate a normalized service name .
8948	Generate the container .
8949	Get resolver method name .
8950	Generates the code for the given arguments .
8951	Generate meta data .
8952	Generate resolver types .
8953	Generate resolver methods .
8954	Generate resolver methods .
8955	Creates a ValueNode from a token .
8956	Sets the type .
8957	Generate map mapping
8958	Get the value of the token .
8959	Checks if the token is a value .
8960	Checks if a key exists .
8961	Push a value to the array .
8962	Convert a ctn array to PHP array
8963	Returns the next token .
8964	Returns a list of tokens .
8965	Show the application .
8966	Run a command
8967	Create backup database .
8968	Pull the repository .
8969	Copy environment .
8970	Executes composer .
8971	Run the install command .
8972	Seed the database .
8973	Deploy the install directory .
8974	Resolve a service .
8975	Sets the cache directory .
8976	Create a new container .
8977	Handle the request .
8978	Import from vendor_map .
8979	Check if a path exists .
8980	Get the code from a file .
8981	Get the code for the given name .
8982	Parse a container file .
8983	Handle the scope .
8984	Handle a scope import statement .
8985	Handle a parameter definition .
8986	Creates a ServiceArguments from the given arguments .
8987	Handle a service definition .
8988	Creates a new instance of a service definition .
8989	Adds a method call to the service definition .
8990	Adds a method call to the service definition .
8991	Add meta data
8992	Checks if the current user is origin .
8993	Check if the request is authenticated .
8994	Sets the value of this parameter .
8995	Returns the name of the given type .
8996	Returns a string representation of this object .
8997	Send request .
8998	Set the type id
8999	Get the end of the current time
9000	Returns a string as a string
9001	Returns the GPX representation of this track .
9002	Collect response data .
9003	Get all models .
9004	Get the AJAX payload
9005	Get callback for callback
9006	Run callback .
9007	Sanitize a handle
9008	Validate all validations .
9009	Validate a single value .
9010	Set the size of a device .
9011	Add a reset device .
9012	Get the size of the device .
9013	Builds the classes .
9014	Check if user is a role
9015	Renders the row .
9016	Generate column .
9017	Walk the current column .
9018	Renders a row .
9019	Get column resets .
9020	Get the index .
9021	Migrate legacy content .
9022	Register a handler .
9023	Handle AJAX request
9024	Set the callback
9025	Add validation rules .
9026	Handle the callback .
9027	Get the response type .
9028	Send response headers
9029	Send response body
9030	Get the content of a given URL .
9031	Checks if the given method is supported .
9032	Toggle visibility .
9033	Check if the user has access to the current user .
9034	Builds the grid .
9035	Get column as string
9036	Add a column reset .
9037	Add column resets .
9038	Returns a list of column resets .
9039	Checks if a column resets has a given size .
9040	Get column resets as string
9041	Register a handle .
9042	Enqueues the scripts .
9043	Get a list of nonce keys .
9044	Get grid grids
9045	Parses a template
9046	Gets the content element .
9047	Get grid elements
9048	Creates a row .
9049	Creates column .
9050	Build grid columns .
9051	Fetches a rowset .
9052	Prepare custom classes
9053	Build column resets .
9054	Create a grid by id
9055	Parses the template .
9056	Checks if the given model is visible .
9057	Loads a form field .
9058	Get grid grids
9059	Prepare the container .
9060	Update subcolumns definition
9061	Append columnset id to the table
9062	Append column sizes to table
9063	Returns a list of all types .
9064	Returns an array of IDs for the given data container .
9065	Get the columns for a module
9066	Get column orders
9067	Get column numbers
9068	Get data from session
9069	Check if a key exists .
9070	Removes a key from the session .
9071	Load a value from the cache .
9072	Clears the current session .
9073	Parse insert tag .
9074	Get the walker .
9075	Translate query parameters .
9076	Get encryption params
9077	Get dec params
9078	Save dynamic data
9079	Check if the field is valid
9080	Save the field .
9081	Initialize the entity .
9082	Render field fields
9083	Get field value
9084	Get field values
9085	Check if all entities are valid
9086	Save all entities
9087	Assign dynamic fields to a page object .
9088	Get field by locale
9089	Get repeaters by locale
9090	Get entities by field id
9091	Get entity object
9092	Duplicate this entity .
9093	Initialize the group .
9094	Check if the field is valid
9095	Render the group .
9096	Save the group fields
9097	Get group by rule
9098	Check if a rule matches the given rule .
9099	Initializes a group
9100	Get field data
9101	Sets the character at the given position .
9102	Determines if the given x is a dot .
9103	Renders a row .
9104	Returns a list of rows .
9105	Get the dot from a pixel
9106	Generate a prime .
9107	Initialize repeating fields .
9108	Creates a list of form controls
9109	Create a list of field controls
9110	Create a field control .
9111	Creates a HeaderRepeater .
9112	Saves this RepeaterTranslation .
9113	Get the display value for this group .
9114	Get the value of a field .
9115	Get template name .
9116	Get default template name .
9117	Initialize the value
9118	Get the model instance .
9119	Get html id
9120	Get html name
9121	Save the model .
9122	Save the field .
9123	Save the repeater field .
9124	Get option value
9125	Move the current position
9126	Move the current position
9127	Checks if the task configuration is ancestor .
9128	Checks if the task configuration is descendant .
9129	Reset the current state .
9130	Checks if input is valid
9131	Configure the wrapped condition options .
9132	Configure condition options .
9133	Checks if a value matches the given value .
9134	Check if input is empty
9135	Returns the duration of this period .
9136	Context manager .
9137	Find the best next task .
9138	Get input code .
9139	Checks if the given state is resolved .
9140	Get file path .
9141	Sorts the process configuration .
9142	Handle the iterator from the input state .
9143	Flush output .
9144	Get the number of lines .
9145	Rewind the stream .
9146	Get transformer code .
9147	Gets the dependency groups .
9148	Get the main task group .
9149	Checks if the task configuration is circular .
9150	Builds the dependencies for the task configuration .
9151	Sort dependencies .
9152	Resolve a task configuration .
9153	Initializes the task configuration .
9154	Flush tasks .
9155	Handle the process state .
9156	Checks the given process configuration .
9157	Validate model .
9158	Convert this object to an array
9159	Get model fields .
9160	Unset a relation .
9161	Format a classname to a relation name .
9162	Add a relation to the model
9163	Add a relationship to the model
9164	Add a many relation to the database
9165	Find a collection of objects
9166	Returns a collection of records .
9167	Find a single model
9168	Returns the number of records .
9169	Build a select query
9170	Execute a SELECT query
9171	Hydrate an object
9172	Delete the model .
9173	Update the model .
9174	Insert data into database
9175	Set the current memory .
9176	Removes a callback .
9177	Get a model by its primary key .
9178	Remove a model
9179	Returns the index of a given pk .
9180	Save all elements .
9181	Prefix the data with the given table name .
9182	Prefix order data with table name
9183	Get the definition for this column .
9184	Register a table .
9185	Make simple query object
9186	Make a complex query object
9187	Get model model .
9188	Check if table is installed .
9189	Uninstall a table .
9190	Check if a table is installed .
9191	Fire a plugin event .
9192	Save a post .
9193	Get the column name .
9194	Parse default values .
9195	Create a new Query instance from a model .
9196	Select a select statement .
9197	Select single column .
9198	Select all rows from the query
9199	Add an expression .
9200	Add a where clause .
9201	Generate a where tag .
9202	Add nested where clause
9203	Add a where clause .
9204	Add a where clause to the query .
9205	Add a date to the query .
9206	Filter the query for the given query .
9207	Order by column
9208	Order by expression .
9209	Set the group by column
9210	Add a group by expression .
9211	Adds a join to the table .
9212	Joins a subquery .
9213	Perform paginate .
9214	Iterate over a number of results .
9215	Add relations to the query .
9216	Parses a nested nested array .
9217	Assign an array by path .
9218	Make a limit
9219	Build the SQL builder .
9220	Update meta cache
9221	Find model by primary key .
9222	Find many records .
9223	Find model by primary key
9224	Find a model by its primary key .
9225	Get or create a new model .
9226	Create a new model .
9227	Update model .
9228	Handle eager loading .
9229	Performs an eager load .
9230	Checks if the given operator is valid .
9231	Prepare a column
9232	Escape the value of a column .
9233	Configure the database .
9234	Get column value
9235	Create a new record
9236	Adds the ORDER BY clause .
9237	Add an ORDER BY clause .
9238	Set all columns
9239	Build an eager load map .
9240	Save a comment .
9241	Get default argument
9242	Execute query
9243	Parses the results .
9244	Parse query
9245	Parse the order .
9246	Parse pagination .
9247	Checks if two numeric values are equal .
9248	Checks if old values are equal .
9249	Fetch all models from the database
9250	Delete data from database
9251	Update an existing record
9252	Get total pages
9253	Perform pagination .
9254	Returns the number of found models .
9255	Returns the number of models in the model .
9256	Checks if the given offset exists .
9257	Sets a value at the given offset .
9258	Returns the given offset .
9259	Build the query string .
9260	Boot the model .
9261	Boot the traits .
9262	Fill the model .
9263	Add attributes to the model .
9264	Adds a callback to the collection .
9265	Checks if the given column is valid .
9266	Sets the given attribute .
9267	Set raw attribute
9268	Get attribute value .
9269	Get raw attribute .
9270	Get attribute value .
9271	Get attribute from array .
9272	Get all related relations .
9273	Get a relation .
9274	Set a relation value .
9275	Get the value of a relation .
9276	Refresh the model .
9277	Get dirty attributes
9278	Get an object by its primary key .
9279	Create a new instance from a query
9280	Get data from database
9281	Check if the cache is cached
9282	Update a record .
9283	Save the model .
9284	Persist foreign relations .
9285	Save loaded relations
9286	Saves the model .
9287	Saves the model .
9288	Finish the model .
9289	Deletes the model .
9290	Create a new model .
9291	Fire model event .
9292	Register a model event .
9293	Get data to cache .
9294	Register global scope .
9295	Returns a new query with the given scope .
9296	Returns a fluent query with the given relations .
9297	Returns an array of attributes .
9298	Get the comparison of the column .
9299	Get the query string .
9300	Get row by primary key
9301	Get column by primary key
9302	Returns a builder for the given column .
9303	Returns the number of records in the database .
9304	Insert data into table
9305	Update a row
9306	Delete a row
9307	Delete many records
9308	Generate an exception from the database .
9309	Save a new term .
9310	Make a query object .
9311	Fetch the results for eager loading .
9312	Add new values
9313	Sets a value pair .
9314	Sets a SELECT clause .
9315	Reset the query
9316	Update a table .
9317	Delete a table
9318	Insert an insert into the table
9319	Set the FROM clause .
9320	Adds a join to the table .
9321	Add a WHERE clause to the query .
9322	Adds a WHERE clause to the query .
9323	Reset order by name
9324	Set limit .
9325	Reset the limit
9326	Boot the trash table .
9327	Get the results of the query .
9328	Load model from cache
9329	Load a collection from cache .
9330	Cache results .
9331	Cache collection .
9332	Cache a single model
9333	Register cache events .
9334	Save a user .
9335	Set the last updated timestamp .
9336	Get container parameters .
9337	Check if container is cacheable
9338	Boot the container .
9339	Load the container configuration .
9340	Build the column name for a table .
9341	Persist a collection .
9342	Persist the model .
9343	Persist the added model .
9344	Create a new model .
9345	Initializes the authentication token .
9346	Create a new model .
9347	Convert an asset to a file
9348	Builds an asset .
9349	Parses a CSS file .
9350	Send a message
9351	Executes a query .
9352	Returns the number of elements in the collection .
9353	Requeue a message .
9354	Send a message to the database .
9355	Verifies an array of fields .
9356	Add a message .
9357	Get messages for given type .
9358	Imports the given issues .
9359	Returns the value of an identifier .
9360	Checks if an item exists .
9361	Extend a service .
9362	Register a service provider .
9363	Add a service tag
9364	Finds all registered service tags .
9365	Boot the application .
9366	Initializes the bundles .
9367	Get kernel parameters .
9368	Validate content .
9369	Validate the content .
9370	Validate the given content .
9371	Get an asset container .
9372	Outputs javascript code .
9373	Output CSS .
9374	Get asset assets .
9375	Renders the assets .
9376	Check if an asset is valid .
9377	New Post Validator
9378	Creates a new XSDriver .
9379	Creates a new XSltcher .
9380	Creates a new Certificator .
9381	Create a CFDIReader .
9382	Handle a command .
9383	Set a cookie .
9384	Get cookie value .
9385	Find first element by closure .
9386	Check if the password is valid .
9387	Retrieves a node .
9388	Get attribute value .
9389	Append a child node .
9390	Populates a node with the given attributes .
9391	Retrieves a node by path .
9392	Check if value is required
9393	Add a query to the database .
9394	Add timers .
9395	Get file size
9396	Append a validator .
9397	Remove a validator .
9398	Get a validator .
9399	Creates a new command .
9400	Run all the files .
9401	Runs a file .
9402	Authorize a user .
9403	Checks if the user is logged in .
9404	Login a user .
9405	Log out the user .
9406	Add a new constraint .
9407	Validate the input .
9408	Returns a redirect response .
9409	Get the path of the file .
9410	Get message by index
9411	Generate custom post type name
9412	Returns a list of Twig functions .
9413	Resolve handler .
9414	Set up the issues .
9415	Summarize a collection of nodes .
9416	Retrieve a value from the session .
9417	Sets the position of a post .
9418	Generate a taxonomy name .
9419	Redirects to a route .
9420	Register commands .
9421	Returns the metadata for the given bundle .
9422	Get metadata for a namespace .
9423	Finds the namespace and path for the given class .
9424	Add an asset .
9425	Render a view .
9426	Save a value to the cache .
9427	Loads the content of a CFDI .
9428	Removes all nonSatNS schemas from the DOM .
9429	Remove non - empty namespace nodes .
9430	Remove unused namespaces .
9431	Initialize post data .
9432	Bind the registry items to the registry .
9433	Get the name of the file name .
9434	Initialize the context .
9435	Render the template .
9436	Load configuration files .
9437	Matches a route .
9438	Add a section .
9439	Group routes .
9440	Start a block .
9441	Stop the block .
9442	Output a block .
9443	Create a controller .
9444	Instantiate a controller .
9445	Validates a URL .
9446	Find a template file .
9447	Set application entity manager .
9448	Set application connection
9449	Render a template .
9450	Open the form .
9451	Add data transformers .
9452	Perform a GET request .
9453	Get market data
9454	Get account information .
9455	Prepare attributes .
9456	Add an extra extra key .
9457	Fetch an object
9458	Creates a dialog .
9459	Get connection instance .
9460	Begin a transaction
9461	Loads the DOM node .
9462	Render the XML document
9463	Connect to the server
9464	Enable monitoring .
9465	Set the background color
9466	Sets the image .
9467	Set the image id
9468	Set the image focus
9469	Set the image focusid
9470	Add a link to the ManiaScript object
9471	Get config value
9472	Set config value
9473	Get translation string
9474	Get an array with a callback .
9475	Remove styles from a string
9476	Create a new redirect .
9477	Get a list of numbers .
9478	Factory method to create a driver
9479	Loads the DOM node .
9480	Creates a new frame .
9481	End a frame .
9482	Redirect to page
9483	Appends a XML document to the DOM .
9484	Build a redirector .
9485	Set border .
9486	Declare font .
9487	Handles an image .
9488	Process an image .
9489	On image quality
9490	Get redirect for given request .
9491	Get redirected URLs .
9492	Get cached redirects .
9493	Set the icon size
9494	Sets the selected card .
9495	Invoke the query .
9496	Sets the content of the media file
9497	Get limit string
9498	Get update string .
9499	Get parameter value
9500	Get parameter value .
9501	Get the value of a POST parameter
9502	Restore a request .
9503	Redirect to the manialink
9504	Creates a link string .
9505	Creates an absolute link .
9506	Increment the current position
9507	Increment the current position
9508	Increment the current position
9509	Set position
9510	Set the scale
9511	Sets the valign value .
9512	Set the halign .
9513	Sets the alignment .
9514	Sets the size of the image .
9515	Sets the size of the image .
9516	Sets the size of the image .
9517	Add a button
9518	Add a gap .
9519	Returns a collection of HTTP responses .
9520	Get all languages .
9521	Fatal error handler
9522	Compute the error message .
9523	Compute short message .
9524	Handle the request .
9525	Upload file .
9526	Get current URL
9527	Calculates the position of the given position .
9528	Returns the aligned position of the given position .
9529	Get the position of an element
9530	Builds the query
9531	Quote data
9532	Reset all balances
9533	Query by asset type
9534	Configure the class loader .
9535	Get service IDs .
9536	Get the return type of the service .
9537	Execute the transaction .
9538	Get the balance entry
9539	Get the class hierarchy
9540	Change content type .
9541	Parse HTTP header .
9542	Convert string to array
9543	Builds an array of dimensional arrays .
9544	Get asset types
9545	Validate asset type .
9546	Gets the last date of a given asset type .
9547	Check if the strategy is valid
9548	Mutate a value .
9549	Fetch a URL from a URL .
9550	Returns the URL of the resource .
9551	Generate a zip file
9552	Parse CSV file
9553	Translates a CSV file into a list of strings
9554	Create a backup file .
9555	Get all assets by asset type
9556	Get asset type
9557	Get customer acc by asset type
9558	Get system customer id
9559	Execute a request
9560	Builds strategy key .
9561	Parse an opauth .
9562	Login action .
9563	Render a file .
9564	Get asset types
9565	Send the response .
9566	Authenticate a user .
9567	Verify a token .
9568	Validates a URL .
9569	Register the client .
9570	Register the API token .
9571	Register the command .
9572	Starts a new session .
9573	Get all properties of a class .
9574	Set the status code .
9575	Parse a CSS string .
9576	Finds a list of tokens .
9577	Finds the end of a quoted string .
9578	Finds the end of a URL .
9579	Check if a rule is valid
9580	Merge words .
9581	Check for selectors
9582	Get selectors .
9583	Parses a token .
9584	Set current app key
9585	Get current app key .
9586	Add acceptable JSON type to request .
9587	Builds the query
9588	Unpublish a post .
9589	Save unpublish date
9590	Check if post type is active
9591	Generate a hash .
9592	Generate a key for a given key .
9593	Verify that a token is valid .
9594	Generate HTTP headers .
9595	Generate query data
9596	Get customer id
9597	Fit to fit .
9598	Returns a string representation of the manipulations .
9599	Creates a new account .
9600	Fill the object with the given values .
9601	Get the URI of the URI .
9602	Set user info
9603	Set port .
9604	Set path .
9605	Get a single segment .
9606	Get query value
9607	Builds the HTML code .
9608	Aggregate aggregated values .
9609	Get configuration by strategy .
9610	Build the configuration .
9611	Composes an account .
9612	Execute an asset
9613	Execute a request .
9614	Prepare logIds
9615	Validate transactions .
9616	Set headers .
9617	Set a header .
9618	Add a header .
9619	Remove a header .
9620	Add a prefix to the path .
9621	Add prefixes .
9622	Finds the file for the given class name .
9623	Find file with known suffixes
9624	Convert object to array
9625	Clean an array .
9626	Set the code .
9627	Initialize a URI .
9628	Initialize query params
9629	Parse uploaded files .
9630	Parse uploaded files .
9631	Parse multiple uploaded files .
9632	Checks if the content type matches the given content type .
9633	Runs the command .
9634	Dispatch the command .
9635	Output a table .
9636	Output an error .
9637	Show help command .
9638	Get available commands .
9639	Create a directory .
9640	Append route to file .
9641	Replace the file with the given search .
9642	Dispatch a request .
9643	Create a template response .
9644	Get page .
9645	Get the response .
9646	Build the response for a given URI .
9647	Get page by URI
9648	Returns the alias for the given URI .
9649	View model .
9650	Create a new message
9651	Add headline IDs to HTML
9652	Run the request .
9653	Run CLI command .
9654	Register the activation .
9655	Get the Markdown Renderer instance
9656	Get the views .
9657	Get migration files .
9658	Find a page by its identifier .
9659	Get page name for given page identifier .
9660	Build meta data for a page
9661	Get page tree
9662	Returns a list of pages for a given path .
9663	Generate email authentication .
9664	Load messages from database .
9665	Send activation mail .
9666	Search for rows .
9667	Render the template .
9668	Render expression .
9669	Resolve expression key path .
9670	Find all classes .
9671	Prepare configuration array .
9672	Get the host name .
9673	Get the value of a key
9674	View model .
9675	Update model .
9676	Delete a message
9677	Finds the model .
9678	List all pages .
9679	Get the content of the content .
9680	Returns the sorting .
9681	Get the URI of this object .
9682	Get the URL from the meta file .
9683	Get meta title
9684	Get API call
9685	Builds the url .
9686	Handle response .
9687	Initializes the configuration .
9688	Starts profiling .
9689	Get the template file .
9690	Get value for given key path .
9691	Sets the root directory .
9692	Finds the class reflections .
9693	Get class reflection .
9694	Upload a file .
9695	Inserts a media file
9696	Calculate the hours of this interval .
9697	Get the dirty data for the given model .
9698	Registers an entity .
9699	Get the dirty fields of a model .
9700	Add identifiers to the model .
9701	Get entity id from string
9702	Get the tags
9703	Get the real class name .
9704	Configure tab element factory .
9705	Deletes the content media .
9706	Create title .
9707	Render pdf .
9708	Render image .
9709	Hydrate the given data into an object .
9710	Hydrate a collection .
9711	Deserialize a collection .
9712	Deserialize data .
9713	Guess the class name .
9714	Build the sitemap .
9715	Get the navigation .
9716	Returns an iterator for the given element id .
9717	Normalize the attribute
9718	Get extra property
9719	Generate a random string
9720	Limit words in a string .
9721	Get all files in a directory
9722	Generate short description
9723	Checks if the given time slot is overlap .
9724	Get non - overlapping time slots .
9725	Merges overlapping time slots .
9726	Get a resource .
9727	Merge default parameters .
9728	Execute a request .
9729	Render the BackendView .
9730	Get the navigation iterator .
9731	Get grid iterator
9732	Before saving the attribute
9733	Process the content .
9734	Update the media .
9735	Joins media .
9736	Upload media .
9737	Update data .
9738	List media
9739	Render a row
9740	Delete media .
9741	Set attribute list .
9742	Get default serialized model .
9743	Create directories .
9744	Export the views .
9745	Export controllers .
9746	Export routes .
9747	Check if the package is installed .
9748	Copy plugins .
9749	Copy assets files .
9750	Copy the less files to the source directory .
9751	Get all settings .
9752	Creates a new Navigation object from a serialized string .
9753	Creates a new nav item from an array .
9754	Load a block .
9755	Get module .
9756	Serialize an entity .
9757	Get model name .
9758	Returns the class metadata for the given model name .
9759	Try to find class metadata by id .
9760	Render page tree
9761	Get page tree
9762	Removes an item from the cache .
9763	List all tags .
9764	Returns a list of tagged tags .
9765	Add new tags
9766	Remove tags .
9767	Get tab parent tab parent .
9768	Generate columns .
9769	Counts required separators .
9770	Create tab separators .
9771	Create tab element .
9772	Create a new tab element
9773	Get stop element .
9774	Add an icon
9775	Get select options
9776	Get the status of the class .
9777	Returns a list of types for a given type .
9778	Get type label
9779	Returns a list of all the items in the list
9780	Finds the value of the field .
9781	Gets the next item .
9782	Get the current title
9783	Generate active field .
9784	Create a router .
9785	Get driver instance .
9786	Call the driver .
9787	Call the given driver .
9788	Resolve dispatch dependencies .
9789	Get nested parameters .
9790	Find route attributes .
9791	Find the restful route .
9792	Find the resource route .
9793	Get the alternative resource action .
9794	Dispatch a route .
9795	List shipments .
9796	Get calculator .
9797	Get shipping method .
9798	Add a route .
9799	Build resource schema .
9800	Update shipping address .
9801	Call method .
9802	Handle an IlluminateResponse .
9803	Handle response callback .
9804	Abort an exception .
9805	Checks if the response is a non - HTML response .
9806	Register error handler
9807	Get options for an action .
9808	Delete an item
9809	Save an item to the cache .
9810	Output a block .
9811	Get a value from the cache .
9812	Sets a value in the cache .
9813	Sets multiple values .
9814	Delete multiple keys .
9815	Check if a key exists .
9816	Get label
9817	Get full path name .
9818	Creates a tree tree .
9819	Print a command
9820	Set resource members
9821	Load a PSR class .
9822	Set the account ID .
9823	Translate an exception .
9824	Get the console instance .
9825	Execute the request
9826	Get all the constants .
9827	Returns a list of all the containers .
9828	Update the properties of a container .
9829	Check if blob exists .
9830	Encodes a JWT .
9831	Decode a JWT token .
9832	Get the payload .
9833	Parse a JWT token .
9834	Returns the timestamp for the given date .
9835	Create a new index .
9836	Extract default value .
9837	Add previous button
9838	Add next button
9839	Get the value of a button
9840	Returns the value of the given object .
9841	Check if value is an object
9842	Checks if value is empty .
9843	Convert data to a Record object
9844	Parse response
9845	Returns a Datagridator instance .
9846	Checks if the given configurator exists .
9847	Get writer class name by format .
9848	Get the writer for the content negotiation .
9849	Converts a date time to a string .
9850	Initializes the data view .
9851	Read data from payload
9852	Parse payload .
9853	Writes the payload .
9854	Get a reader for a given content type .
9855	Get the writer for the given content type .
9856	Called when a test is executed .
9857	Called after a test .
9858	Called after step .
9859	Initialize the Laravel client .
9860	Boot the application .
9861	Gets the current page .
9862	Sets the current page .
9863	Get the action name .
9864	Checks if the current route matches the given route .
9865	Checks if the current action is equal .
9866	Checks if the given key exists .
9867	Checks if the form has errors .
9868	Assert the form error message .
9869	Login to the user .
9870	Insert a record into the database .
9871	Transforms a numeric value .
9872	Get a number formatter .
9873	Recursively nest nested arrays .
9874	Flatten an associative array into an array .
9875	Convert an array to an object
9876	Create a new column .
9877	Builds the header view .
9878	Builds the cell view .
9879	Creates a new column .
9880	Checks if this column is a compound column .
9881	Get the base data
9882	Get shipping data
9883	Get invoice data
9884	Send data to the gateway
9885	Removes characters from a string .
9886	Converts a FQCN name to a block prefix .
9887	Transforms a value to a localized currency .
9888	Parse value .
9889	Add an unresolved column .
9890	Check if upload is valid
9891	Resolve a file .
9892	Updates the edit form .
9893	Updates the edit form .
9894	Updates the edit form .
9895	Lock a record .
9896	Add a new PubControlClient
9897	Publish an item
9898	Loads the given locale .
9899	Send a request to the client .
9900	Creates a new instance of the request .
9901	Store a new user .
9902	Edit a user .
9903	Update a user .
9904	Delete a user .
9905	Create MPDF instance
9906	Add host header .
9907	Build a Guzzle request .
9908	Executes the callable chain .
9909	Check if a class exists .
9910	Run the queue .
9911	Ensure the thread is running .
9912	Queue a request
9913	Publish multiple requests
9914	Returns the key for the given cursor .
9915	Reverse the cursor
9916	Returns an array representation of this object .
9917	Set options from array
9918	Publish items
9919	Perform a POST request .
9920	Publish an item
9921	Import headers .
9922	Get the protocol version .
9923	Validate the given data .
9924	Load the translator .
9925	Set the validator local .
9926	Get valid errors
9927	Update the number of calls .
9928	Get locked message .
9929	Determine if the user is editing .
9930	Checks if an item exists .
9931	Sorts the collection .
9932	Parses the birthday .
9933	Format the birthday date .
9934	Validate birthday .
9935	Parses a constant .
9936	Translate a constellation
9937	Update ACL .
9938	Synchronize a role .
9939	List all roles .
9940	Register a new role .
9941	Show user creation .
9942	Register area .
9943	Create a form .
9944	Create menu .
9945	Find one record by criteria
9946	Get a new instance of the factory
9947	Get the factory factory .
9948	Remove items by criteria
9949	Removes one record by criteria .
9950	Remove all objects from the database .
9951	Refresh all objects
9952	Detach objects .
9953	Get supported method .
9954	Call a method on the given field .
9955	Run a manager action .
9956	Flush objects .
9957	Prepare the tag from the collection .
9958	Set Pagination
9959	Set current page
9960	Update a permission .
9961	Get paginator .
9962	Find a paginated by criteria .
9963	Boot extension components .
9964	Boot memory .
9965	Loads the roles .
9966	Add validation .
9967	Save the model .
9968	Validate the attributes .
9969	Merge rules .
9970	Purge unneeded attributes .
9971	Check if the user has changed .
9972	Disable all filters .
9973	Disable a filter .
9974	Restores disabled filters .
9975	Restores a filter .
9976	Get actions column .
9977	Assign a user to a user .
9978	Returns true if the response is successful .
9979	Get current template name
9980	Create a role form .
9981	Edit the form .
9982	Show user creation .
9983	Edit user .
9984	Store a user .
9985	Update user .
9986	Deletes a user .
9987	Save a user .
9988	Check if the current path is within the current path .
9989	Get the registered type .
9990	Get the tag for the visitor .
9991	Get timestamp field .
9992	Get the timestamp of the collection .
9993	Execute the query .
9994	Execute the query .
9995	Returns the number of rows in the collection .
9996	Get the table name .
9997	Get the order by type
9998	Set the ORDER BY clause
9999	Returns the conditions as a string .
10000	Add a condition to the query .
10001	Set the join table .
10002	Edit ACL .
10003	Update ACL .
10004	Set logger .
10005	Starts the process .
10006	Stop the process .
10007	Kill the lock .
10008	Add a condition to the query .
10009	Get the WHERE clause .
10010	Returns the number of rows .
10011	Get the first row .
10012	Returns an array of all IDs in the database .
10013	Execute the query
10014	Check if the field is a type field .
10015	Get select fields
10016	Get application modules .
10017	Merges a resource .
10018	Defines all permissions .
10019	Assign a user to a user .
10020	Remove a user .
10021	Create new form .
10022	Edit model .
10023	Store a role .
10024	Update a role .
10025	Destroy a group .
10026	Save a role .
10027	Import permissions .
10028	Get an ACL .
10029	Clear analytics data .
10030	Clears the message data .
10031	Displays the application .
10032	Edit a role .
10033	Scope roles .
10034	Get statuses .
10035	Get actions column .
10036	Render user roles .
10037	Modify an entity
10038	Get the producer for a registered type .
10039	Register a producer .
10040	Register a producer .
10041	Get object by id
10042	Get object by id
10043	Add an object to the pool .
10044	Remember the given object .
10045	Returns the number of rows in the database .
10046	Finds a Finder instance .
10047	Get select by type
10048	Returns the escaped field names .
10049	Get the escaped order by type .
10050	Get trait names by type
10051	Get trait names .
10052	Adapts the fieldset .
10053	Determine if the element is checked .
10054	Prepare the active page
10055	Sets the logged user tracking tracking .
10056	Set email tracking .
10057	Get site path .
10058	Analyze a URL .
10059	Returns the product category path for the given product .
10060	Checks if two values are equal .
10061	Load data from a row .
10062	Returns a copy of this object .
10063	Reverse a field .
10064	Get old field value
10065	Set field value
10066	Insert data into database .
10067	Update this object .
10068	Refreshes the generated field values .
10069	Compare two values .
10070	Generates a URI for a given route .
10071	Create a new role .
10072	Get field errors .
10073	Check if a field has an error
10074	Add an error
10075	Prepare product title
10076	Modify Contact Contact Contact
10077	Modify the newsletter page .
10078	Modify the user registration .
10079	Disable event subscriber .
10080	Restores disabled events .
10081	Disable event listeners .
10082	Disable event listener .
10083	Restores all event listeners .
10084	Restores event listeners .
10085	Get the class name of an event .
10086	Checks if the given class is an event subscriber .
10087	Get event listeners .
10088	Returns active user id .
10089	Returns the active user s email address .
10090	Generate cache key .
10091	Generate cache keys .
10092	Send API request
10093	Check if a key exists .
10094	Get value by key
10095	Get value from an array
10096	Set a value for a given key .
10097	Put an item into the collection .
10098	Set the value of an item .
10099	Removes a value from the collection .
10100	Remove a value from an array
10101	Set logger .
10102	Boot the application .
10103	Set mail config
10104	Get field value
10105	Convert a value to an array .
10106	Get page size
10107	Register the container .
10108	Validate the fields
10109	Returns a new instance of WordPress notice .
10110	Initialize the admin .
10111	Loads the script .
10112	Display notices .
10113	Register a notice .
10114	Displays a dismiss notice
10115	Displays a notice .
10116	Removes a user .
10117	Displays a notification .
10118	Restore a notice .
10119	Restore a user .
10120	Restore a notification .
10121	Return all dismissed notices .
10122	Check if a notification is dismissed .
10123	Get a notice
10124	Replace the item .
10125	Recursively refine collection .
10126	Include attachments .
10127	Get items from raw data
10128	Set the attachments .
10129	Parse attachments .
10130	Attach an attachment
10131	Attach an attachment to an attachment .
10132	Merges the original values .
10133	Get response headers
10134	Get card reference
10135	Get customer reference
10136	Get class name .
10137	Get namespace .
10138	Determine if the given key exists .
10139	Initializes the mapping .
10140	Set translation data
10141	Read a property from an object .
10142	Default action .
10143	Run before action .
10144	Run after action .
10145	Extend the collection .
10146	Append data to collection
10147	Prepend an entity to the collection .
10148	Checks if the entity is set .
10149	Returns the last entity .
10150	Get element moved by offset
10151	Checks if the given field exists .
10152	Search for entities
10153	Removes the first element from the collection .
10154	Filters the collection of entities .
10155	Get collection by callback
10156	Chunk the collection .
10157	Returns a copy of the collection .
10158	Splits the collection into chunks .
10159	Unset an element .
10160	Remove distinct values from the collection
10161	Reverse the keys .
10162	Get all values for a property .
10163	Bind collection to collection .
10164	Group by field name
10165	Prepare scopes .
10166	Parse scope arguments .
10167	Set type .
10168	Registers the annotations for the given namespace .
10169	Convert a string to camelCase
10170	Prepare data for insert
10171	Update data .
10172	Parse filter fields .
10173	Parse filter values .
10174	Convert array to object
10175	Get label .
10176	Get additional style by type
10177	Get additional styles by type
10178	Get the link for this request .
10179	Convert data to array
10180	Configure model .
10181	Get the database connection .
10182	Import a single field
10183	Convert a string to a string
10184	Fire the job .
10185	Deletes the record .
10186	Returns the class metadata for the given class name .
10187	Flushes an entity .
10188	Find entity by id
10189	Clear entity .
10190	Remove an entity .
10191	Refresh an entity
10192	Returns the repository for the given entity name .
10193	Check if an entity contains the given entity .
10194	Creates an entity .
10195	Process XCDR request .
10196	Perform a merge operation .
10197	Merge two lines .
10198	Gets the merged lines of the given ancestor .
10199	Removes lines removed from the given ancestor .
10200	Send XCDR record
10201	Register the plugin .
10202	Applies configs to config .
10203	Add env variables to app
10204	Pop a job .
10205	Insert a job record
10206	Request XCDR attribute
10207	Convert a string to a string
10208	Create a new record .
10209	Read data from database .
10210	Update record .
10211	Destroy a record .
10212	Recycle a record .
10213	Count the number of records .
10214	Returns a proxy for the given key .
10215	Close the log output .
10216	Load widgets .
10217	Load theme options .
10218	Called when an event is received .
10219	Add a child element .
10220	Create a new permission .
10221	Edit a permission .
10222	Update a permission .
10223	Deletes a permission .
10224	Set adapter adapter
10225	Get adapter type
10226	Wait for read read
10227	Get channels .
10228	Get a list of games
10229	Convert data to array
10230	Convert data to object
10231	Convert data to json
10232	Convert data to string
10233	Convert string to integer
10234	Convert string to float
10235	Convert data to boolean
10236	Generates the class for the given class .
10237	Find all instance properties .
10238	Constructor for constructors .
10239	Create the hydrate method .
10240	Update application configuration .
10241	Create a local storage file .
10242	Find a page by attribute .
10243	Find all pages by attribute .
10244	Find a page by option .
10245	Find page by option
10246	Register the widget .
10247	Register view parser .
10248	Register the launcher .
10249	Create a PDO driver .
10250	Get invalid result .
10251	Start timer .
10252	Subscribe to signal handler
10253	Unsubscribe a signal .
10254	Get the value of the given attribute .
10255	Set primary key .
10256	Execute query
10257	Set column properties .
10258	Strip the table .
10259	Sets a server selection .
10260	Sets a server select by port .
10261	Get server port by id
10262	Get a server by name
10263	Get a server by uid
10264	Create a new server .
10265	Delete a server
10266	Start a server .
10267	Stop server .
10268	Get permission list
10269	Find a single permission .
10270	Get a permission by name .
10271	Get a permission by its ID
10272	Get the category by its name .
10273	Get the permissions of a given permission .
10274	Add a log message
10275	Login to the server
10276	Logout user .
10277	Set the user whoami
10278	Get validator .
10279	Sets the curl content .
10280	Parses the result of the response .
10281	Get common application attributes .
10282	Get option value
10283	Builds an array of options .
10284	Execute a user .
10285	Ping the server
10286	Sets an attribute .
10287	Formats the currency .
10288	Formats the amount of money .
10289	Returns the rounded amount of the amount .
10290	Splits the amount of shares .
10291	Prepares a fieldset and adds it to the fieldset .
10292	Gets a user by its access token .
10293	Run the controller
10294	Search for routes .
10295	Get request method .
10296	Get all logs
10297	Convert a string to a human readable string .
10298	Convert a number of bytes to bytes .
10299	Returns a string representation of the given codec .
10300	Get group type .
10301	Get permission type .
10302	Get log level
10303	Parse a log entry
10304	Get a list of items
10305	Get trait traits .
10306	Call trait method .
10307	Call all events .
10308	Get attribute labels .
10309	Get attribute hints .
10310	Returns an array representation of the ManiaLivePlugins .
10311	Fetch the error from the error
10312	Fetch the reply from the reply
10313	Get user identity .
10314	Checks if the user has an identity .
10315	Restore the model .
10316	Get a user .
10317	Gets a list of game follows .
10318	Returns a list of all notices for the given context .
10319	Get a channel
10320	Escape the string .
10321	Unescape the script .
10322	Get team .
10323	Add a result .
10324	Get a stream for a channel .
10325	Get Streams
10326	Get featured streams
10327	Get a list of streams for a given access token .
10328	Get a summary of all streams .
10329	Get top level
10330	Get the value of the element
10331	Resolve a TSDNS host
10332	Get all configurables
10333	Send text message
10334	Kick a client .
10335	Download avatar .
10336	Bind events to controller .
10337	Connects an event .
10338	Get query variable
10339	Get base URI
10340	Request a command
10341	Wait for events
10342	Prepare command
10343	Get the host host .
10344	List all extensions
10345	Write extension configuration file .
10346	Set the parent menu .
10347	Get the columns of a table .
10348	Creates a Transcoder instance .
10349	Returns the first value of the given key .
10350	Sets a new word insensitive key .
10351	Get all notices .
10352	Displays all extensions .
10353	Perform a request .
10354	Runs the task .
10355	Deactivate extension .
10356	Activate extension .
10357	Uninstall an extension
10358	Run a task .
10359	Get a client by name
10360	Download the icon
10361	Send text message
10362	Delete the channel .
10363	Encode a JWT .
10364	Sign a message using the given key .
10365	Decode a JSON string .
10366	Commits the configuration .
10367	Bootstrap extension manager .
10368	Copy a channel group .
10369	Send text message
10370	Get the form class name .
10371	Get entity by id
10372	Get a list of entities
10373	Create a new entity .
10374	Update the entity .
10375	Delete entity .
10376	Read a file .
10377	Parses a JSON string .
10378	Parse a file .
10379	Normalize an id .
10380	Remove attributes from input array .
10381	Set value
10382	Adds an element to the list .
10383	Get the top level window .
10384	Remove an element
10385	Get element by id
10386	Loads the state file .
10387	Save the state of the application .
10388	Set data type
10389	Handle channel creation
10390	Get localized versioned data field
10391	Get localized data field
10392	Get package versioned data
10393	Get package data
10394	Get the human readable readable text .
10395	Prepares migration task .
10396	Build a report task .
10397	Determine if the request matches the request .
10398	Parse a regex route .
10399	Check that the given object is valid .
10400	Returns the profiler instance .
10401	Initializes the transport
10402	Returns a list of unique attributes .
10403	Get timestamp attributes .
10404	Evaluate attributes .
10405	Initialize actions info .
10406	Handles the request .
10407	Handles the request after the request .
10408	Read data from the stream
10409	Send data to the server
10410	Restore the database .
10411	Dump database dump .
10412	Initialize menu .
10413	Add a button to the menu
10414	Run the WX widget .
10415	Populate the max value of the table .
10416	Populate the max value with the largest value .
10417	Transform a JSON string into an array
10418	Registers the database configuration .
10419	Set file path
10420	Set post field .
10421	Set raw content .
10422	Resolve a concrete class .
10423	Bind an abstract to the container .
10424	Get the concrete class .
10425	Dispatch event .
10426	Get spacer type
10427	Get the alignment of a channel .
10428	Add a permission to a channel .
10429	Remove a permission from a channel .
10430	Add a permission to a channel .
10431	Remove a permission from a channel .
10432	Get channel list
10433	Get a client by its ID
10434	Get a client by uid
10435	Move a client .
10436	Kick a client .
10437	Remove a permission from a client .
10438	Get server group by id
10439	Get server group by name .
10440	Add a permission to a server group .
10441	Get the list of profiles
10442	Get channel group by id
10443	Get channel group by name .
10444	Add a permission to a channel group .
10445	Reset a permutation
10446	Upload icon
10447	Create a new snapshot
10448	Get log view
10449	Add a log message
10450	Sort client list
10451	Sort group list .
10452	Sort file list
10453	Copy a server group .
10454	Get icon name
10455	Returns the class name for this object .
10456	Returns the content of this node .
10457	Filter a list of nodes
10458	Writes a file to the cache .
10459	Get the generated class .
10460	Connect to the server
10461	Disconnects the stream .
10462	Read a line from the stream
10463	Checks if the given name exists .
10464	Create a new role
10465	Update a role .
10466	Deletes a role .
10467	Get a GET request .
10468	Returns the text of the bot .
10469	Get the icon icon
10470	Returns the full text of the channel .
10471	Get suffix flag
10472	Initialize the file transfer .
10473	Upload data to the server .
10474	Download file transfer .
10475	Returns the session context .
10476	Get type manager
10477	Get database connection
10478	Removes a database connection .
10479	Process security filters .
10480	Dispatch request .
10481	Get GET parameters
10482	Render a page
10483	Validate request
10484	Dispatch view .
10485	Redirect to the default module view
10486	Redirect to default user view
10487	Initialize user profile .
10488	Get user preference .
10489	Returns the default permissions for the given group .
10490	Get current view name
10491	Set current view name
10492	Get current view set
10493	Set current view set
10494	Set base path
10495	Get module path .
10496	Generates a hash for the given data .
10497	Checks the given string against the given hash .
10498	Reads the metadata from the XML file .
10499	Sets the account for the given account .
10500	Send an email
10501	Log an email .
10502	Get information about a tag
10503	Get the autoload library file path .
10504	Loads the metadata class .
10505	Get core file path
10506	Finds the class file path .
10507	Fill an existing person .
10508	Set a job .
10509	Run all jobs .
10510	Checks if the given date is a valid date .
10511	Render the label
10512	Flatten a path .
10513	Get config .
10514	Create a curl request
10515	Store the response .
10516	Get plot data
10517	Render XYPlot
10518	Get the mark for a given string
10519	Get font name
10520	Returns a new instance of the client .
10521	Get attribute value .
10522	Set attribute in group .
10523	Get attribute value from group
10524	Find or create a new model .
10525	Get model .
10526	Generate a unique ID .
10527	Call all filters
10528	Append a hook .
10529	Check if a hook exists .
10530	Call a hook .
10531	Replace a hook .
10532	Returns the number of filters .
10533	Checks if a given hook name is run .
10534	Checks if a hook is called .
10535	Add a route
10536	Add a route to the router .
10537	Run the application .
10538	Handle singal execution .
10539	Set a value
10540	Get a raw definition .
10541	Encrypt a string
10542	Decrypt a value .
10543	Get the default key
10544	Calculate the arguments .
10545	Get string type
10546	Add a new app .
10547	Get a sub route .
10548	Serialize the route .
10549	Unserialize a route
10550	Returns the year of the given year .
10551	Get current time stamp
10552	Returns the name of the given day .
10553	Returns the short name of a given day .
10554	Get the month name .
10555	Get short month name
10556	Format a date .
10557	Get date time .
10558	Register service services .
10559	Processes section tree
10560	Set owner .
10561	Remove comments .
10562	Minify CSS .
10563	Set global variable .
10564	Quote a string
10565	Splits a string into an array .
10566	Get a role by its name .
10567	Add a role
10568	Checks if the user has a given role .
10569	Handle error handler
10570	Handle exception handler
10571	Get output error message
10572	Prints the error trace .
10573	Set the name .
10574	Add a new setting .
10575	Add a setting to the cache .
10576	Unset an offset .
10577	Sets the sync state .
10578	Collect sync data .
10579	Get expression context .
10580	Terminate this process .
10581	Register a child execution .
10582	Handle a child execution .
10583	Sets the scope .
10584	Creates a new execution .
10585	Creates a nested execution .
10586	Returns the child executions of this node .
10587	Compute the variables .
10588	Get a variable by name .
10589	Get variable local variable .
10590	Set a variable .
10591	Set variable local variable .
10592	Removes a variable .
10593	Removes a variable .
10594	Execute the given node .
10595	Waits until the execution is entered .
10596	Sends a signal to the process .
10597	Take a transition .
10598	Adds the current execution of this execution .
10599	Load message from message file
10600	Returns the message for the given message id .
10601	Get Zend template
10602	Returns a readable directory .
10603	Check if the given path is writable .
10604	Check if a file is writable .
10605	Check if a file is readable .
10606	Validate email address
10607	Validate IP address .
10608	Validate IPv4 address .
10609	Validate IPv4 address .
10610	Validate IPv6 address .
10611	Initializes the view .
10612	Checks if an attribute has an attribute .
10613	Checks if the given class has a method .
10614	Get the parameters of a method .
10615	Get reflection method .
10616	Convert this object to an array
10617	Get SMS response
10618	Get blank line .
10619	Count term cols
10620	Get error block
10621	Get a line of text
10622	Slice an array .
10623	Set validation rules
10624	Complete a client .
10625	Returns an object with the given name .
10626	Create an object
10627	Registers an extension .
10628	Authenticate an OAuth token .
10629	Get the feed
10630	Liked media .
10631	Set a relationship
10632	Set property values
10633	Find all records
10634	Count all rows
10635	Find a record by id
10636	Create a new record
10637	Execute query
10638	Execute query
10639	Checks if the given condition is valid .
10640	Creates a link .
10641	Add a parent to the parent
10642	Parse a picker map
10643	Converts an array of reflection classes into an array .
10644	Initialize the table .
10645	Get field by column
10646	Get key search rule
10647	Set record array
10648	Save old field values
10649	Get record array
10650	Convert SQL array to recursively
10651	Set SQL record
10652	Get the input field of the input field
10653	Get join rule
10654	Get HTTP method .
10655	Get request URI .
10656	Get the options for the given key .
10657	Create a new instance .
10658	Issue an access token .
10659	Format a report .
10660	Decode a file
10661	Validate TOTP .
10662	Displays the comments page .
10663	Update data record
10664	Execute the route .
10665	Joins a list .
10666	Render CSV file
10667	Renders a file
10668	Get data table
10669	Loads the stateful state .
10670	Get a property .
10671	Get current record .
10672	Sets the active record id .
10673	Fetch data set
10674	Fetch records from the database .
10675	Fetch records from the database .
10676	Returns the number of records in the database .
10677	Run the search
10678	Get number of records for a SQL query
10679	Fetch a record from the database
10680	Add shortcut script scripts
10681	Get config value .
10682	Bootstrap bootstrap .
10683	Check if a user is authenticated
10684	Sets the request .
10685	Set the maximum age .
10686	Get mime type .
10687	Check if the input is valid
10688	Check if the file is text .
10689	Check if the file is full .
10690	Set file properties .
10691	Check if the request is valid .
10692	Read file from file .
10693	Sends the content of the request .
10694	Clean up source code
10695	Minify JS code .
10696	Convert CSS content to CSS .
10697	Wrap text wordwrap
10698	Get text content
10699	Serve text .
10700	Set allowed origin
10701	Sends the file .
10702	Register a texting provider .
10703	Deserialize an object
10704	Determine if the given data is denormalization .
10705	Validate the given data .
10706	Validate model .
10707	Get action attribute .
10708	Get the URL attribute .
10709	Go to next step
10710	Displays the next step .
10711	Go back to the current page
10712	Finish the form
10713	Cancel a session
10714	Render the page .
10715	Generate a random string
10716	Checks if the given callback is empty .
10717	Executes a ternary shortcut .
10718	Check if a value contains a value .
10719	Merge two values
10720	Create app instance .
10721	Dispatch event .
10722	Get count by group
10723	Aggregate a group .
10724	Find a single document .
10725	Get MongoIds for the given objects .
10726	Normalize a date
10727	Checks if a given form name is in a form .
10728	Render the page
10729	Get current page URL
10730	Initializes all form objects
10731	Compare integer values
10732	Convert a value to an integer
10733	Find source files
10734	Register a namespace .
10735	Build the cache .
10736	Find composer autoloader .
10737	Find composer autoloader .
10738	Returns a list of loaders for a given class .
10739	Get the value of a middleware .
10740	Set the value of a middleware .
10741	Returns a new instance with the given string limit .
10742	Returns a new instance with the given array limit .
10743	Returns a string representation of a string .
10744	Returns a string representation of an array .
10745	Returns a string representation of an array .
10746	Print an array value .
10747	Returns a string representation of an object .
10748	Reject an event .
10749	Boot the router .
10750	Render a webpage
10751	Render a webpage
10752	Render a PHP view
10753	Set headers
10754	Create a new comment .
10755	List contents of a directory
10756	Sort modules .
10757	Get all routes .
10758	Render menu items
10759	Render a single menu item
10760	Write data to file
10761	Configure the environment .
10762	Read the configuration .
10763	Run the check .
10764	Run the export .
10765	Writes the cache .
10766	Loads the readonly cache .
10767	Initialize the configuration .
10768	Reads a command .
10769	Flush the given command .
10770	Check if value is chainable
10771	Validate form data
10772	Checks if the item is satisfied .
10773	Complete the access token .
10774	Returns the SQL value for the input .
10775	Get the value of the column
10776	Save old value
10777	Get default value
10778	Get the value of the value onCreate
10779	Get the value of the value on update .
10780	Check if the field is required
10781	Check if value is valid
10782	Validate the data object
10783	Find a file .
10784	Prepare theme name .
10785	Set theme .
10786	Register a theme .
10787	Add theme .
10788	Get an offset from an array
10789	Get a key from an array
10790	Returns the standard deviation of an array .
10791	Set middleware .
10792	Get action .
10793	Get path params
10794	Checks if the scheme matches the given scheme .
10795	Checks if the given hostnames matches the given hostnames .
10796	Returns true if the given URI matches the given URI .
10797	Fetches the tree and returns the root nodes .
10798	Fetch node path
10799	Get children nodes
10800	Get all settings .
10801	Get link .
10802	Get the text of the form
10803	Get new record
10804	Set the secret
10805	Returns the number of bytes in the given number .
10806	Formats a number .
10807	Add a table column
10808	Add a SQL expression
10809	Reset SQL query
10810	Add an ORDER BY clause
10811	Add other SQL to the query
10812	Add an association
10813	Get SQL statement
10814	Get data record
10815	Run the CLI action .
10816	Get default template locations
10817	Renders the option
10818	Get font fonts
10819	Checks if the group matches the given groups .
10820	Validate input fields
10821	Validate uniqueness
10822	Check if the record can update the record
10823	Check if a record is deleted
10824	Update a record
10825	Get new record
10826	Generate a new ID
10827	Insert a record
10828	Deletes a record
10829	Returns an array of field fields .
10830	Run DOTrigger
10831	Get the join fields for a given join
10832	Join the table with the given name
10833	Check if the record is a valid ID
10834	Run the check .
10835	Initializes the report .
10836	Resolve route .
10837	Resolve action parameters .
10838	Checks if a setting exists .
10839	Get a setting by name .
10840	Get all settings .
10841	Load settings .
10842	Sets the cache location .
10843	Prefix CSS rules .
10844	Prefix align items .
10845	Prefix align content .
10846	Returns an array of prefix aligns .
10847	Prefix flex flex .
10848	Prefixify content .
10849	Get prefix rules .
10850	Create a comment .
10851	Delete a given URL
10852	Get filtered media
10853	Get preferred image .
10854	Get the placeholder for the media
10855	Creates a new rule from a string .
10856	Get the output of the template
10857	Get the reflection method .
10858	Displays the webservap .
10859	Displays the sitemap .
10860	Get the tree
10861	Check if the access token is valid .
10862	Determine the access token .
10863	Call a method .
10864	Checks if the call context is changed .
10865	Store a command .
10866	Perform a callback .
10867	Get the value of a phi .
10868	Create a Phar .
10869	Get pattern .
10870	Merges the group configuration into the configuration .
10871	Removes a record from an object
10872	Remove a record from the database
10873	Remove a record from the database
10874	Convert relations to array
10875	Read metadata from xml array
10876	Read meta collection
10877	Prefix package name .
10878	Allow access to the user
10879	Build a PhpRedisDriver instance .
10880	Get the model for a given table .
10881	Add a new resolver type
10882	Returns the resolver for the given type .
10883	Sets a resolver .
10884	Resolve a reference .
10885	Set authorative .
10886	Register a module .
10887	Sort modules .
10888	Set the precedence of a module .
10889	Configure the module .
10890	Find all modules in a directory .
10891	Get field by field name
10892	Register custom collections .
10893	Convert formatted string to value
10894	Converts a value to a formatted string .
10895	Convert value to number
10896	Convert a number to an integer
10897	Converts a value to a date .
10898	Convert a date to a string
10899	Convert value to datetime .
10900	Convert datetime to string
10901	Convert value to currency
10902	Convert a currency to a float
10903	Converts a value to a phone number .
10904	Convert a datetime to a string
10905	Parse a date string
10906	Render the DSN for MySQL .
10907	Renders a PDO PDO .
10908	Render DSN parts .
10909	Insert data into database
10910	Insert multiple data into database
10911	Get request path .
10912	Get a container by its id .
10913	Format a query string
10914	Format a query string
10915	Set query params
10916	Get database profile
10917	Format the report .
10918	Validate the password .
10919	Validate email address
10920	Validate a date
10921	Get error message
10922	Creates a new collection .
10923	Create a new record
10924	Get new ID
10925	Get new system ID
10926	Generate a new GUID
10927	Get a new ID from the database
10928	Get visible attribute .
10929	Sets the default format .
10930	Prepare file .
10931	Close the file .
10932	Get the path to the log file .
10933	Get the formatter by extension .
10934	Gets the manager .
10935	Render a view
10936	Outputs the pdf
10937	Set the base url
10938	Create a curl request
10939	Get all the requests from the given array .
10940	Perform a POST request .
10941	Perform a POST request .
10942	Push a job .
10943	Create payload .
10944	Returns the content element identifier .
10945	Returns the content element signature .
10946	Get content element signature .
10947	Get the title
10948	Removes a record from the database
10949	Sorts a record .
10950	Filter view children by view column
10951	Filter view children .
10952	Sets the value of the given field .
10953	Get data array
10954	Fill the entity with the given data .
10955	Extracts a zip archive .
10956	Add file to zip archive
10957	Extracts a GZ archive from a file .
10958	Read lines from a file .
10959	Returns the size of a file .
10960	Get classes from a file .
10961	Add a new route
10962	Resolve route .
10963	Resolve a key
10964	Check if a key exists .
10965	Get a value from the cache .
10966	Load a config file
10967	Get background details .
10968	Connect to Twitter .
10969	Check response status code
10970	Handle a message .
10971	Checks if status is a message .
10972	Read next chunk size
10973	Read the JSON stream .
10974	Get the value of a property
10975	Get default value
10976	Get hidden field
10977	Get the text of the form
10978	Returns a map of the shortcut keys for the shortcut key .
10979	Get context menu menu
10980	Returns the function for the event .
10981	Get redirect page .
10982	Returns the function type for the given event handler .
10983	Set form name
10984	Adjusts the form name
10985	Returns formated function .
10986	Parse a function string
10987	Call the middleware .
10988	Clear the middleware .
10989	Halt propagation .
10990	Reset the middleware .
10991	Creates a new instance of the given element .
10992	Convert a counter to a string
10993	Get a GET request
10994	Create a POST request
10995	Get the response
10996	Determine if the browser should follow redirects .
10997	Check effective time .
10998	Parse a string
10999	Parse string
11000	Render form object
11001	Render a template
11002	Render PHP form .
11003	Displays an entity .
11004	Create a new entity .
11005	Call entity method .
11006	Add a middleware .
11007	Get the default commands .
11008	Updates the given user .
11009	Get settings .
11010	Get the group .
11011	Get the direct members of the group .
11012	Get effective members .
11013	Parse the members of a member .
11014	Parse history .
11015	Parse affiliate data
11016	Parses a search string
11017	Get webpage object
11018	Get element by name
11019	Get error elements
11020	Renders all sub forms
11021	Set the bundle class .
11022	Get translation key .
11023	Get list of words
11024	Load configs .
11025	Remove an item from the cache
11026	Get the IDs of the cache
11027	Clean all cache entries
11028	Create a directory .
11029	Read a configuration file .
11030	Get a reader from a file .
11031	Add a new route .
11032	Add a route
11033	Find the route for the given part .
11034	Get the next branch .
11035	Find issues by issue .
11036	Get WordPress contents .
11037	Get WordPress categories
11038	Get menu items .
11039	Get WordPress pages
11040	Get WordPress posts
11041	Get WordPress post types
11042	Get WordPress tags .
11043	Get WordPress taxonomies
11044	Get a list of terms .
11045	Add a path to the search path .
11046	Set the precedence of a module .
11047	Returns the highest precedence of a module .
11048	Clear the cache .
11049	Get cache data
11050	Resolve a file .
11051	Parse request URI
11052	Save stateful state
11053	Get current step
11054	Get form input
11055	Cancel the session
11056	Register a sub type .
11057	Get input parameter .
11058	Delete a file
11059	Convert expires to seconds
11060	Get key words .
11061	Find email addresses .
11062	Check if a string contains the given array .
11063	Redirect to a request .
11064	Migrate all migrations .
11065	Migrate a directory up to a directory .
11066	Sets the unique identifier .
11067	Run the worker .
11068	Check if a parameter exists .
11069	Get OAuth request
11070	Generate Oauth signature .
11071	Create a new node .
11072	Create a new transition .
11073	Add a setting .
11074	Add a set of settings .
11075	Get all settings .
11076	Get all cached settings .
11077	Get settings as array
11078	Get all cached settings .
11079	Get filtered settings .
11080	Returns an array of settings as an array .
11081	Renders the nodes
11082	Renders node items
11083	Renders a single node item
11084	Run the installer .
11085	Registers the given environment .
11086	Installs the bundle .
11087	Initialize the bootstrap .
11088	Autoload a class
11089	Loads a file .
11090	Forward a route .
11091	Set glyph icon .
11092	Set query parameters
11093	Set the limit
11094	Get database connection
11095	Get a property by name
11096	Get an object by name
11097	Set association
11098	Creates an object from a docblock .
11099	Creates a new SqliteConnection instance .
11100	Creates a new Sqlite connection from a file .
11101	Get field by name
11102	Check if a field exists
11103	Get field names .
11104	Get initial data model .
11105	Authorize the index .
11106	Authorize a create request .
11107	Get a nested item from an object .
11108	Initialize the browser .
11109	Get Export implementation
11110	Get report implementation
11111	Get runner implementation .
11112	Get cache implementation .
11113	Builds the SQL statement for the given data object .
11114	Builds a SQL delete statement
11115	Get the CSS style
11116	Get all child nodes .
11117	Get attribute value .
11118	Returns an array of attributes
11119	Get child node .
11120	Get literal value .
11121	Cache the menu if configured
11122	Handle the call .
11123	Check if the method is valid .
11124	Checks if this call is a getter .
11125	Checks if the call is setter .
11126	Prepare the request .
11127	Get the response .
11128	Parse response body
11129	Save an object variable
11130	Load an object variable
11131	Saves all session objects in the session
11132	Clears session objects .
11133	Save JSON array
11134	Set view history .
11135	Starts the timer .
11136	Calculate the current time
11137	Triggers the current time .
11138	Reset timer .
11139	Validate executable path
11140	Get redirect page
11141	Process data object
11142	Process the URL
11143	Get base URI .
11144	Validate the given identity .
11145	Setup authentication result .
11146	Setter for visible attribute
11147	Get the first instance of the first model .
11148	Get from list
11149	Format report .
11150	Call middleware .
11151	Call proxy getter method
11152	Call proxy methods
11153	Call proxy setter method
11154	Set catchHaltMiddleware .
11155	Clear middleware .
11156	Disable middleware .
11157	Enable middleware .
11158	Get middleware .
11159	Get the middleware group .
11160	Group middleware group .
11161	Check if a middleware has a middleware .
11162	Check if a middleware is disabled .
11163	Check if the middleware is enabled .
11164	Get middleware .
11165	Collect middleware .
11166	Prepend middleware .
11167	Push middleware .
11168	Set the middleware context .
11169	Call middleware .
11170	Save the settings to the cache .
11171	Get form fields
11172	Setup the autoloader .
11173	Find the transition .
11174	Renders a remote call
11175	Submit a submit call
11176	Generates a link tag
11177	Render a submit tag
11178	Cast key to string
11179	Check if a middleware is abstract .
11180	Check if middleware is a collection .
11181	Resolve middleware .
11182	Resolve middleware .
11183	Resolve multiple middleware .
11184	Resolve multiple middleware .
11185	Resolve a middleware .
11186	Resolve a middleware .
11187	Render a report
11188	Get unique string
11189	Check if the role is a role .
11190	Check if a role has a role .
11191	Generate a hash
11192	Get information about curl
11193	Perform the request .
11194	Checks if the given view name is allowed .
11195	Get a view by name
11196	Format the settings .
11197	Load an XML document .
11198	Validate a schema file .
11199	Validate the document .
11200	Resolve XInclude directives .
11201	Get element value .
11202	Get element by name
11203	Set default namespace
11204	Register the namespace namespace .
11205	Checks if the given document is environ configuration .
11206	Refreshes the XPath document .
11207	Parse error message .
11208	Get the resolver for the given subject .
11209	Check authorization parameters .
11210	Creates a new authorization request .
11211	Complete access token .
11212	Print out the output
11213	Get form input data
11214	Redraw a form
11215	Show client alert
11216	Show error message
11217	Close the popup
11218	Run a client script
11219	Redirect view .
11220	Append a script to the script
11221	Get appended scripts
11222	Append stylesheet
11223	Get the stylesheet
11224	Include the client scripts
11225	Add RTE scripts
11226	Add cKEditor scripts
11227	Include the propog script scripts
11228	Add validator scripts
11229	Execute all trigger actions
11230	compose action message
11231	Convert a string into an array
11232	Process form errors
11233	Set the subForms .
11234	Load a picker .
11235	Set request params
11236	Fetch data set
11237	Get element ID
11238	Auto suggest suggestion
11239	Renders the context menu .
11240	Render the form .
11241	Get event log message .
11242	Get the list of event events
11243	Run the event log
11244	Get the InvokeElement
11245	Sets the client scripts .
11246	Remove a middleware from the stack .
11247	Run the middleware .
11248	Creates a new instance from a string .
11249	Generate a secret .
11250	Decode a base32 string .
11251	Returns an iterator over all the files .
11252	List all files .
11253	List all directories .
11254	List all files .
11255	Create a file .
11256	Create a directory .
11257	Move the file to the given path .
11258	Renames a file .
11259	Removes the directory .
11260	Set field name .
11261	Set type .
11262	Set input format .
11263	Set field value
11264	Get the value of the field .
11265	Save the children of this model .
11266	Add children to entity
11267	Get model models .
11268	Output a list of models .
11269	Convert resource to array
11270	Generate a captcha form
11271	Verify that the captcha is valid .
11272	Get a service
11273	Render the error .
11274	Render an HTTP exception .
11275	Render a CakeException .
11276	Render serializer exception .
11277	Render a validation error .
11278	Render HTTP response as JSON .
11279	Render an HTTP response .
11280	Render a CakeException
11281	Render a CakeException
11282	Default serializer .
11283	Render serializer .
11284	Render serializer .
11285	Default validation error .
11286	Render validation error .
11287	Render validation .
11288	Opens a session by ID .
11289	Creates a new session .
11290	Prepare text
11291	Display text .
11292	Display empty lines .
11293	Initializes the command .
11294	Handles the HTTP response .
11295	Initializes the debug bar .
11296	Starts a new session .
11297	Determines if the current session is hijacking .
11298	Regenerate session id
11299	Validate session
11300	Link layers to the layer .
11301	Get the value of a model .
11302	Register the pxmd command .
11303	Print CLI header
11304	Parse raw body
11305	Remove extra indentation .
11306	Handle the request .
11307	Parse query string .
11308	Bind to page
11309	Returns a list of matches .
11310	Get justification constant .
11311	List all files in the local directory
11312	Extract document links from HTML document
11313	Check if a link is excluded .
11314	Save a file
11315	Check if PDF exists
11316	Get the next number .
11317	End the iterator .
11318	Display text .
11319	Display nl .
11320	Fit linear regression .
11321	Predict the model .
11322	Initialize the table .
11323	Write a record to the database .
11324	Draws a list item .
11325	Starts a new line .
11326	Initialize the driver .
11327	Returns the size of the given size .
11328	Build the form for a section .
11329	Get form factory .
11330	Load fixtures from the iterator .
11331	Resolve relative url .
11332	Install composer .
11333	Install plugin plugins .
11334	Install composer .
11335	Update composer .
11336	Update composer framework .
11337	Uninstall a package .
11338	Uninstall plugin plugins .
11339	Removes all files from src .
11340	Remove all files from a directory
11341	Set colors
11342	Calculate the text area
11343	Calculates the width of the given data .
11344	Get query by date value
11345	Get date value
11346	Cast attribute .
11347	Convert attributes to array
11348	Set an item in the tree .
11349	Get a menu .
11350	Event handler .
11351	Get the definitions .
11352	Parse the given content .
11353	Parse the service definition .
11354	Load a YAML file .
11355	Resolve services .
11356	Initialize the autoloader .
11357	Get the AES API .
11358	Convert bytes to human readable format .
11359	Set the bullet .
11360	Set column definition .
11361	Calculate total width
11362	Checks if there is a header .
11363	Get header text .
11364	Check if data is valid
11365	Calculate widths
11366	Draws data .
11367	Creates a new session .
11368	Create new session file
11369	Save session data .
11370	Acquire a lock .
11371	Creates a form for a section .
11372	Create a new instance of a class
11373	Get all contacts
11374	Parses the facts string .
11375	Find a record by id
11376	Finds all records in the database
11377	Find all records
11378	Find all records in the database
11379	Create a new table .
11380	Updates a row in the database .
11381	Parse notation .
11382	Apply conditions to the expression .
11383	Calculates the mean calculation .
11384	Create a new plugin client .
11385	Sets the content of a file .
11386	Add a template .
11387	Check if the cache file has expired .
11388	Converts a list of blocks to a placeholder .
11389	Get metadata for a template .
11390	Builds the definition provider .
11391	Returns the result of a given formula .
11392	Save a formula .
11393	Add a header .
11394	Set dropdown menu .
11395	Checks if the user is granted .
11396	Download a file .
11397	Get the URL for the given key .
11398	Set the cover .
11399	Get data by type
11400	Get data from a URL
11401	Install the resources .
11402	Check if a date is valid
11403	Wrap a GUI frame
11404	Run the command line .
11405	Factory method .
11406	Creates a new session .
11407	Send new entity
11408	Register providers .
11409	Register provider provider .
11410	Get the facts .
11411	Populate the facts .
11412	Record a domain event .
11413	Apply event handler .
11414	call plugin_funcs
11415	Draws the data
11416	Calculate the formula .
11417	Checks if the request has a layout .
11418	Initializes the terminal .
11419	Set the members of the given style .
11420	Clear style styles .
11421	Sets the text color .
11422	Sets the fill color .
11423	Sets the color of the text .
11424	Reverse the color .
11425	Creates a new instance of a function .
11426	Load plugins .
11427	Check if the plugin is enabled .
11428	Check if cache is enabled
11429	Update plugin cache
11430	Add plugin hooks .
11431	Get a channel .
11432	Init loggers .
11433	Create a logger .
11434	Returns a list of Location objects .
11435	Returns a new instance of the class
11436	Get all interfaces .
11437	Get the parent class .
11438	Get all methods of the class
11439	Get the properties of the property .
11440	Determine if the given type is enabled .
11441	Add a stylesheet
11442	Gets the CSS style .
11443	Rewrite path paths .
11444	Wrap media rules .
11445	Moves all imports from the content .
11446	Get an archive .
11447	Remove an archive
11448	Get the archive path .
11449	Get archive file path
11450	Clean up merged values .
11451	Filters an array of arrays .
11452	Returns the size of the terminal screen .
11453	Styles CSS style .
11454	Generate script .
11455	Generates a mailto mail .
11456	Creates a control control .
11457	Creates a static control .
11458	Adds a CSS style .
11459	Create the directory .
11460	Set files to publish .
11461	Initialize the user .
11462	Login a user .
11463	Regenerate csrf token
11464	Login by cookie
11465	Returns the URL of the current session .
11466	Check if login is required
11467	Renew the identity cookie .
11468	Renew login status .
11469	Returns true if the user can access to the current user .
11470	Gets the day of the week .
11471	Save uploaded file .
11472	Execute the query
11473	Add a delete statement .
11474	Sets the insert statement .
11475	Adds a join to the query .
11476	Add a WHERE clause .
11477	Adds a condition to the query .
11478	Get SQL for delete
11479	Creates a new parameter .
11480	Binds the logger interface .
11481	Bind logger to Monolog logger .
11482	Set status code
11483	Get the response body
11484	Redirect to a given URL .
11485	Create an empty response .
11486	Prepare headers array
11487	Get all cookies .
11488	Default formatters .
11489	Extract auth user password from encoded string .
11490	Get all scenarios .
11491	Fill scenario attributes
11492	Get form name .
11493	Returns a list of attribute names .
11494	Validate the model .
11495	Validate multiple models .
11496	Renders a translatable message .
11497	Add an attachment .
11498	Add a request to the request .
11499	Send a request to the API .
11500	Loads a class .
11501	Get all registered listeners .
11502	Set the properties of a listener .
11503	Get EventListener from annotation .
11504	Returns an array of options
11505	Set options .
11506	Returns the key value for a given key .
11507	Set fields from array
11508	Load entities from a directory .
11509	Extend entity manager .
11510	Checks all predicted predictions .
11511	Process an XML element .
11512	Verifies that the given dispatch is valid .
11513	Verify the class property .
11514	Verifies that the dispatch is valid .
11515	Verifies that the dispatch is valid .
11516	Verify dispatch .
11517	Get the dependencies of the dispatch .
11518	Get the dependencies of a dispatch .
11519	Dispatch class method .
11520	Get the value of a class property .
11521	Get the dispatch class .
11522	Dispatch a dispatch function .
11523	Dispatch a dispatch .
11524	Dispatch a callable .
11525	Returns the string representation of the request .
11526	Get request arguments .
11527	Parse request arguments .
11528	Get a link .
11529	Set the protocol version .
11530	Asserts that the given values are valid .
11531	Inject a header into an array .
11532	Returns the current time .
11533	Check and update cookie fields
11534	Store a cookie
11535	Add cookies from response
11536	Get all cookies matching the given URL .
11537	Get all cookies
11538	Serialize all cookies
11539	Unserialize a cookie
11540	Checks if a cookie matches the given cookie .
11541	Create a new PEAR_Command object
11542	Returns an array of arguments for the given command
11543	Returns the help for the given command .
11544	Returns a singletonton instance
11545	Converts an expression into a new expression .
11546	Parse expression part .
11547	Process a key and value
11548	Remove characters from a string
11549	Set the encoding .
11550	Create an IteratorException .
11551	Initializes the translations .
11552	Initializes the language prefixes .
11553	Returns the message formatter .
11554	Start a transaction .
11555	Get API request URL .
11556	Get request params
11557	Get a list of recent results .
11558	Get the success message .
11559	Find all budgets by account id
11560	Get current language
11561	Parses the accept language .
11562	Bind a binding .
11563	Create a new instance of the given class .
11564	Validate a URL .
11565	Check if the given field name is live .
11566	Get the value of a field
11567	Wrap an object .
11568	Get a date field as a date .
11569	Generate session identifier .
11570	Encrypt session data
11571	Decrypt session data .
11572	Get encryption key .
11573	Sets the encryption algorithm .
11574	Sets the hash algorithm .
11575	Prepares the set of columns for the given table .
11576	Initialize the service
11577	Get a parameter by name
11578	Check if target relation exists .
11579	Check if the target attribute exists .
11580	Check if value exists .
11581	Returns a string representation of the clause .
11582	Render the modal .
11583	Translate a file to a language .
11584	Detach the stream .
11585	Read data from the stream .
11586	Creates a new request .
11587	Creates a new Request from the global variables .
11588	Set the request .
11589	Set headers .
11590	Get request path .
11591	Get the request path .
11592	Get the host host .
11593	Set the request method .
11594	Get request method .
11595	Get the mime type .
11596	Returns the format for the given mime type .
11597	Get request format .
11598	Render a controller .
11599	Initialize http server
11600	Add middleware
11601	Create a request application .
11602	Set the alias for the given alias .
11603	Set aliases .
11604	Get error log level .
11605	Generate a proxy .
11606	Get method call parameters .
11607	Generate proxy class .
11608	Generate proxy properties .
11609	Get proxy methods .
11610	Generate proxy class name .
11611	Get the declaration of a method .
11612	Checks if the given method is a proxy method .
11613	Checks if the given methods are valid .
11614	Traverses an iterator .
11615	Get the parameters of a method .
11616	Create a repository .
11617	Load messages from database .
11618	Setup the application .
11619	Bootstrap configuration .
11620	Bootstrap core .
11621	Bootstrap container .
11622	Get environment variable .
11623	Set environment variable .
11624	Returns the configuration for the given key .
11625	Abort an exception .
11626	Redirect to the given URI .
11627	Creates a response .
11628	Redirect a route .
11629	Get the view .
11630	Get an item by key .
11631	Validate key .
11632	Validate a descriptor .
11633	Get cache invalidation settings .
11634	Set cache invalidation settings
11635	Initialize the logger .
11636	Get file path .
11637	Verify a password .
11638	Sets whether or not the file exists .
11639	Render progress bar .
11640	Renders the progress bar .
11641	Process a SOAP request
11642	Get the soap server
11643	OnFlush events .
11644	Validates the cache .
11645	Invalidate entity .
11646	Add a tag to the cache
11647	Returns a list of available SEX choices .
11648	Set the callback
11649	Filter the value
11650	Returns the percentage of the refill percentage .
11651	Get all Seobilities
11652	Sets the seoites of the current page .
11653	Returns the Seobility object for the given condition .
11654	Convert value to boolean
11655	Returns the ordinal of the given x .
11656	Calculate the abscissa by ordinate
11657	Add an attachment .
11658	Encodes the content of the request .
11659	Encodes a file to a file .
11660	Encodes the part to a file .
11661	Add a subpart
11662	Encode a quoted string .
11663	Build header param
11664	Builds a RFC2047 parameter .
11665	Explode a quoted string .
11666	Encode a header value .
11667	Encodes a string into a base64 encoded string .
11668	Get admin messages .
11669	Get the next line from the stream .
11670	Render items .
11671	This method is called before the controller .
11672	Set an option .
11673	Generate a slug .
11674	Creates a sentence .
11675	Extracts the photos from the dataet
11676	Check if a session is valid .
11677	Get field error message .
11678	Sets the same site .
11679	Add the header to the file .
11680	Finds all classes in a namespace .
11681	Get namespace path .
11682	Get the paths for a namespace .
11683	Get namespace prefixes
11684	Get loader prefixes .
11685	Update session .
11686	Merges the current session .
11687	Get session data .
11688	Get page from query
11689	Get query string
11690	Get all filters .
11691	Create a form .
11692	Store the results .
11693	Get pagination .
11694	Get previous record id .
11695	Returns an array of fields .
11696	Add a new field .
11697	Process options .
11698	Get connection params
11699	Check if database is installed .
11700	Returns the sql string for this query
11701	Execute the query
11702	Get the repository .
11703	Add a new entity
11704	Save entity .
11705	Remove entity .
11706	Commits all models .
11707	Get database store .
11708	Get the store configuration .
11709	Creates a PDO store from config .
11710	Validate password .
11711	Creates a new instance of Accepts .
11712	Parses a string .
11713	Checks if a string matches the given needle
11714	Calculate earth radius
11715	Convert decimal coordinates to DMS
11716	Convert degrees to decimal degrees
11717	Render production error
11718	Render error rendering
11719	Logs the error message .
11720	Configure config file
11721	Create a configuration file .
11722	Save messages to PHP file
11723	Save messages to a file
11724	Creates a Time instance from an array .
11725	Creates a Time instance from a string .
11726	Creates a Time instance from a DateTime object .
11727	Creates a Time from seconds .
11728	Invalidate the given tags .
11729	Flush all tags .
11730	Encode tags .
11731	Register the configuration .
11732	Returns all cookies .
11733	Set a cookie
11734	Remove a cookie .
11735	Confirm dialog
11736	Get the labels for this menu .
11737	Creates a new session
11738	Get table primary key .
11739	Get table foreign keys .
11740	Get table indexes .
11741	Get table uniques .
11742	Get table checks
11743	Get table default values
11744	Get parameter value .
11745	Check if the given permission is allowed .
11746	Determine whether the query is distinct .
11747	Set columns .
11748	Join a table .
11749	Adds a join to the table .
11750	Adds a left join to the table .
11751	Adds a left join to the table .
11752	Adds a join to the table .
11753	Adds an outer join to the table .
11754	Adds a full join to the table .
11755	Set group by field
11756	Add conditions to the query .
11757	Adds conditions to the query .
11758	Set order by field
11759	Set the limit .
11760	Set offset .
11761	Build the FROM clause
11762	Renders a link .
11763	Renders a button .
11764	Renders the locale switcher .
11765	Returns a string representation of the equation .
11766	Returns the ordinal of the given x x .
11767	Calculates the abscissa for the given coordinate .
11768	Find record by id
11769	Find one record by predicate
11770	Check if a record exists
11771	Check if a predicate exists
11772	Delete records by predicate
11773	Delete a record
11774	Update data with given predicate
11775	Insert data into table
11776	Get the relation .
11777	Get primary keys .
11778	Get primary key .
11779	Returns the column information .
11780	Execute a SQL statement .
11781	Get primary key predicate .
11782	Check data columns
11783	Parses a JSON response .
11784	Parses the response .
11785	Set the return type .
11786	Run the plugin .
11787	Enqueue hooks .
11788	Set type type .
11789	Set name .
11790	Start the start position .
11791	Set the damage .
11792	Set the hit level .
11793	Set the meter gain .
11794	Set the input inputs .
11795	Add a cancel .
11796	Set start frames
11797	Set active frames .
11798	Set recovery frames .
11799	Set the advantage on hit .
11800	Set the advantage of the policy .
11801	Build a Move .
11802	Send slack message
11803	Parse segments .
11804	Parse route data .
11805	Validate a route .
11806	Finds the segment of a given parameter .
11807	Create a repository .
11808	Validate class name .
11809	Check if the file is an image .
11810	Count all files in the directory
11811	Get the route path .
11812	Get the route and params
11813	Returns a new URI with the given scheme .
11814	Returns a new URI with the given user information .
11815	Returns a new instance with the given hostname .
11816	Returns a new URI with the given port .
11817	Query array by key .
11818	Query array by key .
11819	Set query variables
11820	Set a query variable .
11821	Returns the URL of this request .
11822	Normalize the URI .
11823	Resolves a reference to a base URL .
11824	Check if the request is a fragment .
11825	Get canonical URL .
11826	Get request URL
11827	Get option value
11828	Build query string .
11829	Parse url .
11830	Display text .
11831	Translate the message .
11832	Suggests the request language .
11833	Get new state list
11834	Filters a list of states .
11835	Switch to new states .
11836	Find all categories for a budget
11837	Login action .
11838	Logout action .
11839	Connect to the user
11840	Get a parameter by name
11841	Set HTML body
11842	Add HTML image
11843	Add an attachment .
11844	Convert a file into a string
11845	Add a text part
11846	Add html part
11847	Add HTML image part
11848	Add attachment part
11849	Encode headers .
11850	Check if the build params are valid
11851	Check if value is valid
11852	Initialize Reaction .
11853	Load the items from the file .
11854	Save all items .
11855	Save data to file
11856	Create a JsonResponse .
11857	Set the callback .
11858	Set encoding options .
11859	Get layout .
11860	Returns the words as a string .
11861	Update session data .
11862	Delete a session
11863	Configure the CLI options .
11864	Load pm config .
11865	Get the memory memory limit .
11866	Called when the model is created .
11867	Render the tool .
11868	Add a plugin
11869	Get config value
11870	Generate a URL .
11871	Register a route .
11872	Creates a response .
11873	Creates a redirect response .
11874	Set path segments .
11875	Get the proxy class
11876	Get an instance of a class
11877	Get all records .
11878	Get the columns for the given fields .
11879	Returns a paginated pagination .
11880	Find an object by id .
11881	Persist an entity .
11882	Delete an entity
11883	Counts the number of entities .
11884	Creates a select query .
11885	Applies the scope to the query builder .
11886	Applies orderByOrder to query builder .
11887	Make a NoResultException exception .
11888	Replace query parameters .
11889	Add a new RPC method
11890	Get RPC method .
11891	Shutdown the loop .
11892	Add multiple headers .
11893	Sets a link .
11894	Creates a new request .
11895	Creates a new photo .
11896	Add a range to the range
11897	Starts the session .
11898	Regenerate session id
11899	Close the session .
11900	Unset session data
11901	Destroy session .
11902	Decode session data
11903	Set session cache .
11904	Returns an instance of Reaction
11905	Get module options
11906	Returns the size of this image .
11907	Set the walk flag .
11908	Set the array flag
11909	Set matrix data
11910	Get the value at the given index .
11911	Set the value at the given index .
11912	Rewind the current position .
11913	Returns the previous node .
11914	Get the previous position .
11915	Get the previous position .
11916	Get the previous position .
11917	Returns the next element .
11918	Get the next X element .
11919	Get the next position .
11920	Returns the next point in the current position .
11921	Returns the pointer to the current position .
11922	Get current position
11923	Get the key .
11924	Check if the path is valid
11925	Check if the data is valid
11926	Check if the data is valid
11927	Returns the number of tracks .
11928	Sets the offset to the given offset .
11929	Sets the offset of the current position .
11930	Check if an offset exists .
11931	Returns the value at the given offset .
11932	Set the value at the given offset .
11933	Check if the value is valid
11934	Allow view methods
11935	Allow controller methods
11936	Set the table .
11937	Set the FROM clause .
11938	Add conditions to the query .
11939	Add OR WHERE conditions
11940	Set static rule .
11941	Set static rule reference
11942	Returns an instance of the given rule .
11943	End the body .
11944	Register JS file .
11945	Register a JS variable
11946	Get default config files
11947	Returns a new instance of PEAR_Config instance
11948	Setup channels .
11949	Merge config file
11950	Write config file
11951	Read the configuration file from a file .
11952	Get default channel
11953	Get channel value
11954	Set the channels .
11955	Get configuration type
11956	Returns the documentation for the given key .
11957	Get the prompt .
11958	Returns the configuration for the given key .
11959	Gets the group groups .
11960	Get the keys for a given group .
11961	Returns the set of values for the given key .
11962	Get configuration keys
11963	Remove a key from the configuration .
11964	Remove a layer
11965	Determine the configuration for the given key .
11966	Checks if the given key exists .
11967	Set the registry
11968	Process the given section .
11969	Replace constant values .
11970	Get the callback .
11971	Check if value is valid
11972	Get valid values .
11973	Get valid values .
11974	Set the value .
11975	Initialize postinstall .
11976	Start the post - install session
11977	Add a success .
11978	Add idle time .
11979	Gets the estimated amount of accounts .
11980	Get request methods .
11981	Disable the auto update .
11982	Block wp request
11983	Remove admin nag .
11984	Check if a point is valid
11985	Determine if the diagonal is a parallelogram .
11986	Get the value of a composite key .
11987	Check if a composite key exists .
11988	Find application by id .
11989	Find all applications .
11990	Checks if two numbers are equal .
11991	Get digits from a number .
11992	Build a new number .
11993	Validates a number .
11994	Make a call .
11995	Generate a key
11996	Connect to Redis server
11997	Get command string .
11998	Generate MongoDB document .
11999	Get a domain event message .
12000	Reset the entity .
12001	Normalize messages .
12002	Validate entity .
12003	Register form data event .
12004	Returns an array of forms .
12005	Remove string from array
12006	Get all entities .
12007	Swap an entity .
12008	Configures the form to be excluded .
12009	Set the form data handler for the given tag .
12010	Remove all fields from the entity
12011	Add a response .
12012	Creates a response from a string .
12013	Creates a response from a file .
12014	Update the head version .
12015	Check if the entity has a new version .
12016	Persist an entity .
12017	Clear all versions .
12018	Clean up directory .
12019	Check if a key exists
12020	Moves a key from the filesystem .
12021	Connects the filesystem to the filesystem .
12022	Determine if the given key exists .
12023	Create a directory .
12024	Find entity by id
12025	Create a new entity .
12026	Save entity .
12027	Deletes an entity .
12028	Validate entity .
12029	Execute the query .
12030	Returns a query builder .
12031	Sets the criteria in the query .
12032	Sets the criteria in the query .
12033	Sets the ORDER BY clause .
12034	Saves the entity .
12035	Sets the properties for the query .
12036	Sets the properties for the given properties .
12037	Get entity relations .
12038	Ensure required properties .
12039	Send a broadcast .
12040	Execute a request .
12041	Get the script source
12042	Display the HTML tag .
12043	Display an image .
12044	Display audio .
12045	Verify a response .
12046	Verify request .
12047	Get script script
12048	Generate a script with a callback
12049	Check key value
12050	Check if value is string
12051	Send verification request
12052	Initializes the theme .
12053	Find the view file .
12054	Render PHP stateless file .
12055	Register post types .
12056	Generate a new token .
12057	Generate memory token .
12058	Execute the project .
12059	Filter message filter
12060	Log a notice message .
12061	Log a message .
12062	Log a debug message .
12063	Log a raw message .
12064	Ends the end of the log .
12065	Log a message .
12066	Convert message to string
12067	Convert error to string
12068	Colorize text
12069	Get callable data
12070	Process placeholders .
12071	Format value .
12072	Finds a seo seo .
12073	Get table name .
12074	Delete all records .
12075	Saves the model .
12076	Initialize MySQL database
12077	Parses the command .
12078	Get all commands
12079	Returns a list of available shortcuts .
12080	Get help for a command
12081	Get help arguments
12082	Handles the OpenBiz package .
12083	Compile a DSN string .
12084	Escape a value .
12085	Add template root root .
12086	Returns the count of records in the collection .
12087	Get count of values in a collection .
12088	Create count query
12089	Get entity manager
12090	Get current path .
12091	Loads a plugin .
12092	Clear an entry
12093	Get bundle .
12094	Set a bundle entry .
12095	Clear bundle .
12096	Invalidate cache .
12097	Checks if the dependency database is valid .
12098	Get the dependencies of a package
12099	Get package dependencies
12100	Install a package .
12101	Uninstall a package .
12102	Rebuild the package .
12103	Lock the current dependency .
12104	Unlock the lock .
12105	Get the dependencies from the database .
12106	Write the dependencies to the file .
12107	Automatically register module modules
12108	Register a module .
12109	Get the content of the theme
12110	Render an exception .
12111	Set the foreground color .
12112	Sets the background color .
12113	Set the color .
12114	Set red color .
12115	Set green color .
12116	Set yellow color .
12117	Set blue color .
12118	Set the magenta color .
12119	Draw a cyan color .
12120	Set the color .
12121	Reset color .
12122	Set color
12123	Remove an option .
12124	Format a message .
12125	Log a command .
12126	Get the list of uploaded files
12127	Set the release state .
12128	List the scripts .
12129	Initialize postinstall scripts .
12130	Initialize package info .
12131	Returns a list of file names .
12132	Get configuration options
12133	Check if package is compatible
12134	Check if a package is subpackage
12135	Get package group by name
12136	Splits an array into a new array .
12137	Builds the container .
12138	Returns the modulo modulo modulo .
12139	Calculate the modulo from an ENTIRE part .
12140	Update the event .
12141	Log a message .
12142	Select from repository entity
12143	Get entity alias .
12144	Delete entity .
12145	Update entity .
12146	Sets the FROM clause .
12147	Set a value .
12148	Adds a group to the query .
12149	Add a group by group .
12150	Sets the order by the query .
12151	Add an ORDER BY clause .
12152	Limit results .
12153	Gets all items in the collection .
12154	Fetches a single row .
12155	Fetches a single row .
12156	Fetch all results from the query .
12157	Adds a parameter to the query .
12158	Find unused parameter name .
12159	Parse call methods .
12160	Calls the functionality of the function .
12161	Check if the array is associative .
12162	Returns the description of the given subject .
12163	Add a timestamp
12164	Get the timestamp as a table
12165	Get page load time
12166	Get the most recent domain domain .
12167	Renders the header .
12168	Render header image
12169	Renders the body
12170	Render footer .
12171	Get controller name .
12172	Get all options
12173	Get action arguments .
12174	Returns an array of options for an action .
12175	Returns the headers .
12176	Checks if the browser is a flashwave .
12177	Get the raw body
12178	Get body params
12179	Get the host info
12180	Get the script URL .
12181	Get request params
12182	Gets the content types .
12183	Returns the list of available languages .
12184	Returns an array of ez tags .
12185	Get the CSRF token
12186	Generate a CSRF token
12187	Get default server params
12188	On login event .
12189	Crop a cropping image .
12190	Make crop name .
12191	Crop image .
12192	Get image size
12193	Get the permutations of a file .
12194	Get annotations from a docstring .
12195	Get annotation matches .
12196	Set the annotation .
12197	Set annotation arguments .
12198	Get annotation properties .
12199	Process annotation properties .
12200	Get the arguments from a string .
12201	Determine the value of a value .
12202	Get an annotation from the map .
12203	Clean a match .
12204	Get subscribed events .
12205	Handle command .
12206	Handle command help .
12207	Returns the provider for the given command .
12208	Adds a left join to the table .
12209	Adds a join to the table .
12210	Add a join where clause
12211	Compile the query .
12212	Returns all rows in the query
12213	Set the object table name .
12214	Set the object structure .
12215	Sets the database name .
12216	Set model name .
12217	Build model object
12218	Build field fields .
12219	Register validation factory .
12220	Load services .
12221	Get the target site id .
12222	Gets the parent relation .
12223	Renders a collapse item .
12224	Get all results .
12225	Execute the query .
12226	Get the column of the query .
12227	Returns the count of the query
12228	Check if the database exists .
12229	Make a call to the given prophecy .
12230	Finds all calls matching the given function name .
12231	Parses the package .
12232	Asserts that the state directory is valid .
12233	Asserts the state directory for the given channel .
12234	Checks if the channel directory exists .
12235	Returns the file name for the given channel .
12236	Get the alias from the alias .
12237	Returns the alias for the given channel .
12238	Lock the registry .
12239	Check if a channel exists .
12240	Check if mirror exists
12241	Check if an alias is an alias .
12242	Get information about a channel .
12243	Update a channel .
12244	Checks if the given value matches the given value .
12245	Get TinyMCE file .
12246	Initializes a new Strings instance
12247	Get entity manager .
12248	Resolve a class name .
12249	Validates the hash of the given hash .
12250	Checks if a route exists .
12251	Copy the source directory to target directory .
12252	Initializes the button
12253	Get next day
12254	Get the previous date
12255	Creates a random date range
12256	Get file .
12257	Get file path
12258	Opens a file .
12259	Create a file .
12260	Write contents to file
12261	Get the contents of a file .
12262	Change file mode .
12263	Lock a file .
12264	Unlock a file .
12265	Ensure the given path is a file object .
12266	Ensure the given path is a directory .
12267	Checks the lock timer .
12268	Get global variables .
12269	Render the section
12270	Adds a clause to the query .
12271	Add a where clause .
12272	Adds a WHERE clause to the query .
12273	Convert array to collection
12274	Checks if the value is a normalization .
12275	Retrieve data from database
12276	Update an existing record .
12277	Renders the migration history .
12278	Clear the migration .
12279	Show migration history .
12280	Show new migrations .
12281	Create a new migration .
12282	Migrate a migration .
12283	Migrate migration to current time
12284	Migrate the given version to the given version .
12285	Loads the adapter .
12286	Connect to database
12287	Add a cached query .
12288	Get cached results
12289	Executes an array query
12290	Create a new table .
12291	Add fields to table
12292	Returns a list of tables for a given table .
12293	Check if a table exists .
12294	Build an array of fields .
12295	Escapes a string
12296	Clears the query .
12297	Add a WHERE clause
12298	Add a WHERE clause
12299	Add a WHERE clause
12300	Add OR WHERE clause
12301	Add a WHERE clause
12302	Sets the ORDER BY clause .
12303	Get query string
12304	Get all results
12305	Get a single query .
12306	Get all available extensions
12307	Get model instance .
12308	Set storage path
12309	Loads the structure files .
12310	Get model structure .
12311	Save model structure .
12312	Dump data to database .
12313	Load model data
12314	Find all transactions for a given account .
12315	Set connection state .
12316	Returns the number of queries in the queue .
12317	Process the command queue .
12318	Execute a query .
12319	Set connection status
12320	Handles messages .
12321	Process data .
12322	Cancel request .
12323	Redirect to socialite .
12324	Registers a social user .
12325	Remove a social link .
12326	Update settings .
12327	Check if provider is valid
12328	Configure social services .
12329	Register social social provider .
12330	Clean up timer callback .
12331	Pack a record into an array .
12332	Unpack a record .
12333	Create the cleanup timer .
12334	Checks if the menu item is active .
12335	Sets the account ID .
12336	Sets the user id .
12337	Get the account .
12338	Get the current user .
12339	Generates the successor chain .
12340	Remove all tags
12341	Initialize the configuration .
12342	Returns the list of valid roles for a given release .
12343	Returns a list of all the base install roles .
12344	Shortcut to shorten a string
12345	Set the block size
12346	Get a value from the data array
12347	Generate config files .
12348	Merge data into array
12349	Read config data from config file
12350	Read file data
12351	Normalize config file path
12352	Apply an event to the aggregate .
12353	Record the given payload .
12354	Set related data
12355	Attaches the presenter .
12356	Redraw all components .
12357	Redirect to the given destination
12358	Initialize Twig plugins .
12359	Set a list of variables
12360	Fetch the template
12361	Load plugins from a directory .
12362	Creates a BusinessHours object from an associative array .
12363	Shift the business hours to the given timezone .
12364	Flatten a list of days .
12365	Validate a warning .
12366	Get file contents
12367	Parses the imports .
12368	Parse a YAML file .
12369	Set YAML parameters
12370	Calculate the request length .
12371	Executes a command .
12372	Serialize a value .
12373	Unpublish the given entity .
12374	Sets the class name .
12375	Sets the id column .
12376	Sets the name column .
12377	Sets the data column .
12378	Set the lifetime column .
12379	Sets the modified column .
12380	Sets the created column .
12381	Get the provider providers .
12382	Get available providers .
12383	Bootstrap the application .
12384	Register the ContentNegotiation content .
12385	Set request format .
12386	Validate request content type .
12387	Execute the function .
12388	Discover a channel
12389	Returns a PEAR_Dependency object
12390	Get the download directory .
12391	Detect dependency cycles .
12392	Setup the dependencies for the given package .
12393	Get url argument
12394	Output a line .
12395	Get the arguments .
12396	Register noCaptcha .
12397	Register validator rules .
12398	Register form macros .
12399	Parse a XML file .
12400	Convert a string into an XML object .
12401	Returns the XML representation of this channel .
12402	Validate an error
12403	Get the base URL for a resource type
12404	Reset functions for a specific type
12405	Sets default protocol protocols
12406	Returns the mirror for the given server .
12407	Set the validation package .
12408	Add a function to the server .
12409	Add mirror function
12410	Get the validation package .
12411	Get validation object
12412	Checks if the given property exists .
12413	Checks if a property is set .
12414	Get the cache file .
12415	Load cache parameters .
12416	Add an entry .
12417	Get a value from the cache .
12418	Get an entry from the cache .
12419	Check if an entry exists .
12420	Unset an entry .
12421	Apply site conditions .
12422	Assign a value to the array .
12423	Extract errors from an error
12424	Get the model config file .
12425	Get model definition .
12426	Save model definition .
12427	Returns the metadata for this request .
12428	Set name .
12429	Set the color .
12430	Set the parser .
12431	Aggregate styles from a collection .
12432	Make a curl request
12433	Proxy to a file proxy
12434	Create a validator .
12435	Validate attribute .
12436	Validate value
12437	Run the controller .
12438	Shutdown the error .
12439	Get the url for a controller
12440	Get canonical URL .
12441	Normalize route path .
12442	Checks if all tests are working .
12443	Returns a list of view names for the given schema .
12444	Get the value of a key .
12445	Sets a value .
12446	Set multiple values .
12447	Remove a key from the cache .
12448	Add a value to the cache .
12449	Store a value in the cache .
12450	Delete a key
12451	Filter a string
12452	Configure default options .
12453	Get option value from config
12454	Get the value of an option .
12455	Load config from file
12456	Load the configuration .
12457	Render config .
12458	Render value .
12459	Normalize config array path
12460	Set package version
12461	Clears the contents of the package .
12462	Clears the dependencies .
12463	Set package type
12464	Get the current release
12465	Add a file to the current release .
12466	Add an ignore tag .
12467	Add a binary package .
12468	Add a configuration option .
12469	Set PHP install conditions
12470	Set OS install condition .
12471	Set arch install condition .
12472	Generate a change log entry .
12473	Check if the file is a video .
12474	Get information about a file
12475	Set date .
12476	Set amount .
12477	Set the type .
12478	Set the comment .
12479	Sets the category id .
12480	Sets the account id virtual .
12481	Creates a new instance from a string .
12482	Creates a new instance from an array .
12483	Create a new SQLite instance .
12484	Create a new MySQL database instance
12485	Execute a SQL query
12486	Get table names
12487	Execute a query
12488	Retrieve a cell from the database .
12489	Check if table exists
12490	Check if a column exists .
12491	Returns a list of primary keys .
12492	Get column names
12493	Log a SQL query .
12494	On bootstrap .
12495	Run the application .
12496	Set a list of certificates
12497	Set private key
12498	Set the envelope key .
12499	Set compression .
12500	Get the timestamp of a date property .
12501	Suppress a user s profile .
12502	Execute the function .
12503	Create migration history table .
12504	Add a filter
12505	Filters the value of a static filter .
12506	Adds the inverse relations to the relation .
12507	Populate relation .
12508	Populate a single relation .
12509	Populate multiple models .
12510	List invalid properties .
12511	Process an array .
12512	Create a new Entity instance
12513	Checks if the text is equal .
12514	Returns true if this string contains another text .
12515	Checks if the string contains the given text .
12516	Get a substring from a string .
12517	Replaces the text with the given search .
12518	Replace text with given regex
12519	Check if the model is valid
12520	Checks if the model is valid .
12521	Refresh the record .
12522	Update all records .
12523	Delete all records .
12524	Insert a model .
12525	Insert a new record into the database .
12526	Deletes the object .
12527	Get all methods of the class .
12528	Get the name of a method .
12529	Filter custom data
12530	Get all commands .
12531	Get command help .
12532	Create a controller .
12533	Handle exception .
12534	Handle fatal error .
12535	Log an exception .
12536	Get the trace trace .
12537	Reduce stack trace .
12538	Proxy method .
12539	Proxy method .
12540	Inject a variable to the given array .
12541	Ensure the given string is translated .
12542	Create a repository .
12543	Start notification .
12544	Generate a random string
12545	Returns an array of serialized properties .
12546	Register a custom type .
12547	Assign assignment .
12548	Request a list of countries
12549	Encode a string .
12550	Get the default reason phrase .
12551	Returns the header value .
12552	Get the body of the request .
12553	Decodes the data from a compressed string .
12554	Check if table exists
12555	Clear all tables .
12556	Check if the pool is running .
12557	Get all headers .
12558	Get HTTP header name .
12559	Writes multiple messages .
12560	Writes a message .
12561	Sets the type of the filter .
12562	Find a resource path .
12563	Get the list of possible files .
12564	Starts the session .
12565	Get data from cache .
12566	Set a value for a given ID .
12567	Removes an item from the cache .
12568	Generate a CSRF token
12569	Validates a CSRF token
12570	Convert a name to a human readable string .
12571	Delete all files
12572	Move file to destination .
12573	Clean up the filename .
12574	Dispatch event .
12575	Handle errors .
12576	Handle fatal errors .
12577	Save the item .
12578	Returns a string representation of the exception .
12579	Convert an array to XML
12580	Converts a header into an array
12581	Load config file .
12582	Sets the configuration .
12583	Get a configuration value .
12584	Build a config stack from an array .
12585	Parse the given configuration .
12586	Parse a config value
12587	Compile a join constraint .
12588	Build a where clause .
12589	Compile a insert statement .
12590	Compile a update statement .
12591	Compile a delete statement .
12592	Wrap a value .
12593	Set the arguments of the function .
12594	Set the promise .
12595	Assert that the given prediction is truthy .
12596	Checks if the given prediction is present .
12597	Creates a new gallery instance .
12598	Connect to the user
12599	Create a new query
12600	Convert the query to SQL
12601	Scan content .
12602	Flattens an option to a single value .
12603	Apply a predicate to the given value .
12604	Execute callback
12605	Execute a callback .
12606	Parse callback function .
12607	Get constraints .
12608	Calculate min value
12609	Get controller .
12610	Get action .
12611	Resolve the request
12612	Process the response data .
12613	Process response .
12614	Get exception exception .
12615	Get terminal sizes
12616	Returns the operating system operating system .
12617	Translate a date into a human readable string .
12618	Locates a file .
12619	Returns the value of the given value .
12620	Returns email address .
12621	Format a decimal value .
12622	Returns the short size of the given value .
12623	Create a new model
12624	Update model .
12625	Check if the class exists .
12626	Fetch an object
12627	Fetch a column from a query
12628	Filter the query .
12629	Filter the query .
12630	Run the console .
12631	Get a value from an array
12632	Get a single header by name .
12633	Removes a header with the given name .
12634	Create a new message with the given body .
12635	Get the icon icon .
12636	Returns all available types .
12637	Bind a template .
12638	Render exception .
12639	Format a message
12640	Get header data
12641	Convert an array to a header string .
12642	Combines an array of sections .
12643	Recursively walk a key and value
12644	Splits a string .
12645	Report error message .
12646	Displays error page .
12647	Extract parameters from path .
12648	Get controller instance .
12649	Get button buttons
12650	Get HTML options
12651	Evaluate expression
12652	Get a zone
12653	Add a new record
12654	Get a table .
12655	Get the transaction .
12656	Load default metadata .
12657	Sets the parent id .
12658	Gets the budget category .
12659	Get all category words .
12660	Flush cache data .
12661	Add a key to the collection .
12662	Remove a key from the collection .
12663	Remove cache data from cache
12664	Get a boolean value .
12665	Creates a new Params instance from the given parameters .
12666	Extract parameters from a collection .
12667	Handles the command loaded .
12668	Add a new route group .
12669	Get all annotations for a given type .
12670	Set service properties .
12671	Create a ContainerService from an annotation .
12672	Get service context from annotation .
12673	Get the cache .
12674	Returns the query builder .
12675	Create a component .
12676	Get the stated class name .
12677	Get the state of a class instance .
12678	List packages .
12679	Returns a list of available states .
12680	Compile the command .
12681	Generate command line arguments .
12682	Executes the command .
12683	Save the file to disk .
12684	Replace all fields in the stream .
12685	Add a route .
12686	Add a route .
12687	Add a POST route .
12688	Add a PUT route .
12689	Add a PATCH request .
12690	Add a delete route
12691	Add a HEAD request .
12692	Get route by name .
12693	Get route url .
12694	Get route route .
12695	Matches a route .
12696	Determine if the given URI is internal .
12697	Dispatch a request .
12698	Setup routes .
12699	Set dynamic route .
12700	Validate route url
12701	Match static route .
12702	Match dynamic route .
12703	Gets a static route .
12704	Get a dynamic route .
12705	Route request middleware
12706	Route response middleware .
12707	Get response from dispatch .
12708	Setup the routes from cache .
12709	Setup routes .
12710	Renders the header .
12711	Renders the toggle button .
12712	Get a gettext file
12713	Get the query .
12714	Add filters .
12715	Filter the query .
12716	Filter the query .
12717	Add ORDER BY clause .
12718	Add offset to query builder
12719	Adds the limit to the query builder .
12720	Find entity by id
12721	Adds a join to the query builder .
12722	Get the sort column .
12723	Order by query parameters .
12724	Validates the given value .
12725	Replace entities in a string
12726	Reverse entities .
12727	Get XML declaration .
12728	Generate documentation declaration .
12729	Convert attributes to string
12730	Collapse empty tags
12731	Creates a tag .
12732	Create a start element
12733	Splits a qualified name into a namespace .
12734	Check if a string is valid
12735	Dispatch an object .
12736	Add tags to the cache .
12737	Invalidate the cache .
12738	Validate the entity .
12739	Interpolate a message .
12740	Check if two points are equal .
12741	Checks if two points are equal .
12742	Returns the intersection between two lines .
12743	Checks if two lines are equal .
12744	Checks if two lines are equal .
12745	Gets the directions between two points .
12746	Returns the direction of a coordinate .
12747	Get all results .
12748	Prepares an async query .
12749	Remove duplicated models .
12750	Get a single row from the database .
12751	Checks if the given value is valid .
12752	Asserts a header value .
12753	Execute the query .
12754	Build request URI .
12755	Set default language
12756	Set the media type
12757	Set the result format .
12758	Set the limit
12759	Set the entity
12760	Set the attribute .
12761	Set the default callback
12762	Set explicit type .
12763	Get photos for a gallery
12764	Log a message .
12765	Create a temporary directory
12766	Get package info from Tgz file
12767	Get package information from package .
12768	Extract package information from a string
12769	Extract package info from file .
12770	Get a list of Offer objects
12771	Get All offers
12772	Search for EAN
12773	Set log file handler
12774	Set the mail handler
12775	Get log entries .
12776	Make a log row
12777	Shutdown debugging .
12778	Handle request .
12779	Displays the controller .
12780	Init bundle .
12781	Add boot error
12782	Add a constant path .
12783	Add an application path .
12784	Get the path of the stack .
12785	Get absolute path .
12786	Gets the user s name .
12787	Set mode .
12788	Load the default configuration file .
12789	Initialize the application .
12790	Load a bundle .
12791	Get the converter .
12792	Generate a hash of a file
12793	Add a reply to this message .
12794	Create a new user
12795	Resume session
12796	Calculates the given expression .
12797	Get user details .
12798	Execute raw query
12799	Generate csrf meta tags .
12800	Generates a label tag .
12801	Generates a button tag .
12802	Creates a submit button .
12803	Generates a submit button .
12804	Generates a reset input tag .
12805	Creates a hidden input .
12806	Creates a password input .
12807	Process boolean input options .
12808	Sets the hours .
12809	Sets the minutes .
12810	Set seconds .
12811	Check if time elements are valid .
12812	Write a file to the fly system .
12813	Write a file to the filesystem .
12814	Update a file .
12815	Update a stream .
12816	Put content into filesystem .
12817	Put a stream into the filesystem .
12818	Rename a file .
12819	Copy a file to another path .
12820	Get metadata for a file .
12821	Get the mimetype of a file .
12822	Get file size .
12823	Get the timestamp of a file .
12824	Get visibility .
12825	Set visibility .
12826	Set the visibility of a file .
12827	Set the visibility of a path .
12828	List contents of a directory .
12829	Get local adapter .
12830	Get S3 S3 adapter
12831	Process request .
12832	Deserialize request .
12833	Checks if the given object is accessible .
12834	Parse a block
12835	Get path .
12836	Get authentication object .
12837	Get data from url
12838	Parse JSON data
12839	Get all data
12840	Get entity alias .
12841	Creates a query builder .
12842	Creates a new ResultSetMappingBuilder .
12843	Find all identifiers .
12844	Returns the minimum value of a column .
12845	Gets a paginator .
12846	Checks if an entity is an entity .
12847	Get the identifier of an entity .
12848	Validate an entity instance .
12849	Converts an entity into an array .
12850	Filter uploaded files .
12851	Get size limit .
12852	Check if a key exists .
12853	Handle the console command .
12854	Terminate the console .
12855	Displays account categories .
12856	Run the controller .
12857	Initialize the default timezone .
12858	Execute the exception .
12859	Converts the form to an array .
12860	Initializes the database .
12861	Get list of children
12862	Detects a loop of children .
12863	Invalidate the cache .
12864	Get last batch number
12865	Creates a response .
12866	Create a JSON response .
12867	Creates a response .
12868	Executes all files .
12869	Returns the compression adapter .
12870	Set the adapter .
12871	Set the prefix .
12872	Retrieves a value from the server .
12873	Show the hello page .
12874	Install table .
12875	Displays boot errors .
12876	Get the serializer
12877	Increment version number
12878	Get body
12879	Get body array
12880	Get body object
12881	Get the results from a query .
12882	Set default response headers
12883	Set the response body
12884	Convert the response to an array
12885	Get unique validation rule .
12886	Downloads a file from S3 .
12887	Returns the adapter for the given ADO connection .
12888	Get ADO connection ID
12889	Log error message .
12890	Wrap a curl error .
12891	Reads the request body
12892	Called when the client is written .
12893	Callback for write body
12894	Add a command collection .
12895	Print time .
12896	Prints the help command .
12897	Prints the help for the given class .
12898	Print a line .
12899	Upload an image
12900	Clear HTML code
12901	Save model attributes
12902	Handles the event .
12903	Decode an attribute .
12904	Create a parser instance
12905	Set the locale
12906	Returns the localized question for the given value .
12907	Establish tunnel connection .
12908	Determine if the request is valid .
12909	Disconnect the socket .
12910	Handle redirect .
12911	Check if a server digest is a server digest .
12912	Determine if the proxy digest is used .
12913	Write the request body
12914	Read chunked response .
12915	Build a SQL query string
12916	Build a WHERE clause
12917	Build a SQL join string
12918	Build a SQL group by a group
12919	Prepare dependency handler
12920	Gets the result of the result of the result map .
12921	Clean a string
12922	Checks if the given call is present .
12923	Decode YAML file .
12924	start session
12925	Execute a query
12926	Insert data into database
12927	Update an existing record .
12928	Updates an existing record .
12929	Execute a query
12930	Get all rows in the database
12931	Returns an array of IDs for a select query .
12932	Execute a SELECT query .
12933	Get a value from a select query
12934	Prepare a query
12935	Execute a statement
12936	Fetch an SQL statement
12937	Get the log .
12938	Parses the given value .
12939	Filters the given value .
12940	Dispatch a request .
12941	Terminate route middleware .
12942	Parses an element .
12943	Handles the end of the element .
12944	Run command .
12945	Process the message .
12946	Modify uploadable behavior .
12947	Creates a new instance from a JSON string .
12948	Open the session .
12949	Read session data .
12950	Destroy a session .
12951	Write data to the database .
12952	Render a widget
12953	Returns the id of the model
12954	Runs before validation .
12955	Checks if the application is valid .
12956	Get a record from the database .
12957	Delete a record
12958	Get all records from database
12959	Save record to database .
12960	List breadcrumbs
12961	List all budgets
12962	Verify account .
12963	Loads the budget .
12964	Check month month
12965	Setup the md5 file
12966	Execute the constructor .
12967	Get the name of the user .
12968	Save the user .
12969	Change user password
12970	Add the given implementation .
12971	Get writer .
12972	Parse version string .
12973	Compare two versions .
12974	Get all children of a given parent .
12975	Get the parent of the tree .
12976	Returns the parents of this object .
12977	Convert an object to an array
12978	Apply a modifier .
12979	Creates a CssResource from a URL .
12980	Get address book .
12981	Display the contacts .
12982	Get message view .
12983	Manage messages .
12984	Append extensions to the path .
12985	Destroy the session .
12986	Add autoload method
12987	Remove autoload method
12988	Remove an aggregate object
12989	Gets an option .
12990	Returns an array of options .
12991	Parse short options
12992	Parse command line arguments
12993	Convert a directory to a struct
12994	Convert multiple files to struct
12995	Removes all files from the system .
12996	Create a directory .
12997	Create a temporary directory .
12998	Remove temporary files
12999	Find a list of patterns .
13000	Creates a new Log instance .
13001	Sets the budget ID .
13002	Get the budget .
13003	Get all transactions
13004	Prepare value
13005	Sets the URL to the request .
13006	Set request method
13007	Set authentication .
13008	Add a cookie
13009	Sets the body of the request .
13010	Returns the body of the request .
13011	Adds a field to upload .
13012	Attach an observer to the observer .
13013	Detach observer .
13014	Set last event
13015	Set HTTP request adapter
13016	Set cookie jar
13017	Send the request to the server .
13018	Detect mime type .
13019	Show a setting .
13020	Creates a new setting .
13021	Creates a new setting .
13022	Update a setting .
13023	Add a WHERE clause .
13024	Returns a new response with the given status code .
13025	Removes all records from the database .
13026	Checks if an event has been registered .
13027	Get field value .
13028	Returns the message for the given message .
13029	Create an AccessDeniedHttpException .
13030	Set flash message
13031	Commit a transaction
13032	Format date string
13033	Format a time .
13034	Format a boolean value .
13035	Set the current time zone .
13036	Get a service instance .
13037	Check if a service has been registered .
13038	Create an instance of the given class .
13039	Add a resolver .
13040	Add a service instance
13041	Get the pool .
13042	Query a query .
13043	Execute a query .
13044	Create a new connection .
13045	Get the least busy connection .
13046	Install assets .
13047	Get reflection class
13048	Get the version of a class .
13049	Finds the class name by the given version .
13050	Gets the migration methods .
13051	Get required class options
13052	Show a job .
13053	Creates a new job .
13054	Create a new job .
13055	Update a job .
13056	Set client file name
13057	Guess the file extension .
13058	Get the mime type .
13059	Get human readable size
13060	Get the date as a datetime .
13061	Get the date as a datetime .
13062	Get the date as a datetime .
13063	Creates a new File object from a file .
13064	Find all applications .
13065	Find application by id
13066	Create a new application .
13067	Delete an application .
13068	Update the database .
13069	Get the closest date interval before the given date .
13070	Get the closest date interval after the given date .
13071	Build a DateTimeInterval object based on the given time interval .
13072	Returns the day before the given day .
13073	Returns the day after the given day .
13074	Get information about a role
13075	Commit a transaction .
13076	Rollback transaction .
13077	Sets the isolation level .
13078	Get database connection .
13079	Set the backend .
13080	Log debug message .
13081	Log a message .
13082	Log a notice message .
13083	Log a warning message .
13084	Log an error message .
13085	Log a critical message .
13086	Log an alert message .
13087	Log an emergency message .
13088	Log a message .
13089	Get the value of a property .
13090	Truncate HTML .
13091	Parses the installer .
13092	Delete package files
13093	Add a file operation
13094	Download packages .
13095	Sets the downloaded packages .
13096	Check if a point is valid
13097	Create an IteratingException .
13098	Register the ordercloud service .
13099	Add an array of attributes .
13100	Change classes .
13101	Parse the class attributes .
13102	Create a JSON column .
13103	Bind an abstract binding .
13104	Bind a closure to the container .
13105	Registers a binding .
13106	Check if the given abstract is shared .
13107	Get the closure for a concrete class .
13108	Add dependencies for a call parameter .
13109	Get contextual ConcreteConcrete .
13110	Add the middleware to the request .
13111	Add the middleware to the response .
13112	Terminable middleware .
13113	List all webservices
13114	Get the WSDL file
13115	Initialize the minify options .
13116	Converts a date to a timestamp .
13117	Convert timestamp to array
13118	Converts a date to a string
13119	Returns the difference between the given timestamp .
13120	Returns the properties of this object .
13121	Checks that the expected call is expected .
13122	Parse parameter values
13123	Sets a parameter .
13124	Filter a string
13125	Displays a breakpoint .
13126	Download all available channels
13127	Add a mock instance
13128	Create a new instance
13129	Update the profile .
13130	Check if a list of namespaces exist
13131	Get the value of a variable .
13132	Create a response .
13133	Render a template .
13134	Returns a JSON response .
13135	Create a JSON response .
13136	Redirect to the given URI .
13137	Redirect a route .
13138	Validate email address .
13139	Returns the difference between two dates .
13140	Returns the difference between weeks .
13141	Returns the difference between two dates .
13142	Returns the difference between two dates .
13143	Get all commands .
13144	Set command properties .
13145	Creates a ConsoleCommand from an annotation .
13146	Get storage path .
13147	Find model .
13148	Get task parameters
13149	Make a request .
13150	Get a GET request .
13151	Perform a POST request .
13152	Get a HEAD request .
13153	Make a PUT request .
13154	Patch a PATCH request .
13155	Delete a given URI .
13156	Deserialize a host .
13157	Timestamps a timestamp
13158	Merges the data with the given data .
13159	Reads a file .
13160	Get package by name
13161	Initialize the publisher .
13162	Clear init code
13163	Gets the initial code for the template .
13164	Evaluate PHP code
13165	Initialize the template paths .
13166	Add a template path .
13167	Wrap a viewable object
13168	Get schema names .
13169	Get all table names for a given schema .
13170	Refresh table metadata
13171	Get table metadata
13172	Get table metadata
13173	Set table metadata
13174	Get cache key .
13175	Get an option .
13176	Get temporary directory
13177	Initializes the migration .
13178	Create a role
13179	Assigns a role
13180	Registers a function .
13181	Call a mocked method
13182	Get parameter by key
13183	Resolves a string .
13184	Convert a query to meta
13185	Get twitter information
13186	Renders the panels .
13187	Register user .
13188	Sets a random vector .
13189	Opens the mcrypt module
13190	Initialize the cipher .
13191	Connects to the client
13192	Verify credentials .
13193	Fetch user data
13194	Creates a new auth extension .
13195	Add data tokens to the object
13196	Get authentication protocol .
13197	Checks if the given credentials is OAuth1 .
13198	Check if the given credentials are OAuth2
13199	Close the stream .
13200	Attach a stream to the stream .
13201	Returns the contents of the stream .
13202	Set the stream .
13203	Write data to disk .
13204	Get the virtual account .
13205	Get the previous account .
13206	Update account virtual .
13207	Set query cache .
13208	Set the connection .
13209	Fetch a result row
13210	Inserts a table into the database .
13211	Execute the query
13212	Log query .
13213	Query the query .
13214	Execute the query .
13215	Check if the query matches the given pattern .
13216	Execute SQL query
13217	Invokes a closure .
13218	Check if layer is supported
13219	Prepare DOM elements
13220	Dispatches all bootstrap errors .
13221	Render error
13222	Render debug information
13223	Render a view
13224	Initialize the bot .
13225	Add the response responses .
13226	Registers a short code .
13227	Remove short code .
13228	Parse short code .
13229	Parse shortcode attributes
13230	Get the download URL for a package .
13231	List packages .
13232	Sort versions by version number
13233	Get array data
13234	Get all hours
13235	Parses a page
13236	Find all accounts by user id
13237	Print the application message .
13238	Display usage message .
13239	Get usage path .
13240	Prints the given arguments .
13241	Display the options section .
13242	Get option name .
13243	Generates a dice roll from a given summary .
13244	Set columns .
13245	Adds a condition to the query .
13246	Adds a predicate to the query .
13247	Join a table .
13248	Join a table with the given table .
13249	Adds a join to the table .
13250	Returns the sql string for this query .
13251	Execute the query
13252	Prefix table join condition .
13253	Get a value from the collection .
13254	Set a key value
13255	Remove a key from the collection .
13256	Create an INSERT statement
13257	Creates a PEAR_Error instance .
13258	Returns a new instance of the given package .
13259	Handle error
13260	Set the message callback
13261	Set default callback
13262	Removes an error from the stack .
13263	Pop an error from the stack
13264	Checks if there is an error .
13265	Get all errors
13266	Returns true if there is an error
13267	Returns an array of all errors
13268	Get the error message .
13269	Register the configuration .
13270	Register a new entry .
13271	Register autowired classes .
13272	Get autowired parameters .
13273	Sets the target directory .
13274	Set the mode .
13275	Get routes for given classes .
13276	Set route properties .
13277	Get route routes .
13278	Returns a new route with the given controller .
13279	Creates a RouterRoute from annotation .
13280	Publish route annotations .
13281	Format the response .
13282	Format JSONP response .
13283	Get host port .
13284	Get the scheme host port .
13285	Returns a new instance with the given host .
13286	Returns a new instance with the specified port .
13287	Returns a new instance with the given path .
13288	Returns a new instance with the given query .
13289	Returns a new instance with the given fragment .
13290	Checks if the host is a standard port .
13291	Validate the scheme .
13292	Validate port .
13293	Validate a package .
13294	Validates the given dependency .
13295	Normalize a dependency .
13296	Add a word to a string
13297	Tokenize a string .
13298	Join an array of keys and values
13299	Check if a table exists
13300	Map class name to table
13301	Get table from database
13302	Process the version tag .
13303	Do discovery .
13304	Login a user
13305	Log out a user .
13306	Convert a string to a separator .
13307	Get migration files .
13308	Get the migrations for the application .
13309	Publish a method .
13310	Send an HTTP request
13311	Check if url is valid
13312	Translates a directory .
13313	Create app builder .
13314	Creates an app builder from persistence .
13315	Get app builder dependencies .
13316	Reset a commit .
13317	Create a branch
13318	Delete a branch
13319	Push a branch
13320	Create a pull request .
13321	Clone project .
13322	Parses the callback
13323	Run a command
13324	Connect to the user
13325	Add file to rename filter
13326	Get the name of the file .
13327	Get file name .
13328	Get a service .
13329	Generate a service .
13330	Set a service .
13331	Set an alias .
13332	Get parameter by id
13333	Set a parameter
13334	Get service definition .
13335	Set service definition .
13336	Initialize the driver .
13337	Initialize the user event .
13338	Convert table to array
13339	Checks if the string is serialized .
13340	Checks if the call is a function .
13341	Add a route
13342	Initialize routes .
13343	Create a controller instance .
13344	Register a controller .
13345	Register controller with annotations .
13346	Register controller .
13347	Get the default controller and action .
13348	Register observer .
13349	Unregisters an observed observable .
13350	Auto set channel
13351	Executes a command .
13352	Add a flash message
13353	Redirect to the current request .
13354	Configure the shared cache .
13355	Initialize the bot .
13356	Finalize the router .
13357	Get the configuration directory .
13358	Checks that all calls are expected .
13359	Get the database connection .
13360	Configure the tinymce bundle .
13361	Set the capabilities
13362	Creates a new instance from the environment .
13363	Creates a new Locator from a path .
13364	Returns a list of available choices .
13365	Check if a constant is valid
13366	Checks if a value is valid
13367	Check if value is valid
13368	Creates a PDO adapter
13369	Create the controller path
13370	Create cache path
13371	Update WSDL .
13372	Compile the service
13373	Generate documentation .
13374	Get all controllers
13375	Builds the output .
13376	Build the bootstrap CSS .
13377	Get parameter value
13378	Rebase the URI .
13379	Add a route .
13380	Get static route .
13381	Checks if a static route exists .
13382	Add a dynamic route .
13383	Checks if a dynamic route exists .
13384	Get route .
13385	Create sub - leaf tree .
13386	Locates a file .
13387	Convert this number to another .
13388	Checks if two numbers are equal .
13389	Returns the decimal value .
13390	Add another number to this number .
13391	Subtracts a number from another number .
13392	Multiplies the number with the given multiplicator .
13393	Divide the number of multiplicator .
13394	Creates an adapter for the MySQL database .
13395	Get alias list
13396	Find aliases .
13397	Replace migration files .
13398	Reads a line from the stream .
13399	Enable SSL connection .
13400	Check the timeout .
13401	Add a route .
13402	Set the items .
13403	Builds an HTML string .
13404	Prepare name attribute
13405	Check data attribute
13406	Add a resource to the queue .
13407	Creates a Day instance from an array of intervals .
13408	Creates a Day instance from an associative array .
13409	Checks if the interval is a valid interval .
13410	Create a new Request object from an array .
13411	Set server info
13412	Set headers .
13413	Set POST fields
13414	Set query fields
13415	Get a single header value
13416	Convert request to array
13417	Add a command .
13418	Add a parsed command .
13419	Get a command .
13420	Remove a command .
13421	Matches a command .
13422	Get all registered commands .
13423	Setup the console .
13424	Setup the commands from the cache .
13425	Get cacheable .
13426	Sets the separator .
13427	Register a listener .
13428	Listen for multiple events .
13429	Checks if an event exists .
13430	Remove a listener .
13431	Checks if an event has been registered .
13432	Add an event .
13433	Remove an event .
13434	Trigger an event .
13435	Setup events .
13436	Setup events from cache .
13437	Initialize the template .
13438	Check if a template exists .
13439	Fetch the template
13440	Load data from the file .
13441	Save the data to the file .
13442	Initializes the reader .
13443	Initializes the writer .
13444	Get default options .
13445	Encrypt the given data .
13446	Decrypt data .
13447	Generate a key from the session
13448	Send an exception to stdout .
13449	Render exception .
13450	Get the view file for the given exception .
13451	Get the response .
13452	Get exception data .
13453	Get stdio logger
13454	Read session data .
13455	Write session data .
13456	Destroy a session .
13457	Update timestamp .
13458	Extract data from session record
13459	Extract timestamp from record .
13460	Get session data from cache
13461	Returns the message with the given variables .
13462	Generate SQL constraint .
13463	Add autoincrement .
13464	Add a key .
13465	Adds a foreign constraint .
13466	Returns a string representation of a column .
13467	Start jump start .
13468	Create an IterationException .
13469	Renders the toggle button .
13470	Get the response .
13471	Get module name
13472	Loads a reflection class .
13473	Loads an object reflection .
13474	Loads a property reflection .
13475	Returns the called method name .
13476	Get all properties of a class .
13477	Set property value
13478	Sets the properties of an object .
13479	Loads the annotations of a class .
13480	Clears all collections .
13481	Returns true if the given class is instantiated .
13482	Get reflection method .
13483	Returns the reflection class for the given object .
13484	Check method arguments .
13485	Get reflection from cache
13486	Sets reflection .
13487	Get cache key .
13488	Get the class name of an object
13489	Parse doc comment .
13490	Get the documentation of a class
13491	Get the documentation of a method .
13492	Initialize database by config
13493	Returns the namespace for the given class .
13494	Uninds a string .
13495	Processes the data
13496	Extract a photo from a source
13497	Fetch image sizes
13498	Extracts an array of images .
13499	Find placeholder start position .
13500	Build route path .
13501	Search for a route .
13502	Replace placeholders .
13503	Initialize the source language .
13504	Load messages from a category .
13505	Find categories by pattern .
13506	Checks if a property is set .
13507	Send exception response .
13508	Get the content of an exception .
13509	Format a path .
13510	Format arguments .
13511	Escape html .
13512	Set the validator .
13513	Transform a string into an array .
13514	Handle disconnect .
13515	Handle an event .
13516	Callback for a phone home .
13517	Called when the callback is closed .
13518	Get proxy command handler
13519	Display application config .
13520	Load all bundles .
13521	Load messages .
13522	Set HTTP headers
13523	Set server cgi environment variables .
13524	Perform a POST request .
13525	Make a JSON request
13526	Connect to database
13527	Escapes a string .
13528	Initialize Reaction .
13529	Checks if the field has a slug .
13530	Get the special fields for a given field .
13531	Get all fields by type
13532	Get date from date
13533	Determine the preferred language .
13534	Determine the accepted charset .
13535	Determine the mime type .
13536	Match the Accept header .
13537	Sort Accept header .
13538	Perform a HEAD request .
13539	Convert a string to a string
13540	Get entity manager
13541	Returns the structure structure for the given database .
13542	Get an auto object by name
13543	Get table structure
13544	Get model object
13545	Builds the database structure .
13546	Prepare error message
13547	Check the budget .
13548	Check the budget for a budget .
13549	Find the budget for a budget
13550	Sets the id parent .
13551	Sets whether the user is main page .
13552	Get the account user .
13553	Gets the bank .
13554	Parse a CSV file .
13555	Get the icon icon .
13556	Build the query .
13557	Escape a single value .
13558	Create a redirect response .
13559	Sets the secure URL .
13560	Redirect to the browser .
13561	Throw exception .
13562	Filters a list of commands .
13563	Sort commands .
13564	Print the current section .
13565	Initialize session .
13566	Starts the timer .
13567	Returns the current time .
13568	Display a timer .
13569	Initializes the provider .
13570	Initialize the application .
13571	Initialize basic initialization .
13572	Locates the path to the config file .
13573	Locates the class loader .
13574	Create a new object
13575	Get the config reader .
13576	Initializes the container .
13577	Initialize static application .
13578	Checks if the token matches the given request .
13579	Get the token from the request .
13580	Initialize the bot .
13581	Get current weather
13582	Get precipitation for a given location .
13583	Get the latitude for a given location .
13584	Add error message
13585	Get English intensity .
13586	Get the annotations of a class .
13587	Get the annotations of a class .
13588	Get the annotations of a class .
13589	Get the annotations for a property .
13590	Get the annotations for a given type .
13591	Get all properties of a class .
13592	Get the annotations for a method .
13593	Get all annotations for a given type .
13594	Get all methods of a class .
13595	Get the annotations of a function .
13596	Filter annotations by type
13597	Set annotation values .
13598	Get reflection class .
13599	Get a reflection property .
13600	Get reflection method .
13601	Get the reflection function .
13602	Get the dependencies of the given parameters .
13603	Returns the length of the vector .
13604	Returns the center of this point .
13605	Render the form
13606	Renders a field .
13607	Check if a key exists .
13608	Get display dirname
13609	Scan directory
13610	Add a header
13611	Get list of headers
13612	Create database database .
13613	Get database tables
13614	Update DB from a structure
13615	Update DB relations .
13616	Update many tables .
13617	Generate a SQL table .
13618	Generate SQL for column .
13619	Generate SQL for index .
13620	Generate a SQL constraint .
13621	Get keyvalues by key type
13622	Returns a list of keyvalues for a given key type .
13623	Get the annotations of a given class .
13624	Get an annotation from a class
13625	Get the annotations of a property .
13626	Get an annotation for a given property .
13627	Get method annotations .
13628	Returns the annotation for a given method .
13629	Get the reader .
13630	Get reflection method .
13631	Get a value from cache
13632	Set cache value
13633	Gets the paths of the given key .
13634	Process key .
13635	Set the event class name .
13636	Build event .
13637	Calculates the average of an array .
13638	Set order by field
13639	Reads the parameters .
13640	Get a value from an object .
13641	Set the value of an object .
13642	Filter an array of objects .
13643	Set the email address .
13644	Add a new address
13645	Add a reply to the mailer .
13646	Add a cc address
13647	Add a BCC address .
13648	Add an attachment .
13649	Run the application .
13650	Sets the referer of the current request .
13651	Returns the referer of the current request .
13652	Builds the url for the route
13653	Download package .
13654	Extract package .
13655	Resets default locale translations .
13656	Returns the first occurrence of a string .
13657	Create a sidebar menu .
13658	Add example menu .
13659	Register the migration repository .
13660	Publish pages
13661	Execute the query .
13662	Load messages from the given context .
13663	Get all categories
13664	Get file name .
13665	Validate uploaded files .
13666	Initializes the result object .
13667	Get the pattern for a given pattern .
13668	Set attributes .
13669	Detects data by key .
13670	Checks if the server is a shell .
13671	Get configuration object
13672	Convert latitude to DMS latitude
13673	Convert longitude to DMS
13674	Returns the latitude of the given latitude .
13675	Returns the latitude of the given latitude .
13676	Returns the distance between the location .
13677	Checks if the given data matches the filter .
13678	Create tables from config .
13679	Bundle multiple tables .
13680	Get a single point
13681	Publish command .
13682	Get the URL fragment for the current request .
13683	Generates a response for the given request .
13684	Retrieves the data from the cache .
13685	Returns true if the string ends with the given string .
13686	Count words in a string
13687	Create a new Authenticatable .
13688	Initialize the session .
13689	Open the session .
13690	Open the session .
13691	Register session handler .
13692	Close the session .
13693	Destroy the session .
13694	Regenerates the session ID .
13695	Read session data .
13696	Write session data
13697	Destroy session .
13698	Set a key value
13699	Removes a key from the cache .
13700	Removes all data from the session .
13701	Get flash value
13702	Get all flash messages
13703	Set flash value
13704	Add a flash value
13705	Removes a flash value from flash
13706	Remove all flash messages
13707	Freeze session data
13708	Unfrees the session .
13709	Create session cookie
13710	Validate the given value .
13711	Validates that the given value is after the given format .
13712	Validate date format .
13713	Check if the prophecy is valid
13714	Assign value to array
13715	Get controller config
13716	Executes a rule .
13717	Process multiple tests
13718	Parses raw data .
13719	Create a new view .
13720	Set the variables .
13721	Set a variable .
13722	Escape the given value .
13723	Get template directory .
13724	Set the layout .
13725	Set the template .
13726	Render a partial template .
13727	End the block .
13728	Render the view .
13729	Get full path .
13730	Render a template .
13731	Render layout .
13732	Sets the route .
13733	Get separator .
13734	Write header message .
13735	Returns a list of all available notifications .
13736	Create a new notification object
13737	Set the key .
13738	Checks if the file is renamed .
13739	Guess the file extension .
13740	Guess the filename .
13741	Sets the rename .
13742	Download file .
13743	Upload a tinymce
13744	Handles an exception .
13745	Execute a curl request
13746	Execute the request
13747	Set cookie file
13748	Choose a list of parameters
13749	Displays all items .
13750	Initializes the options .
13751	Write the configuration to the file .
13752	Get exception from context .
13753	Convert an exception to an array
13754	Render a file
13755	Checks if a file is a core file .
13756	Get exception name .
13757	Sets the output of the response
13758	Generate a list of URLs
13759	Sets the amount default value .
13760	Sets the date start date .
13761	Sets the date end date .
13762	Sets the state of the model .
13763	Sets the month bitmask .
13764	Get all budget category categories
13765	Get all budget month months
13766	Execute a SQL statement .
13767	Create a PDO exception .
13768	Loads a file .
13769	Updates the database .
13770	Downgrades the database .
13771	Insert data into table
13772	Execute a batch insert .
13773	Update a table .
13774	Delete a table
13775	Rename a table .
13776	Drop a table .
13777	Truncates a table .
13778	Drop a column .
13779	Rename a column .
13780	Change a column .
13781	Add primary key .
13782	Drop primary key .
13783	Add a foreign key .
13784	Drop a foreign key .
13785	Create a new index .
13786	Drop an index .
13787	Add comment on column
13788	Add comment on table
13789	Removes comment from a column .
13790	Drop comment from table
13791	Execute a command .
13792	Log a message .
13793	Validate a regular expression .
13794	Captures all matches .
13795	Splits the given text into an array .
13796	Replaces the text with the given text .
13797	Displays configuration .
13798	Get the Url image url
13799	Get model by id
13800	Get model by id
13801	Get list of models
13802	Save a model .
13803	Delete a model
13804	Get a list of model ids
13805	Get a list of model ids
13806	Set a cookie
13807	Connect to a socket .
13808	Save record to database .
13809	Sets the data .
13810	Returns the record as an array .
13811	Get field value
13812	Sets the value of a record .
13813	Get record primary key .
13814	Parse a path .
13815	Validate path .
13816	Splits segments into segments .
13817	Parse a path .
13818	Get the parameter replacement for the given key .
13819	Store a value in the cache .
13820	Flush the cache .
13821	Process response data .
13822	Invokes the given action .
13823	Get the content type .
13824	Regenerate a new id
13825	Create session id
13826	Create GC timer .
13827	Sets the content type .
13828	Set the buttons .
13829	Add a button .
13830	Validates the given type .
13831	Validates the given size .
13832	Register commands .
13833	Create a tar archive
13834	Add string to file
13835	Check if a file is malicious filename
13836	Parse the command .
13837	Migrate an object from another object .
13838	Get unique keys .
13839	Get primary key .
13840	Get primary keys .
13841	Get the priority .
13842	Get the validator .
13843	Load mime types .
13844	Load mime aliases file
13845	Unlink a file .
13846	Get permissions as string
13847	Converts a mode string to an octal .
13848	Adds a join to the table .
13849	Creates a SQL query
13850	Search for results
13851	Create a table .
13852	Load all modules .
13853	Get the container .
13854	Initialize swear jar .
13855	Sets select statement .
13856	Set the table .
13857	Set the value of a column .
13858	Add a where clause .
13859	Add OR WHERE clause
13860	Sets the order by ascending order .
13861	Order by descending order .
13862	Returns the query .
13863	Set where clause
13864	Sets the ORDER BY clause .
13865	Get select query
13866	Get insert query .
13867	Get update query .
13868	Get delete query .
13869	Returns a SET statement .
13870	Get the WHERE clause .
13871	Get the ORDER BY clause .
13872	Dispatch an expression .
13873	Register a form .
13874	Edit a user .
13875	Get the version string
13876	Create a route
13877	Handles the request .
13878	Resolve a route
13879	Get the homepage URL .
13880	Set component definition .
13881	Restart uilisateur .
13882	Get user by id
13883	Returns active users .
13884	Save messages to file .
13885	Find value by value
13886	Find the relations with the given model .
13887	Read data from the cursor
13888	Returns the column at the specified index .
13889	Read an object
13890	Read all results from the database .
13891	Get the number of columns .
13892	Find the constraints for a table .
13893	Get the server version .
13894	Publish routes .
13895	Parse route data .
13896	Build route expressions .
13897	Register a service .
13898	Bind service .
13899	Register a service context .
13900	Get a Service from the context .
13901	Checks if a service exists .
13902	Checks if a service exists .
13903	Get a service .
13904	Call a service .
13905	Get a singleton instance .
13906	Gets a provider by id .
13907	Returns the index of a service service .
13908	Setup the container .
13909	Setup the services from cache .
13910	Setup service providers .
13911	Get cacheable .
13912	Get address lines .
13913	Set the level of the filter .
13914	Get unique ID .
13915	Register the route .
13916	Resolve action .
13917	Check if action is valid
13918	Called when the action is executed .
13919	Render partial view .
13920	Renders a view .
13921	Get all actions
13922	Render a view .
13923	Render a view .
13924	Normalize action name .
13925	Resolve error .
13926	Resolve error response .
13927	Get error data .
13928	Get exception name .
13929	Validate action .
13930	Get action id
13931	Get action method .
13932	Convert a color to hexadecimal
13933	Convert a color to RGBA
13934	Compute the dominant color of an image .
13935	Read the stdin stream .
13936	Prompt a prompt .
13937	Append a file to a list of paths .
13938	Get the pgClient
13939	Execute a SQL query .
13940	Writes the file to the given path .
13941	Creates a new ServerRequest from a globals .
13942	Get header value from array
13943	Strip the query string .
13944	Marshal host and port and port
13945	Normalize nested files .
13946	Check if the string ends with the given string
13947	Generate a random string
13948	Create the edges for the given class .
13949	Find all annotations in the given class .
13950	Create a new repository .
13951	Fetch all items from the repository
13952	Update a record .
13953	Set the status code .
13954	Set headers .
13955	Get date header .
13956	Set date header .
13957	Add a cache control .
13958	Get the cache control .
13959	Remove a cache control .
13960	Checks if the response is valid .
13961	Returns the age of the header .
13962	Set the content of the response .
13963	Get the expiration date .
13964	Returns the maximum age of the request .
13965	Set the shared max age .
13966	Set the lifetime of the response .
13967	Set the response content .
13968	Check if the response is invalid .
13969	Checks if the status code is in the status code .
13970	Checks if the response is successful .
13971	Check if the response is redirection .
13972	Checks if the response is a client error .
13973	Check if the response is a redirect .
13974	Checks if the response is empty .
13975	Close output buffers .
13976	Initialize the request .
13977	Validate HTTP method .
13978	Locates the given command .
13979	Find all paths in the given command .
13980	Download package file .
13981	Remove installed packages .
13982	Detects duplicate duplicates .
13983	Load package from file
13984	Get request parameters
13985	Enable an error handler .
13986	Calculates the amount difference between this transaction .
13987	Add a month to the bitmask .
13988	Checks if the given month is a month .
13989	Returns the length of the request .
13990	Get the request boundary
13991	Load user by username .
13992	Create a new user .
13993	Set IP address
13994	Renders a view .
13995	Publish a stream .
13996	Handle resource materialize .
13997	Add parameters to the request .
13998	Fetch the message
13999	Encrypt a message .
14000	Decrypts a string .
14001	Decrypt a string
14002	Encrypt an object
14003	Decrypt a string
14004	Get an option .
14005	Initialize this instance .
14006	Replace all fields in the html
14007	Convert query to query builder .
14008	Returns text as text .
14009	Converts rich text into HTML .
14010	Converts a block into HTML .
14011	Remove a cookie .
14012	Send the response to the response .
14013	Validate status code .
